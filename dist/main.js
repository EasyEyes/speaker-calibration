/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["speakerCalibrator"] = factory();
	else
		root["speakerCalibrator"] = factory();
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/example/i18n.js":
/*!******************************!*\
  !*** ./dist/example/i18n.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"phrases\": function() { return /* binding */ phrases; }\n/* harmony export */ });\n/*\r\n  Do not modify this file! Run npm `npm run phrases` at ROOT of this project to fetch from the Google Sheets.\r\n  Phrases should be read using the \"readi18nPhrases\" function from \"components/readPhrases\", to prevent silent breaking errors.\r\n  https://docs.google.com/spreadsheets/d/1UFfNikfLuo8bSromE34uWDuJrMPFiJG3VpoQKdCGkII/edit#gid=0\r\n*/\r\n\r\nconst phrases = {\r\n  EE_languageDirection: {\r\n    'en-US': 'LTR',\r\n    de: 'LTR',\r\n    fr: 'LTR',\r\n    es: 'LTR',\r\n    pt: 'LTR',\r\n    it: 'LTR',\r\n    ro: 'LTR',\r\n    pl: 'LTR',\r\n    ru: 'LTR',\r\n    hy: 'LTR',\r\n    fi: 'LTR',\r\n    ka: 'LTR',\r\n    he: 'RTL',\r\n    ar: 'RTL',\r\n    ur: 'RTL',\r\n    hi: 'LTR',\r\n    ta: 'LTR',\r\n    ml: 'LTR',\r\n    te: 'LTR',\r\n    kn: 'LTR',\r\n    bn: 'LTR',\r\n    id: 'LTR',\r\n    'zh-CN': 'LTR',\r\n    'zh-HK': 'LTR',\r\n    ja: 'LTR',\r\n    ko: 'LTR',\r\n  },\r\n  EE_languageUseSpace: {\r\n    'en-US': '1',\r\n    de: '1',\r\n    fr: '1',\r\n    es: '1',\r\n    pt: '1',\r\n    it: '1',\r\n    ro: '1',\r\n    pl: '1',\r\n    ru: '1',\r\n    hy: '1',\r\n    fi: '1',\r\n    ka: '1',\r\n    he: '1',\r\n    ar: '1',\r\n    ur: '1',\r\n    hi: '1',\r\n    ta: '1',\r\n    ml: '1',\r\n    te: '1',\r\n    kn: '1',\r\n    bn: '1',\r\n    id: '1',\r\n    'zh-CN': '0',\r\n    'zh-HK': '0',\r\n    ja: '0',\r\n    ko: '0',\r\n  },\r\n  EE_languageUsesSpaces: {\r\n    'en-US': '1',\r\n    de: '1',\r\n    fr: '1',\r\n    es: '1',\r\n    pt: '1',\r\n    it: '1',\r\n    ro: '1',\r\n    pl: '1',\r\n    ru: '1',\r\n    hy: '1',\r\n    fi: '1',\r\n    ka: '1',\r\n    he: '1',\r\n    ar: '1',\r\n    ur: '1',\r\n    hi: '1',\r\n    ta: '1',\r\n    ml: '1',\r\n    te: '1',\r\n    kn: '1',\r\n    bn: '1',\r\n    id: '1',\r\n    'zh-CN': '0',\r\n    'zh-HK': '0',\r\n    ja: '0',\r\n    ko: '0',\r\n  },\r\n  EE_languageFont: {\r\n    'en-US': 'Noto Serif',\r\n    de: 'Noto Serif',\r\n    fr: 'Noto Serif',\r\n    es: 'Noto Serif',\r\n    pt: 'Noto Serif',\r\n    it: 'Noto Serif',\r\n    ro: 'Noto Serif',\r\n    pl: 'Noto Serif',\r\n    ru: 'Noto Serif',\r\n    hy: 'Noto Serif Armenian',\r\n    fi: 'Noto Serif',\r\n    ka: 'Noto Serif',\r\n    he: 'Noto Serif Hebrew',\r\n    ar: 'Noto Kufi Arabic',\r\n    ur: 'Noto Nastaliq Urdu',\r\n    hi: 'Noto Serif Devanagari ',\r\n    ta: 'Noto Serif Tamil',\r\n    ml: 'Noto Serif Malayalam',\r\n    te: 'Noto Serif Telugu',\r\n    kn: 'Noto Serif Kannada',\r\n    bn: 'Noto Serif Bengali',\r\n    id: 'Noto Serif',\r\n    'zh-CN': 'Noto Serif SC',\r\n    'zh-HK': 'Noto Serif TC',\r\n    ja: 'Noto Serif JP',\r\n    ko: 'Noto Serif KR',\r\n  },\r\n  EE_languageNameEnglish: {\r\n    'en-US': 'English',\r\n    de: 'German',\r\n    fr: 'French',\r\n    es: 'Spanish',\r\n    pt: 'Portuguese',\r\n    it: 'Italian',\r\n    ro: 'Romanian',\r\n    pl: 'Polish',\r\n    ru: 'Russian',\r\n    hy: 'Armenian',\r\n    fi: 'Finnish',\r\n    ka: 'Georgian',\r\n    he: 'Hebrew',\r\n    ar: 'Arabic',\r\n    ur: 'Urdu',\r\n    hi: 'Hindi',\r\n    ta: 'Tamil',\r\n    ml: 'Malayalam',\r\n    te: 'Telugu',\r\n    kn: 'Kannada',\r\n    bn: 'Bangla',\r\n    id: 'Indonesian',\r\n    'zh-CN': 'Simplified Chinese',\r\n    'zh-HK': 'Traditional Chinese',\r\n    ja: 'Japanese',\r\n    ko: 'Korean',\r\n  },\r\n  EE_languageNameNative: {\r\n    'en-US': 'English',\r\n    de: 'Deutsch',\r\n    fr: 'Français',\r\n    es: 'Español',\r\n    pt: 'Português',\r\n    it: 'Italiano',\r\n    ro: 'Română',\r\n    pl: 'Polski',\r\n    ru: 'Русский',\r\n    hy: 'հայերեն',\r\n    fi: 'Suomalainen',\r\n    ka: 'ქართული',\r\n    he: 'עִברִית',\r\n    ar: 'عربي',\r\n    ur: 'اردو',\r\n    hi: 'हिंदी',\r\n    ta: 'தமிழ்',\r\n    ml: 'മലയാളം',\r\n    te: 'తెలుగు',\r\n    kn: 'ಕನ್ನಡಿ',\r\n    bn: 'বাংলা',\r\n    id: 'bahasa Indonesia',\r\n    'zh-CN': '简体中文',\r\n    'zh-HK': '繁體中文',\r\n    ja: '日本語',\r\n    ko: '한국인',\r\n  },\r\n  EE_languageChoose: {\r\n    'en-US': 'Choose a language for this study.',\r\n    de: 'Wählen Sie eine Sprache für diese Studie.',\r\n    fr: 'Choisissez une langue pour cette étude.',\r\n    es: 'Elija un idioma para este estudio.',\r\n    pt: 'Escolha um idioma para este estudo.',\r\n    it: 'Scegli una lingua per questo studio.',\r\n    ro: 'Alegeți o limbă pentru acest studiu.',\r\n    pl: 'Wybierz język do tego badania.',\r\n    ru: 'Выберите язык для этого исследования.',\r\n    hy: 'Ընտրեք լեզու այս ուսումնասիրության համար:',\r\n    fi: 'Valitse kieli tähän tutkimukseen.',\r\n    ka: 'შეარჩიეთ ენა ამ კვლევისთვის.',\r\n    he: 'בחר שפה למחקר זה.',\r\n    ar: 'اختر لغة لهذه الدراسة.',\r\n    ur: 'اس مطالعے کے لئے ایک زبان کا انتخاب کریں۔',\r\n    hi: 'इस अध्ययन के लिए एक भाषा चुनें।',\r\n    ta: 'இந்த ஆய்வுக்கு ஒரு மொழியைத் தேர்வுசெய்க.',\r\n    ml: 'ഈ പഠനത്തിനായി ഒരു ഭാഷ തിരഞ്ഞെടുക്കുക.',\r\n    te: 'ఈ అధ్యయనం కోసం ఒక భాషను ఎంచుకోండి.',\r\n    kn: 'ಈ ಅಧ್ಯಯನಕ್ಕಾಗಿ ಭಾಷೆಯನ್ನು ಆರಿಸಿ.',\r\n    bn: 'এই অধ্যয়নের জন্য একটি ভাষা চয়ন করুন।',\r\n    id: 'Pilih bahasa untuk penelitian ini.',\r\n    'zh-CN': '为这项研究选择一种语言。',\r\n    'zh-HK': '為這項研究選擇一種語言。',\r\n    ja: 'この調査の言語を選択してください。',\r\n    ko: '이 연구에 대한 언어를 선택하십시오.',\r\n  },\r\n  EE_phraseSource: {\r\n    'en-US':\r\n      'Denis Pelli & Peiling Jiang 2021.10.10; 2021.10.14; 2021.10.19; Marialuisa Martelli 2021.10.21',\r\n    de: 'Google Translate from English; Denis Pelli 2021.10.19 improved translation of trial and beep.',\r\n    fr: 'Google Translate from Spanish, Italian, English, and German; Denis Pelli 2021.10.19',\r\n    es: 'Google Translate from English; Denis Pelli 2021.10.15; Maria Pombo 2021.10.24',\r\n    pt: 'Google Translate from Spanish',\r\n    it: 'Google Translate from English; Marialuisa Martelli 2021.10.21',\r\n    ro: 'Google Translate from Spanish',\r\n    pl: 'Google Translate from English; Jan Kurzawski 2021.10.20',\r\n    ru: 'Google Translate from English; Elena Sizikova 2021.12.14',\r\n    hy: 'Google Translate from English',\r\n    fi: 'Google Translate from English',\r\n    ka: 'Google Translate from English',\r\n    he: 'Google Translate from English',\r\n    ar: 'Google Translate from English; Marianne Azar 2021.10.7',\r\n    ur: 'Google Translate from Hindi',\r\n    hi: 'Google Translate from English; Mrugank Dake and Ajay Subramanian 2021.10.14',\r\n    ta: 'Google Translate from English',\r\n    ml: 'Google Translate from English',\r\n    te: 'Google Translate from English',\r\n    kn: 'Google Translate from English',\r\n    bn: 'Google Translate from English',\r\n    id: 'Google Translate from English',\r\n    'zh-CN': 'Google Translate from English; Elizabeth Zhou 2022.1.6',\r\n    'zh-HK': 'Google Translate from Simplified Chinese',\r\n    ja: 'Google Translate from English',\r\n    ko: 'Google Translate from English',\r\n  },\r\n  EE_compatibilityTitle: {\r\n    'en-US': 'Needs',\r\n    de: 'Bedürfnisse',\r\n    fr: 'Besoins',\r\n    es: 'Necesidades',\r\n    pt: 'Precisa',\r\n    it: 'Esigenze',\r\n    ro: 'Are nevoie',\r\n    pl: 'Wymagania',\r\n    ru: 'Потребности',\r\n    hy: 'Անհրաժեշտ',\r\n    fi: 'Tarpeet',\r\n    ka: 'საჭიროებები',\r\n    he: 'צרכי',\r\n    ar: 'الاحتياجات',\r\n    ur: 'ضرورت ہے',\r\n    hi: 'ज़रूरत',\r\n    ta: 'தேவைகள்',\r\n    ml: 'ആവശ്യങ്ങൾ',\r\n    te: 'అవసరాలు',\r\n    kn: 'ಅಗತ್ಯ',\r\n    bn: 'চাহিদা',\r\n    id: 'Kebutuhan',\r\n    'zh-CN': '需要',\r\n    'zh-HK': '需要',\r\n    ja: 'ニーズ',\r\n    ko: '필요합니다',\r\n  },\r\n  EE_compatible: {\r\n    'en-US': '✅ Excellent! This study can proceed. ',\r\n    de: '✅ Ausgezeichnet! Diese Studie kann fortfahren.',\r\n    fr: '✅ Excellent! Cette étude peut se dérouler.',\r\n    es: '✅ ¡Excelente! Este estudio puede proceder.',\r\n    pt: '✅ Excelente! Este estudo pode prosseguir.',\r\n    it: '✅ Eccellente! Questo studio può procedere.',\r\n    ro: '✅ Excelent! Acest studiu poate continua.',\r\n    pl: '✅ Doskonałe! To badanie może kontynuować.',\r\n    ru: '✅ Отлично! Это исследование может продолжаться.',\r\n    hy: '✅ Գերազանց: Այս ուսումնասիրությունը կարող է ընթանալ:',\r\n    fi: '✅ Erinomainen! Tämä tutkimus voi edetä.',\r\n    ka: '✅ შესანიშნავი! ამ კვლევას შეუძლია გაგრძელდეს.',\r\n    he: '✅ מעולה! מחקר זה יכול להמשיך.',\r\n    ar: '✅ ممتاز! يمكن أن تستمر هذه الدراسة.',\r\n    ur: '✅ عمدہ! یہ مطالعہ آگے بڑھ سکتا ہے۔',\r\n    hi: '✅ बहुत बढ़िया! यह अध्ययन आगे बढ़ सकता है।',\r\n    ta: '✅ சிறந்தது! இந்த ஆய்வு தொடரலாம்.',\r\n    ml: 'മികച്ചത്! ഈ പഠനത്തിന് തുടരാം.',\r\n    te: '✅ అద్భుతమైనది! ఈ అధ్యయనం కొనసాగవచ్చు.',\r\n    kn: '✅ ಅತ್ಯುತ್ತಮ! ಈ ಅಧ್ಯಯನವು ಮುಂದುವರಿಯಬಹುದು.',\r\n    bn: '✅ দুর্দান্ত! এই অধ্যয়ন এগিয়ে যেতে পারে।',\r\n    id: '✅ Luar biasa! Studi ini dapat dilanjutkan.',\r\n    'zh-CN': '✅好！这项研究可以进行。',\r\n    'zh-HK': '✅好！這項研究可以進行。',\r\n    ja: '✅素晴らしい！この研究は進むことができます。',\r\n    ko: '✅ 우수! 이 연구는 진행될 수 있습니다.',\r\n  },\r\n  EE_compatibleBrowserDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study needs the BBB browser running on a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, muss diese Studie den BBB -Browser mit mindestens 222 CPU -Kernen auf einem DDD ausgeführt haben',\r\n    fr: 'Comme indiqué dans sa description, cette étude a besoin du navigateur BBB fonctionnant sur un DDD avec au moins 222 cœurs de CPU',\r\n    es: 'Como se indica en su descripción, este estudio necesita el navegador BBB que se ejecuta en un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa do navegador BBB em execução em um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come indicato nella sua descrizione, questo studio ha bisogno del browser BBB in esecuzione su un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de browserul BBB care rulează pe un DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga przeglądarki BBB działającej na DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, этому исследованию нужен браузер BBB, работающий на DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը անհրաժեշտ է BBB զննարկիչը, որն աշխատում է DDD- ով առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee BBB -selaimen, joka toimii DDD: llä vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება BBB ბრაუზერი, რომელიც მუშაობს DDD– ზე, მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה זקוק לדפדפן ה- BBB הפועל על DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، تحتاج هذه الدراسة إلى متصفح BBB الذي يعمل على DDD مع 222 نوى على الأقل من وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو بی بی بی براؤزر کی ضرورت ہے جو کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی پر چل رہا ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को कम से कम 222 सीपीयू कोर के साथ डीडीडी पर चलने वाले बीबीबी ब्राउज़र की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு பிபிபி உலாவி ஒரு டி.டி.டி.யில் குறைந்தது 222 சிபியு கோர்களுடன் இயங்க வேண்டும்',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് കുറഞ്ഞത് 222 സി.പി.യു കോറുകളുള്ള ഒരു ഡിഡിഡിയിൽ പ്രവർത്തിക്കാൻ ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి కనీసం 222 సిపియు కోర్లతో డిడిడిలో నడుస్తున్న బిబిబి బ్రౌజర్ అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণায় কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি -তে চলমান বিবিবি ব্রাউজার প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan browser BBB yang berjalan pada DDD dengan setidaknya 222 inti CPU',\r\n    'zh-CN': '如其描述中所述，这项研究需要在DDD上运行至少222个CPU内核的BBB浏览器',\r\n    'zh-HK': '如其描述中所述，這項研究需要在DDD上運行至少222個CPU內核的BBB瀏覽器',\r\n    ja: 'その説明で述べたように、この研究では、少なくとも222のCPUコアでDDDで実行されるBBBブラウザが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 CPU 코어로 DDD에서 실행되는 BBB 브라우저가 필요합니다.',\r\n  },\r\n  EE_compatibleBrowserNotOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with ooo, and needs the BBB browser running on a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie mit OOO unvereinbar und benötigt den BBB -Browser, der auf einem DDD mit mindestens 222 CPU -Kernen ausgeführt wird',\r\n    fr: 'Comme indiqué dans sa description, cette étude est incompatible avec OOO et a besoin du navigateur BBB fonctionnant sur un DDD avec au moins 222 cœurs CPU',\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con OOO y necesita el navegador BBB que se ejecuta en un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o OOO e precisa do navegador BBB em um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con OOO e ha bisogno del browser BBB in esecuzione su un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu OOO și are nevoie de browserul BBB care rulează pe un DDD cu cel puțin 222 de nuclee CPU',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z OOO i wymaga przeglądarki BBB działającej na DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с OOO и нуждается в браузере BBB, работающем на DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է OOO- ի հետ, եւ անհրաժեշտ է BBB զննարկիչը, որն աշխատում է DDD- ով `առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva OOO: n kanssa ja tarvitsee BBB -selaimen, joka toimii DDD: llä vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერილი, ეს კვლევა შეუთავსებელია OOO- სთან და სჭირდება BBB ბრაუზერი, რომელიც მუშაობს DDD– ზე მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את OOO, והוא זקוק לדפדפן ה- BBB הפועל על DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، فإن هذه الدراسة غير متوافقة مع OOO ، وتحتاج إلى متصفح BBB الذي يعمل على DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ او او کے ساتھ مطابقت نہیں رکھتا ہے ، اور اسے کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی پر بی بی بی براؤزر کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन OOO के साथ असंगत है, और कम से कम 222 CPU कोर के साथ DDD पर चलने वाले BBB ब्राउज़र की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு OOO உடன் பொருந்தாது, மேலும் குறைந்தது 222 CPU கோர்களுடன் ஒரு டி.டி.டி.யில் இயங்கும் பிபிபி உலாவி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ooo- യുമായി പൊരുത്തപ്പെടുന്നില്ല, കൂടാതെ കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡിയിൽ പ്രവർത്തിക്കാൻ ബിബിബി ബ്ര browser സർ ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం OOO కి విరుద్ధంగా ఉంది మరియు కనీసం 222 CPU కోర్లతో DDD లో నడుస్తున్న BBB బ్రౌజర్ అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು OOO ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ, ಮತ್ತು ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি ওওর সাথে বেমানান, এবং বিবিবি ব্রাউজারটি কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি -তে চলমান প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan OOO, dan membutuhkan browser BBB yang berjalan pada DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究与OOO不相容，并且需要在DDD上运行至少222个CPU内核的BBB浏览器',\r\n    'zh-HK': '如其描述中所述，這項研究與OOO不相容，並且需要在DDD上運行至少222個CPU內核的BBB瀏覽器',\r\n    ja: 'その説明で述べたように、この研究はOOOと互換性があり、少なくとも222のCPUコアでDDDで実行されるBBBブラウザーが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 OOO와 호환되지 않으며 최소 222 CPU 코어로 DDD에서 실행되는 BBB 브라우저가 필요합니다.',\r\n  },\r\n  EE_compatibleBrowserOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study needs the BBB browser running on a OOO DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, muss diese Studie den BBB -Browser auf einer OOO DDD mit mindestens 222 CPU -Kernen benötigen',\r\n    fr: 'Comme indiqué dans sa description, cette étude a besoin du navigateur BBB fonctionnant sur un DDD OOO avec au moins 222 cœurs de CPU',\r\n    es: 'Como se indica en su descripción, este estudio necesita el navegador BBB que se ejecuta en un OOO DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa do navegador BBB em execução em um DDD OOO com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio ha bisogno del browser BBB in esecuzione su un DDD OOO con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de browserul BBB care rulează pe un OOO DDD cu cel puțin 222 de nuclee de procesor',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga przeglądarki BBB działającej na OOO DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, этому исследованию нужен браузер BBB, работающий на OOO DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը անհրաժեշտ է BBB զննարկիչը, որն աշխատում է OOO DDD- ով `առնվազն 222 պրոցեսորի միջուկով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee BBB',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება BBB ბრაუზერი, რომელიც მუშაობს OOO DDD– ზე, მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה זקוק לדפדפן ה- BBB הפועל ב- OOO DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، تحتاج هذه الدراسة إلى متصفح BBB الذي يعمل على DDD مع 222 نوى على الأقل من وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو کم از کم 222 سی پی یو کور کے ساتھ او او ڈی ڈی ڈی پر چلنے والے بی بی بی براؤزر کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को कम से कम 222 सीपीयू कोर के साथ एक OOO DDD पर चलने वाले BBB ब्राउज़र की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு குறைந்தது 222 CPU கோர்களுடன் OOO DDD இல் இயங்கும் பிபிபி உலாவி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ooo ​​ddd- ൽ പ്രവർത്തിക്കാൻ ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి కనీసం 222 సిపియు కోర్లతో OOO DDD లో నడుస్తున్న BBB బ్రౌజర్ అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ OOO DDD ಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ BBB ಬ್ರೌಸರ್ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণায় কমপক্ষে 222 সিপিইউ কোর সহ একটি ওও ডিডিডি -তে চলমান বিবিবি ব্রাউজার প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan browser BBB yang berjalan pada DDD OOO dengan setidaknya 222 inti CPU',\r\n    'zh-CN': '如其描述中所述，这项研究需要在OOO DDD上运行至少222个CPU内核的BBB浏览器',\r\n    'zh-HK': '如其描述中所述，這項研究需要在OOO DDD上運行至少222個CPU內核的BBB瀏覽器',\r\n    ja: 'その説明で述べたように、この研究では、少なくとも222のCPUコアを使用してOOO DDDで実行されるBBBブラウザが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 CPU 코어가있는 OOO DDD에서 실행되는 BBB 브라우저가 필요합니다.',\r\n  },\r\n  EE_compatibleBrowserVersionDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study needs the BBB browser (version at least 111) running on a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, benötigt diese Studie den BBB -Browser (Version mindestens 111) auf einem DDD mit mindestens 222 CPU -Kernen',\r\n    fr: 'Comme indiqué dans sa description, cette étude a besoin du navigateur BBB (version au moins 111) fonctionnant sur un DDD avec au moins 222 cœurs CPU',\r\n    es: 'Como se indica en su descripción, este estudio necesita el navegador BBB (versión al menos 111) que se ejecuta en un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa do navegador BBB (versão pelo menos 111) em execução em um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come indicato nella sua descrizione, questo studio richiede il browser BBB (versione almeno 111) in esecuzione su un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de browserul BBB (versiunea cel puțin 111) care rulează pe un DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga przeglądarki BBB (wersja co najmniej 111) działająca na DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, этому исследованию нужен браузер BBB (версия не менее 111), работающий на DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը անհրաժեշտ է BBB զննարկիչ (տարբերակ առնվազն 111) վազում է DDD- ով առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee BBB -selaimen (Versio vähintään 111), joka toimii DDD: llä vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება BBB ბრაუზერი (ვერსია მინიმუმ 111), რომელიც მუშაობს DDD– ზე მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה זקוק לדפדפן BBB (גרסה לפחות 111) הפועל על DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، تحتاج هذه الدراسة إلى متصفح BBB (الإصدار 111 على الأقل) الذي يعمل على DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو بی بی بی براؤزر (کم از کم 111 ورژن) کی ضرورت ہے جو کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی پر چل رہا ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को बीबीबी ब्राउज़र (कम से कम 111 संस्करण) की आवश्यकता है।',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு பிபிபி உலாவி (பதிப்பு குறைந்தது 111) ஒரு டி.டி.டி.யில் குறைந்தது 222 சிபியு கோர்களுடன் இயங்குகிறது',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് ബിബിബി ബ്ര browser സർ (പതിപ്പ് കുറഞ്ഞത് 111) പ്രവർത്തിക്കുന്നു (പതിപ്പ് കുറഞ്ഞത് 111)',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి BBB బ్రౌజర్ (వెర్షన్ కనీసం 111) అవసరం DDD లో కనీసం 222 CPU కోర్లతో నడుస్తుంది',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಕನಿಷ್ಠ 111 ಆವೃತ್ತಿ) ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই অধ্যয়নের জন্য বিবিবি ব্রাউজার (কমপক্ষে 111 সংস্করণ) প্রয়োজন একটি ডিডিডি -তে কমপক্ষে 222 সিপিইউ কোর সহ চলমান',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan browser BBB (versi setidaknya 111) yang berjalan pada DDD dengan setidaknya 222 inti CPU',\r\n    'zh-CN': '如其描述中所述，这项研究需要在DDD上运行至少222个CPU核心的BBB浏览器（版本至少为111）',\r\n    'zh-HK': '如其描述中所述，這項研究需要在DDD上運行至少222個CPU核心的BBB瀏覽器（版本至少為111）',\r\n    ja: 'その説明で述べたように、この調査では、少なくとも222 CPUコアを使用してDDDで実行されるBBBブラウザ（少なくとも111バージョン）が必要です。',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 CPU 코어가있는 DDD에서 실행되는 BBB 브라우저 (111 개)가 필요합니다.',\r\n  },\r\n  EE_compatibleBrowserVersionNotOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with ooo, and needs the BBB browser (version at least 111) running on a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie mit OOO nicht kompatibel und benötigt den BBB -Browser (Version mindestens 111) auf einem DDD mit mindestens 222 CPU -Kernen',\r\n    fr: 'Comme indiqué dans sa description, cette étude est incompatible avec OOO et a besoin du navigateur BBB (version au moins 111) fonctionnant sur un DDD avec au moins 222 cœurs de CPU',\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con OOO y necesita el navegador BBB (versión al menos 111) que se ejecuta en un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o OOO e precisa do navegador BBB (versão pelo menos 111) em execução em um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con OOO e richiede il browser BBB (versione almeno 111) in esecuzione su un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu OOO și are nevoie de browserul BBB (versiunea cel puțin 111) care rulează pe un DDD cu cel puțin 222 de nuclee de CPU',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z OOO i potrzebuje przeglądarki BBB (wersja co najmniej 111) działająca na DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с OOO и нуждается в браузере BBB (версии не менее 111), работающем на DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է OOO- ի հետ, եւ անհրաժեշտ է BBB զննարկիչ (տարբերակ առնվազն 111) վազում է DDD- ով `առնվազն 222 պրոցեսորի միջուկով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva OOO: n kanssa ja tarvitsee BBB -selaimen (versio vähintään 111), joka toimii DDD: llä, jossa on vähintään 222 CPU -ytimiä,',\r\n    ka: 'როგორც აღწერა აღწერა, ეს კვლევა შეუთავსებელია OOO– სთან და სჭირდება BBB ბრაუზერი (ვერსია მინიმუმ 111), რომელიც მუშაობს DDD– ზე მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את OOO, והוא זקוק לדפדפן ה- BBB (גרסה לפחות 111) הפועל על DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، لا تتوافق هذه الدراسة مع OOO ، وتحتاج إلى متصفح BBB (الإصدار 111 على الأقل) الذي يعمل على DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ او او او کے ساتھ مطابقت نہیں رکھتا ہے ، اور اسے کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی پر بی بی بی براؤزر (کم از کم 111 ورژن) کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन OOO के साथ असंगत है, और कम से कम 222 CPU कोर के साथ DDD पर चल रहे BBB ब्राउज़र (कम से कम 111 संस्करण) की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு OOO உடன் பொருந்தாது, மேலும் குறைந்தது 222 CPU கோர்களுடன் ஒரு டி.டி.டி.யில் இயங்கும் பிபிபி உலாவி (குறைந்தது 111 பதிப்பு) தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ooo- യുമായി പൊരുത്തപ്പെടുന്നില്ല, കൂടാതെ കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡിയിൽ പ്രവർത്തിക്കാൻ ബിബിബി ബ്ര browser സർ (പതിപ്പ് കുറഞ്ഞത് 111) ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం OOO కి విరుద్ధంగా ఉంది మరియు కనీసం 222 CPU కోర్లతో DDD లో నడుస్తున్న BBB బ్రౌజర్ (కనీసం 111) అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿದಂತೆ, ಈ ಅಧ್ಯಯನವು OOO ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ, ಮತ್ತು ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಆವೃತ್ತಿ ಕನಿಷ್ಠ 111) ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই অধ্যয়নটি ওওর সাথে বেমানান, এবং বিবিবি ব্রাউজার (কমপক্ষে 111 সংস্করণ) প্রয়োজন একটি ডিডিডি -তে কমপক্ষে 222 সিপিইউ কোর সহ চলমান',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan OOO, dan membutuhkan browser BBB (versi setidaknya 111) yang berjalan pada DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN':\r\n      '如其描述中所述，这项研究与OOO不相容，并且需要在DDD上运行至少222 CPU内核的BBB浏览器（版本至少为111）',\r\n    'zh-HK':\r\n      '如其描述中所述，這項研究與OOO不相容，並且需要在DDD上運行至少222 CPU內核的BBB瀏覽器（版本至少為111）',\r\n    ja: 'その説明で述べたように、この研究はOOOと互換性があり、少なくとも222 CPUコアのDDDで実行されているBBBブラウザー（少なくとも111バージョン）が必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 OOO와 호환되지 않으며 222 개 이상의 CPU 코어가있는 DDD에서 실행되는 BBB 브라우저 (111 개 이상)가 필요합니다.',\r\n  },\r\n  EE_compatibleBrowserVersionOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study needs the BBB browser (version at least 111) running on a OOO DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, benötigt diese Studie den BBB -Browser (Version mindestens 111) auf einem OOO DDD mit mindestens 222 CPU -Kernen',\r\n    fr: 'Comme indiqué dans sa description, cette étude a besoin du navigateur BBB (version au moins 111) fonctionnant sur un DDD OOO avec au moins 222 cœurs CPU',\r\n    es: 'Como se indica en su descripción, este estudio necesita el navegador BBB (versión al menos 111) que se ejecuta en un OOO DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa do navegador BBB (versão pelo menos 111) em execução em um DDD OOO com pelo menos 222 núcleos da CPU',\r\n    it: 'Come indicato nella sua descrizione, questo studio richiede il browser BBB (versione almeno 111) in esecuzione su un DDD OOO con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de browserul BBB (versiunea cel puțin 111) care rulează pe un OOO DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga przeglądarki BBB (wersja co najmniej 111) działająca na DDD OOO z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, этому исследованию нужен браузер BBB (версия не менее 111), работающий на OOO DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը անհրաժեշտ է BBB զննարկիչ (տարբերակ առնվազն 111) վազում է OOO DDD- ով առնվազն 222 պրոցեսորի միջուկով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee BBB -selaimen (Versio vähintään 111), joka toimii OOO -DDD: llä vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება BBB ბრაუზერი (ვერსია მინიმუმ 111), რომელიც მუშაობს OOO DDD– ზე მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כפי שנאמר בתיאורו, מחקר זה זקוק לדפדפן BBB (גרסה לפחות 111) הפועל ב- OOO DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما هو مذكور في وصفها ، تحتاج هذه الدراسة إلى متصفح BBB (الإصدار 111 على الأقل) الذي يعمل على DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو بی بی بی براؤزر (کم از کم 111 ورژن) کی ضرورت ہے جو کم از کم 222 سی پی یو کور کے ساتھ او او ڈی ڈی ڈی پر چل رہا ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को BBB ब्राउज़र (संस्करण कम से कम 111) की आवश्यकता है।',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு பிபிபி உலாவி (பதிப்பு குறைந்தது 111) ஒரு OOO DDD இல் குறைந்தது 222 CPU கோர்களுடன் இயங்குகிறது',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് ബിബിബി ബ്ര browser സർ (കുറഞ്ഞത് 111 എന്നെങ്കിലും കുറഞ്ഞത് 222 സിപിയു കോറുകളും ഓടുന്നു',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి BBB బ్రౌజర్ (వెర్షన్ కనీసం 111) అవసరం, కనీసం 222 CPU కోర్లతో OOO DDD లో నడుస్తుంది',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಕನಿಷ್ಠ 111 ಆವೃತ್ತಿ) OOO ಡಿಡಿಡಿಯಲ್ಲಿ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಚಲಿಸುವ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই অধ্যয়নের জন্য বিবিবি ব্রাউজার (কমপক্ষে 111 সংস্করণ) প্রয়োজন একটি ওও ডিডিডি -তে কমপক্ষে 222 সিপিইউ কোর সহ চলছে',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan browser BBB (versi setidaknya 111) yang berjalan pada ooo DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN':\r\n      '如其描述中所述，这项研究需要在OOO DDD上运行至少222个CPU内核的BBB浏览器（版本至少为111）',\r\n    'zh-HK':\r\n      '如其描述中所述，這項研究需要在OOO DDD上運行至少222個CPU內核的BBB瀏覽器（版本至少為111）',\r\n    ja: 'その説明で述べたように、この調査では、少なくとも222のCPUコアを使用してOOO DDDで実行されるBBBブラウザ（少なくとも111バージョン）が必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 CPU 코어가있는 OOO DDD에서 실행되는 BBB 브라우저 (111 개)가 필요합니다.',\r\n  },\r\n  EE_compatibleDeviceCores: {\r\n    'en-US': 'As stated in its description, this study needs a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, benötigt diese Studie eine DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude a besoin d'un DDD avec au moins 222 cœurs CPU\",\r\n    es: 'Como se indica en su descripción, este estudio necesita un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa de um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio ha bisogno di un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de un DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, этому исследованию нужен DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը պետք է DDD, առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee DDD: n, jossa on vähintään 222 CPU -ydintä',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה זקוק ל- DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما هو مذكور في وصفها ، تحتاج هذه الدراسة إلى DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی کی ضرورت ہے',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को कम से कम 222 सीपीयू कोर के साथ डीडीडी की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு குறைந்தது 222 சிபியு கோர்களுடன் ஒரு டி.டி.டி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡി ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి కనీసం 222 CPU కోర్లతో DDD అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই অধ্যয়নের জন্য কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি দরকার',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究需要至少222个CPU核心的DDD',\r\n    'zh-HK': '如其描述中所述，這項研究需要至少222個CPU核心的DDD',\r\n    ja: 'その説明で述べたように、この研究には少なくとも222のCPUコアを持つDDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 개의 CPU 코어를 가진 DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleExceptForScreenResolution: {\r\n    'en-US':\r\n      'This computer will become compatible if you increase the screen resolution to at least 333⨉444 pixels.',\r\n    de: 'Dieser Computer wird kompatibel, wenn Sie die Bildschirmauflösung auf mindestens 333 ° C444 Pixel erhöhen.',\r\n    fr: \"Cet ordinateur deviendra compatible si vous augmentez la résolution de l'écran à au moins 333⨉444 pixels.\",\r\n    es: 'Esta computadora se volverá compatible si aumenta la resolución de la pantalla a al menos 333⨉444 píxeles.',\r\n    pt: 'Este computador se tornará compatível se você aumentar a resolução da tela para pelo menos 333⨉444 pixels.',\r\n    it: 'Questo computer diventerà compatibile se aumenti la risoluzione dello schermo a almeno 333⨉444 pixel.',\r\n    ro: 'Acest computer va deveni compatibil dacă creșteți rezoluția ecranului la cel puțin 333⨉444 pixeli.',\r\n    pl: 'Ten komputer stanie się kompatybilny, jeśli zwiększysz rozdzielczość ekranu do co najmniej 333⨉444 pikseli.',\r\n    ru: 'Этот компьютер станет совместимым, если вы увеличите разрешение экрана как минимум до 333⨉444 пикселей.',\r\n    hy: 'Այս համակարգիչը համատեղելի կդառնա, եթե էկրանի լուծումը մեծացնեք առնվազն 333⨉444 պիքսել:',\r\n    fi: 'Tästä tietokoneesta tulee yhteensopiva, jos nostat näytön tarkkuuden vähintään 333⨉444 pikseliin.',\r\n    ka: 'ეს კომპიუტერი თავსებადი გახდება, თუ ეკრანის რეზოლუციას გაზრდის მინიმუმ 333⨉444 პიქსელამდე.',\r\n    he: 'מחשב זה יהפוך לתואם אם תגדיל את רזולוציית המסך לפחות 333⨉444 פיקסלים.',\r\n    ar: 'سيصبح هذا الكمبيوتر متوافقًا إذا قمت بزيادة دقة الشاشة إلى ما لا يقل عن 333⨉444 بكسل.',\r\n    ur: 'اگر آپ اسکرین ریزولوشن کو کم سے کم 333⨉444 پکسلز میں بڑھا دیتے ہیں تو یہ کمپیوٹر مطابقت پذیر ہوجائے گا۔',\r\n    hi: 'यदि आप स्क्रीन रिज़ॉल्यूशन को कम से कम 333⨉444 पिक्सेल तक बढ़ाते हैं तो यह कंप्यूटर संगत हो जाएगा।',\r\n    ta: 'திரை தெளிவுத்திறனை குறைந்தது 333⨉444 பிக்சல்களாக அதிகரித்தால் இந்த கணினி இணக்கமாக மாறும்.',\r\n    ml: 'നിങ്ങൾ സ്ക്രീൻ റെസല്യൂഷൻ കുറഞ്ഞത് 333⨉444 പിക്സലുകളായി വർദ്ധിപ്പിച്ചാൽ ഈ കമ്പ്യൂട്ടർ പൊരുത്തപ്പെടും.',\r\n    te: 'మీరు స్క్రీన్ రిజల్యూషన్‌ను కనీసం 333⨉444 పిక్సెల్‌లకు పెంచినట్లయితే ఈ కంప్యూటర్ అనుకూలంగా మారుతుంది.',\r\n    kn: 'ನೀವು ಪರದೆಯ ರೆಸಲ್ಯೂಶನ್ ಅನ್ನು ಕನಿಷ್ಠ 333⨉444 ಪಿಕ್ಸೆಲ್‌ಗಳಿಗೆ ಹೆಚ್ಚಿಸಿದರೆ ಈ ಕಂಪ್ಯೂಟರ್ ಹೊಂದಿಕೊಳ್ಳುತ್ತದೆ.',\r\n    bn: 'আপনি যদি স্ক্রিন রেজোলিউশনটি কমপক্ষে 333⨉444 পিক্সেলে বাড়ান তবে এই কম্পিউটারটি সামঞ্জস্যপূর্ণ হয়ে উঠবে।',\r\n    id: 'Komputer ini akan menjadi kompatibel jika Anda meningkatkan resolusi layar ke setidaknya 333⨉444 piksel.',\r\n    'zh-CN': '如果将屏幕分辨率提高到至少333⨉444像素，则该计算机将变得兼容。',\r\n    'zh-HK': '如果將屏幕分辨率提高到至少333⨉444像素，則該計算機將變得兼容。',\r\n    ja: 'このコンピューターは、画面の解像度を少なくとも333⨉444ピクセルに増やすと互換性があります。',\r\n    ko: '화면 해상도를 최소 333⨉444 픽셀로 늘리면이 컴퓨터가 호환됩니다.',\r\n  },\r\n  EE_compatibleNotBrowserDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with the bbb browser(s), and needs a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie nicht mit dem BBB -Browser (en) kompatibel und benötigt eine DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude est incompatible avec le (s) navigateur (s) BBB et a besoin d'un DDD avec au moins 222 cœurs CPU\",\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con los navegadores BBB, y necesita un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o (s) navegador (s) BBB (s) e precisa de um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con il browser BBB e ha bisogno di un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu browserul (browserul) BBB și are nevoie de un DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z przeglądarką (-ów) BBB i wymaga DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с браузером BBB и нуждается в DDD с не менее 222 ядрами ЦП',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է BBB զննարկչի (ներ) ի հետ եւ կարիք ունի առնվազն 222 պրոցեսորի միջուկներով DDD',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva BBB -selaimen (t) kanssa, ja se tarvitsee DDD: n vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერილი, ეს კვლევა შეუთავსებელია BBB ბრაუზერთან (ებ) ს და სჭირდება DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את דפדפן ה- BBB (ים), והוא זקוק ל- DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، لا تتوافق هذه الدراسة مع متصفح (متصفح) BBB ، وتحتاج إلى DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ بی بی بی براؤزر (زبانیں) سے مطابقت نہیں رکھتا ہے ، اور کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन बीबीबी ब्राउज़र (एस) के साथ असंगत है, और कम से कम 222 सीपीयू कोर के साथ डीडीडी की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு பிபிபி உலாவி (கள்) உடன் பொருந்தாது, மேலும் குறைந்தது 222 சிபியு கோர்களுடன் டி.டி.டி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ബിബിബി ബ്ര browser സർ (കൾ) ഉപയോഗിച്ച് പൊരുത്തപ്പെടുന്നില്ല, കൂടാതെ കുറഞ്ഞത് 222 സിപിയു കോറുകളും ഉപയോഗിച്ച് ഒരു ഡിഡിഡി ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం BBB బ్రౌజర్ (ల) కు విరుద్ధంగా ఉంది మరియు కనీసం 222 CPU కోర్లతో DDD అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಗಳು) ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ ಮತ್ತು ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি বিবিবি ব্রাউজারের সাথে বেমানান, এবং কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan browser BBB, dan membutuhkan DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究与BBB浏览器不兼容，并且需要至少222个CPU核心的DDD',\r\n    'zh-HK': '如其描述中所述，這項研究與BBB瀏覽器不兼容，並且需要至少222個CPU核心的DDD',\r\n    ja: 'その説明に記載されているように、この研究はBBBブラウザと互換性があり、少なくとも222のCPUコアを持つDDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 BBB 브라우저와 호환되지 않으며 최소 222 CPU 코어가있는 DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleNotBrowserNotOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with the bbb browser(s) and also incompatible with ooo. It needs a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie nicht mit dem BBB -Browser und auch mit OOO kompatibel. Es braucht eine DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude est incompatible avec le ou les navigateurs BBB et également incompatible avec OOO. Il a besoin d'un DDD avec au moins 222 cœurs de processeur\",\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con los navegadores BBB y también incompatible con OOO. Necesita un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o (s) navegador (s) BBB (s) e também incompatível com o OOO. Precisa de um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con il browser BBB e anche incompatibile con OOO. Ha bisogno di un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu browserul (browserul) BBB și, de asemenea, incompatibil cu OOO. Are nevoie de un DDD cu cel puțin 222 nuclee de procesare',\r\n    pl: 'Jak stwierdzono w jego opisie, badanie to jest niezgodne z przeglądarką BBB, a także niezgodne z OOO. Potrzebuje DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с браузером (ы) BBB, а также несовместимо с OOO. Ему нужен DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է BBB զննարկչի (ներ) ի հետ եւ նաեւ անհամատեղելի OOO- ի հետ: Անհրաժեշտ է DDD, առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva BBB -selaimen (Selaimen) kanssa ja myös yhteensopimattomana OOO: n kanssa. Se tarvitsee DDD: n, jossa on vähintään 222 CPU -ydintä',\r\n    ka: 'როგორც აღწერა აღწერა, ეს კვლევა შეუთავსებელია BBB ბრაუზერთან (ებ) ს და ასევე შეუთავსებელია OOO- სთან. მას სჭირდება DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את דפדפן ה- BBB וגם אינו תואם את OOO. הוא זקוק ל- DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، لا تتوافق هذه الدراسة مع متصفح (متصفح) BBB وأيضًا غير متوافق مع OOO. يحتاج إلى DDD مع 222 نوى وحدة المعالجة المركزية على الأقل',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ بی بی بی براؤزر (ایس) سے مطابقت نہیں رکھتا ہے اور او او او سے بھی متضاد ہے۔ اسے کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی کی ضرورت ہے',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन BBB ब्राउज़र (ओं) के साथ असंगत है और OOO के साथ भी असंगत है। इसे कम से कम 222 सीपीयू कोर के साथ डीडीडी की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு பிபிபி உலாவி (கள்) உடன் பொருந்தாது, மேலும் OOO உடன் பொருந்தாது. இதற்கு குறைந்தது 222 CPU கோர்களுடன் ஒரு டி.டி.டி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ബിബിബി ബ്ര browser സറിനുമായി പൊരുത്തപ്പെടുന്നില്ല, മാത്രമല്ല ഇത് ooo- യുമായി പൊരുത്തപ്പെടുന്നില്ല. കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡി ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం BBB బ్రౌజర్ (ల) కు విరుద్ధంగా లేదు మరియు OOO కి కూడా విరుద్ధంగా ఉంటుంది. దీనికి కనీసం 222 సిపియు కోర్లతో డిడిడి అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಗಳು) ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ ಮತ್ತು OOO ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ. ಇದಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি বিবিবি ব্রাউজার (গুলি) এর সাথে বেমানান এবং ওওর সাথেও বেমানান। এটি কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি দরকার',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan browser BBB dan juga tidak sesuai dengan OOO. Itu membutuhkan DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN':\r\n      '如其描述中所述，这项研究与BBB浏览器不兼容，并且与OOO也不兼容。它需要一个至少222个CPU内核的DDD',\r\n    'zh-HK':\r\n      '如其描述中所述，這項研究與BBB瀏覽器不兼容，並且與OOO也不兼容。它需要一個至少222個CPU內核的DDD',\r\n    ja: 'その説明で述べたように、この研究はBBBブラウザーと互換性があり、OOOとも互換性がありません。少なくとも222のCPUコアを持つDDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 BBB 브라우저와 호환되지 않으며 OOO와 호환되지 않습니다. 최소 222 CPU 코어가있는 DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleNotBrowserOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with the bbb browser(s) and needs a OOO DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie mit dem BBB -Browser (s) unvereinbar und benötigt eine OOO DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude est incompatible avec le (s) navigateur (s) BBB et a besoin d'un DDD OOO avec au moins 222 cœurs CPU\",\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con los navegadores BBB y necesita un OOO DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o (s) navegador (s) BBB (s) e precisa de um DDD OOO com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con il browser BBB e ha bisogno di un DDD OOO con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu browserul (browserul) BBB și are nevoie de un OOO DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z przeglądarką (-ów) BBB i wymaga DDD OOO z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с браузером BBB и нуждается в OOO DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է BBB զննարկչի (ներ) ի հետ եւ անհրաժեշտ է OOO DDD, առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva BBB -selaimen (S) kanssa ja tarvitsee OOO -DDD: n, jossa on vähintään 222 CPU -ytimiä',\r\n    ka: 'როგორც აღწერილია მისი აღწერით, ეს კვლევა შეუთავსებელია BBB ბრაუზერთან (ებ) ს და სჭირდება OOO DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את דפדפן ה- BBB (ים) וצריך DDD של OOO עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، لا تتوافق هذه الدراسة مع متصفح (متصفح) BBB وتحتاج إلى DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ بی بی بی براؤزر (زبانیں) سے مطابقت نہیں رکھتا ہے اور اسے کم از کم 222 سی پی یو کور کے ساتھ او او ڈی ڈی ڈی کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन BBB ब्राउज़र (ओं) के साथ असंगत है और कम से कम 222 CPU कोर के साथ OOO DDD की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு பிபிபி உலாவி (கள்) உடன் பொருந்தாது மற்றும் குறைந்தது 222 CPU கோர்களுடன் ஒரு OOO DDD தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ബിബിബി ബ്ര browser സർ (കൾ) ഉപയോഗിച്ച് പൊരുത്തപ്പെടുന്നില്ല, കൂടാതെ കുറഞ്ഞത് 222 സിപിയു കോറുകളും ഉപയോഗിച്ച് ഒരു ooo ​​ddd ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం BBB బ్రౌజర్ (ల) కు విరుద్ధంగా ఉంది మరియు కనీసం 222 CPU కోర్లతో OOO DDD అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು ಬಿಬಿಬಿ ಬ್ರೌಸರ್ (ಗಳ) ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ ಮತ್ತು ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ OOO ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি বিবিবি ব্রাউজারের সাথে বেমানান এবং কমপক্ষে 222 সিপিইউ কোর সহ একটি ওও ডিডিডি প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan browser BBB dan membutuhkan DDD OOO dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究与BBB浏览器不相容，并且需要至少222个CPU核心的OOO DDD',\r\n    'zh-HK': '如其描述中所述，這項研究與BBB瀏覽器不相容，並且需要至少222個CPU核心的OOO DDD',\r\n    ja: 'その説明に記載されているように、この研究はBBBブラウザーと互換性がなく、少なくとも222のCPUコアを備えたOOO DDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 BBB 브라우저와 호환되지 않으며 최소 222 CPU 코어가있는 OOO DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleNotOSDeviceCores: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with ooo. It needs a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie mit OOO unvereinbar. Es braucht eine DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude est incompatible avec OOO. Il a besoin d'un DDD avec au moins 222 cœurs de processeur\",\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con OOO. Necesita un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o OOO. Precisa de um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con OOO. Ha bisogno di un DDD con almeno 222 core CPU',\r\n    ro: 'După cum se spune în descrierea sa, acest studiu este incompatibil cu OOO. Are nevoie de un DDD cu cel puțin 222 nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z OOO. Potrzebuje DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с OOO. Ему нужен DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է OOO- ի հետ: Անհրաժեշտ է DDD, առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus on yhteensopimaton OOO: n kanssa. Se tarvitsee DDD: n, jossa on vähintään 222 CPU -ydintä',\r\n    ka: 'როგორც აღწერა აღწერა, ეს კვლევა შეუთავსებელია OOO- სთან. მას სჭირდება DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את OOO. הוא זקוק ל- DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما هو مذكور في وصفها ، لا تتوافق هذه الدراسة مع OOO. يحتاج إلى DDD مع 222 نوى وحدة المعالجة المركزية على الأقل',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ OOO سے مطابقت نہیں رکھتا ہے۔ اسے کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی کی ضرورت ہے',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन OOO के साथ असंगत है। इसे कम से कम 222 सीपीयू कोर के साथ डीडीडी की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு OOO உடன் பொருந்தாது. இதற்கு குறைந்தது 222 CPU கோர்களுடன் ஒரு டி.டி.டி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ooo- യുമായി പൊരുത്തപ്പെടുന്നില്ല. കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡി ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం OOO కి విరుద్ధంగా లేదు. దీనికి కనీసం 222 సిపియు కోర్లతో డిడిడి అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು OOO ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ. ಇದಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি ওওর সাথে বেমানান। এটি কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি দরকার',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan OOO. Itu membutuhkan DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究与OOO不相容。它需要一个至少222个CPU内核的DDD',\r\n    'zh-HK': '如其描述中所述，這項研究與OOO不相容。它需要一個至少222個CPU內核的DDD',\r\n    ja: 'その説明で述べたように、この研究はOOOと互換性がありません。少なくとも222のCPUコアを持つDDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 OOO와 호환되지 않습니다. 최소 222 CPU 코어가있는 DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleOSDeviceCores: {\r\n    'en-US': 'As stated in its description, this study needs a OOO DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, erfordert diese Studie eine OOO DDD mit mindestens 222 CPU -Kernen',\r\n    fr: \"Comme indiqué dans sa description, cette étude a besoin d'un DDD OOO avec au moins 222 cœurs CPU\",\r\n    es: 'Como se indica en su descripción, este estudio necesita un OOO DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo precisa de um DDD OOO com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio ha bisogno di un OOO DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu are nevoie de un OOO DDD cu cel puțin 222 de nuclee de procesare',\r\n    pl: 'Jak stwierdzono w opisie, badanie to wymaga DDD OOO z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование нуждается в OOO DDD, по крайней мере, 222 ядра процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությանը անհրաժեշտ է OOO DDD, առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus tarvitsee OOO -DDD: n, jossa on vähintään 222 CPU -ytimiä',\r\n    ka: 'როგორც აღწერა აღწერა, ამ კვლევას სჭირდება OOO DDD მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה זקוק ל- OOO DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، تحتاج هذه الدراسة إلى DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، اس مطالعے کو کم از کم 222 سی پی یو کور کے ساتھ اوو ڈی ڈی ڈی کی ضرورت ہے',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, इस अध्ययन को कम से कम 222 सीपीयू कोर के साथ एक OOO DDD की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வுக்கு குறைந்தது 222 CPU கோர்களுடன் ஒரு OOO DDD தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനത്തിന് കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ooo ​​ddd ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనానికి కనీసం 222 సిపియు కోర్లతో OOO DDD అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ OOO ಡಿಡಿಡಿ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই অধ্যয়নের জন্য কমপক্ষে 222 সিপিইউ কোর সহ একটি ওও ডিডিডি দরকার',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini membutuhkan DDD OOO dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究需要一个至少222个CPU核心的OOO DDD',\r\n    'zh-HK': '如其描述中所述，這項研究需要一個至少222個CPU核心的OOO DDD',\r\n    ja: 'その説明で述べたように、この研究には少なくとも222のCPUコアを持つOOO DDDが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 최소 222 개의 CPU 코어를 가진 OOO DDD가 필요합니다.',\r\n  },\r\n  EE_compatibleScreenHeight: {\r\n    'en-US': ' and a screen at least 222 pixels high',\r\n    de: ' und ein Bildschirm mindestens 222 Pixel hoch',\r\n    fr: \" et un écran d'au moins 222 pixels de haut\",\r\n    es: ' y una pantalla de al menos 222 píxeles de altura',\r\n    pt: ' e uma tela pelo menos 222 pixels de altura',\r\n    it: ' e uno schermo alto almeno 222 pixel',\r\n    ro: ' și un ecran de cel puțin 222 de pixeli înălțime',\r\n    pl: ' i ekran co najmniej 222 pikseli wysokości',\r\n    ru: ' и экран не менее 222 пикселей высотой',\r\n    hy: ' եւ էկրանը առնվազն 222 պիքսել բարձր է',\r\n    fi: ' ja näyttö vähintään 222 pikseliä korkea',\r\n    ka: ' და ეკრანი მინიმუმ 222 პიქსელის სიმაღლეზე',\r\n    he: ' ומסך לפחות 222 פיקסלים',\r\n    ar: ' وشاشة على الأقل 222 بكسل',\r\n    ur: ' اور ایک اسکرین کم از کم 222 پکسلز اونچی ہے',\r\n    hi: ' और एक स्क्रीन कम से कम 222 पिक्सेल ऊँची',\r\n    ta: ' மற்றும் ஒரு திரை குறைந்தது 222 பிக்சல்கள் உயரமானது',\r\n    ml: ' കൂടാതെ കുറഞ്ഞത് 222 പിക്സലെങ്കിലും ഉയർന്നതാണ്',\r\n    te: ' మరియు స్క్రీన్ కనీసం 222 పిక్సెల్స్ ఎత్తు',\r\n    kn: ' ಮತ್ತು ಕನಿಷ್ಠ 222 ಪಿಕ್ಸೆಲ್‌ಗಳಷ್ಟು ಪರದೆಯು',\r\n    bn: ' এবং একটি স্ক্রিন কমপক্ষে 222 পিক্সেল উচ্চ',\r\n    id: ' dan layar setidaknya 222 piksel',\r\n    'zh-CN': ' 屏幕至少高222像素',\r\n    'zh-HK': ' 屏幕至少高222像素',\r\n    ja: ' 少なくとも222ピクセルの画面',\r\n    ko: ' 그리고 최소 222 픽셀의 스크린',\r\n  },\r\n  EE_compatibleScreenSize: {\r\n    'en-US': ' and a screen resolution of at least 111⨉222 pixels',\r\n    de: ' und eine Bildschirmauflösung von mindestens 111⨉222 Pixel',\r\n    fr: \" et une résolution d'écran d'au moins 111⨉222 pixels\",\r\n    es: ' y una resolución de pantalla de al menos 111⨉222 píxeles',\r\n    pt: ' e uma resolução de tela de pelo menos 111⨉222 pixels',\r\n    it: ' e una risoluzione dello schermo di almeno 111⨉222 pixel',\r\n    ro: ' și o rezoluție de ecran de cel puțin 111⨉222 pixeli',\r\n    pl: ' oraz rozdzielczość ekranu co najmniej 111⨉222 pikseli',\r\n    ru: ' и разрешение экрана не менее 111⨉222 пикселей',\r\n    hy: ' եւ էկրանի լուծում առնվազն 111222 պիքսել',\r\n    fi: ' ja näytön resoluutio vähintään 111⨉222 pikseliä',\r\n    ka: ' და ეკრანის რეზოლუცია მინიმუმ 111⨉222 პიქსელი',\r\n    he: ' ורזולוציית מסך של לפחות 111⨉222 פיקסלים',\r\n    ar: ' ودقة شاشة لا تقل عن 111 درجة 2222 بكسل',\r\n    ur: ' اور کم از کم 111⨉222 پکسلز کی اسکرین ریزولوشن',\r\n    hi: ' और कम से कम 111⨉222 पिक्सल का स्क्रीन रिज़ॉल्यूशन',\r\n    ta: ' மற்றும் குறைந்தது 111⨉222 பிக்சல்களின் திரை தெளிவுத்திறன்',\r\n    ml: ' കൂടാതെ കുറഞ്ഞത് 111⨉222 പിക്സലുകളുടെ ഒരു സ്ക്രീൻ മിഴിവ്',\r\n    te: ' మరియు కనీసం 111⨉222 పిక్సెల్స్ యొక్క స్క్రీన్ రిజల్యూషన్',\r\n    kn: ' ಮತ್ತು ಕನಿಷ್ಠ 111⨉222 ಪಿಕ್ಸೆಲ್‌ಗಳ ಪರದೆಯ ರೆಸಲ್ಯೂಶನ್',\r\n    bn: ' এবং কমপক্ষে 111⨉222 পিক্সেলের একটি স্ক্রিন রেজোলিউশন',\r\n    id: ' dan resolusi layar setidaknya 111⨉222 piksel',\r\n    'zh-CN': ' 和至少111⨉222像素的屏幕分辨率',\r\n    'zh-HK': ' 和至少111⨉222像素的屏幕分辨率',\r\n    ja: ' 少なくとも111⨉222ピクセルの画面解像度',\r\n    ko: ' 및 최소 111 ° 222 픽셀의 스크린 해상도',\r\n  },\r\n  EE_compatibleScreenWidth: {\r\n    'en-US': ' and a screen at least 111 pixels wide',\r\n    de: ' und ein Bildschirm mindestens 111 Pixel breit',\r\n    fr: \" et un écran d'au moins 111 pixels de large\",\r\n    es: ' y una pantalla de al menos 111 píxeles de ancho',\r\n    pt: ' e uma tela pelo menos 111 pixels de largura',\r\n    it: ' e uno schermo largo almeno 111 pixel',\r\n    ro: ' și un ecran de cel puțin 111 pixeli lățime',\r\n    pl: ' i ekran o szerokości co najmniej 111 pikseli',\r\n    ru: ' и экран не менее 111 пикселей в ширину',\r\n    hy: ' եւ էկրանը առնվազն 111 պիքսել լայն',\r\n    fi: ' ja näyttö vähintään 111 pikseliä',\r\n    ka: ' და ეკრანი მინიმუმ 111 პიქსელის სიგანე',\r\n    he: ' ומסך ברוחב של לפחות 111 פיקסלים',\r\n    ar: ' وشاشة لا يقل عن 111 بكسل',\r\n    ur: ' اور کم از کم 111 پکسلز چوڑا اسکرین',\r\n    hi: ' और एक स्क्रीन कम से कम 111 पिक्सेल चौड़ी',\r\n    ta: ' மற்றும் ஒரு திரை குறைந்தது 111 பிக்சல்கள் அகலம்',\r\n    ml: ' കൂടാതെ കുറഞ്ഞത് 111 പിക്സൽ വീതിയും',\r\n    te: ' మరియు కనీసం 111 పిక్సెల్స్ వెడల్పు స్క్రీన్',\r\n    kn: ' ಮತ್ತು ಕನಿಷ್ಠ 111 ಪಿಕ್ಸೆಲ್‌ಗಳ ಅಗಲದ ಪರದೆ',\r\n    bn: ' এবং একটি স্ক্রিন কমপক্ষে 111 পিক্সেল প্রশস্ত',\r\n    id: ' dan layar setidaknya 111 piksel lebar',\r\n    'zh-CN': ' 和屏幕至少111像素宽',\r\n    'zh-HK': ' 和屏幕至少111像素寬',\r\n    ja: ' 少なくとも111ピクセルの画面',\r\n    ko: ' 그리고 최소 111 픽셀의 스크린',\r\n  },\r\n  EE_ok: {\r\n    'en-US': 'Ok',\r\n    de: 'OK',\r\n    fr: \"D'accord\",\r\n    es: 'De acuerdo',\r\n    pt: 'OK',\r\n    it: 'OK',\r\n    ro: 'Bine',\r\n    pl: 'OK',\r\n    ru: 'Хорошо',\r\n    hy: 'Լավ',\r\n    fi: 'Hyvä',\r\n    ka: 'Კარგი',\r\n    he: 'בסדר',\r\n    ar: 'نعم',\r\n    ur: 'ٹھیک ہے',\r\n    hi: 'ठीक',\r\n    ta: 'சரி',\r\n    ml: 'ശരി',\r\n    te: 'అలాగే',\r\n    kn: 'ಸರಿ',\r\n    bn: 'ঠিক আছে',\r\n    id: 'Oke',\r\n    'zh-CN': '好的',\r\n    'zh-HK': '好的',\r\n    ja: 'わかりました',\r\n    ko: '좋아요',\r\n  },\r\n  EE_or: {\r\n    'en-US': ' or',\r\n    de: ' oder',\r\n    fr: ' ou',\r\n    es: ' o',\r\n    pt: ' ou',\r\n    it: ' O',\r\n    ro: ' sau',\r\n    pl: ' Lub',\r\n    ru: ' или',\r\n    hy: ' կամ',\r\n    fi: ' tai',\r\n    ka: ' ან',\r\n    he: ' אוֹ',\r\n    ar: ' أو',\r\n    ur: ' یا',\r\n    hi: ' या',\r\n    ta: ' அல்லது',\r\n    ml: ' അഥവാ',\r\n    te: ' లేదా',\r\n    kn: ' ಅಥವಾ',\r\n    bn: ' বা',\r\n    id: ' atau',\r\n    'zh-CN': ' 或者',\r\n    'zh-HK': ' 或者',\r\n    ja: ' または',\r\n    ko: ' 또는',\r\n  },\r\n  EE_refresh: {\r\n    'en-US': 'Refresh',\r\n    de: 'Aktualisierung',\r\n    fr: 'Rafraîchir',\r\n    es: 'Actualizar',\r\n    pt: 'Atualizar',\r\n    it: 'ricaricare',\r\n    ro: 'Reîmprospăta',\r\n    pl: 'Odświeżać',\r\n    ru: 'Обновлять',\r\n    hy: 'Թարմացնել',\r\n    fi: 'virkistää',\r\n    ka: 'განახლება',\r\n    he: 'לְרַעֲנֵן',\r\n    ar: 'ينعش',\r\n    ur: 'ریفریش',\r\n    hi: 'ताज़ा करना',\r\n    ta: 'புதுப்பிப்பு',\r\n    ml: 'ഉന്മേഷം വീണ്ടെടുക്കുക',\r\n    te: 'రిఫ్రెష్',\r\n    kn: 'ಬಿಚ್ಚು',\r\n    bn: 'রিফ্রেশ',\r\n    id: 'Menyegarkan',\r\n    'zh-CN': '刷新',\r\n    'zh-HK': '刷新',\r\n    ja: 'リフレッシュします',\r\n    ko: '새로 고치다',\r\n  },\r\n  EE_describeDevice: {\r\n    'en-US':\r\n      'It appears that the current browser is BBB (version 111), running on a OOO DDD with 222 CPU cores.',\r\n    de: 'Es scheint, dass der aktuelle Browser BBB (Version 111) ist und auf einem OOO DDD mit 222 CPU -Kernen ausgeführt wird.',\r\n    fr: 'Il semble que le navigateur actuel soit BBB (version 111), fonctionnant sur un DDD OOO avec 222 cœurs de processeur.',\r\n    es: 'Parece que el navegador actual es BBB (versión 111), que se ejecuta en un OOO DDD con 222 núcleos de CPU.',\r\n    pt: 'Parece que o navegador atual é BBB (versão 111), executando em um DDD OOO com 222 núcleos da CPU.',\r\n    it: 'Sembra che il browser corrente sia BBB (versione 111), in esecuzione su un DDD OOO con 222 core CPU.',\r\n    ro: 'Se pare că browserul curent este BBB (versiunea 111), care rulează pe un OOO DDD cu 222 nuclee CPU.',\r\n    pl: 'Wygląda na to, że obecna przeglądarka to BBB (wersja 111), działająca na OOO DDD z 222 rdzeniami procesora.',\r\n    ru: 'Похоже, что текущий браузер - BBB (версия 111), работающий на OOO DDD с 222 ядрами процессора.',\r\n    hy: 'Պարզվում է, որ ներկայիս զննարկիչը BBB է (111 տարբերակ), վազելով OOO DDD- ով, 222 պրոցեսորի միջուկով:',\r\n    fi: 'Vaikuttaa siltä, ​​että nykyinen selain on BBB (versio 111), joka toimii OOO -DDD: llä, jossa on 222 CPU -ytimen.',\r\n    ka: 'როგორც ჩანს, მიმდინარე ბრაუზერი არის BBB (ვერსია 111), რომელიც მუშაობს OOO DDD- ზე 222 CPU ბირთვით.',\r\n    he: 'נראה כי הדפדפן הנוכחי הוא BBB (גרסה 111), הפועל על OOO DDD עם 222 ליבות מעבד.',\r\n    ar: 'يبدو أن المتصفح الحالي هو BBB (الإصدار 111) ، يعمل على DDD OOO مع 222 وحدة المعالجة المركزية.',\r\n    ur: 'ایسا لگتا ہے کہ موجودہ براؤزر بی بی بی (ورژن 111) ہے ، جو 222 سی پی یو کور کے ساتھ او او ڈی ڈی ڈی پر چل رہا ہے۔',\r\n    hi: 'ऐसा प्रतीत होता है कि वर्तमान ब्राउज़र BBB (संस्करण 111) है, जो 222 CPU कोर के साथ OOO DDD पर चल रहा है।',\r\n    ta: 'தற்போதைய உலாவி பிபிபி (பதிப்பு 111) என்று தோன்றுகிறது, இது 222 சிபியு கோர்களுடன் OOO DDD இல் இயங்குகிறது.',\r\n    ml: '222 സിപിയു കോറുകളുള്ള ഒരു ooo ​​ഡിഡിഡിയിൽ പ്രവർത്തിക്കുന്ന ബിബിബി (പതിപ്പ് 111) ആണ് നിലവിലെ ബ്ര browser സർ (പതിപ്പ് 111).',\r\n    te: 'ప్రస్తుత బ్రౌజర్ BBB (వెర్షన్ 111), ఇది 222 CPU కోర్లతో OOO DDD లో నడుస్తుంది.',\r\n    kn: 'ಪ್ರಸ್ತುತ ಬ್ರೌಸರ್ ಬಿಬಿಬಿ (ಆವೃತ್ತಿ 111), 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ OOO ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿದೆ ಎಂದು ತೋರುತ್ತದೆ.',\r\n    bn: 'এটি প্রদর্শিত হয় যে বর্তমান ব্রাউজারটি বিবিবি (সংস্করণ 111), 222 সিপিইউ কোর সহ একটি ওও ডিডিডিতে চলছে।',\r\n    id: 'Tampaknya browser saat ini adalah BBB (versi 111), berjalan pada OOO DDD dengan 222 core CPU.',\r\n    'zh-CN': '看来当前的浏览器是BBB（版本111），在具有222个CPU内核的OOO DDD上运行。',\r\n    'zh-HK': '看來當前的瀏覽器是BBB（版本111），在具有222個CPU內核的OOO DDD上運行。',\r\n    ja: '現在のブラウザはBBB（バージョン111）であり、222 CPUコアを備えたOOO DDDで実行されているようです。',\r\n    ko: '현재 브라우저는 BBB (버전 111)이며 222 CPU 코어가있는 OOO DDD에서 실행됩니다.',\r\n  },\r\n  EE_describeScreenSize: {\r\n    'en-US': ' And a 111⨉222 pixel screen.',\r\n    de: ' Und ein 111⨉222 Pixel -Bildschirm.',\r\n    fr: ' Et un écran de 111⨉222 pixels.',\r\n    es: ' Y una pantalla de 111⨉222 píxeles.',\r\n    pt: ' E uma tela de pixels de 111⨉222.',\r\n    it: ' E uno schermo pixel 111⨉222.',\r\n    ro: ' Și un ecran de 111⨉222 pixeli.',\r\n    pl: ' I ekran piksela 111⨉222.',\r\n    ru: ' И экран пикселей 111⨉222.',\r\n    hy: ' Եւ 111⨉222 պիքսելային էկրան:',\r\n    fi: ' Ja 111⨉222 pikselin näyttö.',\r\n    ka: ' და 111⨉222 პიქსელის ეკრანი.',\r\n    he: ' ומסך 111⨉222 פיקסל.',\r\n    ar: ' وشاشة 111⨉222 بكسل.',\r\n    ur: ' اور ایک 111⨉222 پکسل اسکرین۔',\r\n    hi: ' और 1112222 पिक्सेल स्क्रीन।',\r\n    ta: ' மற்றும் 111⨉222 பிக்சல் திரை.',\r\n    ml: ' 111222 പിക്സൽ സ്ക്രീൻ.',\r\n    te: ' మరియు 111⨉222 పిక్సెల్ స్క్రీన్.',\r\n    kn: ' ಮತ್ತು 111⨉222 ಪಿಕ್ಸೆಲ್ ಪರದೆ.',\r\n    bn: ' এবং একটি 111⨉222 পিক্সেল স্ক্রিন।',\r\n    id: ' Dan layar piksel 111⨉222.',\r\n    'zh-CN': ' 和111⨉222像素屏幕。',\r\n    'zh-HK': ' 和111⨉222像素屏幕。',\r\n    ja: ' 111⨉222ピクセル画面。',\r\n    ko: ' 및 1112222 픽셀 화면.',\r\n  },\r\n  EE_IDRequested: {\r\n    'en-US': 'EasyEyes ID requested',\r\n    de: 'Easyeyes -ID angefordert',\r\n    fr: 'EasyEyes ID demandé',\r\n    es: 'EasyEyes ID solicitada',\r\n    pt: 'Easyeyes ID solicitada',\r\n    it: 'EasyEyes ID richiesto',\r\n    ro: 'EasyEyes ID solicitat',\r\n    pl: 'Żądany identyfikator Easyeyes',\r\n    ru: 'Easyeyes id запросил',\r\n    hy: 'EasyEyes ID- ն պահանջեց',\r\n    fi: 'Easyeyes -tunnus pyydetty',\r\n    ka: 'Easyeyes ID მოითხოვა',\r\n    he: 'מזהה EasyEyes מבוקש',\r\n    ar: 'easyeyes معرف طلب',\r\n    ur: 'ایزیئس آئی ڈی نے درخواست کی',\r\n    hi: 'Easyeyes आईडी अनुरोध किया',\r\n    ta: 'எளிதான ஐடி கோரப்பட்டது',\r\n    ml: 'എളുപ്പമുള്ള ഐഡി അഭ്യർത്ഥിച്ചു',\r\n    te: 'ఈజీయెస్ ఐడి అభ్యర్థించబడింది',\r\n    kn: 'ಈಸಿಐಇಎಸ್ ಐಡಿ ವಿನಂತಿಸಲಾಗಿದೆ',\r\n    bn: 'ইজিয়েয়েস আইডি অনুরোধ করা হয়েছে',\r\n    id: 'ID easyeyes diminta',\r\n    'zh-CN': '请求EasyEyes ID',\r\n    'zh-HK': '請求EasyEyes ID',\r\n    ja: 'Easyeyes IDが要求されました',\r\n    ko: 'EasyEyes ID가 요청되었습니다',\r\n  },\r\n  EE_noFileSelected: {\r\n    'en-US': 'No file selected',\r\n    de: 'Keine Datei ausgewählt',\r\n    fr: 'Aucun fichier sélectionné',\r\n    es: 'Ningún archivo seleccionado',\r\n    pt: 'Nenhum arquivo selecionado',\r\n    it: 'Nessun file selezionato',\r\n    ro: 'Niciun fisier selectat',\r\n    pl: 'Nie wybrano pliku',\r\n    ru: 'Файл не выбран',\r\n    hy: 'Ոչ մի ֆայլ ընտրված չէ',\r\n    fi: 'Ei tiedostoa valittuna',\r\n    ka: 'Ფაილი არ არის არჩეული',\r\n    he: 'אף קובץ לא נבחר',\r\n    ar: 'لم يتم اختيار اي ملف',\r\n    ur: 'کوئی فائل منتخب نہیں کی گئی',\r\n    hi: 'कोई फ़ाइल चयनित नहीं',\r\n    ta: 'எந்த கோப்பும் தேர்வு செய்ய படவில்லை',\r\n    ml: 'ഫയലുകളൊന്നും തിരഞ്ഞെടുത്തിട്ടില്ല',\r\n    te: 'ఫైల్ ఎంచుకోబడలేదు',\r\n    kn: 'ಯಾವುದೇ ಫೈಲ್ ಅನ್ನು ಆಯ್ಕೆ ಮಾಡಲಾಗಿಲ್ಲ',\r\n    bn: 'নির্বাচিত কোন ফাইল',\r\n    id: 'Tidak ada file yang dipilih',\r\n    'zh-CN': '未选择文件',\r\n    'zh-HK': '未選擇文件',\r\n    ja: 'ファイルが選択されていません',\r\n    ko: '파일이 선택되지 않았습니다',\r\n  },\r\n  EE_browseForID: {\r\n    'en-US': 'Select EasyEyes ID file',\r\n    de: 'Wählen Sie Easyeyes -ID -Datei aus',\r\n    fr: 'Sélectionnez le fichier ID EasyEyes',\r\n    es: 'Seleccione el archivo de ID de EasyEyes',\r\n    pt: 'Selecione o arquivo de identificação easeyes',\r\n    it: 'Seleziona il file ID EasyEyes',\r\n    ro: 'Selectați fișierul ID EAYEYES',\r\n    pl: 'Wybierz plik ID Easyeyes',\r\n    ru: 'Выберите файл идентификатора easyeyes',\r\n    hy: 'Ընտրեք EasyEyes ID ֆայլը',\r\n    fi: 'Valitse Easyeyes -tunnustiedosto',\r\n    ka: 'აირჩიეთ Easyeyes ID ფაილი',\r\n    he: 'בחר קובץ מזהה EasyEyes',\r\n    ar: 'حدد ملف ID Easyeyes',\r\n    ur: 'Easyeyes ID فائل کو منتخب کریں',\r\n    hi: 'Easyeyes id फ़ाइल का चयन करें',\r\n    ta: 'எளிதான ஐடி கோப்பைத் தேர்ந்தெடுக்கவும்',\r\n    ml: 'ഐഡിഇസ് ഐഡി ഫയൽ തിരഞ്ഞെടുക്കുക',\r\n    te: 'ఈజీయెస్ ఐడి ఫైల్‌ను ఎంచుకోండి',\r\n    kn: 'ಈಸಿ ಐಇಎಸ್ ಐಡಿ ಫೈಲ್ ಆಯ್ಕೆಮಾಡಿ',\r\n    bn: 'ইজিয়েয়েস আইডি ফাইল নির্বাচন করুন',\r\n    id: 'Pilih File ID EyyEyes',\r\n    'zh-CN': '选择EasyEyes ID文件',\r\n    'zh-HK': '選擇EasyEyes ID文件',\r\n    ja: 'EasyEyes IDファイルを選択します',\r\n    ko: 'Easyeyes ID 파일을 선택하십시오',\r\n  },\r\n  EE_ID_noLocalStorage: {\r\n    'en-US':\r\n      'The researcher requests that you provide your EasyEyes ID from the previous session, please type it here, or upload the file downloaded when the last session ends.',\r\n    de: 'Die Forscheranfragen fordern Sie, dass Sie Ihre Easyeyes -ID aus der vorherigen Sitzung angeben, bitte geben Sie sie hier ein oder laden Sie die Datei hoch, die beim Ende der letzten Sitzung heruntergeladen wurde.',\r\n    fr: 'Le chercheur demande que vous fournissiez votre identifiant EasyEyes à partir de la session précédente, veuillez le taper ici ou télécharger le fichier téléchargé à la fin de la dernière session.',\r\n    es: 'El investigador solicita que proporcione su ID de EasyEyes de la sesión anterior, escriba aquí o cargue el archivo descargado cuando finalice la última sesión.',\r\n    pt: 'O pesquisador solicita que você forneça seu ID easyeyes da sessão anterior, digite -o aqui ou faça o upload do arquivo baixado quando a última sessão terminar.',\r\n    it: \"Il ricercatore richiede di fornire il tuo ID EasyEyes dalla sessione precedente, digitalo qui o caricare il file scaricato al termine dell'ultima sessione.\",\r\n    ro: 'Cercetătorul solicită să furnizați ID -ul dvs. EasyEyes din sesiunea precedentă, vă rugăm să -l tastați aici sau să încărcați fișierul descărcat la încheierea ultimei sesiuni.',\r\n    pl: 'Badacz prosi o dostarczenie identyfikatora Easyeyes z poprzedniej sesji, wpisz go tutaj lub prześlij plik pobrany po zakończeniu ostatniej sesji.',\r\n    ru: 'Исследователь просит, чтобы вы предоставили свой идентификатор easyeyes из предыдущего сеанса, введите его здесь или загрузите файл, загруженный при окончании последнего сеанса.',\r\n    hy: 'Հետազոտողը պահանջում է, որ դուք տրամադրեք ձեր EasyEyes ID- ն նախորդ նիստից, մուտքագրեք այն այստեղ, կամ վերբեռնեք ներբեռնված ֆայլը, երբ ավարտվում է վերջին նիստը:',\r\n    fi: 'Tutkija pyytää, että annat Edecyeyes -tunnuksen edellisestä istunnosta, kirjoita se tähän tai lataa tiedosto, joka on ladattu, kun viimeinen istunto päättyy.',\r\n    ka: 'მკვლევარი ითხოვს, რომ წინა სესიიდან მოგაწოდოთ თქვენი EasyEyes ID, გთხოვთ, აკრიფოთ აქ, ან ატვირთოთ ჩამოტვირთვის ფაილი, როდესაც ბოლო სესია დასრულდება.',\r\n    he: 'החוקר מבקש שתספק את מזהה ה- EasyEyes שלך מהפגישה הקודמת, אנא הקלד אותו כאן, או העלה את הקובץ שהורדה כאשר ההפעלה האחרונה מסתיימת.',\r\n    ar: 'يطلب الباحث أن تقدم معرف Easyeyes الخاص بك من الجلسة السابقة ، يرجى كتابةه هنا ، أو تحميل الملف الذي تم تنزيله عندما تنتهي الجلسة الأخيرة.',\r\n    ur: 'محقق نے درخواست کی ہے کہ آپ پچھلے سیشن سے اپنی ایزیئس ID فراہم کرتے ہیں ، براہ کرم اسے یہاں ٹائپ کریں ، یا آخری سیشن ختم ہونے پر ڈاؤن لوڈ کردہ فائل کو اپ لوڈ کریں۔',\r\n    hi: 'शोधकर्ता अनुरोध करता है कि आप पिछले सत्र से अपनी Easyeyes ID प्रदान करते हैं, कृपया इसे यहां टाइप करें, या अंतिम सत्र समाप्त होने पर डाउनलोड की गई फ़ाइल को अपलोड करें।',\r\n    ta: 'முந்தைய அமர்வில் இருந்து உங்கள் ஈஸி ஐடியை வழங்குமாறு ஆராய்ச்சியாளர் கோருகிறார், தயவுசெய்து அதை இங்கே தட்டச்சு செய்க அல்லது கடைசி அமர்வு முடிவடையும் போது பதிவிறக்கம் செய்யப்பட்ட கோப்பை பதிவேற்றவும்.',\r\n    ml: 'മുമ്പത്തെ സെഷനിൽ നിന്ന് നിങ്ങളുടെ എളുപ്പമുള്ള ഐഡി നൽകുന്ന ഗവേഷണ അഭ്യർത്ഥനകൾ, ദയവായി ഇത് ഇവിടെ ടൈപ്പ് ചെയ്യുക, അല്ലെങ്കിൽ അവസാന സെഷൻ അവസാനിക്കുമ്പോൾ ഡ download ൺലോഡ് ചെയ്ത ഫയൽ അപ്ലോഡുചെയ്യുക.',\r\n    te: 'మునుపటి సెషన్ నుండి మీరు మీ ఈజీయెస్ ఐడిని అందించాలని పరిశోధకుడు అభ్యర్థిస్తాడు, దయచేసి దీన్ని ఇక్కడ టైప్ చేయండి లేదా చివరి సెషన్ ముగిసినప్పుడు డౌన్‌లోడ్ చేసిన ఫైల్‌ను అప్‌లోడ్ చేయండి.',\r\n    kn: 'ಹಿಂದಿನ ಅಧಿವೇಶನದಿಂದ ನಿಮ್ಮ ಸುಲಭವಾದ ಐಡಿಯನ್ನು ನೀವು ಒದಗಿಸಬೇಕೆಂದು ಸಂಶೋಧಕರು ವಿನಂತಿಸುತ್ತಾರೆ, ದಯವಿಟ್ಟು ಅದನ್ನು ಇಲ್ಲಿ ಟೈಪ್ ಮಾಡಿ, ಅಥವಾ ಕೊನೆಯ ಅಧಿವೇಶನ ಮುಗಿದಾಗ ಡೌನ್‌ಲೋಡ್ ಮಾಡಿದ ಫೈಲ್ ಅನ್ನು ಅಪ್‌ಲೋಡ್ ಮಾಡಿ.',\r\n    bn: 'গবেষক অনুরোধ করেছেন যে আপনি আগের সেশন থেকে আপনার ইজিয়েয়েস আইডি সরবরাহ করেন, দয়া করে এটি এখানে টাইপ করুন বা শেষ সেশনটি শেষ হলে ডাউনলোড করা ফাইলটি আপলোড করুন।',\r\n    id: 'Peneliti meminta Anda memberikan ID EyyEyes Anda dari sesi sebelumnya, silakan ketik di sini, atau unggah file yang diunduh saat sesi terakhir berakhir.',\r\n    'zh-CN':\r\n      '研究人员请求您从上一个会话中提供易于眼睛的ID，请在此处输入，或在上次会话结束时上传下载的文件。',\r\n    'zh-HK':\r\n      '研究人員請求您從上一個會話中提供易於眼睛的ID，請在此處輸入，或在上次會話結束時上傳下載的文件。',\r\n    ja: '研究者は、前のセッションからEasyEyes IDを提供することを要求します。ここに入力するか、最後のセッションが終了したらダウンロードしたファイルをアップロードしてください。',\r\n    ko: '연구원은 이전 세션에서 EasyEyes ID를 제공하도록 요청하고 여기에 입력하거나 마지막 세션이 종료되면 다운로드 한 파일을 업로드하십시오.',\r\n  },\r\n  EE_ID: {\r\n    'en-US':\r\n      'A unique ID is needed to link data across sessions. This computer previously participated in a session on **ddd** with EasyEyes ID “**sss**”. Press OK if that\\'s you. Otherwise, if you have an EasyEyes ID file, press the file selection button below to open it. (The filename begins with \"EasyEyes\", ends with \".txt\", and is typically in your Downloads folder.) If you don\\'t have a file, but know your EasyEyes ID, then type it. Otherwise, just make up your own ID, which can be any alphanumeric string at least 5 characters long. It can be your name, if you like. We\\'ll remember it for you on this computer, but if you go to another computer, please take your EasyEyes ID file (the most recent file in your Downloads folder), or at least write down your EasyEyes ID. Use it every time to link your data from session to session.',\r\n    de: 'Eine eindeutige ID ist erforderlich, um Daten über Sitzungen hinweg zu verknüpfen. Dieser Computer nahm zuvor an einer Sitzung auf ** ddd ** mit Easyeyes ID \"** SSS **\" teil. Drücken Sie OK, wenn Sie das sind. Wenn Sie eine Easyeyes -ID -Datei haben, drücken Sie die Dateiauswahltaste unten, um sie zu öffnen. (Der Dateiname beginnt mit \"Easyeyes\", endet mit \".txt\" und befindet sich normalerweise in Ihrem Download -Ordner.) Wenn Sie keine Datei haben, aber Ihre Easyeyes -ID kennen, geben Sie sie dann ein. Ansonsten machen Sie einfach Ihre eigene ID aus, die eine alphanumerische Zeichenfolge von mindestens 5 Zeichen lang sein kann. Es kann Ihr Name sein, wenn Sie möchten. Wir werden es für Sie auf diesem Computer erinnern, aber wenn Sie zu einem anderen Computer gehen, nehmen Sie bitte Ihre Easyeyes -ID -Datei (die neueste Datei in Ihrem Download -Ordner) oder schreiben Sie zumindest Ihre Easyeyes -ID auf. Verwenden Sie es jedes Mal, um Ihre Daten von Sitzung mit der Sitzung zu verknüpfen.',\r\n    fr: 'Un ID unique est nécessaire pour relier les données entre les sessions. Cet ordinateur avait précédemment participé à une session sur ** ddd ** avec EasyEyes ID «** SSS **». Appuyez sur OK si c\\'est vous. Sinon, si vous avez un fichier ID EasyEyes, appuyez sur le bouton de sélection de fichiers ci-dessous pour l\\'ouvrir. (Le nom de fichier commence par \"EasyEyes\", se termine par \".txt\" et est généralement dans votre dossier de téléchargement.) Si vous n\\'avez pas de fichier, mais connaissez votre identifiant EasyEyes, alors tapez-le. Sinon, compensez simplement votre propre identifiant, qui peut être n\\'importe quelle chaîne alphanumérique au moins 5 caractères. Cela peut être votre nom, si vous le souhaitez. Nous nous en souviendrons pour vous sur cet ordinateur, mais si vous allez sur un autre ordinateur, veuillez prendre votre fichier ID EasyEyes (le fichier le plus récent de votre dossier de téléchargements), ou au moins noter votre identifiant EasyEyes. Utilisez-le à chaque fois pour relier vos données de la session à la session.',\r\n    es: 'Se necesita una identificación única para vincular los datos entre las sesiones. Esta computadora participó previamente en una sesión en ** DDD ** con EasyEyes ID \"** SSS **\". Presione OK si ese eres tú. De lo contrario, si tiene un archivo de ID de EasyEyes, presione el botón de selección de archivos a continuación para abrirlo. (El nombre de archivo comienza con \"EasyEyes\", termina con \".txt\", y generalmente está en su carpeta de descargas). Si no tiene un archivo, pero conozca su ID de EasyEyes, luego escribalo. De lo contrario, simplemente cree su propia identificación, que puede ser cualquier cadena alfanumérica de al menos 5 caracteres de largo. Puede ser su nombre, si lo desea. Lo recordaremos por usted en esta computadora, pero si va a otra computadora, tome su archivo de ID de EasyEyes (el archivo más reciente en su carpeta de descargas) o al menos escriba su ID de EasyEyes. Úselo cada vez para vincular sus datos de sesión a sesión.',\r\n    pt: 'É necessário um ID exclusivo para vincular dados nas sessões. Este computador participou anteriormente de uma sessão em ** ddd ** com o Easyeyes ID “** SSS **”. Pressione OK se for você. Caso contrário, se você tiver um arquivo de identificação easyeyes, pressione o botão Seleção de arquivo abaixo para abri -lo. (O nome do arquivo começa com \"easyeyes\", termina com \".txt\" e normalmente está na sua pasta de downloads.) Se você não tiver um arquivo, mas conheça o seu ID easyeyes, digite -o. Caso contrário, basta criar seu próprio ID, que pode ser qualquer corda alfanumérica com pelo menos 5 caracteres. Pode ser o seu nome, se você quiser. Lembraremos disso para você neste computador, mas se você for a outro computador, pegue seu arquivo de identificação Easyeyes (o arquivo mais recente na sua pasta de downloads) ou pelo menos anote o seu ID easyeyes. Use -o sempre para vincular seus dados de sessão à sessão.',\r\n    it: 'È necessario un ID univoco per collegare i dati tra le sessioni. Questo computer aveva precedentemente partecipato a una sessione su ** DDD ** con ID EasyEyes “** sss **”. Premi OK se sei tu. Altrimenti, se si dispone di un file ID EasyEyes, premere il pulsante di selezione del file in basso per aprirlo. (Il nome file inizia con \"EasyEyes\", termina con \".txt\" ed è in genere nella cartella dei download.) Se non hai un file, ma conosci il tuo ID EasyEyes, quindi digitalo. Altrimenti, basta creare il tuo ID, che può essere lungo qualsiasi stringa alfanumerica di almeno 5 caratteri. Può essere il tuo nome, se vuoi. Lo ricorderemo per te su questo computer, ma se vai a un altro computer, prendi il tuo file ID EasyEyes (il file più recente nella cartella dei download) o almeno scrivi il tuo ID EasyEyes. Usalo ogni volta per collegare i tuoi dati da sessione a sessione.',\r\n    ro: 'Este necesar un ID unic pentru a conecta datele în sesiuni. Acest computer a participat anterior la o sesiune pe ** DDD ** cu ID -ul EasyEyes „** SSS **”. Apăsați OK dacă sunteți tu. În caz contrar, dacă aveți un fișier ID EAYEYES, apăsați butonul de selecție a fișierului de mai jos pentru a -l deschide. (Numele de fișier începe cu „EasyEyes”, se încheie cu „.txt” și este de obicei în folderul de descărcări.) Dacă nu aveți un fișier, dar cunoașteți ID -ul dvs. EasyEs, atunci tastați -l. În caz contrar, doar alcătuiește -ți propriul ID, care poate fi orice șir alfanumeric de cel puțin 5 caractere. Poate fi numele tău, dacă vrei. Ne vom aminti pentru dvs. pe acest computer, dar dacă mergeți la un alt computer, vă rugăm să luați fișierul dvs. de ID EasyEs (cel mai recent fișier din folderul dvs. de descărcări) sau cel puțin să scrieți ID -ul dvs. EasyEs. Utilizați -l de fiecare dată pentru a conecta datele de la sesiune la sesiune.',\r\n    pl: 'Potrzebny jest unikalny identyfikator, aby połączyć dane między sesjami. Ten komputer wcześniej uczestniczył w sesji na ** DDD ** z ID Easyeyes „** SSS **”. Naciśnij OK, jeśli to ty. W przeciwnym razie, jeśli masz plik ID Easyeyes, naciśnij poniższy przycisk Plik, aby go otworzyć. (Nazwa pliku zaczyna się od „Easyeyes”, kończy „.txt” i zwykle znajduje się w folderze pobierania.) Jeśli nie masz pliku, ale znasz identyfikator Easyeyes, wpisz go. W przeciwnym razie po prostu zrób własny identyfikator, który może być dowolnym ciągiem alfanumerycznym co najmniej 5 znaków. To może być twoje imię, jeśli chcesz. Zapamiętamy to dla Ciebie na tym komputerze, ale jeśli przejdziesz do innego komputera, weź plik ID Easyeyes (najnowszy plik w folderze do pobrania) lub przynajmniej zapisz swój identyfikator Easyeyes. Użyj go za każdym razem, aby połączyć dane z sesji do sesji.',\r\n    ru: 'Уникальный идентификатор необходим для связи данных в разных сессиях. Этот компьютер ранее участвовал в сеансе на ** ddd ** с easyeyes id «** sss **». Нажмите ОК, если это ты. В противном случае, если у вас есть файл идентификатора easyeyes, нажмите кнопку выбора файла ниже, чтобы открыть его. (Имя файла начинается с «Easyeyes», заканчивается «.txt» и обычно находится в папке загрузки.) Если у вас нет файла, но вы знаете свой идентификатор easyeyes, то введите его. В противном случае, просто составьте свой собственный идентификатор, который может быть любой буквенно -цифровой строкой, по крайней мере, 5 символов. Это может быть ваше имя, если хотите. Мы запомним это для вас на этом компьютере, но если вы зайдете на другой компьютер, пожалуйста, возьмите свой файл идентификатора easteyes (самый последний файл в папке загрузки) или, по крайней мере, запишите свой идентификатор easyeyes. Используйте его каждый раз, чтобы связать ваши данные из сеанса с сеансом.',\r\n    hy: 'Նիստերը կապելու համար անհրաժեշտ է եզակի ID: Այս համակարգիչը նախկինում մասնակցել է «DDD ** - ին,« ** SSS ** »- ին ** DDD ** նիստին: Սեղմեք OK, եթե դա ձեզ է: Հակառակ դեպքում, եթե ունեք EasyEyes ID ֆայլ, սեղմեք ներքեւի ֆայլի ընտրության կոճակը, այն բացելու համար: (Անունը սկսվում է «EasyEyes» - ի հետ, ավարտվում է «.txt» - ով եւ սովորաբար ձեր ներբեռնումների պանակում է :) Եթե ֆայլ չունեք, բայց մուտքագրեք ձեր EasyEnes ID- ն, ապա մուտքագրեք այն: Հակառակ դեպքում, պարզապես կազմեք ձեր սեփական ID- ն, որը կարող է լինել ցանկացած այբբենական լար առնվազն 5 նիշ: Դա կարող է լինել ձեր անունը, եթե ցանկանում եք: Մենք դա կհիշենք ձեզ համար այս համակարգչում, բայց եթե մեկ այլ համակարգիչ եք գնում, խնդրում ենք վերցրեք ձեր EasyEyes ID ֆայլը (ձեր ներբեռնման պանակում ամենավերջին ֆայլը), կամ գոնե գրեք ձեր EasyEyes ID- ն: Օգտագործեք այն ամեն անգամ `ձեր տվյալները նիստից նիստին կապելու համար:',\r\n    fi: 'Tietojen linkittämiseen tarvitaan yksilöivä tunnus. Tämä tietokone osallistui aiemmin ** DDD **: n istuntoon, jossa on Easyeyes ID “** SSS **”. Paina OK, jos se olet sinä. Muuten, jos sinulla on Easyeyes -tunnustiedosto, painamalla alla olevaa tiedostovalintapainiketta. (Tiedostonimi alkaa \"Easyeyes\", päättyy \".txt\", ja se on tyypillisesti latauskansiossa.) Jos sinulla ei ole tiedostoa, mutta tunnet Easyeyes -tunnuksesi, kirjoita se sitten. Muutoin muodosta vain oma henkilöllisyystodistus, joka voi olla mikä tahansa aakkosnumeerinen merkkijono vähintään 5 merkkiä pitkä. Se voi olla nimesi, jos haluat. Muistamme sen sinulle tällä tietokoneella, mutta jos siirryt toiseen tietokoneeseen, ota Easyeyes -ID -tiedosto (viimeisin tiedosto latauskansioon) tai ainakin kirjoita Easyeyes -tunnus. Käytä sitä joka kerta linkittääksesi tietosi istunnosta toiseen.',\r\n    ka: 'უნიკალური პირადობის მოწმობაა საჭირო მონაცემების სესიების დასაკავშირებლად. ეს კომპიუტერი ადრე მონაწილეობდა სხდომაზე ** ddd ** easyeyes id \"** sss **\". დააჭირეთ OK- ს, თუ ეს შენ ხარ. წინააღმდეგ შემთხვევაში, თუ თქვენ გაქვთ EasyEyes ID ფაილი, დააჭირეთ ქვემოთ მოცემულ ფაილის შერჩევის ღილაკს, რომ გახსნათ იგი. . წინააღმდეგ შემთხვევაში, უბრალოდ შეადგინეთ საკუთარი პირადობის მოწმობა, რომელიც შეიძლება იყოს ნებისმიერი ალფანუმერული სიმებიანი მინიმუმ 5 სიმბოლო. ეს შეიძლება იყოს თქვენი სახელი, თუ გსურთ. ჩვენ ეს მახსოვს თქვენთვის ამ კომპიუტერში, მაგრამ თუ სხვა კომპიუტერში მიდიხართ, გთხოვთ, აიღოთ თქვენი EasyEyes ID ფაილი (უახლესი ფაილი თქვენს ჩამოტვირთვის საქაღალდეში), ან მინიმუმ ჩამოწერეთ თქვენი EasyEyes ID. გამოიყენეთ იგი ყოველ ჯერზე, რომ დააკავშიროთ თქვენი მონაცემები სესიიდან სესიამდე.',\r\n    he: 'יש צורך במזהה ייחודי לקישור נתונים על פני הפעלות. מחשב זה השתתף בעבר בסשן ב- ** DDD ** עם IDEEIES ID \"** SSS **\". לחץ על אישור אם זה אתה. אחרת, אם יש לך קובץ מזהה EasyEyes, לחץ על כפתור בחירת הקבצים למטה כדי לפתוח אותו. (שם הקובץ מתחיל ב\"- EasyEyes \", מסתיים ב-\" .txt \", והוא בדרך כלל בתיקיית ההורדות שלך.) אם אין לך קובץ, אך דע את מזהה ה- EasyEyes שלך, אז הקלד אותו. אחרת, פשוט הרכיב מזהה משלך, שיכול להיות כל מחרוזת אלפאנומרית באורך של לפחות 5 תווים. זה יכול להיות שמך, אם תרצה. אנו נזכור זאת עבורך במחשב זה, אך אם אתה הולך למחשב אחר, אנא קח את קובץ המזהה של EasyEyes שלך (הקובץ האחרון בתיקיית ההורדות שלך), או לפחות לרשום את מזהה ה- EasyEyes שלך. השתמש בו בכל פעם כדי לקשר את הנתונים שלך מהפעלה לפגישה.',\r\n    ar: 'هناك حاجة إلى معرف فريد لربط البيانات عبر الجلسات. شارك هذا الكمبيوتر سابقًا في جلسة على ** DDD ** مع معرف Easyeyes \"** SSS **\". اضغط موافق إذا كان هذا أنت. خلاف ذلك ، إذا كان لديك ملف معرف Easyeyes ، فاضغط على زر تحديد الملف أدناه لفتحه. (يبدأ اسم الملف بـ \"Easyeyes\" ، ينتهي بـ \".txt\" ، وعادة ما يكون في مجلد التنزيلات.) إذا لم يكن لديك ملف ، ولكن تعرف على معرف Easyeyes الخاص بك ، ثم اكتبه. خلاف ذلك ، ما عليك سوى وضع معرفك الخاص ، والذي يمكن أن يكون أي سلسلة أبجدية رقمية لا تقل عن 5 أحرف. يمكن أن يكون اسمك ، إذا أردت. سنتذكره لك على هذا الكمبيوتر ، ولكن إذا ذهبت إلى كمبيوتر آخر ، فيرجى أخذ ملف ID Easyeyes الخاص بك (أحدث ملف في مجلد التنزيلات) ، أو على الأقل كتابة معرف Easyeyes الخاص بك. استخدمه في كل مرة لربط بياناتك من جلسة إلى جلسة.',\r\n    ur: 'سیشنوں میں ڈیٹا کو جوڑنے کے لئے ایک انوکھا ID کی ضرورت ہے۔ اس کمپیوٹر نے اس سے قبل ** ڈی ڈی ڈی ** پر سیشن میں ایزیئس ID \"** ایس ایس ایس **\" کے ساتھ حصہ لیا تھا۔ ٹھیک ہے دبائیں اگر آپ ہیں۔ بصورت دیگر ، اگر آپ کے پاس ایزی ای ایس آئی ڈی فائل ہے تو ، اسے کھولنے کے لئے نیچے فائل سلیکشن بٹن دبائیں۔ ۔ بصورت دیگر ، صرف اپنی شناخت بنائیں ، جو کم از کم 5 حروف لمبا کوئی حرفی عمر کے تار ہوسکتا ہے۔ اگر آپ چاہیں تو یہ آپ کا نام ہوسکتا ہے۔ ہم اسے اس کمپیوٹر پر آپ کے لئے یاد رکھیں گے ، لیکن اگر آپ کسی دوسرے کمپیوٹر پر جاتے ہیں تو ، براہ کرم اپنی ایزیئس آئی ڈی فائل (اپنے ڈاؤن لوڈ فولڈر میں حالیہ فائل) لیں ، یا کم از کم اپنی ایزی ای ایس آئی ڈی لکھیں۔ اپنے ڈیٹا کو سیشن سے سیشن میں لنک کرنے کے لئے ہر بار اس کا استعمال کریں۔',\r\n    hi: 'सत्रों में डेटा को लिंक करने के लिए एक अद्वितीय आईडी की आवश्यकता होती है। इस कंप्यूटर ने पहले easyeyes id \"** sss **\" के साथ ** ddd ** पर एक सत्र में भाग लिया था। यदि आप हो तो ठीक दबाएं। अन्यथा, यदि आपके पास एक EasyEyes ID फ़ाइल है, तो इसे खोलने के लिए नीचे फ़ाइल चयन बटन दबाएं। (फ़ाइल नाम \"easyeyes\" के साथ शुरू होता है, \".txt\" के साथ समाप्त होता है, और आमतौर पर आपके डाउनलोड फ़ोल्डर में होता है।) यदि आपके पास फ़ाइल नहीं है, लेकिन अपनी Easyeyes ID को जानें, तो इसे टाइप करें। अन्यथा, बस अपनी खुद की आईडी बनाएं, जो कम से कम 5 अक्षर लंबे अल्फ़ान्यूमेरिक स्ट्रिंग हो सकती है। यदि आप चाहें तो यह आपका नाम हो सकता है। हम इसे इस कंप्यूटर पर आपके लिए याद रखेंगे, लेकिन यदि आप किसी अन्य कंप्यूटर पर जाते हैं, तो कृपया अपनी Easyeyes ID फ़ाइल (अपने डाउनलोड फ़ोल्डर में सबसे हालिया फ़ाइल) लें, या कम से कम अपनी Easyeyes ID लिखें। अपने डेटा को सत्र से सत्र तक लिंक करने के लिए हर बार इसका उपयोग करें।',\r\n    ta: 'அமர்வுகள் முழுவதும் தரவை இணைக்க ஒரு தனித்துவமான ஐடி தேவை. இந்த கணினி முன்பு ** டி.டி.டி ** இல் ஒரு அமர்வில் பங்கேற்றது, ஈஸிஇயஸ் ஐடி “** எஸ்எஸ்எஸ் **”. அது நீங்கள் என்றால் சரி என்பதை அழுத்தவும். இல்லையெனில், உங்களிடம் எளிதான ஐடி கோப்பு இருந்தால், அதைத் திறக்க கீழே உள்ள கோப்பு தேர்வு பொத்தானை அழுத்தவும். . இல்லையெனில், உங்கள் சொந்த ஐடியை உருவாக்குங்கள், இது குறைந்தது 5 எழுத்துக்கள் நீளமாக இருக்கும் எந்த எண்ணெழுத்து சரமாக இருக்கலாம். நீங்கள் விரும்பினால் அது உங்கள் பெயராக இருக்கலாம். இந்த கணினியில் நாங்கள் அதை நினைவில் கொள்வோம், ஆனால் நீங்கள் வேறொரு கணினிக்குச் சென்றால், தயவுசெய்து உங்கள் ஈஸி ஐடி கோப்பை (உங்கள் பதிவிறக்கக் கோப்புறையில் மிகச் சமீபத்திய கோப்பு) எடுத்துக் கொள்ளுங்கள், அல்லது குறைந்தபட்சம் உங்கள் ஈஸியீஸ் ஐடியை எழுதுங்கள். உங்கள் தரவை அமர்விலிருந்து அமர்வுக்கு இணைக்க ஒவ்வொரு முறையும் இதைப் பயன்படுத்தவும்.',\r\n    ml: 'സെഷനുകളിലുടനീളം ഡാറ്റ ലിങ്കുചെയ്യുന്നതിന് ഒരു അദ്വിതീയ ഐഡി ആവശ്യമാണ്. ഈ കമ്പ്യൂട്ടർ മുമ്പ് ** ddd- ൽ ഒരു സെഷനിൽ പങ്കെടുത്തു ** anieseyes id \"** SSS **\". അത് നിങ്ങളാണെങ്കിൽ ശരി അമർത്തുക. അല്ലെങ്കിൽ, നിങ്ങൾക്ക് ഒരു എളുപ്പമുള്ള ഐഡി ഫയൽ ഉണ്ടെങ്കിൽ, അത് തുറക്കുന്നതിന് ചുവടെയുള്ള ഫയൽ തിരഞ്ഞെടുക്കൽ ബട്ടൺ അമർത്തുക. . അല്ലെങ്കിൽ, നിങ്ങളുടെ സ്വന്തം ഐഡി നിർമ്മിക്കുക, അത് കുറഞ്ഞത് 5 പ്രതീകങ്ങളെങ്കിലും ആൽഫാന്യൂമെറിക് സ്ട്രിംഗ് ആകാം. നിങ്ങൾക്ക് താൽപ്പര്യമുണ്ടെങ്കിൽ അത് നിങ്ങളുടെ പേര് ആകാം. ഈ കമ്പ്യൂട്ടറിൽ ഞങ്ങൾ ഇത് ഓർക്കും, പക്ഷേ നിങ്ങൾ മറ്റൊരു കമ്പ്യൂട്ടറിലേക്ക് പോയാൽ, ദയവായി നിങ്ങളുടെ ഐഡി ഫയൽ (നിങ്ങളുടെ ഡ download ൺലോഡുകൾ ഫോൾഡറിലെ ഏറ്റവും പുതിയ ഫയൽ എടുക്കുക), അല്ലെങ്കിൽ നിങ്ങളുടെ എളുപ്പത്തിലുള്ള ഐഡി എഴുതുക. നിങ്ങളുടെ ഡാറ്റ സെഷനിൽ നിന്ന് സെഷനിൽ നിന്ന് ലിങ്കുചെയ്യുന്നതിന് ഓരോ തവണയും ഉപയോഗിക്കുക.',\r\n    te: 'సెషన్లలో డేటాను లింక్ చేయడానికి ఒక ప్రత్యేకమైన ID అవసరం. ఈ కంప్యూటర్ గతంలో ఈజీయెస్ ఐడి “** SSS **” తో ** DDD ** లో ఒక సెషన్‌లో పాల్గొంది. అది మీరే అయితే సరే నొక్కండి. లేకపోతే, మీకు ఈజీయేస్ ఐడి ఫైల్ ఉంటే, దాన్ని తెరవడానికి దిగువ ఫైల్ ఎంపిక బటన్‌ను నొక్కండి. . లేకపోతే, మీ స్వంత ఐడిని తయారు చేయండి, ఇది కనీసం 5 అక్షరాల పొడవు ఉన్న ఆల్ఫాన్యూమరిక్ స్ట్రింగ్ కావచ్చు. మీకు నచ్చితే అది మీ పేరు కావచ్చు. మేము ఈ కంప్యూటర్‌లో మీ కోసం దీన్ని గుర్తుంచుకుంటాము, కానీ మీరు మరొక కంప్యూటర్‌కు వెళితే, దయచేసి మీ ఈజీయెస్ ఐడి ఫైల్ (మీ డౌన్‌లోడ్ ఫోల్డర్‌లో ఇటీవలి ఫైల్) తీసుకోండి లేదా కనీసం మీ ఈజీయెస్ ఐడిని రాయండి. మీ డేటాను సెషన్ నుండి సెషన్‌కు లింక్ చేయడానికి ప్రతిసారీ దీన్ని ఉపయోగించండి.',\r\n    kn: 'ಸೆಷನ್‌ಗಳಲ್ಲಿ ಡೇಟಾವನ್ನು ಲಿಂಕ್ ಮಾಡಲು ಅನನ್ಯ ID ಅಗತ್ಯವಿದೆ. ಈ ಕಂಪ್ಯೂಟರ್ ಈ ಹಿಂದೆ ** ಡಿಡಿಡಿ ** ನಲ್ಲಿನ ಅಧಿವೇಶನದಲ್ಲಿ ಈಸಿ ಐಸ್ ಐಡಿ “** ಎಸ್‌ಎಸ್‌ಎಸ್ **” ನೊಂದಿಗೆ ಭಾಗವಹಿಸಿದೆ. ಅದು ನೀವೇ ಆಗಿದ್ದರೆ ಸರಿ ಒತ್ತಿರಿ. ಇಲ್ಲದಿದ್ದರೆ, ನೀವು ಸುಲಭವಾದ ಐಡಿ ಫೈಲ್ ಹೊಂದಿದ್ದರೆ, ಅದನ್ನು ತೆರೆಯಲು ಕೆಳಗಿನ ಫೈಲ್ ಆಯ್ಕೆ ಬಟನ್ ಒತ್ತಿರಿ. . ಇಲ್ಲದಿದ್ದರೆ, ನಿಮ್ಮ ಸ್ವಂತ ID ಯನ್ನು ಮಾಡಿ, ಅದು ಯಾವುದೇ ಆಲ್ಫಾನ್ಯೂಮರಿಕ್ ಸ್ಟ್ರಿಂಗ್ ಆಗಿರಬಹುದು. ನೀವು ಬಯಸಿದರೆ ಅದು ನಿಮ್ಮ ಹೆಸರಾಗಿರಬಹುದು. ಈ ಕಂಪ್ಯೂಟರ್‌ನಲ್ಲಿ ನಾವು ಅದನ್ನು ನಿಮಗಾಗಿ ನೆನಪಿಸಿಕೊಳ್ಳುತ್ತೇವೆ, ಆದರೆ ನೀವು ಇನ್ನೊಂದು ಕಂಪ್ಯೂಟರ್‌ಗೆ ಹೋದರೆ, ದಯವಿಟ್ಟು ನಿಮ್ಮ ಈಸಿಐಇಎಸ್ ಐಡಿ ಫೈಲ್ ಅನ್ನು ತೆಗೆದುಕೊಳ್ಳಿ (ನಿಮ್ಮ ಡೌನ್‌ಲೋಡ್‌ಗಳ ಫೋಲ್ಡರ್‌ನಲ್ಲಿರುವ ಇತ್ತೀಚಿನ ಫೈಲ್), ಅಥವಾ ಕನಿಷ್ಠ ನಿಮ್ಮ ಸುಲಭವಾದ ಐಡಿಯನ್ನು ಬರೆಯಿರಿ. ನಿಮ್ಮ ಡೇಟಾವನ್ನು ಅಧಿವೇಶನದಿಂದ ಅಧಿವೇಶನಕ್ಕೆ ಲಿಂಕ್ ಮಾಡಲು ಪ್ರತಿ ಬಾರಿಯೂ ಇದನ್ನು ಬಳಸಿ.',\r\n    bn: 'সেশনগুলি জুড়ে ডেটা লিঙ্ক করার জন্য একটি অনন্য আইডি প্রয়োজন। এই কম্পিউটারটি পূর্বে ** ডিডিডি ** ইজিয়েয়েস আইডি \"** এসএসএস **\" এর সাথে একটি সেশনে অংশ নিয়েছিল। ঠিক আছে টিপুন যদি আপনি হয়। অন্যথায়, আপনার যদি কোনও ইজিয়েইস আইডি ফাইল থাকে তবে এটি খুলতে নীচে ফাইল নির্বাচন বোতাম টিপুন। (ফাইলের নামটি \"ইজিয়েস\" দিয়ে শুরু হয়, \".txt\" দিয়ে শেষ হয় এবং সাধারণত আপনার ডাউনলোড ফোল্ডারে থাকে)) আপনার যদি ফাইল না থাকে তবে আপনার ইজিয়েস আইডিটি জানেন, তবে এটি টাইপ করুন। অন্যথায়, কেবল আপনার নিজের আইডি তৈরি করুন, যা কমপক্ষে 5 টি অক্ষর দীর্ঘ কোনও আলফানিউমেরিক স্ট্রিং হতে পারে। আপনি যদি চান তবে এটি আপনার নাম হতে পারে। আমরা এই কম্পিউটারে এটি আপনার জন্য মনে রাখব, তবে আপনি যদি অন্য কোনও কম্পিউটারে যান তবে দয়া করে আপনার ইজিয়েয়েস আইডি ফাইলটি নিন (আপনার ডাউনলোড ফোল্ডারে সর্বাধিক সাম্প্রতিক ফাইল), বা কমপক্ষে আপনার ইজিয়েস আইডি লিখুন। আপনার ডেটা সেশন থেকে সেশনে লিঙ্ক করতে প্রতিবার এটি ব্যবহার করুন।',\r\n    id: 'ID unik diperlukan untuk menghubungkan data di seluruh sesi. Komputer ini sebelumnya berpartisipasi dalam sesi di ** ddd ** dengan ID EyyEyes “** SSS **”. Tekan OK jika itu kamu. Jika tidak, jika Anda memiliki file ID EyyEyes, tekan tombol pemilihan file di bawah ini untuk membukanya. (Nama file dimulai dengan \"EyyEyes\", diakhiri dengan \".txt\", dan biasanya di folder unduhan Anda.) Jika Anda tidak memiliki file, tetapi ketahui ID EyyEyes Anda, lalu ketik. Jika tidak, buat saja ID Anda sendiri, yang bisa berupa string alfanumerik setidaknya 5 karakter. Itu bisa menjadi nama Anda, jika Anda suka. Kami akan mengingatnya untuk Anda di komputer ini, tetapi jika Anda pergi ke komputer lain, silakan ambil file ID EyyEyes Anda (file terbaru di folder unduhan Anda), atau setidaknya tuliskan ID EyyEyes Anda. Gunakan setiap saat untuk menautkan data Anda dari sesi ke sesi.',\r\n    'zh-CN':\r\n      '需要一个唯一的ID来链接跨会话的数据。这台计算机先前参加了有关** ddd **的会话，并带有EasyEyes ID“ ** sss **”。如果是你，请按确定。否则，如果您有EasyEyes ID文件，请按下面的文件选择按钮打开它。 （该文件名以“ EasyEyes”开头，以“ .txt”结尾，通常在您的下载文件夹中。）如果您没有文件，但是知道您的EasyEyes ID，请输入。否则，只需构成自己的ID，即至少有5个字符的字符串长。如果您愿意，可以是您的名字。我们会在这台计算机上为您记住它，但是如果您转到另一台计算机，请获取您的EasyEyes ID文件（您的下载文件夹中的最新文件），或者至少写下您的EasyEyes ID。每次使用它将您的数据从会话链接到会话。',\r\n    'zh-HK':\r\n      '需要一個唯一的ID來鏈接跨會話的數據。這台計算機先前參加了有關** ddd **的會話，並帶有EasyEyes ID“ ** sss **”。如果是你，請按確定。否則，如果您有EasyEyes ID文件，請按下面的文件選擇按鈕打開它。 （該文件名以“ EasyEyes”開頭，以“ .txt”結尾，通常在您的下載文件夾中。）如果您沒有文件，但是知道您的EasyEyes ID，請輸入。否則，只需構成自己的ID，即至少有5個字符的字符串長。如果您願意，可以是您的名字。我們會在這台計算機上為您記住它，但是如果您轉到另一台計算機，請獲取您的EasyEyes ID文件（您的下載文件夾中的最新文件），或者至少寫下您的EasyEyes ID 。每次使用它將您的數據從會話鏈接到會話。',\r\n    ja: 'セッション全体でデータをリンクするには、一意のIDが必要です。このコンピューターは、以前に** ddd **のセッションに参加していました。それがあなたである場合、OKを押してください。それ以外の場合、EasyEyes IDファイルがある場合は、下のファイル選択ボタンを押して開きます。 （ファイル名は「easyeyes」で始まり、「.txt」で終わり、通常はダウンロードフォルダーにあります。）ファイルを持っていないが、easeyeyes IDを知っている場合は、入力します。それ以外の場合は、独自のIDを構成するだけです。これは、少なくとも5文字の英数字の文字列になります。必要に応じて、それはあなたの名前かもしれません。このコンピューターでは覚えていますが、別のコンピューターにアクセスした場合は、EasyEyes IDファイル（ダウンロードフォルダーの最新のファイル）を使用するか、少なくともEasyEyes IDを書き留めてください。セッションからセッションにデータをリンクするために毎回使用してください。',\r\n    ko: '세션에서 데이터를 연결하려면 고유 한 ID가 필요합니다. 이 컴퓨터는 이전에 EasyEyes id“** sss **”와 함께 ** ddd ** 세션에 참여했습니다. 당신이라면 확인을 누릅니다. 그렇지 않으면 EasyEeyes ID 파일이있는 경우 아래 파일 선택 버튼을 눌러 열어줍니다. (파일 이름은 \"easyeyes\"로 시작하여 \".txt\"로 끝나고 일반적으로 다운로드 폴더에 있습니다.) 파일이 없지만 Easyeyes ID를 알고 있다면 입력하십시오. 그렇지 않으면, 자신의 ID를 구성하십시오. 이는 최소 5 자 이상의 영숫자 문자열 일 수 있습니다. 당신이 좋아한다면 그것은 당신의 이름 일 수 있습니다. 이 컴퓨터에서는 기억하겠습니다. 그러나 다른 컴퓨터로 이동하면 Easyeyes ID 파일 (다운로드 폴더의 최신 파일)을 가져 가거나 easyeyes ID를 적어도 적어 두십시오. 데이터를 세션에서 세션으로 연결하는 데마다 사용하십시오.',\r\n  },\r\n  EE_ID_invalidFile: {\r\n    'en-US': 'Sorry. Wrong format for an EasyEyes ID file. Try another file, or type something.',\r\n    de: 'Entschuldigung. Falsches Format für eine Easyeyes -ID -Datei. Probieren Sie eine andere Datei aus oder geben Sie etwas ein.',\r\n    fr: 'Désolé. Mauvais format pour un fichier ID EasyEyes. Essayez un autre fichier ou tapez quelque chose.',\r\n    es: 'Lo siento. Formato incorrecto para un archivo de ID de EasyEyes. Pruebe con otro archivo o escriba algo.',\r\n    pt: 'Desculpe. Formato errado para um arquivo de identificação easeyes. Experimente outro arquivo ou digite algo.',\r\n    it: 'Scusa. Formato sbagliato per un file ID EasyEyes. Prova un altro file o digita qualcosa.',\r\n    ro: 'Îmi pare rău. Format greșit pentru un fișier ID EAYEYES. Încercați un alt fișier sau tastați ceva.',\r\n    pl: 'Przepraszam. Niewłaściwy format dla pliku ID Easyeyes. Wypróbuj inny plik lub wpisz coś.',\r\n    ru: 'Извини. Неправильный формат для файла идентификации easyeyes. Попробуйте другой файл или что -нибудь введите.',\r\n    hy: 'Ներողություն. EasyEyes ID ֆայլի սխալ ձեւաչափը: Փորձեք մեկ այլ ֆայլ կամ ինչ-որ բան մուտքագրեք:',\r\n    fi: 'Anteeksi. Väärä muoto Easyeyes -tunnustiedostolle. Kokeile toista tiedostoa tai kirjoita jotain.',\r\n    ka: 'Ბოდიში. არასწორი ფორმატი EasyEyes ID ფაილისთვის. სცადეთ სხვა ფაილი, ან ჩაწერეთ რამე.',\r\n    he: 'מצטער. פורמט שגוי עבור קובץ מזהה EasyEyes. נסה קובץ אחר, או הקלד משהו.',\r\n    ar: 'آسف. تنسيق خاطئ لملف معرف Easyeyes. جرب ملفًا آخر ، أو اكتب شيئًا.',\r\n    ur: 'معذرت ایزیئس آئی ڈی فائل کے لئے غلط شکل۔ کوئی اور فائل آزمائیں ، یا کچھ ٹائپ کریں۔',\r\n    hi: 'क्षमा मांगना। एक easyeyes आईडी फ़ाइल के लिए गलत प्रारूप। एक और फ़ाइल आज़माएं, या कुछ टाइप करें।',\r\n    ta: 'மன்னிக்கவும். எளிதான ஐடி கோப்பிற்கான தவறான வடிவம். மற்றொரு கோப்பை முயற்சிக்கவும் அல்லது ஏதாவது தட்டச்சு செய்யவும்.',\r\n    ml: 'ക്ഷമിക്കണം. ഒരു ആശയമയമുള്ള ഐഡി ഫയലിനായി തെറ്റായ ഫോർമാറ്റ്. മറ്റൊരു ഫയൽ പരീക്ഷിക്കുക, അല്ലെങ്കിൽ എന്തെങ്കിലും ടൈപ്പ് ചെയ്യുക.',\r\n    te: 'క్షమించండి. ఈజీయెస్ ఐడి ఫైల్ కోసం తప్పు ఫార్మాట్. మరొక ఫైల్‌ను ప్రయత్నించండి లేదా ఏదైనా టైప్ చేయండి.',\r\n    kn: 'ಕ್ಷಮಿಸಿ. ಸುಲಭವಾದ ಐಡಿ ಫೈಲ್‌ಗಾಗಿ ತಪ್ಪು ಸ್ವರೂಪ. ಇನ್ನೊಂದು ಫೈಲ್ ಅನ್ನು ಪ್ರಯತ್ನಿಸಿ, ಅಥವಾ ಏನನ್ನಾದರೂ ಟೈಪ್ ಮಾಡಿ.',\r\n    bn: 'দুঃখিত একটি ইজিয়েয়েস আইডি ফাইলের জন্য ভুল ফর্ম্যাট। অন্য ফাইল চেষ্টা করুন, বা কিছু টাইপ করুন।',\r\n    id: 'Maaf. Format yang salah untuk file ID EyyEyes. Coba file lain, atau ketik sesuatu.',\r\n    'zh-CN': '对不起。 easyeyes ID文件的错误格式。尝试另一个文件，或键入某些内容。',\r\n    'zh-HK': '對不起。 easyeyes ID文件的錯誤格式。嘗試另一個文件，或鍵入某些內容。',\r\n    ja: 'ごめん。 EasyEyes IDファイルの間違った形式。別のファイルを試すか、何かを入力してください。',\r\n    ko: '죄송합니다. EasyEyes ID 파일에 대한 잘못된 형식. 다른 파일을 시도하거나 무언가를 입력하십시오.',\r\n  },\r\n  EE_ID_invalidID: {\r\n    'en-US': 'The EasyEyes ID contains invalid characters. Only letters and numbers are allowed',\r\n    de: 'Die Easyeyes -ID enthält ungültige Zeichen. Es sind nur Buchstaben und Zahlen erlaubt',\r\n    fr: \"L'ID EasyEyes contient des caractères non valides. Seules les lettres et les chiffres sont autorisés\",\r\n    es: 'La identificación de EasyEyes contiene caracteres no válidos. Solo se permiten letras y números',\r\n    pt: 'O ID do Easyeyes contém caracteres inválidos. Somente letras e números são permitidos',\r\n    it: \"L'ID EasyEyes contiene caratteri non validi. Sono consentiti solo lettere e numeri\",\r\n    ro: 'ID -ul EasyEyes conține caractere nevalide. Sunt permise doar litere și numere',\r\n    pl: 'ID Easyeyes zawiera nieprawidłowe znaki. Dozwolone są tylko litery i liczby',\r\n    ru: 'Идентификатор easyeyes содержит неверные символы. Разрешены только буквы и цифры',\r\n    hy: 'EasyEyes ID- ն պարունակում է անվավեր նիշ: Թույլատրվում են միայն տառերն ու համարները',\r\n    fi: 'Easyeyes -tunnus sisältää virheelliset merkit. Vain kirjaimet ja numerot ovat sallittuja',\r\n    ka: 'Easyeyes ID შეიცავს არასწორი სიმბოლოებს. დასაშვებია მხოლოდ ასოები და ციფრები',\r\n    he: 'מזהה EasyEyes מכיל תווים לא חוקיים. רק אותיות ומספרים מותרות',\r\n    ar: 'يحتوي معرف Easyeyes على أحرف غير صالحة. لا يُسمح إلا بالرسائل والأرقام',\r\n    ur: 'ایزیس آئی ڈی میں غلط حروف شامل ہیں۔ صرف خطوط اور نمبروں کی اجازت ہے',\r\n    hi: 'Easyeyes ID में अमान्य वर्ण होते हैं। केवल अक्षरों और संख्याओं की अनुमति है',\r\n    ta: 'எளிதான ஐடியில் தவறான எழுத்துக்கள் உள்ளன. கடிதங்கள் மற்றும் எண்கள் மட்டுமே அனுமதிக்கப்படுகின்றன',\r\n    ml: 'എളുപ്പമുള്ള ഐഡിയിൽ അസാധുവായ പ്രതീകങ്ങൾ അടങ്ങിയിരിക്കുന്നു. അക്ഷരങ്ങളും അക്കങ്ങളും മാത്രമേ അനുവദിക്കൂ',\r\n    te: 'ఈజీయెస్ ఐడిలో చెల్లని అక్షరాలు ఉన్నాయి. అక్షరాలు మరియు సంఖ్యలు మాత్రమే అనుమతించబడతాయి',\r\n    kn: 'ಈಸಿ ಐಸ್ ಐಡಿ ಅಮಾನ್ಯ ಅಕ್ಷರಗಳನ್ನು ಒಳಗೊಂಡಿದೆ. ಅಕ್ಷರಗಳು ಮತ್ತು ಸಂಖ್ಯೆಗಳನ್ನು ಮಾತ್ರ ಅನುಮತಿಸಲಾಗಿದೆ',\r\n    bn: 'ইজিয়েয়েস আইডিতে অবৈধ অক্ষর রয়েছে। শুধুমাত্র চিঠি এবং সংখ্যা অনুমোদিত',\r\n    id: 'ID EYEYEYES berisi karakter yang tidak valid. Hanya huruf dan angka yang diizinkan',\r\n    'zh-CN': 'EasyEyes ID包含无效的字符。只允许字母和数字',\r\n    'zh-HK': 'EasyEyes ID包含無效的字符。只允許字母和數字',\r\n    ja: 'EasyEyes IDには無効な文字が含まれています。文字と番号のみが許可されています',\r\n    ko: 'EasyEyes ID에는 잘못된 문자가 포함되어 있습니다. 글자와 숫자 만 허용됩니다',\r\n  },\r\n  EE_ID_uploadOrValidID: {\r\n    'en-US': 'Please either upload a file or enter a valid EasyEyes ID.',\r\n    de: 'Bitte laden Sie entweder eine Datei hoch oder geben Sie eine gültige Easyeyes -ID ein.',\r\n    fr: 'Veuillez télécharger un fichier ou entrer un ID EasyEyes valide.',\r\n    es: 'Por favor, cargue un archivo o ingrese una ID de EasyEyes válida.',\r\n    pt: 'Faça o upload de um arquivo ou insira um ID do Easyeyes válido.',\r\n    it: 'Carica un file o inserisci un ID EasyEyes valido.',\r\n    ro: 'Vă rugăm să încărcați un fișier sau să introduceți un ID Valid EasyEyes.',\r\n    pl: 'Prześlij plik lub wprowadź prawidłowy identyfikator Easyeyes.',\r\n    ru: 'Пожалуйста, загрузите файл, либо введите действительный идентификатор easyeyes.',\r\n    hy: 'Խնդրում ենք կամ ֆայլ վերբեռնել կամ մուտքագրել վավեր EasyEyes ID:',\r\n    fi: 'Ole hyvä ja lataa tiedosto tai kirjoita kelvollinen Easyeyes -tunnus.',\r\n    ka: 'გთხოვთ, ატვირთოთ ფაილი ან შეიყვანოთ მოქმედი EasyEyes ID.',\r\n    he: 'אנא העלה קובץ או הזן מזהה EasyEyes תקף.',\r\n    ar: 'يرجى إما تحميل ملف أو إدخال معرف Easyeyes صالح.',\r\n    ur: 'براہ کرم یا تو فائل اپ لوڈ کریں یا ایک درست ایزی ای ایس آئی ڈی درج کریں۔',\r\n    hi: 'कृपया या तो एक फ़ाइल अपलोड करें या एक मान्य easyeyes आईडी दर्ज करें।',\r\n    ta: 'தயவுசெய்து ஒரு கோப்பைப் பதிவேற்றவும் அல்லது செல்லுபடியாகும் எளிதான ஐடியை உள்ளிடவும்.',\r\n    ml: 'ഒന്നുകിൽ ഒരു ഫയൽ അപ്ലോഡ് ചെയ്യുക അല്ലെങ്കിൽ സാധുവായ ഈസിയേൽ ഐഡി നൽകുക.',\r\n    te: 'దయచేసి ఫైల్‌ను అప్‌లోడ్ చేయండి లేదా చెల్లుబాటు అయ్యే ఈజీస్ ఐడిని నమోదు చేయండి.',\r\n    kn: 'ದಯವಿಟ್ಟು ಫೈಲ್ ಅನ್ನು ಅಪ್‌ಲೋಡ್ ಮಾಡಿ ಅಥವಾ ಮಾನ್ಯ ಈಸಿ ಐಇಎಸ್ ಐಡಿಯನ್ನು ನಮೂದಿಸಿ.',\r\n    bn: 'হয় হয় একটি ফাইল আপলোড করুন বা একটি বৈধ ইজিয়েয়েস আইডি লিখুন।',\r\n    id: 'Harap unggah file atau masukkan ID EXYEYES yang valid.',\r\n    'zh-CN': '请上传文件或输入有效的EasyEyes ID。',\r\n    'zh-HK': '請上傳文件或輸入有效的EasyEyes ID。',\r\n    ja: 'ファイルをアップロードするか、有効なEasyEyes IDを入力してください。',\r\n    ko: '파일을 업로드하거나 유효한 Easteyes ID를 입력하십시오.',\r\n  },\r\n  EE_incompatible: {\r\n    'en-US': '❌ INCOMPATIBLE. Sorry. Please return this study to Prolific.co.',\r\n    de: '❌ inkompatibel. Entschuldigung. Bitte geben Sie diese Studie an proolific.co zurück.',\r\n    fr: '❌ incompatible. Désolé. Veuillez retourner cette étude sur prolific.co.',\r\n    es: '❌ Incompatible. Lo siento. Devuelva este estudio a Prolific.co.',\r\n    pt: '❌ Incompatível. Desculpe. Por favor, devolva este estudo ao prolific.co.',\r\n    it: '❌ incompatibile. Scusa. Si prega di restituire questo studio a prolific.co.',\r\n    ro: '❌ incompatibil. Îmi pare rău. Vă rugăm să returnați acest studiu la Prolific.co.',\r\n    pl: '❌ Niezgodne. Przepraszam. Zwróć to badanie do Plific.co.',\r\n    ru: '❌ Несовместимый. Извини. Пожалуйста, верните это исследование в Pellific.co.',\r\n    hy: '❌ Անհամատեղելի: Ներողություն. Խնդրում ենք վերադարձնել այս ուսումնասիրությունը Pringific.co- ին:',\r\n    fi: '❌ yhteensopimattomia. Anteeksi. Palauta tämä tutkimus tuotteelle Lensific.co.',\r\n    ka: '❌ შეუთავსებელი. Ბოდიში. გთხოვთ, დააბრუნოთ ეს კვლევა Prolific.co- ზე.',\r\n    he: '❌ לא תואם. מצטער. אנא החזירו מחקר זה ל- Prolific.co.',\r\n    ar: '❌ غير متوافق. آسف. يرجى إعادة هذه الدراسة إلى prolific.co.',\r\n    ur: '❌ متضاد۔ معذرت براہ کرم اس مطالعہ کو prolific.co پر واپس کریں۔',\r\n    hi: '❌ असंगत। क्षमा मांगना। कृपया इस अध्ययन को prolific.co पर लौटाएं।',\r\n    ta: 'பொருந்தாது. மன்னிக்கவும். தயவுசெய்து இந்த ஆய்வை fullific.co க்கு திருப்பி விடுங்கள்.',\r\n    ml: '❌ പൊരുത്തപ്പെടുന്നില്ല. ക്ഷമിക്കണം. ഈ പഠനം volliciff.co ലേക്ക് മടങ്ങുക.',\r\n    te: '❌ అననుకూలమైనది. క్షమించండి. దయచేసి ఈ అధ్యయనాన్ని ఫలవంతమైన.కోకు తిరిగి ఇవ్వండి.',\r\n    kn: 'ಹೊಂದಾಣಿಕೆಯಾಗುವುದಿಲ್ಲ. ಕ್ಷಮಿಸಿ. ದಯವಿಟ್ಟು ಈ ಅಧ್ಯಯನವನ್ನು verific.co ಗೆ ಹಿಂತಿರುಗಿ.',\r\n    bn: '❌ বেমানান। দুঃখিত দয়া করে এই অধ্যয়নটি Prowlific.co এ ফিরিয়ে দিন।',\r\n    id: '❌ Tidak kompatibel. Maaf. Harap kembalikan studi ini ke Prolific.co.',\r\n    'zh-CN': '❌不相容。对不起。请将这项研究退还给Prolific.co。',\r\n    'zh-HK': '❌不相容。對不起。請將這項研究退還給Prolific.co。',\r\n    ja: 'of互換性がありません。ごめん。この調査をProlific.coに返送してください。',\r\n    ko: '❌ 양립 할 수 없습니다. 죄송합니다. 이 연구를 Prolific.co로 돌려주십시오.',\r\n  },\r\n  EE_incompatibleReturnToProlific: {\r\n    'en-US':\r\n      'This study is incompatible with your computer or browser, so please return it to Prolific.co. Submission for payment will be rejected (which damages your reputation), so please return it.',\r\n    de: 'Diese Studie ist mit Ihrem Computer oder Browser nicht kompatibel. Bitte geben Sie sie bitte an protrific.co zurück. Die Zahlungseintritt wird abgelehnt (was Ihren Ruf schadet). Bitte geben Sie sie zurück.',\r\n    fr: 'Cette étude est incompatible avec votre ordinateur ou votre navigateur, veuillez donc le retourner sur prolific.co. La soumission pour le paiement sera rejetée (qui endommage votre réputation), veuillez donc la retourner.',\r\n    es: 'Este estudio es incompatible con su computadora o navegador, así que devuélvalo a Prolific.co. El envío para el pago será rechazado (lo que daña su reputación), por lo tanto, devuélvalo.',\r\n    pt: 'Este estudo é incompatível com o seu computador ou navegador, então devolva -o ao prolific.co. O envio para pagamento será rejeitado (que danifica sua reputação); portanto, devolva -o.',\r\n    it: \"Questo studio è incompatibile con il computer o il browser, quindi ti preghiamo di restituirlo a prolific.co. L'invio per il pagamento verrà respinto (che danneggia la tua reputazione), quindi ti preghiamo di restituirla.\",\r\n    ro: 'Acest studiu este incompatibil cu computerul sau browserul, așa că vă rugăm să îl returnați la Prolific.co. Trimiterea pentru plată va fi respinsă (ceea ce vă dăunează reputației), așa că vă rugăm să o returnați.',\r\n    pl: 'To badanie jest niezgodne z komputerem lub przeglądarką, więc zwróć je do Prolific.co. Zgłoszenie płatności zostanie odrzucone (co uszkadza Twoją reputację), więc zwróć ją.',\r\n    ru: 'Это исследование несовместимо с вашим компьютером или браузером, поэтому, пожалуйста, верните его на Plustific.co. Отправка для оплаты будет отклонена (которая повреждает вашу репутацию), поэтому, пожалуйста, верните его.',\r\n    hy: 'Այս ուսումնասիրությունը անհամատեղելի է ձեր համակարգչի կամ զննարկչի հետ, այնպես որ խնդրում ենք այն վերադարձնել Prolific.co- ին: Վճարման ներկայացումը մերժվելու է (ինչը վնասում է ձեր հեղինակությանը), այնպես որ խնդրում ենք վերադարձնել այն:',\r\n    fi: 'Tämä tutkimus ei ole yhteensopiva tietokoneesi tai selaimen kanssa, joten palauta se tuotteelle Lensific.co. Maksujen lähettäminen hylätään (mikä vahingoittaa mainetta), joten palauta se.',\r\n    ka: 'ეს კვლევა არ შეესაბამება თქვენს კომპიუტერს ან ბრაუზერს, ამიტომ გთხოვთ, დააბრუნოთ იგი prolific.co. გადახდის წარდგენა უარი ეთქვა (რაც ზიანს აყენებს თქვენს რეპუტაციას), ამიტომ გთხოვთ, დააბრუნოთ იგი.',\r\n    he: 'מחקר זה אינו תואם את המחשב או הדפדפן שלך, אז אנא החזיר אותו ל- prolific.co. הגשה לתשלום תידחה (מה שפוגע במוניטין שלך), אז אנא החזיר אותו.',\r\n    ar: 'هذه الدراسة لا تتوافق مع جهاز الكمبيوتر أو المتصفح ، لذا يرجى إعادتها إلى Prolific.co. سيتم رفض التقديم للدفع (الذي يضر بسمعتك) ، لذا يرجى إعادته.',\r\n    ur: 'یہ مطالعہ آپ کے کمپیوٹر یا براؤزر سے مطابقت نہیں رکھتا ہے ، لہذا براہ کرم اسے prolific.co پر واپس کریں۔ ادائیگی کے لئے جمع کرانے کو مسترد کردیا جائے گا (جو آپ کی ساکھ کو نقصان پہنچاتا ہے) ، لہذا براہ کرم اسے واپس کردیں۔',\r\n    hi: 'यह अध्ययन आपके कंप्यूटर या ब्राउज़र के साथ असंगत है, इसलिए कृपया इसे prolific.co पर लौटाएं। भुगतान के लिए सबमिशन को अस्वीकार कर दिया जाएगा (जो आपकी प्रतिष्ठा को नुकसान पहुंचाता है), इसलिए कृपया इसे वापस करें।',\r\n    ta: 'இந்த ஆய்வு உங்கள் கணினி அல்லது உலாவியுடன் பொருந்தாது, எனவே தயவுசெய்து அதை plemific.co க்கு திருப்பி அனுப்புங்கள். கட்டணத்திற்கான சமர்ப்பிப்பு நிராகரிக்கப்படும் (இது உங்கள் நற்பெயரை சேதப்படுத்தும்), எனவே தயவுசெய்து அதைத் திருப்பித் தரவும்.',\r\n    ml: 'ഈ പഠനം നിങ്ങളുടെ കമ്പ്യൂട്ടറോ ബ്രൗസറോടോ പൊരുത്തപ്പെടുന്നില്ല, അതിനാൽ അത് സമൃദ്ധമായ.cCO ലേക്ക് തിരികെ നൽകുക. പേയ്മെന്റിനായുള്ള സമർപ്പണം നിരസിക്കും (ഇത് നിങ്ങളുടെ പ്രശസ്തി നശിപ്പിക്കുന്നു), അതിനാൽ ദയവായി അത് തിരികെ നൽകുക.',\r\n    te: 'ఈ అధ్యయనం మీ కంప్యూటర్ లేదా బ్రౌజర్‌తో విరుద్ధంగా ఉంది, కాబట్టి దయచేసి దాన్ని ఫలవంతమైన.కోకు తిరిగి ఇవ్వండి. చెల్లింపు కోసం సమర్పణ తిరస్కరించబడుతుంది (ఇది మీ ప్రతిష్టను దెబ్బతీస్తుంది), కాబట్టి దయచేసి దాన్ని తిరిగి ఇవ్వండి.',\r\n    kn: 'ಈ ಅಧ್ಯಯನವು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ಅಥವಾ ಬ್ರೌಸರ್‌ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ, ಆದ್ದರಿಂದ ದಯವಿಟ್ಟು ಅದನ್ನು verific.co ಗೆ ಹಿಂತಿರುಗಿ. ಪಾವತಿಗಾಗಿ ಸಲ್ಲಿಕೆಯನ್ನು ತಿರಸ್ಕರಿಸಲಾಗುತ್ತದೆ (ಇದು ನಿಮ್ಮ ಖ್ಯಾತಿಗೆ ಹಾನಿ ಮಾಡುತ್ತದೆ), ಆದ್ದರಿಂದ ದಯವಿಟ್ಟು ಅದನ್ನು ಹಿಂತಿರುಗಿ.',\r\n    bn: 'এই অধ্যয়নটি আপনার কম্পিউটার বা ব্রাউজারের সাথে বেমানান, সুতরাং দয়া করে এটি Plovific.co এ ফিরিয়ে দিন। অর্থ প্রদানের জন্য জমা দেওয়া প্রত্যাখ্যান করা হবে (যা আপনার খ্যাতির ক্ষতি করে), তাই দয়া করে এটি ফিরিয়ে দিন।',\r\n    id: 'Studi ini tidak kompatibel dengan komputer atau browser Anda, jadi silakan kembalikan ke Prolific.co. Pengajuan pembayaran akan ditolak (yang merusak reputasi Anda), jadi silakan kembalikan.',\r\n    'zh-CN':\r\n      '这项研究与您的计算机或浏览器不兼容，因此请将其退还给Prolific.co。提交的付款将被拒绝（这会损害您的声誉），因此请退还。',\r\n    'zh-HK':\r\n      '這項研究與您的計算機或瀏覽器不兼容，因此請將其退還給Prolific.co。提交的付款將被拒絕（這會損害您的聲譽），因此請退還。',\r\n    ja: 'この調査はコンピューターまたはブラウザと互換性がないため、Prolific.coに返送してください。支払いの提出は拒否されます（あなたの評判は損傷します）ので、返品してください。',\r\n    ko: '이 연구는 컴퓨터 나 브라우저와 호환되지 않으므로 Prolific.co로 반환하십시오. 지불 제출은 거부됩니다 (평판이 손상됨).',\r\n  },\r\n  EE_studyURL: {\r\n    'en-US': 'Study link: xxx',\r\n    de: 'Studienverbindung: xxx',\r\n    fr: \"Lien d'étude: xxx\",\r\n    es: 'Enlace de estudio: xxx',\r\n    pt: 'Link do estudo: xxx',\r\n    it: 'Link di studio: xxx',\r\n    ro: 'Link de studiu: xxx',\r\n    pl: 'Link do badania: xxx',\r\n    ru: 'Ссылка на изучение: xxx',\r\n    hy: 'Ուսումնական հղում. xxx',\r\n    fi: 'Opintolinkki: xxx',\r\n    ka: 'სასწავლო ბმული: xxx',\r\n    he: 'קישור לימוד: xxx',\r\n    ar: 'رابط الدراسة: xxx',\r\n    ur: 'مطالعہ کا لنک: xxx',\r\n    hi: 'अध्ययन लिंक: xxx',\r\n    ta: 'ஆய்வு இணைப்பு: xxx',\r\n    ml: 'പഠന ലിങ്ക്: xxx',\r\n    te: 'అధ్యయనం లింక్: xxx',\r\n    kn: 'ಅಧ್ಯಯನ ಲಿಂಕ್: xxx',\r\n    bn: 'অধ্যয়নের লিঙ্ক: xxx',\r\n    id: 'Tautan belajar: xxx',\r\n    'zh-CN': '研究链接：xxx',\r\n    'zh-HK': '研究鏈接：xxx',\r\n    ja: '調査リンク：xxx',\r\n    ko: '학습 링크 : xxx',\r\n  },\r\n  RC_FindModelAndroid: {\r\n    'en-US':\r\n      'Since this is an Android, go to the Settings or Options menu, scroll to the bottom of the list, and check ‘About phone’, ‘About device’ or similar. Copy the model name and number to the corresponding fields below.',\r\n    de: 'Da dies ein Android ist, wechseln Sie zum Menü Einstellungen oder Optionen, scrollen Sie nach unten in der Liste und überprüfen Sie \"über das Telefon\", \"Über Gerät\" oder ähnlich. Kopieren Sie den Modellnamen und die Nummer in die entsprechenden Felder unten.',\r\n    fr: \"Puisqu'il s'agit d'un Android, accédez au menu Paramètres ou Options, faites défiler vers le bas de la liste et vérifiez «sur le téléphone», «sur l'appareil» ou similaire. Copiez le nom et le numéro du modèle dans les champs correspondants ci-dessous.\",\r\n    es: 'Dado que este es un Android, vaya al menú Configuración o opciones, desplácese hasta la parte inferior de la lista y verifique \"sobre el teléfono\", \"sobre el dispositivo\" o similar. Copie el nombre y el número del modelo a los campos correspondientes a continuación.',\r\n    pt: \"Como este é um Android, vá para o menu de configurações ou opções, role até a parte inferior da lista e verifique 'Sobre o telefone', 'Sobre o dispositivo' ou similar. Copie o nome e o número do modelo para os campos correspondentes abaixo.\",\r\n    it: 'Poiché si tratta di un Android, vai al menu Impostazioni o opzioni, scorri fino alla fine dell\\'elenco e controlla \"About Phone\", \"About Device\" o Simile. Copia il nome e il numero del modello nei campi corrispondenti di seguito.',\r\n    ro: 'Deoarece acesta este un Android, accesați meniul Setări sau opțiuni, derulați în partea de jos a listei și verificați „Despre telefon”, „Despre dispozitiv” sau similar. Copiați numele și numărul modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Ponieważ jest to Android, przejdź do menu Ustawienia lub Opcji, przewiń do dołu listy i sprawdź „About Phone”, „About Device” lub podobne. Skopiuj nazwę i numer modelu do odpowiednich pól poniżej.',\r\n    ru: 'Поскольку это Android, перейдите в меню «Настройки или параметры», прокрутите в нижней части списка и проверьте «о телефоне», «о устройстве» или аналогичном. Скопируйте имя и номер модели в соответствующие поля ниже.',\r\n    hy: 'Քանի որ սա Android է, անցեք պարամետրերի կամ ընտրանքների ցանկի, ոլորեք ցուցակի ներքեւի մասում եւ ստուգեք «Հեռախոսի մասին», «սարքի մասին» կամ նման: Պատճենեք մոդելի անունը եւ համարը `ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: \"Koska tämä on Android, siirry Asetukset tai Asetukset -valikko, vieritä luettelon alaosaan ja tarkista 'About About About Phone', 'About Laite' tai vastaava. Kopioi mallin nimi ja numero alla oleviin vastaaviin kenttiin.\",\r\n    ka: 'ვინაიდან ეს არის Android, გადადით პარამეტრების ან პარამეტრების მენიუში, გადადით სიის ბოლოში და შეამოწმეთ \"ტელეფონის შესახებ\", \"მოწყობილობის შესახებ\" ან მსგავსი. დააკოპირეთ მოდელის სახელი და ნომერი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: \"מכיוון שמדובר באנדרואיד, עבור לתפריט ההגדרות או האפשרויות, גלול לתחתית הרשימה ובדוק 'אודות טלפון', 'על מכשיר' או דומה. העתק את שם הדגם ומספר לשדות המתאימים למטה.\",\r\n    ar: 'نظرًا لأن هذا هو Android ، انتقل إلى قائمة الإعدادات أو الخيارات ، ثم قم بالتمرير إلى أسفل القائمة ، وتحقق من \"حول الهاتف\" أو \"حول الجهاز\" أو ما شابه. انسخ اسم النموذج والرقم إلى الحقول المقابلة أدناه.',\r\n    ur: \"چونکہ یہ ایک اینڈروئیڈ ہے ، لہذا ترتیبات یا اختیارات کے مینو میں جائیں ، فہرست کے نیچے سکرول کریں ، اور 'فون کے بارے میں' ، 'آلہ کے بارے میں' یا اسی طرح کی جانچ کریں۔ ماڈل کے نام اور نمبر کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔\",\r\n    hi: \"चूंकि यह एक एंड्रॉइड है, सेटिंग्स या विकल्प मेनू पर जाएं, सूची के नीचे स्क्रॉल करें, और 'फोन के बारे में', 'डिवाइस के बारे में' या इसी तरह की जांच करें। मॉडल नाम और संख्या को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।\",\r\n    ta: 'இது ஆண்ட்ராய்டு என்பதால், அமைப்புகள் அல்லது விருப்பங்கள் மெனுவுக்குச் சென்று, பட்டியலின் கீழே உருட்டவும், ‘தொலைபேசியைப் பற்றி’, ‘சாதனம் பற்றி’ அல்லது அதற்கு ஒத்ததாக சரிபார்க்கவும். மாதிரி பெயர் மற்றும் எண்ணை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: \"ഇതൊരു Android ആയതിനാൽ, ക്രമീകരണങ്ങൾ അല്ലെങ്കിൽ ഓപ്ഷനുകൾ മെനുവിലേക്ക് പോയി, ലിസ്റ്റിന്റെ അടിയിലേക്ക് സ്ക്രോൾ ചെയ്യുക, 'ഫോണിനെക്കുറിച്ച്' ',' ഉപകരണത്തെക്കുറിച്ച് 'അല്ലെങ്കിൽ സമാനമായി പരിശോധിക്കുക. ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് മോഡൽ പേരും നമ്പറും പകർത്തുക.\",\r\n    te: 'ఇది Android కాబట్టి, సెట్టింగులు లేదా ఎంపికల మెనుకి వెళ్లి, జాబితా దిగువకు స్క్రోల్ చేయండి మరియు ‘ఫోన్ గురించి’, ‘పరికరం గురించి’ లేదా ఇలాంటివి తనిఖీ చేయండి. మోడల్ పేరు మరియు సంఖ్యను దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಇದು ಆಂಡ್ರಾಯ್ಡ್ ಆಗಿರುವುದರಿಂದ, ಸೆಟ್ಟಿಂಗ್‌ಗಳು ಅಥವಾ ಆಯ್ಕೆಗಳ ಮೆನುಗೆ ಹೋಗಿ, ಪಟ್ಟಿಯ ಕೆಳಭಾಗಕ್ಕೆ ಸ್ಕ್ರಾಲ್ ಮಾಡಿ ಮತ್ತು ‘ಫೋನ್ ಬಗ್ಗೆ’, ‘ಸಾಧನದ ಬಗ್ಗೆ’ ಅಥವಾ ಅಂತಹುದೇ ಪರಿಶೀಲಿಸಿ. ಮಾದರಿ ಹೆಸರು ಮತ್ತು ಸಂಖ್ಯೆಯನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'যেহেতু এটি একটি অ্যান্ড্রয়েড, সেটিংস বা বিকল্প মেনুতে যান, তালিকার নীচে স্ক্রোল করুন এবং ‘ফোন সম্পর্কে’, ‘ডিভাইস সম্পর্কে’ বা অনুরূপ পরীক্ষা করুন। নীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেলের নাম এবং নম্বরটি অনুলিপি করুন।',\r\n    id: \"Karena ini adalah Android, buka menu Pengaturan atau Opsi, gulir ke bagian bawah daftar, dan periksa 'Tentang Telepon', 'Tentang Perangkat' atau serupa. Salin nama model dan nomor ke bidang yang sesuai di bawah ini.\",\r\n    'zh-CN':\r\n      '由于这是一个Android，请转到“设置或选项”菜单，滚动到列表的底部，然后检查“关于电话”，“关于设备”或类似的“关于电话”。将型号和数字复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '由於這是一個Android，請轉到“設置或選項”菜單，滾動到列表的底部，然後檢查“關於電話”，“關於設備”或類似的“關於電話”。將型號和數字複製到下面的相應字段。',\r\n    ja: 'これはAndroidであるため、[設定]またはオプションメニューに移動し、リストの下部までスクロールして、「電話について」、「デバイスについて」などを確認してください。モデル名と番号を以下の対応するフィールドにコピーします。',\r\n    ko: '이것은 Android이므로 설정 또는 옵션 메뉴로 이동하여 목록 하단으로 스크롤하여‘전화 정보’,‘장치 정보’또는 이와 유사한 것을 확인하십시오. 모델 이름과 숫자를 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelIOs: {\r\n    'en-US':\r\n      \"Go to Settings > General > About. To the right of “Model Number,” you'll find the part number. To find the model number (an “A” followed by a number), tap the part number. Copy the Model Number and Name to the corresponding fields below.\",\r\n    de: 'Gehen Sie zu Einstellungen> allgemein> über. Rechts von der „Modellnummer“ finden Sie die Teilenummer. Tippen Sie auf die Teilenummer, um die Modellnummer (ein \"A\" gefolgt von einer Zahl) zu finden. Kopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: \"Accédez à Paramètres> Général> À propos. À droite du «numéro de modèle», vous trouverez le numéro de pièce. Pour trouver le numéro de modèle (un «A» suivi d'un nombre), appuyez sur le numéro de pièce. Copiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.\",\r\n    es: 'Vaya a Configuración> General> Acerca de. A la derecha del \"número de modelo\", encontrará el número de pieza. Para encontrar el número de modelo (una \"A\" seguida de un número), toque el número de pieza. Copie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Vá para Configurações> Geral> Sobre. À direita do \"número do modelo\", você encontrará o número da peça. Para encontrar o número do modelo (um \"A\" seguido por um número), toque no número da peça. Copie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Vai a Impostazioni> Generale> Informazioni. A destra di \"numero di modello\", troverai il numero di parte. Per trovare il numero di modello (una \"A\" seguita da un numero), tocca il numero di parte. Copia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Accesați Setări> General> despre. În dreapta „Numărului modelului”, veți găsi numărul piesei. Pentru a găsi numărul modelului (un „A” urmat de un număr), atingeți numărul piesei. Copiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Przejdź do Ustawienia> Ogólne> O. Po prawej stronie „Numer modelu” znajdziesz numer części. Aby znaleźć numer modelu („A”, a następnie numer), dotknij numeru części. Skopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Перейдите к настройкам> General> О. Справа от «номера модели» вы найдете номер детали. Чтобы найти номер модели («А», за которым следует число), нажмите номер детали. Скопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Գնալ պարամետրեր> Ընդհանուր> մասին. «Մոդելի համարի» աջ կողմում կգտնեք մասի համարը: Մոդելի համարը գտնելու համար («ա» -ին, որին հաջորդում է համարը), թակել մասի համարը: Պատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Siirry kohtaan Asetukset> Yleinen> Tietoja. ”Mallinumero” oikealla puolella löydät osanumeron. Löydä mallinumero (A: n, jota seuraa numero) napauttamalla osanumeroa. Kopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'გადადით პარამეტრებში> ზოგადი> შესახებ. \"მოდელის ნომრის\" მარჯვნივ, თქვენ ნახავთ ნაწილის ნომერს. მოდელის ნომრის მოსაძებნად (\"A\", რომელსაც მოჰყვება ნომერი), შეეხეთ ნაწილის ნომერს. დააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'עבור אל הגדרות> כללי> אודות. מימין ל\"מספר הדגם \", תמצא את מספר החלק. כדי למצוא את מספר הדגם (A \"A\" ואחריו מספר), הקש על מספר החלק. העתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'انتقل إلى الإعدادات> عام> حول. على يمين \"رقم الطراز\" ، ستجد رقم الجزء. للعثور على رقم الطراز (\"A\" متبوعًا برقم) ، اضغط على رقم الجزء. انسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'ترتیبات> عمومی> کے بارے میں جائیں۔ \"ماڈل نمبر\" کے دائیں طرف ، آپ کو حصہ نمبر مل جائے گا۔ ماڈل نمبر (ایک \"A\" کے بعد ایک نمبر کے بعد) تلاش کرنے کے لئے ، حصہ نمبر پر ٹیپ کریں۔ ماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'सेटिंग्स> सामान्य> के बारे में जाएं। \"मॉडल नंबर\" के दाईं ओर, आपको भाग संख्या मिलेगी। मॉडल नंबर (एक संख्या के बाद \"ए\") को खोजने के लिए, भाग संख्या पर टैप करें। मॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'அமைப்புகள்> பொது> பற்றிச் செல்லவும். “மாதிரி எண்” என்ற வலதுபுறத்தில், நீங்கள் பகுதி எண்ணைக் காண்பீர்கள். மாதிரி எண்ணைக் கண்டுபிடிக்க (“ஏ” தொடர்ந்து ஒரு எண்), பகுதி எண்ணைத் தட்டவும். மாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'ക്രമീകരണങ്ങൾ> പൊതുവായ> ഇതിലേക്ക് പോകുക. \"മോഡൽ നമ്പർ\" എന്നതിന്റെ വലതുവശത്ത് നിങ്ങൾ പാർട്ട് നമ്പർ കണ്ടെത്തും. മോഡൽ നമ്പർ കണ്ടെത്താൻ (ഒരു \"ഒരു\" ഒരു നമ്പർ), പാർട്ട് നമ്പർ ടാപ്പുചെയ്യുക. മോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'సెట్టింగులు> జనరల్> గురించి వెళ్ళండి. “మోడల్ నంబర్” యొక్క కుడి వైపున, మీరు పార్ట్ నంబర్‌ను కనుగొంటారు. మోడల్ సంఖ్యను కనుగొనడానికి (సంఖ్య తరువాత “A”), పార్ట్ నంబర్‌ను నొక్కండి. మోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಸೆಟ್ಟಿಂಗ್‌ಗಳು> ಸಾಮಾನ್ಯ> ಬಗ್ಗೆ ಹೋಗಿ. “ಮಾದರಿ ಸಂಖ್ಯೆ” ನ ಬಲಭಾಗದಲ್ಲಿ, ನೀವು ಭಾಗ ಸಂಖ್ಯೆಯನ್ನು ಕಾಣುತ್ತೀರಿ. ಮಾದರಿ ಸಂಖ್ಯೆಯನ್ನು ಕಂಡುಹಿಡಿಯಲು (ಒಂದು ಸಂಖ್ಯೆಯ ನಂತರ “ಎ”), ಭಾಗ ಸಂಖ್ಯೆಯನ್ನು ಟ್ಯಾಪ್ ಮಾಡಿ. ಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'সেটিংস> সাধারণ> সম্পর্কে যান। \"মডেল নম্বর\" এর ডানদিকে আপনি অংশ নম্বরটি পাবেন। মডেল নম্বরটি (একটি \"এ\" এর পরে একটি নম্বর) সন্ধান করতে, অংশ নম্বরটি আলতো চাপুন। নীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Pergi ke Pengaturan> Umum> Tentang. Di sebelah kanan \"nomor model,\" Anda akan menemukan nomor bagian. Untuk menemukan nomor model (\"A\" diikuti oleh nomor), ketuk nomor bagian. Salin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '转到设置>一般>关于。在“型号”的右侧，您会找到零件号。要查找型号（“ A”，然后是一个数字），请点击零件号。将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '轉到設置>一般>關於。在“型號”的右側，您會找到零件號。要查找型號（“ A”，然後是一個數字），請點擊零件號。將型號和名稱複製到下面的相應字段。',\r\n    ja: '[設定]> [一般>]に移動します。 「モデル番号」の右側には、部品番号が見つかります。モデル番号（「A」に続く番号）を見つけるには、部品番号をタップします。モデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '설정> 일반>에 대해 이동하십시오. \"모델 번호\"의 오른쪽에는 부품 번호가 있습니다. 모델 번호 ( \"A\"다음 숫자가 이어지면)를 찾으려면 부품 번호를 누릅니다. 모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelMacOs: {\r\n    'en-US':\r\n      'Go to 🍏 Apple menu>About this Mac>. [Since 2023: At bottom click \"More Info\".] At bottom click \"System Report\". Copy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Gehen Sie zu 🍏 Apple -Menü> zu diesem Mac>. [Seit 2023: Klicken Sie unten auf \"Weitere Informationen\".] Klicken Sie unten auf \"Systembericht\". Kopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: 'Accédez à 🍏 Menu Apple> à propos de ce Mac>. [Depuis 2023: en bas, cliquez sur \"Plus d\\'informations\".] En bas, cliquez sur \"Rapport système\". Copiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.',\r\n    es: 'Vaya a 🍏 Menú Apple> sobre esta Mac>. [Desde 2023: al final, haga clic en \"más información\".] Al hacer clic inferior \"Informe del sistema\". Copie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Vá para 🍏 Menu da Apple> sobre este Mac>. [Desde 2023: na parte inferior, clique em \"Mais informações\".] No fundo, clique em \"Relatório do sistema\". Copie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Vai a 🍏 menu Apple> Informazioni su questo Mac>. [Dal 2023: in basso fai clic su \"Maggiori informazioni\".] Al termine \"Rapporto di sistema\". Copia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Accesați 🍏 meniu Apple> despre acest Mac>. [Din 2023: în partea de jos faceți clic pe „Mai multe informații”.] În jos, faceți clic pe „Raport de sistem”. Copiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Przejdź do 🍏 Menu Apple> O tym Mac>. [Od 2023 r.: Na dole kliknij „Więcej informacji”.] Na dole kliknij „Raport systemowy”. Skopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Перейдите в 🍏 Apple Menu> об этом Mac>. [С 2023 года: при щелчке «Подробнее».] Внизу «Системный отчет». Скопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Գնալ 🍏 Apple Menu, այս Mac- ի մասին>: [2023 թվականից ի վեր. Ներքեւում կտտացրեք «Լրացուցիչ տեղեկություններ».] Ստորին սեղմեք «Համակարգի հաշվետվությունը»: Պատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Siirry osoitteeseen 🍏 Apple -valikko> Tästä Mac>. . Kopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'გადადით 🍏 Apple მენიუში> ამ Mac- ის შესახებ>. [2023 წლიდან: ბოლოში დააჭირეთ ღილაკს \"მეტი ინფორმაცია\".] ქვედა დაჭერით \"სისტემის ანგარიში\". დააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'עבור אל 🍏 תפריט Apple> אודות Mac>. [מאז 2023: בתחתית לחץ על \"מידע נוסף\".] בתחתית לחץ על \"דוח מערכת\". העתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'انتقل إلى 🍏 Apple Menu> حول هذا Mac>. [منذ عام 2023: في الأسفل ، انقر فوق \"مزيد من المعلومات\".] في أسفل \"تقرير النظام\". انسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'اس میک کے بارے میں 🍏 ایپل مینو> پر جائیں۔ [چونکہ 2023: نیچے \"مزید معلومات\" پر کلک کریں۔] نیچے \"سسٹم کی رپورٹ\" پر کلک کریں۔ ماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'इस मैक के बारे में 🍏 Apple मेनू> पर जाएं। [२०२३ के बाद से: \"अधिक जानकारी\" पर क्लिक करें।] नीचे \"सिस्टम रिपोर्ट\" पर क्लिक करें। मॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'இந்த மேக் பற்றி 🍏 ஆப்பிள் மெனு> க்குச் செல்லவும்>. [2023 முதல்: கீழே \"மேலும் தகவல்\" என்பதைக் கிளிக் செய்க.] கீழே \"கணினி அறிக்கை\" என்பதைக் கிளிக் செய்க. மாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'ഈ മാക്കിന്റെ> കുറിച്ച് 🍏 ആപ്പിൾ മെനു> ലേക്ക് പോകുക. [2023 മുതൽ: ചുവടെയുള്ള \"കൂടുതൽ വിവരങ്ങൾ\" ക്ലിക്കുചെയ്യുക.] ചുവടെ \"സിസ്റ്റം റിപ്പോർട്ട്\" ക്ലിക്കുചെയ്യുക. മോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'ఈ Mac> గురించి 🍏 ఆపిల్ మెనూ> కి వెళ్ళండి>. [2023 నుండి: దిగువన \"మరింత సమాచారం\" క్లిక్ చేయండి.] దిగువ \"సిస్టమ్ రిపోర్ట్\" క్లిక్ చేయండి. మోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಈ ಮ್ಯಾಕ್> ಬಗ್ಗೆ 🍏 ಆಪಲ್ ಮೆನು> ಗೆ ಹೋಗಿ. [2023 ರಿಂದ: ಕೆಳಭಾಗದಲ್ಲಿ \"ಹೆಚ್ಚಿನ ಮಾಹಿತಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ.] ಬಾಟಮ್ \"ಸಿಸ್ಟಮ್ ವರದಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ. ಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'এই ম্যাক> সম্পর্কে 🍏 অ্যাপল মেনু> এ যান। [2023 সাল থেকে: নীচে \"আরও তথ্য\" ক্লিক করুন]] নীচে \"সিস্টেম রিপোর্ট\" ক্লিক করুন। নীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Buka 🍏 menu apel> tentang mac ini>. [Sejak 2023: Di klik bawah \"Info lebih lanjut\".] Di bawah klik \"Laporan Sistem\". Salin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '转到Apple菜单>有关此Mac>。 [自2023年以来：在底部单击“更多信息”。]底部单击“系统报告”。将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '轉到Apple菜單>有關此Mac>。 [自2023年以來：在底部單擊“更多信息”。]底部單擊“系統報告”。將型號和名稱複製到下面的相應字段。',\r\n    ja: 'このMac>については、Appleメニュー>に移動します。 [2023年以降：下部で「詳細情報」をクリックします。]下部で「システムレポート」をクリックします。モデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '이 Mac에 대한 🍏 Apple 메뉴>로 이동하십시오. [2023 년 이후 : 하단에서 \"추가 정보\"를 클릭하십시오.] 하단에서 \"시스템 보고서\"를 클릭하십시오. 모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelWindows: {\r\n    'en-US':\r\n      'Since this is Windows,\\nOpen Start.\\nSearch for System Information and click the top result to open the app.\\nClick on System Summary.\\nLook under the \"System Model\" field.\\nCopy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Da es sich um Windows handelt,\\nOffener Start.\\nSuchen Sie nach Systeminformationen und klicken Sie auf das Top -Ergebnis, um die App zu öffnen.\\nKlicken Sie auf Systemzusammenfassung.\\nSchauen Sie unter das Feld \"Systemmodell\".\\nKopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: 'Puisque c\\'est Windows,\\nDémarrage ouvert.\\nRecherchez des informations système et cliquez sur le résultat supérieur pour ouvrir l\\'application.\\nCliquez sur le résumé du système.\\nRegardez dans le champ \"Modèle système\".\\nCopiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.',\r\n    es: 'Dado que se trata de Windows,\\nInicio abierto.\\nBusque información del sistema y haga clic en el resultado superior para abrir la aplicación.\\nHaga clic en el resumen del sistema.\\nMire en el campo \"Modelo de sistema\".\\nCopie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Como este é o Windows,\\nStart aberto.\\nPesquise informações do sistema e clique no resultado superior para abrir o aplicativo.\\nClique no resumo do sistema.\\nOlhe no campo \"Modelo do sistema\".\\nCopie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Dal momento che questa è Windows,\\nAperto.\\nCerca informazioni sul sistema e fai clic sul risultato superiore per aprire l\\'app.\\nFai clic sul riepilogo del sistema.\\nGuarda sotto il campo \"Modello di sistema\".\\nCopia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Deoarece acesta este Windows,\\nDeschideți început.\\nCăutați informații despre sistem și faceți clic pe rezultatul de sus pentru a deschide aplicația.\\nFaceți clic pe rezumatul sistemului.\\nPriviți sub câmpul „Model de sistem”.\\nCopiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Ponieważ jest to Windows,\\nOtwarty start.\\nWyszukaj informacje systemowe i kliknij górny wynik, aby otworzyć aplikację.\\nKliknij podsumowanie systemu.\\nSpójrz w pole „Model systemu”.\\nSkopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Поскольку это окна,\\nОткрытый старт.\\nПоиск системной информации и нажмите верхний результат, чтобы открыть приложение.\\nНажмите на резюме системы.\\nПосмотрите по поле «Системная модель».\\nСкопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Քանի որ սա Windows- ն է,\\nԲաց սկիզբ:\\nՈրոնեք համակարգի տեղեկատվությունը եւ կտտացրեք հավելվածը բացելու լավագույն արդյունքը:\\nԿտտացրեք համակարգի ամփոփագիրը:\\nՆայեք «Համակարգի մոդել» դաշտի տակ:\\nՊատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Koska tämä on Windows,\\nAvaa alku.\\nEtsi järjestelmätiedot ja napsauta ylhäältä tulosta avataksesi sovelluksen.\\nNapsauta Järjestelmäyhteenveto.\\nKatso \"Järjestelmämalli\" -kentän alla.\\nKopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'რადგან ეს არის Windows,\\nგახსენით დაწყება.\\nმოძებნეთ სისტემის ინფორმაცია და დააჭირეთ ზედა შედეგს, რომ გახსნათ აპლიკაცია.\\nდააჭირეთ სისტემის რეზიუმეს.\\nგადახედეთ \"სისტემის მოდელის\" ველს.\\nდააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'מכיוון שזה חלונות,\\nהתחלה פתוחה.\\nחפש מידע על המערכת ולחץ על התוצאה העליונה כדי לפתוח את האפליקציה.\\nלחץ על סיכום המערכת.\\nהסתכל תחת שדה \"מודל המערכת\".\\nהעתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'لأن هذا هو Windows ،\\nبداية مفتوحة.\\nابحث عن معلومات النظام وانقر فوق النتيجة العليا لفتح التطبيق.\\nانقر على ملخص النظام.\\nانظر تحت حقل \"نموذج النظام\".\\nانسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'چونکہ یہ ونڈوز ہے ،\\nکھلی شروعات۔\\nسسٹم کی معلومات کے لئے تلاش کریں اور ایپ کو کھولنے کے لئے اوپر والے نتائج پر کلک کریں۔\\nسسٹم سمری پر کلک کریں۔\\n\"سسٹم ماڈل\" فیلڈ کے تحت دیکھو۔\\nماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'चूंकि यह विंडोज है,\\nओपन स्टार्ट।\\nसिस्टम जानकारी के लिए खोजें और ऐप खोलने के लिए शीर्ष परिणाम पर क्लिक करें।\\nसिस्टम सारांश पर क्लिक करें।\\n\"सिस्टम मॉडल\" फ़ील्ड के नीचे देखें।\\nमॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'இது விண்டோஸ் என்பதால்,\\nதிறந்த தொடக்க.\\nகணினி தகவல்களைத் தேடி, பயன்பாட்டைத் திறக்க சிறந்த முடிவைக் கிளிக் செய்க.\\nகணினி சுருக்கத்தைக் கிளிக் செய்க.\\n\"கணினி மாதிரி\" புலத்தின் கீழ் பாருங்கள்.\\nமாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'ഇതൊരു വിൻഡോകൾ ആയതിനാൽ,\\nതുറന്ന ആരംഭം.\\nസിസ്റ്റം വിവരങ്ങൾക്കായി തിരയുക അപ്ലിക്കേഷൻ തുറക്കുന്നതിന് ഉയർന്ന ഫലത്തിൽ ക്ലിക്കുചെയ്യുക.\\nസിസ്റ്റം സംഗ്രഹത്തിൽ ക്ലിക്കുചെയ്യുക.\\n\"സിസ്റ്റം മോഡൽ\" ഫീൽഡിന് കീഴിൽ നോക്കുക.\\nമോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'ఇది విండోస్ కాబట్టి,\\nప్రారంభం ప్రారంభించండి.\\nసిస్టమ్ సమాచారం కోసం శోధించండి మరియు అనువర్తనాన్ని తెరవడానికి టాప్ ఫలితాన్ని క్లిక్ చేయండి.\\nసిస్టమ్ సారాంశంపై క్లిక్ చేయండి.\\n\"సిస్టమ్ మోడల్\" ఫీల్డ్ క్రింద చూడండి.\\nమోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಇದು ಕಿಟಕಿಗಳಾಗಿರುವುದರಿಂದ,\\nಪ್ರಾರಂಭ ಪ್ರಾರಂಭ.\\nಸಿಸ್ಟಮ್ ಮಾಹಿತಿಗಾಗಿ ಹುಡುಕಿ ಮತ್ತು ಅಪ್ಲಿಕೇಶನ್ ತೆರೆಯಲು ಉನ್ನತ ಫಲಿತಾಂಶವನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.\\nಸಿಸ್ಟಮ್ ಸಾರಾಂಶವನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.\\n\"ಸಿಸ್ಟಮ್ ಮಾಡೆಲ್\" ಕ್ಷೇತ್ರದ ಅಡಿಯಲ್ಲಿ ನೋಡಿ.\\nಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'যেহেতু এটি উইন্ডোজ,\\nখোলা শুরু।\\nসিস্টেমের তথ্য অনুসন্ধান করুন এবং অ্যাপটি খুলতে শীর্ষ ফলাফলটি ক্লিক করুন।\\nসিস্টেমের সংক্ষিপ্তসার ক্লিক করুন।\\n\"সিস্টেম মডেল\" ক্ষেত্রের নীচে দেখুন।\\nনীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Karena ini Windows,\\nBuka Mulai.\\nCari informasi sistem dan klik hasil teratas untuk membuka aplikasi.\\nKlik Ringkasan Sistem.\\nLihat di bawah bidang \"Model Sistem\".\\nSalin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '由于这是Windows，\\n开头。\\n搜索系统信息，然后单击顶部结果以打开应用程序。\\n单击系统摘要。\\n在“系统模型”字段下查看。\\n将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '由於這是Windows，\\n開頭。\\n搜索系統信息，然後單擊頂部結果以打開應用程序。\\n單擊系統摘要。\\n在“系統模型”字段下查看。\\n將型號和名稱複製到下面的相應字段。',\r\n    ja: 'これはWindowsなので、\\n開始を開始します。\\nシステム情報を検索し、上位の結果をクリックしてアプリを開きます。\\nシステムの概要をクリックします。\\n「システムモデル」フィールドの下を見てください。\\nモデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '이것은 Windows이므로\\n시작 시작.\\n시스템 정보를 검색하고 상단 결과를 클릭하여 앱을 엽니 다.\\n시스템 요약을 클릭하십시오.\\n\"시스템 모델\"필드 아래를보십시오.\\n모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelSamsung: {\r\n    'en-US':\r\n      'Check the back of the handset. Samsung includes the model number at the very bottom of the device - underneath where it reads \"Designed & Engineered by Samsung\". Copy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Überprüfen Sie die Rückseite des Mobilteils. Samsung enthält die Modellnummer ganz unten im Gerät - darunter, wo sie \"Entworfen und entwickelt von Samsung\" liest. Kopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: \"Vérifiez l'arrière du combiné. Samsung comprend le numéro de modèle tout en bas de l'appareil - sous l'endroit où il se lit \\\"conçu et conçu par Samsung\\\". Copiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.\",\r\n    es: 'Revise la parte posterior del teléfono. Samsung incluye el número de modelo en la parte inferior del dispositivo, debajo donde lee \"diseñado y diseñado por Samsung\". Copie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Verifique a parte traseira do aparelho. A Samsung inclui o número do modelo na parte inferior do dispositivo - embaixo, onde diz \"Projetado e projetado pela Samsung\". Copie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Controllare il retro del telefono. Samsung include il numero di modello nella parte inferiore del dispositivo - sotto dove legge \"progettato e progettato da Samsung\". Copia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Verificați partea din spate a receptorului. Samsung include numărul modelului chiar în partea de jos a dispozitivului - dedesubt unde citește „Proiectat și proiectat de Samsung”. Copiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Sprawdź tył słuchawki. Samsung zawiera numer modelu na samym dole urządzenia - pod tym, gdzie odczytuje „zaprojektowany i zaprojektowany przez Samsung”. Skopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Проверьте заднюю часть телефона. Samsung включает номер модели на самом нижнем устройстве - под тем местом, где он читает «разработан и разработан Samsung». Скопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Ստուգեք հեռախոսի հետեւը: Samsung- ը պարունակում է մոդելի համարը սարքի հենց ներքեւում `տակը, որտեղ կարդում է« նախագծված եւ ինժեներական Samsung »- ը: Պատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Tarkista luurin takaosa. Samsung sisältää mallinumeron laitteen alaosassa - alla, jossa se lukee \"Suunniteltu ja suunnitellut Samsung\". Kopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'შეამოწმეთ ტელეფონის უკანა მხარე. Samsung მოიცავს მოდელის ნომერს მოწყობილობის ბოლოში - ქვეშ, სადაც იგი კითხულობს \"შექმნილია და ინჟინერია Samsung\". დააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'בדוק את החלק האחורי של המכשיר. סמסונג כוללת את מספר הדגם בתחתית המכשיר - מתחת למקום בו הוא קורא \"מעוצב והנדסה על ידי סמסונג\". העתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'تحقق من الجزء الخلفي من الهاتف. تتضمن Samsung رقم الطراز في أسفل الجهاز - أسفل المكان الذي يقرأ فيه \"مصمم وهندسة بواسطة Samsung\". انسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'ہینڈسیٹ کے پچھلے حصے کو چیک کریں۔ سیمسنگ میں ڈیوائس کے بالکل نیچے ماڈل نمبر شامل ہوتا ہے - اس کے نیچے جہاں \"سیمسنگ کے ذریعہ ڈیزائن کیا ہوا اور انجنیئر\" پڑھتا ہے۔ ماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'हैंडसेट के पीछे की जाँच करें। सैमसंग में डिवाइस के बहुत नीचे मॉडल नंबर शामिल है - जहां यह \"सैमसंग द्वारा डिज़ाइन और इंजीनियर\" पढ़ता है। मॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'கைபேசியின் பின்புறத்தை சரிபார்க்கவும். சாம்சங் சாதனத்தின் அடிப்பகுதியில் உள்ள மாதிரி எண்ணை உள்ளடக்கியது - அது \"சாம்சங் வடிவமைத்து வடிவமைக்கப்பட்டுள்ளது\" என்று படிக்கும் இடத்திற்கு அடியில். மாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'ഹാൻഡ്സെറ്റിന്റെ പിൻഭാഗം പരിശോധിക്കുക. ഉപകരണത്തിന്റെ ഏറ്റവും താഴെയുള്ള മോഡൽ നമ്പർ സാംസങ്ങിൽ ഉൾപ്പെടുന്നു - ഇത് \"രൂപകൽപ്പന ചെയ്യുകയും എഞ്ചിനീയറിംഗ് ചെയ്യുകയും ചെയ്യുന്നു\". മോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'హ్యాండ్‌సెట్ వెనుక భాగాన్ని తనిఖీ చేయండి. శామ్సంగ్ పరికరం యొక్క దిగువన ఉన్న మోడల్ నంబర్‌ను కలిగి ఉంటుంది - ఇక్కడ \"శామ్సంగ్ చేత రూపొందించబడిన మరియు ఇంజనీరింగ్\" అని చదివే కింద. మోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಹ್ಯಾಂಡ್‌ಸೆಟ್‌ನ ಹಿಂಭಾಗವನ್ನು ಪರಿಶೀಲಿಸಿ. ಸ್ಯಾಮ್‌ಸಂಗ್ ಸಾಧನದ ಅತ್ಯಂತ ಕೆಳಭಾಗದಲ್ಲಿರುವ ಮಾದರಿ ಸಂಖ್ಯೆಯನ್ನು ಒಳಗೊಂಡಿದೆ - ಅಲ್ಲಿ \"ಸ್ಯಾಮ್‌ಸಂಗ್‌ನಿಂದ ವಿನ್ಯಾಸಗೊಳಿಸಲಾಗಿದೆ ಮತ್ತು ವಿನ್ಯಾಸಗೊಳಿಸಲಾಗಿದೆ\" ಎಂದು ಓದುತ್ತದೆ. ಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'হ্যান্ডসেটের পিছনে পরীক্ষা করুন। স্যামসুং ডিভাইসের একেবারে নীচে মডেল নম্বর অন্তর্ভুক্ত করে - যেখানে এটি \"স্যামসাং দ্বারা ডিজাইন করা এবং ইঞ্জিনিয়ারড\" পড়ার নীচে রয়েছে। নীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Periksa bagian belakang handset. Samsung mencakup nomor model di bagian paling bawah perangkat - di bawahnya di mana ia membaca \"dirancang & direkayasa oleh Samsung\". Salin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '检查手机的背面。三星包括设备底部的型号 - 在其读取“三星设计和设计”的下方。将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '檢查手機的背面。三星包括設備底部的型號 - 在其讀取“三星設計和設計”的下方。將型號和名稱複製到下面的相應字段。',\r\n    ja: '携帯電話の背面を確認してください。 Samsungには、デバイスの最下部にモデル番号が含まれています。その下には、「Samsungが設計および設計した」と書かれています。モデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '핸드셋의 뒷면을 확인하십시오. 삼성에는 장치의 바닥에 모델 번호가 포함되어 있습니다. 그 아래에는 \"삼성이 설계 및 엔지니어링 된\"이 읽습니다. 모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelGoogle: {\r\n    'en-US':\r\n      'Since this is a Google Pixel phone,\\nGo to Settings.\\n[Skip if running Android 10.] Tap on Systems.\\nTap About phone.\\nTap Regulatory labels.\\nA pop up will show the model.\\nCopy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Da dies ein Google -Pixel -Telefon ist,\\nGehe zu den Einstellungen.\\n[Überspringen Sie, wenn Android 10.] auf Systeme tippen.\\nTippen Sie auf Telefon.\\nTippen Sie auf Regulierungsetiketten.\\nEin Pop -up zeigt das Modell.\\nKopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: \"Puisqu'il s'agit d'un téléphone Google Pixel,\\nAller aux paramètres.\\n[Sauter si l'exécution d'Android 10.] Appuyez sur les systèmes.\\nAppuyez sur le téléphone.\\nAppuyez sur les étiquettes de réglementation.\\nUn pop-up montrera le modèle.\\nCopiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.\",\r\n    es: 'Dado que este es un teléfono de Google Pixel,\\nIr a la configuración.\\n[Omita si ejecuta Android 10.] Toque los sistemas.\\nToque sobre el teléfono.\\nToque etiquetas regulatorias.\\nUna ventana emergente mostrará el modelo.\\nCopie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Como este é um telefone do Google Pixel,\\nVá para as configurações.\\n[Pule se a execução do Android 10.] Toque em sistemas.\\nToque sobre o telefone.\\nToque em etiquetas regulatórias.\\nUm pop -up mostrará o modelo.\\nCopie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Dal momento che questo è un telefono Google Pixel,\\nVai alle impostazioni.\\n[Salta se eseguire Android 10.] Tocca Systems.\\nTocca il telefono.\\nTocca Etichette normative.\\nUn pop -up mostrerà il modello.\\nCopia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Deoarece acesta este un telefon Google Pixel,\\nMergi la Setari.\\n[Săriți dacă rulați Android 10.] Atingeți sisteme.\\nAtingeți telefonul.\\nAtingeți etichetele de reglementare.\\nUn pop -up va arăta modelul.\\nCopiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Ponieważ jest to telefon Google Pixel,\\nPrzejdź do ustawień.\\n[Pomiń, jeśli działa na Androida 10.] Stuknij systemy.\\nDotknij telefonu.\\nStuknij etykiety regulacyjne.\\nPop -up pokaże model.\\nSkopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Поскольку это телефон Google Pixel,\\nПерейдите в настройки.\\n[Пропустить, если запустить Android 10.] Нажмите на системы.\\nНажмите на телефон.\\nНажмите на нормативные этикетки.\\nВсплывающее окно покажет модель.\\nСкопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Քանի որ սա Google Pixel հեռախոս է,\\nԳնացեք պարամետրեր:\\n[Բաց թողնել, եթե վազում է Android 10.] Հպեք համակարգերին:\\nՀպեք հեռախոսի մասին:\\nՀպեք կարգավորիչ պիտակներ:\\nՄի փոփը ցույց կտա մոդելը:\\nՊատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Koska tämä on Google Pixel -puhelin,\\nMene asetuksiin.\\n[Ohita, jos suoritat Android 10.] Napauta järjestelmiä.\\nNapauta puhelimesta.\\nNapauta sääntelymerkkejä.\\nPop UP näyttää mallin.\\nKopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'რადგან ეს არის Google Pixel ტელეფონი,\\nგადადით პარამეტრებში.\\n[გამოტოვეთ, თუ აწარმოებს Android 10.] შეეხეთ სისტემებს.\\nშეეხეთ ტელეფონს.\\nშეეხეთ მარეგულირებელი ეტიკეტები.\\nPop -up აჩვენებს მოდელს.\\nდააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'מכיוון שמדובר בטלפון של גוגל פיקסל,\\nלך להגדרות.\\n[דלג אם הפעלת אנדרואיד 10.] הקש על מערכות.\\nהקש על טלפון.\\nהקש על תוויות רגולציה.\\nפופ -אפ יציג את הדגם.\\nהעתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'نظرًا لأن هذا هاتف Google Pixel ،\\nاذهب للاعدادات.\\n[تخطي إذا كان تشغيل Android 10.] اضغط على الأنظمة.\\nاضغط على الهاتف.\\nاضغط على الملصقات التنظيمية.\\nستظهر المنبثقة النموذج.\\nانسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'چونکہ یہ گوگل پکسل فون ہے ،\\nترتیبات پر جائیں۔\\n[اگر اینڈروئیڈ 10 چل رہا ہو تو چھوڑیں۔] سسٹمز پر ٹیپ کریں۔\\nفون کے بارے میں ٹیپ کریں۔\\nریگولیٹری لیبل کو تھپتھپائیں۔\\nایک پاپ اپ ماڈل کو دکھائے گا۔\\nماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'चूंकि यह एक Google पिक्सेल फोन है,\\nसेटिंग्स में जाओ।\\n[Android 10. चलाने पर छोड़ दें।] सिस्टम पर टैप करें।\\nफोन के बारे में टैप करें।\\nनियामक लेबल टैप करें।\\nएक पॉप अप मॉडल दिखाएगा।\\nमॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'இது கூகிள் பிக்சல் தொலைபேசி என்பதால்,\\nஅமைப்புகளுக்குச் செல்லுங்கள்.\\n[Android 10 ஐ இயக்கினால் தவிர்க்கவும்.] கணினிகளைத் தட்டவும்.\\nதொலைபேசியைப் பற்றி தட்டவும்.\\nஒழுங்குமுறை லேபிள்களைத் தட்டவும்.\\nஒரு பாப் அப் மாதிரியைக் காண்பிக்கும்.\\nமாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'ഇതൊരു ഗൂഗിൾ പിക്സൽ ഫോണായതിനാൽ,\\nക്രമീകരണങ്ങളിലേക്ക് പോകുക.\\n[Android 10 പ്രവർത്തിപ്പിക്കുകയാണെങ്കിൽ ഒഴിവാക്കുക.] സിസ്റ്റങ്ങളിൽ ടാപ്പുചെയ്യുക.\\nഫോണിനെക്കുറിച്ച് ടാപ്പുചെയ്യുക.\\nറെഗുലേറ്ററി ലേബലുകൾ ടാപ്പുചെയ്യുക.\\nഒരു പോപ്പ് അപ്പ് മോഡൽ കാണിക്കും.\\nമോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'ఇది గూగుల్ పిక్సెల్ ఫోన్ కాబట్టి,\\nసెట్టింగులకు వెళ్లండి.\\n[ఆండ్రాయిడ్ 10 ను నడుపుతుంటే దాటవేయండి.] సిస్టమ్‌లపై నొక్కండి.\\nఫోన్ గురించి నొక్కండి.\\nరెగ్యులేటరీ లేబుళ్ళను నొక్కండి.\\nపాప్ అప్ మోడల్‌ను చూపుతుంది.\\nమోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ಇದು ಗೂಗಲ್ ಪಿಕ್ಸೆಲ್ ಫೋನ್ ಆಗಿರುವುದರಿಂದ,\\nಸೆಟ್ಟಿಂಗ್‌ಗಳಿಗೆ ಹೋಗಿ.\\n[ಆಂಡ್ರಾಯ್ಡ್ 10 ಅನ್ನು ಚಾಲನೆ ಮಾಡಿದರೆ ಬಿಟ್ಟುಬಿಡಿ.] ವ್ಯವಸ್ಥೆಗಳನ್ನು ಟ್ಯಾಪ್ ಮಾಡಿ.\\nಫೋನ್ ಬಗ್ಗೆ ಟ್ಯಾಪ್ ಮಾಡಿ.\\nನಿಯಂತ್ರಕ ಲೇಬಲ್‌ಗಳನ್ನು ಟ್ಯಾಪ್ ಮಾಡಿ.\\nಪಾಪ್ ಅಪ್ ಮಾದರಿಯನ್ನು ತೋರಿಸುತ್ತದೆ.\\nಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'যেহেতু এটি একটি গুগল পিক্সেল ফোন,\\nসেটিংস এ যান.\\n[অ্যান্ড্রয়েড 10 চালানো যদি এড়িয়ে যান]] সিস্টেমে আলতো চাপুন।\\nফোন সম্পর্কে আলতো চাপুন।\\nনিয়ন্ত্রক লেবেল আলতো চাপুন।\\nএকটি পপ আপ মডেল প্রদর্শন করবে।\\nনীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Karena ini adalah ponsel Google Pixel,\\nPergi ke pengaturan.\\n[Lewati jika menjalankan Android 10.] Ketuk sistem.\\nKetuk Tentang Telepon.\\nKetuk Label Pengatur.\\nPop up akan menampilkan model.\\nSalin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '由于这是一款Google Pixel手机，\\n前往设置。\\n[如果运行Android 10，请跳过。]点击系统。\\n点击有关电话。\\n点击监管标签。\\n弹出窗口将显示模型。\\n将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '由於這是一款Google Pixel手機，\\n前往設置。\\n[如果運行Android 10，請跳過。]點擊系統。\\n點擊有關電話。\\n點擊監管標籤。\\n彈出窗口將顯示模型。\\n將型號和名稱複製到下面的相應字段。',\r\n    ja: 'これはグーグルピクセルの電話だから、\\n設定に移動。\\n[Android 10を実行している場合はスキップします。]システムをタップします。\\n電話をタップします。\\n規制ラベルをタップします。\\nポップアップがモデルを表示します。\\nモデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '이것은 Google Pixel 전화이므로\\n설정으로 바로 가기.\\n[Android 10을 실행하는 경우 건너 뜁니다.] 시스템을 탭합니다.\\n전화에 대해 탭하십시오.\\n규제 라벨을 누릅니다.\\n팝업은 모델을 보여줄 것입니다.\\n모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelLinux: {\r\n    'en-US':\r\n      'The model is found in different ways on different Linux systems. One is to look at the file\\n/sys/devices/virtual/dmi/id/product_name\\nCopy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Das Modell wird auf verschiedenen Linux -Systemen auf unterschiedliche Weise gefunden. Eine ist, die Datei zu betrachten\\n/sys/devices/virtual/dmi/id/product_name\\nKopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: \"Le modèle se trouve de différentes manières sur différents systèmes Linux. L'un est de regarder le fichier\\n/ sys / périphériques / virtual / dmi / id / product_name\\nCopiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.\",\r\n    es: 'El modelo se encuentra de diferentes maneras en diferentes sistemas de Linux. Uno es mirar el archivo\\n/sys/disposites/virtual/dmi/id/product_name\\nCopie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'O modelo é encontrado de maneiras diferentes em diferentes sistemas Linux. Um é olhar para o arquivo\\n/sys/dispositivos/virtual/dmi/id/product_name\\nCopie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Il modello si trova in diversi modi su diversi sistemi Linux. Uno è guardare il file\\n/sys/dispositivi/virtuale/dmi/id/product_name\\nCopia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Modelul se găsește în moduri diferite pe diferite sisteme Linux. Unul este să te uiți la fișier\\n/Sys/Devices/Virtual/DMI/ID/Product_Name\\nCopiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Model znajduje się na różne sposoby w różnych systemach Linux. Jednym z nich jest spojrzenie na plik\\n/sys/devices/virtual/dmi/id/produkt_name\\nSkopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Модель находится по -разному в разных системах Linux. Один из них - посмотреть на файл\\n/sys/devices/virtual/dmi/id/product_name\\nСкопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Մոդելը հայտնաբերվում է տարբեր Linux համակարգերի տարբեր եղանակներով: Մեկը նայում է ֆայլին\\n/ Sys / սարքեր / վիրտուալ / DMI / ID / Product_Name\\nՊատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Malli löytyy eri tavoin erilaisissa Linux -järjestelmissä. Yksi on tarkastella tiedostoa\\n/sys/laitteet/virtuaali/dmi/id/tuote_nimi\\nKopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'მოდელი სხვადასხვა გზით გვხვდება სხვადასხვა Linux სისტემაზე. ერთი არის ფაილის გადახედვა\\n/sys/მოწყობილობები/ვირტუალური/dmi/id/product_name\\nდააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'המודל נמצא בדרכים שונות במערכות לינוקס שונות. האחד הוא להסתכל על הקובץ\\n/sys/התקנים/וירטואלי/dmi/id/product_name\\nהעתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'تم العثور على النموذج بطرق مختلفة على أنظمة Linux المختلفة. واحد هو أن ننظر إلى الملف\\n/sys/devices/virtual/dmi/id/product_name\\nانسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'ماڈل مختلف لینکس سسٹم پر مختلف طریقوں سے پایا جاتا ہے۔ ایک فائل کو دیکھنا ہے\\n/SYS/آلات/ورچوئل/DMI/ID/product_name\\nماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'मॉडल अलग -अलग लिनक्स सिस्टम पर अलग -अलग तरीकों से पाया जाता है। एक फ़ाइल को देखना है\\n/sys/डिवाइस/वर्चुअल/dmi/id/product_name\\nमॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'மாதிரி வெவ்வேறு லினக்ஸ் அமைப்புகளில் வெவ்வேறு வழிகளில் காணப்படுகிறது. ஒன்று கோப்பைப் பார்ப்பது\\n/sys/சாதனங்கள்/மெய்நிகர்/dmi/id/product_name\\nமாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'വ്യത്യസ്ത ലിനക്സ് സിസ്റ്റങ്ങളിൽ മോഡൽ വ്യത്യസ്ത രീതികളിൽ കാണപ്പെടുന്നു. ഒന്ന് ഫയൽ നോക്കുക എന്നതാണ്\\n/ sys / ഉപകരണങ്ങൾ / വെർച്വൽ / ഡിഎംഐ / ഐഡി / product_name\\nമോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'మోడల్ వేర్వేరు లైనక్స్ వ్యవస్థలపై వివిధ మార్గాల్లో కనుగొనబడింది. ఒకటి ఫైల్ చూడటం\\n/sys/పరికరాలు/వర్చువల్/DMI/ID/ఉత్పత్తి_పేరు\\nమోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ವಿಭಿನ್ನ ಲಿನಕ್ಸ್ ವ್ಯವಸ್ಥೆಗಳಲ್ಲಿ ಈ ಮಾದರಿಯು ವಿಭಿನ್ನ ರೀತಿಯಲ್ಲಿ ಕಂಡುಬರುತ್ತದೆ. ಒಂದು ಫೈಲ್ ಅನ್ನು ನೋಡುವುದು\\n/sys/ಸಾಧನಗಳು/ವರ್ಚುವಲ್/DMI/ID/product_name\\nಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'মডেলটি বিভিন্ন লিনাক্স সিস্টেমে বিভিন্ন উপায়ে পাওয়া যায়। একটি ফাইল তাকান\\n/সিস/ডিভাইস/ভার্চুয়াল/ডিএমআই/আইডি/পণ্য_নাম\\nনীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Model ini ditemukan dengan cara yang berbeda pada sistem Linux yang berbeda. Salah satunya adalah melihat file tersebut\\n/sys/perangkat/virtual/dmi/id/product_name\\nSalin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '该模型在不同的Linux系统上以不同的方式找到。一个是查看文件\\n/sys/devices/virtual/dmi/id/product_name\\n将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '該模型在不同的Linux系統上以不同的方式找到。一個是查看文件\\n/sys/devices/virtual/dmi/id/product_name\\n將型號和名稱複製到下面的相應字段。',\r\n    ja: 'このモデルは、異なるLinuxシステムでさまざまな方法で見つかります。 1つはファイルを見ることです\\n/sys/devices/virtual/dmi/id/product_name\\nモデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: '이 모델은 다른 Linux 시스템에서 다른 방식으로 발견됩니다. 하나는 파일을 보는 것입니다\\n/SYS/장치/가상/DMI/ID/Product_Name\\n모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_FindModelMacBook: {\r\n    'en-US':\r\n      'You can find your MacBook model number printed on the bottom of your MacBook. It starts with the letter A followed by 4 numbers. Copy the Model Number and Name to the corresponding fields below.',\r\n    de: 'Sie finden Ihre MacBook -Modellnummer am unteren Rand Ihres MacBooks. Es beginnt mit dem Buchstaben A, gefolgt von 4 Zahlen. Kopieren Sie die Modellnummer und den Namen in die entsprechenden Felder unten.',\r\n    fr: 'Vous pouvez trouver votre numéro de modèle MacBook imprimé en bas de votre MacBook. Il commence par la lettre A suivie de 4 numéros. Copiez le numéro de modèle et le nom dans les champs correspondants ci-dessous.',\r\n    es: 'Puede encontrar su número de modelo MacBook impreso en la parte inferior de su MacBook. Comienza con la letra A seguida de 4 números. Copie el número de modelo y el nombre a los campos correspondientes a continuación.',\r\n    pt: 'Você pode encontrar o número do modelo MacBook impresso na parte inferior do seu MacBook. Começa com a letra A seguida por 4 números. Copie o número do modelo e o nome para os campos correspondentes abaixo.',\r\n    it: 'Puoi trovare il tuo numero di modello MacBook stampato in fondo al tuo MacBook. Inizia con la lettera una seguita da 4 numeri. Copia il numero di modello e il nome nei campi corrispondenti di seguito.',\r\n    ro: 'Puteți găsi numărul modelului MacBook tipărit în partea de jos a MacBook -ului. Începe cu litera A urmată de 4 numere. Copiați numărul și numele modelului în câmpurile corespunzătoare de mai jos.',\r\n    pl: 'Możesz znaleźć numer modelu MacBooka wydrukowany na dole MacBooka. Zaczyna się od litery A, a następnie 4 liczby. Skopiuj numer modelu i nazwę do odpowiednich pól poniżej.',\r\n    ru: 'Вы можете найти свой номер модели MacBook, напечатанный в нижней части вашего MacBook. Это начинается с буквы А, за которым следует 4 числа. Скопируйте номер модели и имя в соответствующие поля ниже.',\r\n    hy: 'Ձեր MacBook- ի ներքեւի մասում կարող եք գտնել ձեր MacBook մոդելի համարը: Այն սկսվում է նամակից, որին հաջորդում է 4 համար: Պատճենեք մոդելի համարը եւ անունը ստորեւ նշված համապատասխան ոլորտներին:',\r\n    fi: 'Löydät MacBook -mallinumerosi, joka on tulostettu MacBookin alaosaan. Se alkaa kirjaimella A, jota seuraa 4 numeroa. Kopioi mallinumero ja nimi alla oleviin vastaaviin kenttiin.',\r\n    ka: 'თქვენ შეგიძლიათ იპოვოთ თქვენი MacBook მოდელის ნომერი, რომელიც დაბეჭდილია თქვენი MacBook- ის ბოლოში. ეს იწყება ასო A- ით, რომელსაც მოჰყვა 4 ნომერი. დააკოპირეთ მოდელის ნომერი და სახელი ქვემოთ მოცემულ შესაბამის ველებში.',\r\n    he: 'אתה יכול למצוא את מספר הדגם MacBook שלך המודפס בתחתית ה- MacBook שלך. זה מתחיל במכתב A ואחריו 4 מספרים. העתק את מספר הדגם ואת השם לשדות המתאימים למטה.',\r\n    ar: 'يمكنك العثور على رقم طراز MacBook الخاص بك مطبوع في أسفل جهاز MacBook الخاص بك. يبدأ بالحرف A متبوعًا بأربعة أرقام. انسخ رقم الطراز والاسم إلى الحقول المقابلة أدناه.',\r\n    ur: 'آپ اپنے میک بوک کے نچلے حصے پر چھپی ہوئی اپنا میک بوک ماڈل نمبر حاصل کرسکتے ہیں۔ اس کا آغاز خط A کے ساتھ ہوتا ہے جس کے بعد 4 نمبر ہوتے ہیں۔ ماڈل نمبر اور نام کو نیچے سے متعلقہ فیلڈز میں کاپی کریں۔',\r\n    hi: 'आप अपने मैकबुक मॉडल नंबर को अपने मैकबुक के तल पर मुद्रित पा सकते हैं। यह अक्षर A से 4 नंबर के बाद शुरू होता है। मॉडल नंबर और नाम को नीचे दिए गए संबंधित फ़ील्ड में कॉपी करें।',\r\n    ta: 'உங்கள் மேக்புக்கின் கீழே அச்சிடப்பட்ட உங்கள் மேக்புக் மாடல் எண்ணைக் காணலாம். இது A என்ற எழுத்துடன் தொடங்குகிறது, அதைத் தொடர்ந்து 4 எண்கள். மாதிரி எண் மற்றும் பெயரை கீழே உள்ள தொடர்புடைய புலங்களுக்கு நகலெடுக்கவும்.',\r\n    ml: 'നിങ്ങളുടെ മാക്ബുക്കിന്റെ ചുവടെ അച്ചടിച്ച നിങ്ങളുടെ മാക്ബുക്ക് മോഡൽ നമ്പർ നിങ്ങൾക്ക് കണ്ടെത്താൻ കഴിയും. ഇതിൽ 4 അക്കങ്ങളും 4 അക്കങ്ങളും ഇതിൽ ആരംഭിക്കുന്നു. മോഡൽ നമ്പറും പേരും ചുവടെയുള്ള അനുബന്ധ ഫീൽഡുകൾക്ക് പകർത്തുക.',\r\n    te: 'మీ మాక్‌బుక్ దిగువన మీ మాక్‌బుక్ మోడల్ నంబర్‌ను ముద్రించవచ్చు. ఇది 4 సంఖ్యల అక్షరంతో మొదలవుతుంది. మోడల్ సంఖ్య మరియు పేరును దిగువ సంబంధిత ఫీల్డ్‌లకు కాపీ చేయండి.',\r\n    kn: 'ನಿಮ್ಮ ಮ್ಯಾಕ್‌ಬುಕ್‌ನ ಕೆಳಭಾಗದಲ್ಲಿ ಮುದ್ರಿಸಲಾದ ನಿಮ್ಮ ಮ್ಯಾಕ್‌ಬುಕ್ ಮಾದರಿ ಸಂಖ್ಯೆಯನ್ನು ನೀವು ಕಾಣಬಹುದು. ಇದು 4 ಸಂಖ್ಯೆಗಳ ನಂತರ ಎ ಅಕ್ಷರದಿಂದ ಪ್ರಾರಂಭವಾಗುತ್ತದೆ. ಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರನ್ನು ಕೆಳಗಿನ ಅನುಗುಣವಾದ ಕ್ಷೇತ್ರಗಳಿಗೆ ನಕಲಿಸಿ.',\r\n    bn: 'আপনি আপনার ম্যাকবুকের নীচে মুদ্রিত আপনার ম্যাকবুক মডেল নম্বরটি পেতে পারেন। এটি 4 টি সংখ্যা অনুসরণ করে শুরু হয়। নীচের সংশ্লিষ্ট ক্ষেত্রগুলিতে মডেল নম্বর এবং নামটি অনুলিপি করুন।',\r\n    id: 'Anda dapat menemukan nomor model MacBook Anda dicetak di bagian bawah MacBook Anda. Dimulai dengan huruf A diikuti oleh 4 angka. Salin nomor model dan nama ke bidang yang sesuai di bawah ini.',\r\n    'zh-CN':\r\n      '您可以在MacBook底部找到MacBook型号。它从字母A开始，然后是4个数字。将型号和名称复制到下面的相应字段。',\r\n    'zh-HK':\r\n      '您可以在MacBook底部找到MacBook型號。它從字母A開始，然後是4個數字。將型號和名稱複製到下面的相應字段。',\r\n    ja: 'MacBookモデル番号がMacBookの下部に印刷されているのを見つけることができます。文字Aから始まり、4つの数字が続きます。モデル番号と名前を以下の対応するフィールドにコピーします。',\r\n    ko: 'MacBook 하단에 MacBook 모델 번호를 인쇄 할 수 있습니다. 문자 A에 이어 4 숫자로 시작합니다. 모델 번호와 이름을 아래의 해당 필드에 복사하십시오.',\r\n  },\r\n  RC_ModelNumber: {\r\n    'en-US': 'Model number',\r\n    de: 'Modell-Nr',\r\n    fr: 'Numéro de modèle',\r\n    es: 'Número de modelo',\r\n    pt: 'Número do modelo',\r\n    it: 'Numero di modello',\r\n    ro: 'Număr de model',\r\n    pl: 'Numer modelu',\r\n    ru: 'Номер модели',\r\n    hy: 'Մոդելի համարը',\r\n    fi: 'Mallinumero',\r\n    ka: 'Მოდელის ნომერი',\r\n    he: 'מספר דגם',\r\n    ar: 'رقم الموديل',\r\n    ur: 'ماڈل نمبر',\r\n    hi: 'मॉडल संख्या',\r\n    ta: 'மாடல் எண்',\r\n    ml: 'മോഡൽ നമ്പർ',\r\n    te: 'మోడల్ సంఖ్య',\r\n    kn: 'ಮಾದರಿ ಸಂಖ್ಯೆ',\r\n    bn: 'মডেল নম্বার',\r\n    id: 'Nomor model',\r\n    'zh-CN': '型号',\r\n    'zh-HK': '型號',\r\n    ja: 'モデル番号',\r\n    ko: '모델 번호',\r\n  },\r\n  RC_ModelName: {\r\n    'en-US': 'Model name',\r\n    de: 'Modellname',\r\n    fr: 'Nom du modèle',\r\n    es: 'Nombre del modelo',\r\n    pt: 'Nome do modelo',\r\n    it: 'Nome del modello',\r\n    ro: 'Numele modelului',\r\n    pl: 'Nazwa modelu',\r\n    ru: 'Название модели',\r\n    hy: 'Մոդելի անուն',\r\n    fi: 'Mallinimi',\r\n    ka: 'Მოდელის სახელი',\r\n    he: 'שם המודל',\r\n    ar: 'اسم النموذج',\r\n    ur: 'ماڈل کا نام',\r\n    hi: 'मॉडल नाम',\r\n    ta: 'மாதிரி பெயர்',\r\n    ml: 'മോഡലിന്റെ പേര്',\r\n    te: 'మోడల్ పేరు',\r\n    kn: 'ಮಾದರಿ ಹೆಸರು',\r\n    bn: 'ণশড',\r\n    id: 'Nama model',\r\n    'zh-CN': '型号名称',\r\n    'zh-HK': '型號名稱',\r\n    ja: 'モデル名',\r\n    ko: '모델명',\r\n  },\r\n  RC_NeedModelNumberAndName: {\r\n    'en-US': 'We need the model number and name of this xxx yyy. ',\r\n    de: 'Wir brauchen die Modellnummer und den Namen dieser xxx YYY.',\r\n    fr: 'Nous avons besoin du numéro de modèle et du nom de ce xxx yyy.',\r\n    es: 'Necesitamos el número de modelo y el nombre de este xxx yyy.',\r\n    pt: 'Precisamos do número do modelo e do nome deste xxx aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\r\n    it: 'Abbiamo bisogno del numero di modello e del nome di questo xxx yyy.',\r\n    ro: 'Avem nevoie de numărul modelului și numele acestui xxx yyy.',\r\n    pl: 'Potrzebujemy numeru modelu i nazwy tego xxx yyy.',\r\n    ru: 'Нам нужен номер модели и имя этого xxx YYY.',\r\n    hy: 'Մեզ պետք է այս xxx yyy մոդելի համարը եւ անունը:',\r\n    fi: 'Tarvitsemme tämän xxx vv: n mallinumeron ja nimen.',\r\n    ka: 'ჩვენ გვჭირდება ამ xxx yyy- ის მოდელის ნომერი და სახელი.',\r\n    he: 'אנו זקוקים למספר הדגם ושם של xxx YYY זה.',\r\n    ar: 'نحن بحاجة إلى رقم الطراز واسم هذا xxx yyy.',\r\n    ur: 'ہمیں اس xxx YYY کے ماڈل نمبر اور نام کی ضرورت ہے۔',\r\n    hi: 'हमें इस xxx YYY के मॉडल नंबर और नाम की आवश्यकता है।',\r\n    ta: 'இந்த xxx yyy இன் மாதிரி எண் மற்றும் பெயர் நமக்குத் தேவை.',\r\n    ml: 'ഞങ്ങൾക്ക് ഈ xxx yyy ന്റെ മോഡൽ നമ്പറും പേരും ആവശ്യമാണ്.',\r\n    te: 'ఈ xxx YYY యొక్క మోడల్ నంబర్ మరియు పేరు మాకు అవసరం.',\r\n    kn: 'ಈ xxx yyy ನ ಮಾದರಿ ಸಂಖ್ಯೆ ಮತ್ತು ಹೆಸರು ನಮಗೆ ಬೇಕು.',\r\n    bn: 'আমাদের এই xxx yyy এর মডেল নম্বর এবং নাম প্রয়োজন।',\r\n    id: 'Kami membutuhkan nomor model dan nama xxx yyy ini.',\r\n    'zh-CN': '我们需要此xxx yyy的型号和名称。',\r\n    'zh-HK': '我們需要此xxx YYY的型號和名稱。',\r\n    ja: 'このxxx yyyのモデル番号と名前が必要です。',\r\n    ko: '이 xxx YYY의 모델 번호와 이름이 필요합니다.',\r\n  },\r\n  RC_allowMicrophoneUse: {\r\n    'en-US': 'If a pop up appears, asking for permission to use the microphone, click \"Allow\".',\r\n    de: 'Wenn ein Pop -up erscheint und um Erlaubnis zur Verwendung des Mikrofons gebeten wird, klicken Sie auf \"Erlauben\".',\r\n    fr: 'Si une fenêtre contextuelle apparaît, demandant la permission d\\'utiliser le microphone, cliquez sur \"Autoriser\".',\r\n    es: 'Si aparece una ventana emergente, pidiendo permiso para usar el micrófono, haga clic en \"Permitir\".',\r\n    pt: 'Se aparecer um pop -up, solicitando permissão para usar o microfone, clique em \"Permitir\".',\r\n    it: 'Se appare un pop -up, chiedendo il permesso di utilizzare il microfono, fare clic su \"Consenti\".',\r\n    ro: 'Dacă apare un pop -up, cerând permisiunea de a utiliza microfonul, faceți clic pe „Permite”.',\r\n    pl: 'Jeśli pojawi się wyskakujący wyskakujący wysięgnik, prosząc o pozwolenie na użycie mikrofonu, kliknij „Zezwalaj”.',\r\n    ru: 'Если появляется всплывающее окно, требуя разрешения использовать микрофон, нажмите «Разрешить».',\r\n    hy: 'Եթե ​​հայտնվում է փոփը, խնդրելով թույլտվություն օգտագործել խոսափողը, կտտացրեք «Թույլատրել»:',\r\n    fi: 'Jos ponnahdusikkuna tulee näkyviin, pyydetään lupaa käyttää mikrofonia, napsauta \"Salli\".',\r\n    ka: 'თუ გამოჩნდება pop Up, ითხოვს მიკროფონის გამოყენების ნებართვას, დააჭირეთ ღილაკს \"დაუშვით\".',\r\n    he: 'אם מופיע פופ -אפ, מבקש אישור להשתמש במיקרופון, לחץ על \"אפשר\".',\r\n    ar: 'إذا ظهرت منبثقة ، تطلب الإذن لاستخدام الميكروفون ، انقر فوق \"السماح\".',\r\n    ur: 'اگر کوئی پاپ اپ ظاہر ہوتا ہے تو ، مائکروفون کو استعمال کرنے کی اجازت طلب کرتے ہیں تو ، \"اجازت دیں\" پر کلک کریں۔',\r\n    hi: 'यदि एक पॉप अप दिखाई देता है, तो माइक्रोफोन का उपयोग करने की अनुमति मांगता है, \"अनुमति\" पर क्लिक करें।',\r\n    ta: 'ஒரு பாப் அப் தோன்றினால், மைக்ரோஃபோனைப் பயன்படுத்த அனுமதி கேட்கிறது, \"அனுமதி\" என்பதைக் கிளிக் செய்க.',\r\n    ml: 'ഒരു പോപ്പ് അപ്പ് ദൃശ്യമാകുകയാണെങ്കിൽ, മൈക്രോഫോൺ ഉപയോഗിക്കാൻ അനുമതി ചോദിച്ചാൽ, \"അനുവദിക്കുക\" ക്ലിക്കുചെയ്യുക.',\r\n    te: 'పాప్ అప్ కనిపిస్తే, మైక్రోఫోన్‌ను ఉపయోగించడానికి అనుమతి అడుగుతూ, \"అనుమతించు\" క్లిక్ చేయండి.',\r\n    kn: 'ಪಾಪ್ ಅಪ್ ಕಾಣಿಸಿಕೊಂಡರೆ, ಮೈಕ್ರೊಫೋನ್ ಬಳಸಲು ಅನುಮತಿ ಕೇಳಿದಾಗ, \"ಅನುಮತಿಸಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'যদি কোনও পপ আপ উপস্থিত হয়, মাইক্রোফোনটি ব্যবহার করার অনুমতি চেয়ে জিজ্ঞাসা করে, \"অনুমতি দিন\" ক্লিক করুন।',\r\n    id: 'Jika muncul muncul, meminta izin untuk menggunakan mikrofon, klik \"Izinkan\".',\r\n    'zh-CN': '如果出现弹出窗口，请要求使用麦克风许可，请单击“允许”。',\r\n    'zh-HK': '如果出現彈出窗口，請要求使用麥克風許可，請單擊“允許”。',\r\n    ja: 'ポップアップが表示された場合は、マイクを使用する許可を求めている場合は、「許可」をクリックします。',\r\n    ko: '팝업이 나타나면 마이크 사용 권한을 요청하면 \"허용\"을 클릭하십시오.',\r\n  },\r\n  RC_angleDistanceIntro: {\r\n    'en-US':\r\n      'Just turn around, and we will find your viewing distance! When asked, please grant access to your camera.',\r\n    de: 'Drehen Sie sich einfach um und wir werden Ihre Betrachtungsentfernung finden! Wenn Sie gefragt werden, gewähren Sie bitte Zugriff auf Ihre Kamera.',\r\n    fr: \"Retournez-vous et nous trouverons votre distance de vision! Lorsqu'on vous a demandé, veuillez accorder l'accès à votre appareil photo.\",\r\n    es: '¡Date la vuelta y encontraremos tu distancia de visión! Cuando se le pregunte, otorgue el acceso a su cámara.',\r\n    pt: 'Basta virar e encontraremos sua distância de visualização! Quando solicitado, conceda acesso à sua câmera.',\r\n    it: \"Girati e troveremo la tua distanza di visione! Alla domanda, si prega di concedere l'accesso alla fotocamera.\",\r\n    ro: 'Pur și simplu întoarceți -vă și vă vom găsi distanța de vizionare! Când ați solicitat, vă rugăm să acordați acces la camera dvs.',\r\n    pl: 'Po prostu odwróć się, a znajdziemy twoją odległość oglądania! Zapytany, daj dostęp do aparatu.',\r\n    ru: 'Просто развернитесь, и мы найдем ваше расстояние просмотра! Когда его спросили, пожалуйста, предоставьте доступ к вашей камере.',\r\n    hy: 'Պարզապես շրջվեք, եւ մենք կգտնենք ձեր դիտման հեռավորությունը: Հարցին, խնդրում ենք մուտք ունենալ ձեր տեսախցիկ:',\r\n    fi: 'Käännä vain ympäri, ja löydämme katseluetäisyyden! Antakaa pääsy kameraasi.',\r\n    ka: 'უბრალოდ მოტრიალდით და ჩვენ ვიპოვით თქვენს სანახავი მანძილს! კითხვაზე, გთხოვთ, მიეცით წვდომა თქვენს კამერაში.',\r\n    he: 'פשוט הסתובב ונמצא את מרחק הצפייה שלך! כשנשאל, אנא הענק גישה למצלמה שלך.',\r\n    ar: 'فقط استدر ، وسوف نجد مسافة المشاهدة الخاصة بك! عندما سئل ، يرجى منح الوصول إلى الكاميرا.',\r\n    ur: 'ذرا مڑیں ، اور ہم آپ کے دیکھنے کا فاصلہ تلاش کریں گے! جب ان سے پوچھا گیا تو ، براہ کرم اپنے کیمرے تک رسائی دیں۔',\r\n    hi: 'बस चारों ओर मुड़ें, और हम आपकी देखने की दूरी पाएंगे! जब पूछा गया, तो कृपया अपने कैमरे तक पहुंच प्रदान करें।',\r\n    ta: 'திரும்பிச் செல்லுங்கள், உங்கள் பார்வை தூரத்தை நாங்கள் கண்டுபிடிப்போம்! கேட்டால், தயவுசெய்து உங்கள் கேமராவுக்கு அணுகலை வழங்கவும்.',\r\n    ml: 'തിരിഞ്ഞുനോക്കുക, നിങ്ങളുടെ കാഴ്ചപ്പാട് ഞങ്ങൾ കണ്ടെത്തും! ചോദിച്ചപ്പോൾ, നിങ്ങളുടെ ക്യാമറയിലേക്ക് പ്രവേശനം നൽകുക.',\r\n    te: 'చుట్టూ తిరగండి, మరియు మేము మీ వీక్షణ దూరాన్ని కనుగొంటాము! అడిగినప్పుడు, దయచేసి మీ కెమెరాకు ప్రాప్యత ఇవ్వండి.',\r\n    kn: 'ತಿರುಗಿ, ಮತ್ತು ನಿಮ್ಮ ವೀಕ್ಷಣೆಯ ದೂರವನ್ನು ನಾವು ಕಾಣುತ್ತೇವೆ! ಕೇಳಿದಾಗ, ದಯವಿಟ್ಟು ನಿಮ್ಮ ಕ್ಯಾಮೆರಾಗೆ ಪ್ರವೇಶವನ್ನು ನೀಡಿ.',\r\n    bn: 'কেবল ঘুরে দেখুন, এবং আমরা আপনার দেখার দূরত্বটি খুঁজে পাব! জিজ্ঞাসা করা হলে, দয়া করে আপনার ক্যামেরায় অ্যাক্সেস দিন।',\r\n    id: 'Balikkan saja, dan kami akan menemukan jarak menonton Anda! Ketika ditanya, tolong berikan akses ke kamera Anda.',\r\n    'zh-CN': '只需转身，我们就会找到您的观看距离！当被问到时，请授予您对相机的访问权限。',\r\n    'zh-HK': '只需轉身，我們就會找到您的觀看距離！當被問到時，請授予您對相機的訪問權限。',\r\n    ja: '振り向くだけで、視聴距離が見つかります！尋ねられたら、カメラへのアクセスを許可してください。',\r\n    ko: '그냥 돌아 서면 시청 거리를 찾을 수 있습니다! 요청하면 카메라에 액세스 할 수 있습니다.',\r\n  },\r\n  RC_angleDistanceTitle: {\r\n    'en-US': 'Measure Viewing Distance',\r\n    de: 'Messen Sie den Betrachtungsabstand',\r\n    fr: \"Mesurer la distance d'observation\",\r\n    es: 'Medir la distancia de visualización',\r\n    pt: 'Medir a distância de visualização',\r\n    it: 'Misurare la distanza di visione',\r\n    ro: 'Măsurați distanța de vizualizare',\r\n    pl: 'Zmierz odległość oglądania',\r\n    ru: 'Измерить расстояние просмотра',\r\n    hy: 'Չափել դիտման հեռավորությունը',\r\n    fi: 'Mittaa katseluetäisyys',\r\n    ka: 'გაზომეთ სანახავი მანძილი',\r\n    he: 'למדוד את מרחק הצפייה',\r\n    ar: 'قياس مسافة المشاهدة',\r\n    ur: 'دیکھنے کے فاصلے کی پیمائش کریں',\r\n    hi: 'देखने की दूरी को मापें',\r\n    ta: 'பார்க்கும் தூரத்தை அளவிடவும்',\r\n    ml: 'കാണുന്ന ദൂരം അളക്കുക',\r\n    te: 'వీక్షణ దూరాన్ని కొలవండి',\r\n    kn: 'ವೀಕ್ಷಣೆ ದೂರವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: 'দেখার দূরত্ব পরিমাপ করুন',\r\n    id: 'Ukur jarak tampilan',\r\n    'zh-CN': '测量观看距离',\r\n    'zh-HK': '測量觀看距離',\r\n    ja: '表示距離を測定します',\r\n    ko: '시청 거리를 측정하십시오',\r\n  },\r\n  RC_calibrateMicrophone: {\r\n    'en-US': 'Calibrate microphone',\r\n    de: 'Kalibrieren Sie Mikrofon',\r\n    fr: 'Calibrer le microphone',\r\n    es: 'Calibrar micrófono',\r\n    pt: 'Calibre o microfone',\r\n    it: 'Calibrare il microfono',\r\n    ro: 'Calibrează microfonul',\r\n    pl: 'Kalibruj mikrofon',\r\n    ru: 'Калибровать микрофон',\r\n    hy: 'Calibrate խոսափող',\r\n    fi: 'Mikrofoni',\r\n    ka: 'დაკალიბრება მიკროფონი',\r\n    he: 'כיול מיקרופון',\r\n    ar: 'معايرة الميكروفون',\r\n    ur: 'کیلیبریٹ مائکروفون',\r\n    hi: 'माइक्रोफोन को कैलिब्रेट करें',\r\n    ta: 'மைக்ரோஃபோனை அளவீடு செய்யுங்கள்',\r\n    ml: 'കാലിബ്രേറ്റ് മൈക്രോഫോൺ',\r\n    te: 'మైక్రోఫోన్ క్రమాంకనం చేయండి',\r\n    kn: 'ಮಾಪನಾಂಕ ನಿರ್ಣಯ',\r\n    bn: 'মাইক্রোফোন ক্যালিব্রেট করুন',\r\n    id: 'Mikrofon mengkalibrasi',\r\n    'zh-CN': '校准麦克风',\r\n    'zh-HK': '校準麥克風',\r\n    ja: 'マイクを較正します',\r\n    ko: '마이크를 교정하십시오',\r\n  },\r\n  RC_cancel: {\r\n    'en-US': 'Restart this calibration',\r\n    de: 'Starten Sie diese Kalibrierung neu',\r\n    fr: 'Redémarrer cet étalonnage',\r\n    es: 'Reiniciar esta calibración',\r\n    pt: 'Reinicie esta calibração',\r\n    it: 'Riavvia questa calibrazione',\r\n    ro: 'Reporniți această calibrare',\r\n    pl: 'Anuluj',\r\n    ru: 'Перезапустите эту калибровку',\r\n    hy: 'Վերականգնել այս տրամաչափումը',\r\n    fi: 'Käynnistä tämä kalibrointi uudelleen',\r\n    ka: 'გადატვირთეთ ეს კალიბრაცია',\r\n    he: 'הפעל מחדש את הכיול הזה',\r\n    ar: 'الغاء',\r\n    ur: 'بند کریں',\r\n    hi: 'बंद करे',\r\n    ta: 'இந்த அளவுத்திருத்தத்தை மறுதொடக்கம் செய்யுங்கள்',\r\n    ml: 'ഈ കാലിബ്രേഷൻ പുനരാരംഭിക്കുക',\r\n    te: 'ఈ క్రమాంకనాన్ని పున art ప్రారంభించండి',\r\n    kn: 'ಈ ಮಾಪನಾಂಕ ನಿರ್ಣಯವನ್ನು ಮರುಪ್ರಾರಂಭಿಸಿ',\r\n    bn: 'এই ক্রমাঙ্কন পুনরায় চালু করুন',\r\n    id: 'Mulai ulang kalibrasi ini',\r\n    'zh-CN': '重做此校准',\r\n    'zh-HK': '重做此校準',\r\n    ja: 'キャンセル',\r\n    ko: '이 교정을 다시 시작하십시오',\r\n  },\r\n  RC_distanceTracking: {\r\n    'en-US': 'Distance Tracking',\r\n    de: 'Entfernungsverfolgung',\r\n    fr: 'Suivi de distance',\r\n    es: 'Seguimiento de distancia',\r\n    pt: 'Rastreamento de distância',\r\n    it: 'Monitoraggio a distanza',\r\n    ro: 'Urmărirea distanței',\r\n    pl: 'Śledzenie odległości od ekranu',\r\n    ru: 'Отслеживание расстояний',\r\n    hy: 'Հետեւելու հեռավորությունները',\r\n    fi: 'Etäisyyden seuranta',\r\n    ka: 'მანძილის თვალყურის დევნება',\r\n    he: 'מעקב אחר מרחק',\r\n    ar: 'تتبع الرأس',\r\n    ur: 'فاصلے سے باخبر رہنا',\r\n    hi: 'दूरी ट्रैकिंग',\r\n    ta: 'தூர கண்காணிப்பு',\r\n    ml: 'ദൂര ട്രാക്കിംഗ്',\r\n    te: 'దూర ట్రాకింగ్',\r\n    kn: 'ದೂರ ಟ್ರ್ಯಾಕಿಂಗ್',\r\n    bn: 'দূরত্ব ট্র্যাকিং',\r\n    id: 'Pelacakan jarak',\r\n    'zh-CN': '视距追踪',\r\n    'zh-HK': '視距追踪',\r\n    ja: '距離追跡',\r\n    ko: '거리 추적',\r\n  },\r\n  RC_distanceTrackingCloseL: {\r\n    'en-US':\r\n      \"1. Close your LEFT eye. (This is the left side of the screen.)\\n2. Use ▶ arrow key to slide the flickering dot. (Or just drag it, if it's not responding to the arrow key.) While looking at the cross hairs, monitor the flickering dot in the corner of your eye, and slide it left and right until it disappears into your blindspot.\\n3. Hit RETURN.\\nNOTE: Keep your eye on the cross hairs. The flickering dot won't disappear while your eye follows it. \",\r\n    de: '1. Schließen Sie Ihr linkes Auge. (Dies ist die linke Seite des Bildschirms.)\\n2. Verwenden Sie ▶ Pfeiltaste, um den flackernden Punkt zu schieben. (Oder ziehen Sie es einfach, wenn es nicht auf den Pfeilschlüssel reagiert.) Beim Betrachten der Kreuzhaare den flackernden Punkt in Ihrem Augenwinkel und schieben Sie ihn nach links und rechts, bis er in Ihren Blindpot verschwindet.\\n3. Return to Return.\\nHinweis: Behalten Sie die Kreuzhaare im Auge. Der flackernde Punkt wird nicht verschwinden, während Ihr Auge ihm folgt.',\r\n    fr: \"1. Fermez votre œil gauche. (C'est le côté gauche de l'écran.)\\n2. Utilisez ▶ Clé flèche pour faire glisser le point scintillant. (Ou faites-le simplement glisser, s'il ne répond pas à la clé de flèche.) En regardant les poils, surveillez le point scintillant dans le coin de votre œil et faites-le glisser à gauche et à droite jusqu'à ce qu'il disparaisse dans votre point mort.\\n3. Appuyez sur Retour.\\nRemarque: Gardez l'œil sur les poils. Le point vacillant ne disparaîtra pas pendant que votre œil le suit.\",\r\n    es: '1. Cierre el ojo izquierdo. (Este es el lado izquierdo de la pantalla).\\n2. Use la tecla de flecha ▶ para deslizar el punto parpadeante. (O simplemente arrástrelo, si no está respondiendo a la llave de flecha). Mientras mira los pelos de la cruz, monitoree el punto parpadeante en la esquina de su ojo y deslicela a la izquierda y a la derecha hasta que desaparezca en su punto ciego.\\n3. Golpee el regreso.\\nNota: Mantén tu ojo en la cruz. El punto parpadeante no desaparecerá mientras su ojo lo sigue.',\r\n    pt: '1. Feche o olho esquerdo. (Este é o lado esquerdo da tela.)\\n2. Use ▶ Tecla de seta para deslizar o ponto de tremeling. (Ou simplesmente arraste -o, se não estiver respondendo à tecla de seta.) Enquanto olha os cabelos cruzados, monitore o ponto de tremeling no canto do olho e deslize -o para a esquerda e para a direita até desaparecer no seu ponto cego.\\n3. Bata o retorno.\\nNota: Fique de olho nos cabelos cruzados. O ponto piscador não desaparecerá enquanto seu olho o segue.',\r\n    it: \"1. Chiudi l'occhio sinistro. (Questo è il lato sinistro dello schermo.)\\n2. Utilizzare ▶ Tasto freccia per far scorrere il punto tremolante. (O semplicemente trascinalo, se non risponde alla chiave freccia.) Mentre guarda i peli incrociati, monitora il punto tremolo nell'angolo dell'occhio e fai scorrere a sinistra e a destra fino a quando non scompare nel tuo cieco.\\n3. Colpire il ritorno.\\nNota: tieni d'occhio i capelli incrociati. Il punto tremolante non scomparirà mentre il tuo occhio lo segue.\",\r\n    ro: '1. Închideți ochiul stâng. (Aceasta este partea stângă a ecranului.)\\n2. Utilizați ▶ Tasta săgeată pentru a glisa punctul pâlpâit. (Sau pur și simplu trageți -l, dacă nu răspunde la cheia săgeată.) În timp ce priviți părul încrucișat, monitorizați punctul pâlpâit din colțul ochiului și glisați -l la stânga și la dreapta până când va dispărea în blindspot.\\n3. Apăsați Return.\\nNotă: Fii cu ochii pe firele de păr. Punctul pâlpâit nu va dispărea în timp ce ochiul tău îl urmărește.',\r\n    pl: '1. Zamknij lewe oko. (To jest lewa strona ekranu.)\\n2. Użyj ▶ Klucz strzałki, aby przesunąć migoczącą kropkę. (Lub po prostu przeciągnij go, jeśli nie reaguje na klawisz strzałki.) Patrząc na włosy krzyżowe, monitoruj migoczącą kropkę w rogu oka i przesuń go w lewo i w prawo, aż zniknie w twojej ślepej.\\n3. Hit Return.\\nUwaga: miej oko na włosy krzyżowe. Migocząca kropka nie zniknie, gdy podąża za nim oko.',\r\n    ru: '1. Закройте левый глаз. (Это левая сторона экрана.)\\n2. Используйте ▶ Ключ стрелка, чтобы сдвинуть мерцающую точку. (Или просто перетащите его, если он не отвечает на ключ стрелы.), Глядя на кросс -волоски, следите за мерцающей точкой в ​​углу глаз и скользите влево и направо, пока он не исчезнет в вашем слепой точке.\\n3. Нажмите на возврат.\\nПримечание: следите за кросс -волосами. Мерцающая точка не исчезнет, ​​пока ваш глаз следует за ней.',\r\n    hy: '1. Փակեք ձեր ձախ աչքը: (Սա էկրանի ձախ կողմն է):\\n2. Օգտագործեք ▶ սլաքի ստեղնը `շողոքորթ կետը սահելու համար: (Կամ պարզապես քաշեք այն, եթե դա չի արձագանքում սլաքի բանալին :) Խաչի մազերը նայելով, վերահսկեք ձեր աչքի անկյունում գտնվող շողոքորթ կետը եւ սահեցրեք այն եւ աջը:\\n3. Հիթ վերադարձ:\\nՆշում. Ձեր աչքը պահեք խաչի մազերի վրա: Հղումային կետը չի վերանա, մինչդեռ ձեր աչքը հետեւում է դրան:',\r\n    fi: \"1. Sulje vasen silmä. (Tämä on näytön vasen puoli.)\\n2. Liu'uta välkkyvä piste ▶ nuolinäppäimellä. (Tai vedä sitä vain, jos se ei vastaa nuolinäppäimeen.) Tarkastele silmän nurkassa olevaa vilkkuvaa pistettä katsellessasi ja liu'uta sitä vasemmalle ja oikealle, kunnes se katoaa blindspotisi.\\n3. Osu paluu.\\nHuomaa: Pidä silmällä ristikarvoja. Vilkkuva piste ei katoa, kun silmäsi seuraa sitä.\",\r\n    ka: '1. დახურეთ მარცხენა თვალი. (ეს არის ეკრანის მარცხენა მხარე.)\\n2. გამოიყენეთ ▶ ისრის ღილაკი, რომ გააფართოვოთ მბჟუტავი წერტილი. (ან უბრალოდ გადაიტანეთ იგი, თუ ის არ რეაგირებს ისრის ღილაკზე.) ჯვრის თმას გადახედვისას, თვალის კუთხეში მბზინავი წერტილი დააკვირდით და გადაიტანეთ მარცხნივ და მარჯვნივ, სანამ ის არ გაქრება თქვენს ჟალუზაში.\\n3. მოხვდი დაბრუნებას.\\nშენიშვნა: მიადევნეთ თვალი ჯვრის თმას. მბჟუტავი წერტილი არ გაქრება, სანამ შენი თვალი მისდევს.',\r\n    he: '1. סגור את העין השמאלית שלך. (זהו הצד השמאלי של המסך.)\\n2. השתמש במפתח חץ כדי להחליק את הנקודה המהבהבת. (או סתם לגרור אותו, אם זה לא מגיב למפתח החץ.) תוך כדי התבוננות בשערות הצלב, עקוב אחר הנקודה המהבהבת בפינת העין שלך, והחליק אותה שמאלה וימינה עד שהוא נעלם לתוך העיוור שלך.\\n3. פגע בחזרה.\\nהערה: השגיח על שערות הצלב. הנקודה המהבהבת לא תיעלם בזמן שהעין שלך עוקבת אחריה.',\r\n    ar: '1. أغلق عينيك اليسرى. (هذا هو الجانب الأيسر من الشاشة.)\\n2. استخدم ▶ مفتاح السهم لنقل النقطة الخفقان. (أو فقط اسحبه ، إذا لم يستجب لمفتاح السهم.) أثناء النظر إلى الشعر المتقاطع ، راقب النقطة المتوهجة في زاوية عينيك ، وحركها إلى اليسار واليمين حتى تختفي في النقطة العمياء.\\n3. ضرب العودة.\\nملاحظة: راقب الشعر المتقاطع. لن تختفي النقطة الخفقان بينما تتبعها عينك.',\r\n    ur: '1. اپنی بائیں آنکھ کو بند کریں۔ (یہ اسکرین کا بائیں طرف ہے۔)\\n2. ٹمٹماہٹ ڈاٹ سلائیڈ کرنے کے لئے ▶ یرو کلید کا استعمال کریں۔ (یا صرف اسے گھسیٹیں ، اگر یہ تیر کی چابی کا جواب نہیں دے رہا ہے۔) کراس بالوں کو دیکھتے وقت ، اپنی آنکھ کے کونے میں چمکتے ہوئے ڈاٹ کی نگرانی کریں ، اور اسے بائیں اور دائیں سلائیڈ کریں جب تک کہ یہ آپ کے اندھے مقام میں غائب نہ ہوجائے۔\\n3. واپسی کو ماریں۔\\nنوٹ: کراس بالوں پر نگاہ رکھیں۔ جب آپ کی آنکھ اس کی پیروی کرتی ہے تو چمکتا ہوا ڈاٹ غائب نہیں ہوگا۔',\r\n    hi: '1. अपनी बाईं आंख बंद करें। (यह स्क्रीन का बायाँ हिस्सा है।)\\n2. टिमटिमाती डॉट को स्लाइड करने के लिए ▶ तीर कुंजी का उपयोग करें। (या बस इसे खींचें, अगर यह तीर कुंजी का जवाब नहीं दे रहा है।) क्रॉस हेयर को देखते समय, अपनी आंख के कोने में टिमटिमाते हुए डॉट की निगरानी करें, और इसे बाएं और दाएं स्लाइड करें जब तक कि यह आपके ब्लाइंडस्पॉट में गायब न हो जाए।\\n3. हिट रिटर्न।\\nनोट: अपनी नजर क्रॉस हेयर पर रखें। झिलमिलाहट डॉट गायब नहीं होगा जबकि आपकी आंख इसका अनुसरण करती है।',\r\n    ta: '1. உங்கள் இடது கண்ணை மூடு. (இது திரையின் இடது புறம்.)\\n2. ஒளிரும் புள்ளியை சறுக்குவதற்கு ▶ அம்பு விசையைப் பயன்படுத்தவும். .\\n3. வருவாய்.\\nகுறிப்பு: குறுக்கு முடிகள் மீது உங்கள் கண் வைத்திருங்கள். உங்கள் கண் அதைப் பின்தொடரும் போது ஒளிரும் புள்ளி மறைந்துவிடாது.',\r\n    ml: '1. നിങ്ങളുടെ ഇടത് കണ്ണ് അടയ്ക്കുക. (ഇത് സ്ക്രീനിന്റെ ഇടതുവശമാണ്.)\\n2. ഫ്ലിക്കറിംഗ് ഡോട്ട് സ്ലൈഡുചെയ്യാൻ ▶ അമ്പടയാളം ഉപയോഗിക്കുക. (അല്ലെങ്കിൽ അമ്പടയാള കീയോട് പ്രതികരിക്കുന്നില്ലെങ്കിൽ, അത് വലിച്ചിടുക.)\\n3. റിട്ടേൺ അമർത്തുക.\\nകുറിപ്പ്: ക്രോസ് രോമങ്ങളിൽ നിങ്ങളുടെ കണ്ണു സൂക്ഷിക്കുക. നിങ്ങളുടെ കണ്ണ് അത് പിന്തുടരുമ്പോൾ മിന്നുന്ന ഡോട്ട് അപ്രത്യക്ഷമാകില്ല.',\r\n    te: '1. మీ ఎడమ కన్ను మూసివేయండి. (ఇది స్క్రీన్ యొక్క ఎడమ వైపు.)\\n2. మినుకుమినుకుమనే చుక్కను స్లైడ్ చేయడానికి ▶ బాణం కీని ఉపయోగించండి. .\\n3. రిటర్న్ హిట్.\\nగమనిక: క్రాస్ వెంట్రుకలపై మీ కన్ను ఉంచండి. మీ కన్ను అనుసరించేటప్పుడు మినుకుమినుకుమనే చుక్క కనిపించదు.',\r\n    kn: '1. ನಿಮ್ಮ ಎಡಗಣ್ಣನ್ನು ಮುಚ್ಚಿ. (ಇದು ಪರದೆಯ ಎಡಭಾಗವಾಗಿದೆ.)\\n2. ಮಿನುಗುವ ಚುಕ್ಕೆ ಸ್ಲೈಡ್ ಮಾಡಲು ▶ ಬಾಣದ ಕೀಲಿಯನ್ನು ಬಳಸಿ. .\\n3. ರಿಟರ್ನ್ ಹಿಟ್.\\nಗಮನಿಸಿ: ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಕಣ್ಣಿಡಿ. ನಿಮ್ಮ ಕಣ್ಣು ಅದನ್ನು ಅನುಸರಿಸುವಾಗ ಮಿನುಗುವ ಚುಕ್ಕೆ ಕಣ್ಮರೆಯಾಗುವುದಿಲ್ಲ.',\r\n    bn: '1. আপনার বাম চোখ বন্ধ করুন। (এটি পর্দার বাম দিক))\\n2. ফ্লিকারিং ডট স্লাইড করতে ▶ তীর কী ব্যবহার করুন। (বা কেবল এটি টেনে আনুন, যদি এটি তীর কীতে সাড়া না দেয়)) ক্রস চুলের দিকে তাকানোর সময়, আপনার চোখের কোণে ঝলকানি বিন্দুটি পর্যবেক্ষণ করুন এবং এটি আপনার ব্লাইন্ডস্পটে অদৃশ্য হওয়া অবধি বাম এবং ডানদিকে স্লাইড করুন।\\n3. হিট রিটার্ন।\\nদ্রষ্টব্য: ক্রস চুলের দিকে নজর রাখুন। আপনার চোখ এটি অনুসরণ করার সময় ঝাঁকুনির বিন্দু অদৃশ্য হয়ে যাবে না।',\r\n    id: '1. Tutup mata kiri Anda. (Ini adalah sisi kiri layar.)\\n2. Gunakan ▶ tombol panah untuk menggeser titik yang berkedip -kedip. ;\\n3. Hit Return.\\nCatatan: Perhatikan rambut salib. Dot yang berkedip tidak akan hilang saat mata Anda mengikutinya.',\r\n    'zh-CN':\r\n      '1.闭上左眼。 （这是屏幕的左侧。）\\n2.使用▶箭头键滑动闪烁的点。 （或者只是将其拖动，如果它没有响应箭头钥匙。）看着十字头发时，监视眼角的闪烁点，然后向左和向右滑动，直到它消失在盲点中​​。\\n3.命中返回。\\n注意：请密切关注十字头发。当您的眼睛跟随它时，闪烁的点不会消失。',\r\n    'zh-HK':\r\n      '1.閉上左眼。 （這是屏幕的左側。）\\n2.使用▶箭頭鍵滑動閃爍的點。 （或者只是將其拖動，如果它沒有響應箭頭鑰匙。）看著十字頭髮時，監視眼角的閃爍點，然後向左和向右滑動，直到它消失在盲點中​​。\\n3.命中返回。\\n注意：請密切關註十字頭髮。當您的眼睛跟隨它時，閃爍的點不會消失。',\r\n    ja: '1.左目を閉じます。 （これは画面の左側です。）\\n2.▶矢印キーを使用して、ちらつきのドットをスライドさせます。 （または、矢印キーに応答しない場合は、ドラッグしてください。）交差毛を見ながら、目の隅にあるちらつきのドットを監視し、盲点に消えるまで左右にスライドさせます。\\n3.返信をヒットします。\\n注：十字毛に目を向けてください。目が続く間、ちらつきのドットは消えません。',\r\n    ko: '1. 왼쪽 눈을 닫습니다. (이것은 화면의 왼쪽입니다.)\\n2. ▶ 화살표 키를 사용하여 깜박 거리는 점을 밀어냅니다. (또는 화살표 키에 응답하지 않으면 드래그하십시오.) 십자 머리카락을 보면서 눈 모서리의 깜박 거리는 점을 모니터링하고 사각 지대로 사라질 때까지 왼쪽과 오른쪽으로 밀어 넣으십시오.\\n3. 반환을 누르십시오.\\n참고 : 크로스 털을 주시하십시오. 눈이 뒤 따르는 동안 깜박 거리는 점은 사라지지 않습니다.',\r\n  },\r\n  RC_distanceTrackingCloseR: {\r\n    'en-US':\r\n      \"1. Close your RIGHT eye. (This is the right side of the screen.)\\n2. Use ◀ arrow key to slide the flickering dot. While looking at the cross hairs, monitor the flickering dot in the corner of your eye, and slide it left and right until it disappears into your blindspot.\\n3. Hit RETURN.\\nNOTE: Keep your eye on the cross hairs. The flickering dot won't disappear while your eye follows it. \",\r\n    de: '1. Schließen Sie Ihr rechtes Auge. (Dies ist die rechte Seite des Bildschirms.)\\n2. Verwenden Sie ◀ Pfeilschlüssel, um den flackernden Punkt zu schieben. Überwachen Sie beim Betrachten der Kreuzhaare den flackernden Punkt in Ihrem Augenwinkel und schieben Sie ihn nach links und rechts, bis er in Ihren Blindspot verschwindet.\\n3. Return to Return.\\nHinweis: Behalten Sie die Kreuzhaare im Auge. Der flackernde Punkt wird nicht verschwinden, während Ihr Auge ihm folgt.',\r\n    fr: \"1. Fermez votre œil droit. (C'est le côté droit de l'écran.)\\n2. Utilisez la touche flèche ◀ pour faire glisser le point scintillant. Tout en regardant les poils, surveillez le point scintillant dans le coin de votre œil et faites-le glisser à gauche et à droite jusqu'à ce qu'il disparaisse dans votre point mort.\\n3. Appuyez sur Retour.\\nRemarque: Gardez l'œil sur les poils. Le point vacillant ne disparaîtra pas pendant que votre œil le suit.\",\r\n    es: '1. Cierre el ojo derecho. (Este es el lado derecho de la pantalla).\\n2. Use la tecla de flecha ◀ para deslizar el punto parpadeante. Mientras mira los pelos de la cruz, monitoree el punto parpadeante en la esquina de su ojo y deslicelo hacia la izquierda y hacia la derecha hasta que desaparezca en su punto ciego.\\n3. Golpee el regreso.\\nNota: Mantén tu ojo en la cruz. El punto parpadeante no desaparecerá mientras su ojo lo sigue.',\r\n    pt: '1. Feche o olho direito. (Este é o lado direito da tela.)\\n2. Use ◀ Tecla de seta para deslizar o ponto de tremeling. Enquanto olha para os cabelos cruzados, monitore o ponto trêmulo no canto do olho e deslize -o para a esquerda e para a direita até desaparecer no seu ponto cego.\\n3. Bata o retorno.\\nNota: Fique de olho nos cabelos cruzados. O ponto piscador não desaparecerá enquanto seu olho o segue.',\r\n    it: \"1. Chiudi l'occhio destro. (Questo è il lato destro dello schermo.)\\n2. Utilizzare il tasto freccia ◀ per far scorrere il punto tremolante. Mentre guardi i peli incrociati, monitora il punto tremolo nell'angolo dell'occhio e fai scorrere a sinistra e a destra fino a quando non scompare nel tuo cieco.\\n3. Colpire il ritorno.\\nNota: tieni d'occhio i capelli incrociati. Il punto tremolante non scomparirà mentre il tuo occhio lo segue.\",\r\n    ro: '1. Închideți ochiul drept. (Aceasta este partea dreaptă a ecranului.)\\n2. Utilizați ◀ tasta săgeată pentru a glisa punctul pâlpâit. În timp ce te uiți la părul încrucișat, monitorizează punctul pâlpâitor din colțul ochiului și glisează -l la stânga și la dreapta până când dispare în Blindspot.\\n3. Apăsați Return.\\nNotă: Fii cu ochii pe firele de păr. Punctul pâlpâit nu va dispărea în timp ce ochiul tău îl urmărește.',\r\n    pl: '1. Zamknij prawe oko. (To jest prawa strona ekranu.)\\n2. Użyj klawisza strzałki, aby przesunąć migoczącą kropkę. Patrząc na włosy krzyżowe, monitoruj migoczącą kropkę w rogu oka i przesuń je w lewo i w prawo, aż zniknie w twojej ślepej.\\n3. Hit Return.\\nUwaga: miej oko na włosy krzyżowe. Migocząca kropka nie zniknie, gdy podąża za nim oko.',\r\n    ru: '1. Закройте правый глаз. (Это правая сторона экрана.)\\n2. Используйте ◀ Ключ стрелки, чтобы сдвинуть мерцающую точку. Посмотрев на кросс -волосы, следите за мерцающей точкой в ​​углу глаза, и сдвиньте ее влево и направо, пока она не исчезнет в вашей слепой точке.\\n3. Нажмите на возврат.\\nПримечание: следите за кросс -волосами. Мерцающая точка не исчезнет, ​​пока ваш глаз следует за ней.',\r\n    hy: '1. Փակեք ձեր աջ աչքը: (Սա էկրանի աջ կողմն է):\\n2. Օգտագործեք ◀ սլաքի ստեղնը `շողոքորթ կետը սահելու համար: Խաչի մազերը նայելիս վերահսկեք ձեր աչքի անկյունում գտնվող թիթեղի կետը եւ սահեցրեք այն ձախ եւ աջ, մինչեւ այն վերանա ձեր կույր:\\n3. Հիթ վերադարձ:\\nՆշում. Ձեր աչքը պահեք խաչի մազերի վրա: Հղումային կետը չի վերանա, մինչդեռ ձեր աչքը հետեւում է դրան:',\r\n    fi: \"1. Sulje oikea silmä. (Tämä on näytön oikea puoli.)\\n2. Liu'uta välkkyvä pisteen nuolinäppäintä. Kun katsot ristiinkarvoja, tarkkaile vilkkuvaa pistettä silmäsi nurkassa ja liu'uta se vasemmalle ja oikealle, kunnes se katoaa blindspotisi.\\n3. Osu paluu.\\nHuomaa: Pidä silmällä ristikarvoja. Vilkkuva piste ei katoa, kun silmäsi seuraa sitä.\",\r\n    ka: '1. დახურეთ თქვენი მარჯვენა თვალი. (ეს არის ეკრანის მარჯვენა მხარე.)\\n2. გამოიყენეთ ◀ ისრის ღილაკი, რომ გააფართოვოთ მბჟუტავი წერტილი. ჯვრის თმას დათვალიერებისას, თვალის კუთხეში მბზინავი წერტილი დააკვირდით და გადაიტანეთ მარცხნივ და მარჯვნივ, სანამ ის არ ქრება თქვენს ჟალუზაში.\\n3. მოხვდი დაბრუნებას.\\nშენიშვნა: მიადევნეთ თვალი ჯვრის თმას. მბჟუტავი წერტილი არ გაქრება, სანამ შენი თვალი მისდევს.',\r\n    he: '1. סגור את העין הימנית שלך. (זהו הצד הימני של המסך.)\\n2. השתמש במפתח חץ כדי להחליק את הנקודה המהבהבת. תוך כדי התבוננות בשערות הצלב, עקוב אחר הנקודה המהבהבת בפינת העין שלך, והחליק אותה שמאלה וימינה עד שהיא נעלמת אל כתב העיוור שלך.\\n3. פגע בחזרה.\\nהערה: השגיח על שערות הצלב. הנקודה המהבהבת לא תיעלם בזמן שהעין שלך עוקבת אחריה.',\r\n    ar: '1. أغلق عينك اليمنى. (هذا هو الجانب الأيمن من الشاشة.)\\n2. استخدم ◀ مفتاح السهم لنقل النقطة الخفقان. أثناء النظر إلى الشعر المتقاطع ، راقب النقطة الخفقان في زاوية عينيك ، وحركها إلى اليسار واليمين حتى تختفي في لعبة BlindSpot.\\n3. ضرب العودة.\\nملاحظة: راقب الشعر المتقاطع. لن تختفي النقطة الخفقان بينما تتبعها عينك.',\r\n    ur: '1. اپنی دائیں آنکھ کو بند کریں۔ (یہ اسکرین کا دائیں طرف ہے۔)\\n2. فلکرنگ ڈاٹ سلائیڈ کرنے کے لئے ◀ یرو کلید کا استعمال کریں۔ کراس بالوں کو دیکھتے ہوئے ، اپنی آنکھ کے کونے میں ٹمٹماہٹ ڈاٹ کی نگرانی کریں ، اور اسے بائیں اور دائیں سلائیڈ کریں جب تک کہ یہ آپ کے اندھے مقام میں غائب نہ ہوجائے۔\\n3. واپسی کو ماریں۔\\nنوٹ: کراس بالوں پر نگاہ رکھیں۔ جب آپ کی آنکھ اس کی پیروی کرتی ہے تو چمکتا ہوا ڈاٹ غائب نہیں ہوگا۔',\r\n    hi: '1. अपनी दाहिनी आंख बंद करें। (यह स्क्रीन का दाहिना हिस्सा है।)\\n2. टिमटिमाती डॉट को स्लाइड करने के लिए ◀ तीर कुंजी का उपयोग करें। क्रॉस हेयर को देखते समय, अपनी आंख के कोने में टिमटिमाते हुए डॉट की निगरानी करें, और इसे बाएं और दाएं स्लाइड करें जब तक कि यह आपके ब्लाइंडस्पॉट में गायब न हो जाए।\\n3. हिट रिटर्न।\\nनोट: अपनी नजर क्रॉस हेयर पर रखें। झिलमिलाहट डॉट गायब नहीं होगा जबकि आपकी आंख इसका अनुसरण करती है।',\r\n    ta: '1. உங்கள் வலது கண்ணை மூடு. (இது திரையின் வலது பக்கம்.)\\n2. ஒளிரும் புள்ளியை சறுக்குவதற்கு ◀ அம்பு விசையைப் பயன்படுத்தவும். குறுக்கு முடிகளைப் பார்க்கும்போது, ​​உங்கள் கண்ணின் மூலையில் உள்ள ஒளிரும் புள்ளியைக் கண்காணிக்கவும், அது உங்கள் குருட்டு இடத்திற்குள் மறைந்து போகும் வரை இடது மற்றும் வலதுபுறமாக சறுக்கவும்.\\n3. வருவாய்.\\nகுறிப்பு: குறுக்கு முடிகள் மீது உங்கள் கண் வைத்திருங்கள். உங்கள் கண் அதைப் பின்தொடரும் போது ஒளிரும் புள்ளி மறைந்துவிடாது.',\r\n    ml: '1. നിങ്ങളുടെ വലത് കണ്ണ് അടയ്ക്കുക. (ഇത് സ്ക്രീനിന്റെ വലതുവശമാണ്.)\\n2. ഫ്ലിക്കറിംഗ് ഡോട്ട് സ്ലൈഡുചെയ്യാൻ ◀ അമ്പടയാളം ഉപയോഗിക്കുക. ക്രോസ് ഹെയറുകളിലേക്ക് നോക്കുമ്പോൾ, നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ മിന്നുന്ന ഡോട്ട് നിരീക്ഷിക്കുക, അത് നിങ്ങളുടെ ബ്ലൈൻഡ്സ്പോട്ടിലേക്ക് അപ്രത്യക്ഷമാകുന്നതുവരെ അവശേഷിക്കുകയും വലത്തോട്ടും സ്ലൈഡുചെയ്യുകയും ചെയ്യുക.\\n3. റിട്ടേൺ അമർത്തുക.\\nകുറിപ്പ്: ക്രോസ് രോമങ്ങളിൽ നിങ്ങളുടെ കണ്ണു സൂക്ഷിക്കുക. നിങ്ങളുടെ കണ്ണ് അത് പിന്തുടരുമ്പോൾ മിന്നുന്ന ഡോട്ട് അപ്രത്യക്ഷമാകില്ല.',\r\n    te: '1. మీ కుడి కన్ను మూసివేయండి. (ఇది స్క్రీన్ యొక్క కుడి వైపు.)\\n2. మినుకుమినుకుమనే చుక్కను స్లైడ్ చేయడానికి ◀ బాణం కీని ఉపయోగించండి. క్రాస్ హెయిర్స్ వైపు చూస్తున్నప్పుడు, మీ కంటి మూలలో ఉన్న ఆడంబరం చుక్కను పర్యవేక్షించండి మరియు అది మీ బ్లైండ్ స్పాట్ లోకి అదృశ్యమయ్యే వరకు దానిని ఎడమ మరియు కుడి వైపుకు జారండి.\\n3. రిటర్న్ హిట్.\\nగమనిక: క్రాస్ వెంట్రుకలపై మీ కన్ను ఉంచండి. మీ కన్ను అనుసరించేటప్పుడు మినుకుమినుకుమనే చుక్క కనిపించదు.',\r\n    kn: '1. ನಿಮ್ಮ ಬಲಗಣ್ಣನ್ನು ಮುಚ್ಚಿ. (ಇದು ಪರದೆಯ ಬಲಭಾಗವಾಗಿದೆ.)\\n2. ಮಿನುಗುವ ಚುಕ್ಕೆ ಸ್ಲೈಡ್ ಮಾಡಲು ◀ ಬಾಣದ ಕೀಲಿಯನ್ನು ಬಳಸಿ. ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವಾಗ, ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಲ್ಲಿ ಮಿನುಗುವ ಚುಕ್ಕೆಯನ್ನು ಮೇಲ್ವಿಚಾರಣೆ ಮಾಡಿ ಮತ್ತು ನಿಮ್ಮ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್‌ಗೆ ಕಣ್ಮರೆಯಾಗುವವರೆಗೆ ಅದನ್ನು ಎಡ ಮತ್ತು ಬಲಕ್ಕೆ ಸ್ಲೈಡ್ ಮಾಡಿ.\\n3. ರಿಟರ್ನ್ ಹಿಟ್.\\nಗಮನಿಸಿ: ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಕಣ್ಣಿಡಿ. ನಿಮ್ಮ ಕಣ್ಣು ಅದನ್ನು ಅನುಸರಿಸುವಾಗ ಮಿನುಗುವ ಚುಕ್ಕೆ ಕಣ್ಮರೆಯಾಗುವುದಿಲ್ಲ.',\r\n    bn: '1. আপনার ডান চোখ বন্ধ করুন। (এটি পর্দার ডান দিক))\\n2. ফ্লিকারিং ডট স্লাইড করতে ◀ তীর কী ব্যবহার করুন। ক্রস কেশগুলি দেখার সময়, আপনার চোখের কোণে ফ্লিকারিং ডটটি পর্যবেক্ষণ করুন এবং এটি আপনার ব্লাইন্ডস্পটে অদৃশ্য না হওয়া পর্যন্ত বাম এবং ডানদিকে স্লাইড করুন।\\n3. হিট রিটার্ন।\\nদ্রষ্টব্য: ক্রস চুলের দিকে নজর রাখুন। আপনার চোখ এটি অনুসরণ করার সময় ঝাঁকুনির বিন্দু অদৃশ্য হয়ে যাবে না।',\r\n    id: '1. Tutup mata kanan Anda. (Ini adalah sisi kanan layar.)\\n2. Gunakan ◀ tombol panah untuk menggeser titik yang berkedip -kedip. Sambil melihat rambut salib, pantau titik -titik yang berkedip -kedip di sudut mata Anda, dan geser ke kiri dan kanan sampai menghilang ke dalam buta Anda.\\n3. Hit Return.\\nCatatan: Perhatikan rambut salib. Dot yang berkedip tidak akan hilang saat mata Anda mengikutinya.',\r\n    'zh-CN':\r\n      '1.闭上右眼。 （这是屏幕的右侧。）\\n2.使用◀箭头键滑动闪烁的点。看着十字头发时，请监视眼角的闪烁点，然后向左和向右滑动，直到它消失在盲点中​​。\\n3.命中返回。\\n注意：请密切关注十字头发。当您的眼睛跟随它时，闪烁的点不会消失。',\r\n    'zh-HK':\r\n      '1.閉上右眼。 （這是屏幕的右側。）\\n2.使用◀箭頭鍵滑動閃爍的點。看著十字頭髮時，請監視眼角的閃爍點，然後向左和向右滑動，直到它消失在盲點中​​。\\n3.命中返回。\\n注意：請密切關註十字頭髮。當您的眼睛跟隨它時，閃爍的點不會消失。',\r\n    ja: '1.右目を閉じます。 （これは画面の右側です。）\\n2.◀矢印キーを使用して、ちらつきのドットをスライドさせます。交差毛を見ながら、目の隅にあるちらつきのドットを監視し、盲点に消えるまで左右にスライドさせます。\\n3.返信をヒットします。\\n注：十字毛に目を向けてください。目が続く間、ちらつきのドットは消えません。',\r\n    ko: '1. 오른쪽 눈을 감습니다. (이것은 화면의 오른쪽입니다.)\\n2. ◀ 화살표 키를 사용하여 깜박 거리는 점을 밀어냅니다. 십자 머리카락을 보면서 눈 모퉁이의 깜박 거리는 점을 모니터링하고 사각 지대로 사라질 때까지 왼쪽과 오른쪽으로 밀어 넣으십시오.\\n3. 반환을 누르십시오.\\n참고 : 크로스 털을 주시하십시오. 눈이 뒤 따르는 동안 깜박 거리는 점은 사라지지 않습니다.',\r\n  },\r\n  RC_distanceTrackingGuide: {\r\n    'en-US':\r\n      'Your eyes are xx1 cm from the screen, but the experiment needs approximately xx2 cm. The experiment will resume when you reach the correct distance.',\r\n    de: 'Ihre Augen sind xx1 cm vom Bildschirm entfernt, aber das Experiment benötigt ungefähr xx2 cm. Das Experiment wird wieder aufgenommen, wenn Sie den richtigen Abstand erreichen.',\r\n    fr: \"Vos yeux sont à xx1 cm de l'écran, mais l'expérience a besoin d'environ xx2 cm. L'expérience reprendra lorsque vous atteignez la distance correcte.\",\r\n    es: 'Tus ojos están a xx1 cm de la pantalla, pero el experimento necesita aproximadamente xx2 cm. El experimento se reanudará cuando alcances la distancia correcta.',\r\n    pt: 'Seus olhos estão xx1 cm da tela, mas o experimento precisa de aproximadamente xx2 cm. O experimento será retomado quando você atingir a distância correta.',\r\n    it: \"I tuoi occhi sono xx1 cm dallo schermo, ma l'esperimento richiede circa xx2 cm. L'esperimento riprenderà quando raggiungi la distanza corretta.\",\r\n    ro: 'Ochii tăi sunt xx1 cm de ecran, dar experimentul are nevoie de aproximativ xx2 cm. Experimentul se va relua când ajungeți la distanța corectă.',\r\n    pl: 'Twoje oczy są xx1 cm od ekranu, ale eksperyment wymaga około xx2 cm. Eksperyment zostanie wznowiony po osiągnięciu prawidłowej odległości.',\r\n    ru: 'Ваши глаза находятся в xx1 см от экрана, но эксперимент нуждается в приблизительно xx2 см. Эксперимент возобновится, когда вы достигнете правильного расстояния.',\r\n    hy: 'Ձեր աչքերը էկրանից xx1 սմ-ում են, բայց փորձը պետք է մոտավորապես xx2 սմ: Փորձը կվերսկսվի ճիշտ հեռավորության վրա:',\r\n    fi: 'Silmäsi ovat xx1 cm näytöltä, mutta koe tarvitsee noin xx2 cm. Koe jatkuu, kun saavutat oikean etäisyyden.',\r\n    ka: 'თქვენი თვალები ეკრანიდან xx1 სმ არის, მაგრამ ექსპერიმენტს სჭირდება დაახლოებით xx2 სმ. ექსპერიმენტი განახლდება, როდესაც მიაღწევთ სწორ მანძილს.',\r\n    he: 'העיניים שלך הן xx1 ס\"מ מהמסך, אך הניסוי זקוק לכ- xx2 ס\"מ. הניסוי יחודש כשתגיע למרחק הנכון.',\r\n    ar: 'عيناك xx1 سم من الشاشة ، ولكن التجربة تحتاج إلى حوالي xx2 سم. ستستأنف التجربة عند الوصول إلى المسافة الصحيحة.',\r\n    ur: 'آپ کی آنکھیں اسکرین سے xx1 سینٹی میٹر ہیں ، لیکن اس تجربے کی ضرورت تقریبا x xx2 سینٹی میٹر کی ضرورت ہے۔ جب آپ صحیح فاصلے پر پہنچیں گے تو تجربہ دوبارہ شروع ہوگا۔',\r\n    hi: 'आपकी आँखें स्क्रीन से xx1 सेमी हैं, लेकिन प्रयोग को लगभग xx2 सेमी की आवश्यकता होती है। जब आप सही दूरी तक पहुंचेंगे तो प्रयोग फिर से शुरू हो जाएगा।',\r\n    ta: 'உங்கள் கண்கள் திரையில் இருந்து xx1 செ.மீ., ஆனால் எக்ஸ் xx2 செமீ பற்றி தேவை. நீங்கள் விரும்பிய தூரம் செல்லும்போது பரிசோதனை மீண்டும் தொடங்கும்.',\r\n    ml: 'സ്ക്രീനിൽ നിന്നുള്ള xx1 സെന്റിമീറ്റർ നിങ്ങളുടെ കണ്ണുകൾ ഉണ്ട്, പക്ഷേ പരീക്ഷണത്തിന് ഏകദേശം xx2 സെ. നിങ്ങൾ ശരിയായ ദൂരത്തിലെത്തുമ്പോൾ പരീക്ഷണം പുനരാരംഭിക്കും.',\r\n    te: 'మీ కళ్ళు స్క్రీన్ నుండి xx1 సెం.మీ., కానీ ప్రయోగానికి సుమారు xx2 సెం.మీ. మీరు సరైన దూరానికి చేరుకున్నప్పుడు ప్రయోగం తిరిగి ప్రారంభమవుతుంది.',\r\n    kn: 'ನಿಮ್ಮ ಕಣ್ಣುಗಳು ಪರದೆಯಿಂದ xx1 ಸೆಂ.ಮೀ., ಆದರೆ ಪ್ರಯೋಗಕ್ಕೆ ಸುಮಾರು xx2 ಸೆಂ ಅಗತ್ಯವಿದೆ. ನೀವು ಸರಿಯಾದ ದೂರವನ್ನು ತಲುಪಿದಾಗ ಪ್ರಯೋಗವು ಪುನರಾರಂಭಗೊಳ್ಳುತ್ತದೆ.',\r\n    bn: 'আপনার চোখ স্ক্রিন থেকে xx1 সেমি, তবে পরীক্ষায় প্রায় xx2 সেমি প্রয়োজন। আপনি যখন সঠিক দূরত্বে পৌঁছেছেন তখন পরীক্ষাটি আবার শুরু হবে।',\r\n    id: 'Mata Anda adalah xx1 cm dari layar, tetapi percobaan membutuhkan sekitar xx2 cm. Eksperimen akan dilanjutkan saat Anda mencapai jarak yang benar.',\r\n    'zh-CN':\r\n      '您的眼睛离屏幕约 xx1 厘米，但我们需要大约 xx2 厘米。 当您移动到接近的距离后实验将会继续进行。',\r\n    'zh-HK':\r\n      '您的眼睛離屏幕約 xx1 厘米，但我們需要大約 xx2 厘米。 當您移動到接近的距離後實驗將會繼續進行。',\r\n    ja: 'あなたの目は画面からxx1 cmですが、実験ではおよそxx2 cmを必要とします。適切な距離になると実験が再開されます。',\r\n    ko: '눈은 화면에서 xx1 cm이지만 실험은 대략 xx2 cm가 필요합니다. 올바른 거리에 도달하면 실험이 재개됩니다.',\r\n  },\r\n  RC_distanceTrackingIntroEnd: {\r\n    'en-US': \"Once you're done, distance tracking will begin.\",\r\n    de: 'Sobald Sie fertig sind, beginnt die Distanzverfolgung.',\r\n    fr: 'Une fois que vous aurez terminé, le suivi à distance commencera.',\r\n    es: 'Una vez que haya terminado, comenzará el seguimiento de distancia.',\r\n    pt: 'Quando terminar, o rastreamento da distância começará.',\r\n    it: 'Una volta che hai finito, inizierà il monitoraggio della distanza.',\r\n    ro: 'După ce ați terminat, va începe urmărirea distanței.',\r\n    pl: 'Po zakończeniu rozpocznie się śledzenie odległości.',\r\n    ru: 'Как только вы закончите, начнется отслеживание расстояний.',\r\n    hy: 'Ավարտելուց հետո սկսվելու է հեռավորության հետեւում:',\r\n    fi: 'Kun olet valmis, etäisyysseuranta alkaa.',\r\n    ka: 'დასრულების შემდეგ, დისტანციური თვალყურის დევნება დაიწყება.',\r\n    he: 'לאחר שתסיים, מעקב מרחק יתחיל.',\r\n    ar: 'بمجرد الانتهاء ، سيبدأ تتبع المسافات.',\r\n    ur: 'ایک بار جب آپ کام کرلیں تو ، فاصلے سے باخبر رہنا شروع ہوجائے گا۔',\r\n    hi: 'एक बार जब आप कर लेते हैं, तो दूरी ट्रैकिंग शुरू हो जाएगी।',\r\n    ta: 'நீங்கள் முடித்ததும், தூர கண்காணிப்பு தொடங்கும்.',\r\n    ml: 'നിങ്ങൾ പൂർത്തിയാക്കിക്കഴിഞ്ഞാൽ, വിദൂര ട്രാക്കിംഗ് ആരംഭിക്കും.',\r\n    te: 'మీరు పూర్తి చేసిన తర్వాత, దూర ట్రాకింగ్ ప్రారంభమవుతుంది.',\r\n    kn: 'ನೀವು ಮುಗಿದ ನಂತರ, ದೂರ ಟ್ರ್ಯಾಕಿಂಗ್ ಪ್ರಾರಂಭವಾಗುತ್ತದೆ.',\r\n    bn: 'আপনার কাজ শেষ হয়ে গেলে, দূরত্বের ট্র্যাকিং শুরু হবে।',\r\n    id: 'Setelah selesai, pelacakan jarak akan dimulai.',\r\n    'zh-CN': '在您完成后，视距追踪将开始。',\r\n    'zh-HK': '在您完成後，視距追踪將開始。',\r\n    ja: '完了したら、距離追跡が開始されます。',\r\n    ko: '완료되면 거리 추적이 시작됩니다.',\r\n  },\r\n  RC_distanceTrackingIntroStart: {\r\n    'en-US': '❌ RC_distanceTrackingIntroStart is obsolete.',\r\n    de: '',\r\n    fr: '',\r\n    es: '',\r\n    pt: '',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: '',\r\n    ur: '',\r\n    hi: '',\r\n    ta: '',\r\n    ml: '',\r\n    te: '',\r\n    kn: '',\r\n    bn: '',\r\n    id: '',\r\n    'zh-CN': '',\r\n    'zh-HK': '',\r\n    ja: '',\r\n    ko: '',\r\n  },\r\n  RC_distanceTrackingMoveCloser: {\r\n    'en-US': 'Move closer',\r\n    de: 'Komm näher',\r\n    fr: 'Approchez-vous',\r\n    es: 'Acércate a la pantalla',\r\n    pt: 'Aproveite -se',\r\n    it: 'Avvicinarsi',\r\n    ro: 'Vino mai aproape',\r\n    pl: 'Podejdź bliżej',\r\n    ru: 'Двигайтесь ближе',\r\n    hy: 'Շարժվել ավելի մոտ',\r\n    fi: 'Liikkua lähemmäs',\r\n    ka: 'უფრო ახლოს გადაადგილება',\r\n    he: 'תתקרב',\r\n    ar: 'تقترب',\r\n    ur: 'قریب جائیں',\r\n    hi: 'निकट आएं',\r\n    ta: 'நெருங்கி நகர்த்தவும்',\r\n    ml: 'അടുത്ത് നീങ്ങുക',\r\n    te: 'దగ్గరగా కదలండి',\r\n    kn: 'ಹತ್ತಿರ ಸರಿಸಿ',\r\n    bn: 'আরো কাছে আস',\r\n    id: 'Merapat',\r\n    'zh-CN': '靠近一点。',\r\n    'zh-HK': '靠近一點。',\r\n    ja: 'もっと近づいてください。',\r\n    ko: '더 가까이 움직입니다',\r\n  },\r\n  RC_distanceTrackingMoveFurther: {\r\n    'en-US': 'Move farther',\r\n    de: 'Sich weiter bewegen',\r\n    fr: 'Se déplacer plus loin',\r\n    es: 'Aléjate de la plantalla',\r\n    pt: 'Mover mais longe',\r\n    it: 'Muoversi più lontano',\r\n    ro: 'Mutați -vă mai departe',\r\n    pl: 'Poruszaj się dalej',\r\n    ru: 'Двигаться дальше',\r\n    hy: 'Առաջ շարժվել',\r\n    fi: 'Liikkua kauemmas',\r\n    ka: 'უფრო შორს გადაადგილება',\r\n    he: 'לנוע רחוק יותר',\r\n    ar: 'تحرك أبعد',\r\n    ur: 'مزید آگے بڑھیں',\r\n    hi: 'आगे बढ़ना',\r\n    ta: 'தூரம் செல்லுங்கள்',\r\n    ml: 'കൂടുതൽ നീങ്ങുക',\r\n    te: 'దూరం కదలండి',\r\n    kn: 'ಹೆಚ್ಚು ದೂರ ಸರಿಸಿ',\r\n    bn: 'আরও দূরে সরান',\r\n    id: 'Bergerak lebih jauh',\r\n    'zh-CN': '离远一点。',\r\n    'zh-HK': '離遠一點。',\r\n    ja: 'もっと離れてください。',\r\n    ko: '더 멀리 움직입니다',\r\n  },\r\n  RC_distanceTrackingRedo: {\r\n    'en-US':\r\n      'PROBLEM? If the distance seems terribly wrong, click here to recalibrate it, and restart this block.',\r\n    de: 'PROBLEM? Wenn die Entfernung furchtbar falsch erscheint, klicken Sie hier, um sie neu zu kalibrieren und diesen Block neu zu starten.',\r\n    fr: 'PROBLÈME? Si la distance semble terriblement erronée, cliquez ici pour le recalibrer et redémarrez ce bloc.',\r\n    es: '¿PROBLEMA? Si la distancia parece terriblemente incorrecta, haga clic aquí para recalibrarla y reiniciar este bloque.',\r\n    pt: 'PROBLEMA? Se a distância parecer terrivelmente errada, clique aqui para recalibrá -la e reinicie este bloco.',\r\n    it: 'PROBLEMA? Se la distanza sembra terribilmente sbagliata, fai clic qui per ricalibrare e riavvia questo blocco.',\r\n    ro: 'PROBLEMĂ? Dacă distanța pare teribil de greșită, faceți clic aici pentru a -l recalibra și reporniți acest bloc.',\r\n    pl: 'PROBLEM? Jeśli odległość wydaje się strasznie błędna, kliknij tutaj, aby ją ponownie kalibrować, i uruchom ponownie ten blok.',\r\n    ru: 'ПРОБЛЕМА? Если расстояние кажется ужасно неправильным, нажмите здесь, чтобы перекалибровать его, и перезапустите этот блок.',\r\n    hy: 'Խնդիր? Եթե ​​հեռավորությունը սարսափելի սխալ է թվում, կտտացրեք այստեղ `այն վերահաշվարկելու եւ այս բլոկը վերագործարկելու համար:',\r\n    fi: 'ONGELMA? Jos etäisyys näyttää kauhean väärin, napsauta tätä uudelleen kalibroidaksesi uudelleen ja käynnistä tämä lohko uudelleen.',\r\n    ka: 'პრობლემა? თუ მანძილი საშინლად არასწორია, დააჭირეთ აქ, რომ გადააკეთოთ იგი და გადატვირთოთ ეს ბლოკი.',\r\n    he: 'בְּעָיָה? אם המרחק נראה שגוי להחריד, לחץ כאן כדי לכייל אותו מחדש ולהפעיל מחדש את החסימה הזו.',\r\n    ar: 'مشكلة؟ إذا كانت المسافة تبدو خاطئة بشكل رهيب ، فانقر هنا لإعادة معاييرها ، وأعد تشغيل هذه الكتلة.',\r\n    ur: 'مسئلہ؟ اگر فاصلہ بہت غلط معلوم ہوتا ہے تو ، اس کی بحالی کے لئے یہاں کلک کریں ، اور اس بلاک کو دوبارہ شروع کریں۔',\r\n    hi: 'संकट? यदि दूरी बहुत गलत लगती है, तो इसे पुन: प्रस्तुत करने के लिए यहां क्लिक करें, और इस ब्लॉक को पुनरारंभ करें।',\r\n    ta: 'பிரச்சனை? தூரம் மிகவும் தவறாகத் தெரிந்தால், அதை மறுபரிசீலனை செய்ய இங்கே கிளிக் செய்து, இந்தத் தொகுதியை மறுதொடக்கம் செய்யுங்கள்.',\r\n    ml: 'പ്രശ്നം? ദൂരം ഭയങ്കരമായി തെറ്റാണെന്ന് തോന്നുകയാണെങ്കിൽ, അത് വീണ്ടും വാങ്ങാനായി ഇവിടെ ക്ലിക്കുചെയ്യുക, ഈ ബ്ലോക്ക് പുനരാരംഭിക്കുക.',\r\n    te: 'సమస్య? దూరం చాలా తప్పుగా అనిపిస్తే, దాన్ని రీకాలిబ్రేట్ చేయడానికి ఇక్కడ క్లిక్ చేయండి మరియు ఈ బ్లాక్‌ను పున art ప్రారంభించండి.',\r\n    kn: 'ಸಮಸ್ಯೆ? ದೂರವು ಭಯಾನಕ ತಪ್ಪು ಎಂದು ತೋರುತ್ತಿದ್ದರೆ, ಅದನ್ನು ಮರುಸಂಗ್ರಹಿಸಲು ಇಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡಿ ಮತ್ತು ಈ ಬ್ಲಾಕ್ ಅನ್ನು ಮರುಪ್ರಾರಂಭಿಸಿ.',\r\n    bn: 'সমস্যা? যদি দূরত্বটি ভয়াবহভাবে ভুল বলে মনে হয় তবে এটি পুনরুদ্ধার করতে এখানে ক্লিক করুন এবং এই ব্লকটি পুনরায় চালু করুন।',\r\n    id: 'MASALAH? Jika jaraknya tampaknya sangat salah, klik di sini untuk mengkalibrasi ulang, dan memulai kembali blok ini.',\r\n    'zh-CN': '问题？如果距离似乎非常错误，请单击此处重新校准，然后重新启动此块。',\r\n    'zh-HK': '問題？如果距離似乎非常錯誤，請單擊此處重新校準，然後重新啟動此塊。',\r\n    ja: '問題？距離がひどく間違っているように見える場合は、ここをクリックして再調整し、このブロックを再起動してください。',\r\n    ko: '문제? 거리가 끔찍한 것처럼 보이면 여기를 클릭하여 다시 교정 하고이 블록을 다시 시작하십시오.',\r\n  },\r\n  RC_distanceTrackingTitle: {\r\n    'en-US': 'Find Your Blindspot',\r\n    de: 'Finden Sie Ihren Blindspot',\r\n    fr: 'Trouvez votre blindspot',\r\n    es: 'Configurar para seguimiento de distancia',\r\n    pt: 'Configurar para rastreamento de distância',\r\n    it: 'Trova il tuo cieco',\r\n    ro: 'Configurați pentru urmărirea distanței',\r\n    pl: 'Skonfiguruj śledzenie odległości ',\r\n    ru: 'Найдите свой слепой точку',\r\n    hy: 'Գտեք ձեր կուր կետը',\r\n    fi: 'Löydä blindspot',\r\n    ka: 'იპოვნეთ თქვენი ჟალუზის წერტილი',\r\n    he: 'מצא את העיוור שלך',\r\n    ar: 'الإعداد لتتبع الرأس',\r\n    ur: 'سر سے باخبر رہنے کے لئے تیار ہوجائیں\\n',\r\n    hi: 'हेड ट्रैकिंग के लिए तयार हो जाए\\n',\r\n    ta: 'உங்கள் பிளைண்ட்ஸ்பாட்டைக் கண்டறியவும்',\r\n    ml: 'നിങ്ങളുടെ ബ്ലൈൻഡ്സ്പോട്ട് കണ്ടെത്തുക',\r\n    te: 'మీ బ్లైండ్‌స్పాట్‌ను కనుగొనండి',\r\n    kn: 'ನಿಮ್ಮ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್ ಅನ್ನು ಹುಡುಕಿ',\r\n    bn: 'আপনার ব্লাইন্ডস্পট সন্ধান করুন',\r\n    id: 'Temukan blindspot Anda',\r\n    'zh-CN': '视距追踪初始化',\r\n    'zh-HK': '視距追踪初始化',\r\n    ja: '距離追跡を設定します。',\r\n    ko: '블라인드 스팟을 찾으십시오',\r\n  },\r\n  RC_environment: {\r\n    'en-US': 'System Information',\r\n    de: 'System Information',\r\n    fr: 'Informations sur le système',\r\n    es: 'Información del sistema',\r\n    pt: 'Informação do sistema',\r\n    it: 'Informazioni sul sistema',\r\n    ro: 'Informatii despre sistem',\r\n    pl: 'Informacje o systemie',\r\n    ru: 'Системная информация',\r\n    hy: 'Համակարգի տեղեկատվություն',\r\n    fi: 'Järjestelmätiedot',\r\n    ka: 'Სისტემის ინფორმაცია',\r\n    he: 'מידע מערכת',\r\n    ar: 'معلومات النظام',\r\n    ur: 'سسٹم کی معلومات',\r\n    hi: 'सिस्टम की जानकारी',\r\n    ta: 'கணினி தகவல்',\r\n    ml: 'സിസ്റ്റം വിവരങ്ങൾ',\r\n    te: 'సిస్టమ్ సమాచారం',\r\n    kn: 'ಯಂತ್ರದ ಮಾಹಿತಿ',\r\n    bn: 'পদ্ধতিগত তথ্য',\r\n    id: 'Sistem Informasi',\r\n    'zh-CN': '系统信息',\r\n    'zh-HK': '系統信息',\r\n    ja: 'システム情報',\r\n    ko: '시스템 정보',\r\n  },\r\n  RC_errorCameraUseDenied: {\r\n    'en-US':\r\n      'As stated in its description, this study is incompatible with ooo, and needs the BBB browser running on a DDD with at least 222 CPU cores',\r\n    de: 'Wie in ihrer Beschreibung angegeben, ist diese Studie mit OOO unvereinbar und benötigt den BBB -Browser, der auf einem DDD mit mindestens 222 CPU -Kernen ausgeführt wird',\r\n    fr: 'Comme indiqué dans sa description, cette étude est incompatible avec OOO et a besoin du navigateur BBB fonctionnant sur un DDD avec au moins 222 cœurs CPU',\r\n    es: 'Como se indica en su descripción, este estudio es incompatible con OOO y necesita el navegador BBB que se ejecuta en un DDD con al menos 222 núcleos de CPU',\r\n    pt: 'Conforme declarado em sua descrição, este estudo é incompatível com o OOO e precisa do navegador BBB em um DDD com pelo menos 222 núcleos da CPU',\r\n    it: 'Come affermato nella sua descrizione, questo studio è incompatibile con OOO e ha bisogno del browser BBB in esecuzione su un DDD con almeno 222 core CPU',\r\n    ro: 'După cum s -a menționat în descrierea sa, acest studiu este incompatibil cu OOO și are nevoie de browserul BBB care rulează pe un DDD cu cel puțin 222 de nuclee CPU',\r\n    pl: 'Jak stwierdzono w opisie, badanie to jest niezgodne z OOO i wymaga przeglądarki BBB działającej na DDD z co najmniej 222 rdzeniami procesora',\r\n    ru: 'Как указано в его описании, это исследование несовместимо с OOO и нуждается в браузере BBB, работающем на DDD с не менее 222 ядрами процессора',\r\n    hy: 'Ինչպես նշված է իր նկարագրության մեջ, այս ուսումնասիրությունը անհամատեղելի է OOO- ի հետ, եւ անհրաժեշտ է BBB զննարկիչը, որն աշխատում է DDD- ով `առնվազն 222 պրոցեսորի միջուկներով',\r\n    fi: 'Kuten kuvauksessaan todetaan, tämä tutkimus ei ole yhteensopiva OOO: n kanssa ja tarvitsee BBB -selaimen, joka toimii DDD: llä vähintään 222 CPU -ytimellä',\r\n    ka: 'როგორც აღწერა აღწერილი, ეს კვლევა შეუთავსებელია OOO- სთან და სჭირდება BBB ბრაუზერი, რომელიც მუშაობს DDD– ზე მინიმუმ 222 CPU ბირთვით',\r\n    he: 'כאמור בתיאורו, מחקר זה אינו תואם את OOO, והוא זקוק לדפדפן ה- BBB הפועל על DDD עם לפחות 222 ליבות מעבד',\r\n    ar: 'كما ذكر في وصفها ، فإن هذه الدراسة غير متوافقة مع OOO ، وتحتاج إلى متصفح BBB الذي يعمل على DDD مع ما لا يقل عن 222 نوى وحدة المعالجة المركزية',\r\n    ur: 'جیسا کہ اس کی تفصیل میں کہا گیا ہے ، یہ مطالعہ او او کے ساتھ مطابقت نہیں رکھتا ہے ، اور اسے کم از کم 222 سی پی یو کور کے ساتھ ڈی ڈی ڈی پر بی بی بی براؤزر کی ضرورت ہے۔',\r\n    hi: 'जैसा कि इसके विवरण में कहा गया है, यह अध्ययन OOO के साथ असंगत है, और कम से कम 222 CPU कोर के साथ DDD पर चलने वाले BBB ब्राउज़र की आवश्यकता है',\r\n    ta: 'அதன் விளக்கத்தில் கூறப்பட்டுள்ளபடி, இந்த ஆய்வு OOO உடன் பொருந்தாது, மேலும் குறைந்தது 222 CPU கோர்களுடன் ஒரு டி.டி.டி.யில் இயங்கும் பிபிபி உலாவி தேவை',\r\n    ml: 'അതിന്റെ വിവരണത്തിൽ പറഞ്ഞിരിക്കുന്നതുപോലെ, ഈ പഠനം ooo- യുമായി പൊരുത്തപ്പെടുന്നില്ല, കൂടാതെ കുറഞ്ഞത് 222 സിപിയു കോറുകളുള്ള ഒരു ഡിഡിഡിയിൽ പ്രവർത്തിക്കാൻ ബിബിബി ബ്ര browser സർ ആവശ്യമാണ്',\r\n    te: 'దాని వర్ణనలో చెప్పినట్లుగా, ఈ అధ్యయనం OOO కి విరుద్ధంగా ఉంది మరియు కనీసం 222 CPU కోర్లతో DDD లో నడుస్తున్న BBB బ్రౌజర్ అవసరం',\r\n    kn: 'ಅದರ ವಿವರಣೆಯಲ್ಲಿ ಹೇಳಿರುವಂತೆ, ಈ ಅಧ್ಯಯನವು OOO ಗೆ ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ, ಮತ್ತು ಕನಿಷ್ಠ 222 ಸಿಪಿಯು ಕೋರ್ಗಳೊಂದಿಗೆ ಡಿಡಿಡಿಯಲ್ಲಿ ಚಾಲನೆಯಲ್ಲಿರುವ ಬಿಬಿಬಿ ಬ್ರೌಸರ್ ಅಗತ್ಯವಿದೆ',\r\n    bn: 'এর বর্ণনায় যেমন বলা হয়েছে, এই গবেষণাটি ওওর সাথে বেমানান, এবং বিবিবি ব্রাউজারটি কমপক্ষে 222 সিপিইউ কোর সহ একটি ডিডিডি -তে চলমান প্রয়োজন',\r\n    id: 'Seperti yang dinyatakan dalam deskripsinya, penelitian ini tidak sesuai dengan OOO, dan membutuhkan browser BBB yang berjalan pada DDD dengan setidaknya 222 core CPU',\r\n    'zh-CN': '如其描述中所述，这项研究与OOO不相容，并且需要在DDD上运行至少222个CPU内核的BBB浏览器',\r\n    'zh-HK': '如其描述中所述，這項研究與OOO不相容，並且需要在DDD上運行至少222個CPU內核的BBB瀏覽器',\r\n    ja: 'その説明で述べたように、この研究はOOOと互換性があり、少なくとも222のCPUコアでDDDで実行されるBBBブラウザーが必要です',\r\n    ko: '설명에 언급 된 바와 같이,이 연구는 OOO와 호환되지 않으며 최소 222 CPU 코어로 DDD에서 실행되는 BBB 브라우저가 필요합니다.',\r\n  },\r\n  RC_errorNoCamera: {\r\n    'en-US':\r\n      \"This study needs to use the webcam. Granting access to your webcam is optional, but we can't continue without it. If you said No by mistake and now wish to give us access to your camera, please find the camera icon in the address bar, click it, allow camera access, and refresh the page.\",\r\n    de: 'Diese Studie muss die Webcam verwenden. Es ist optional, Zugriff auf Ihre Webcam zu gewähren, aber wir können ohne sie nicht weitermachen. Wenn Sie versehentlich nein gesagt haben und uns nun Zugriff auf Ihre Kamera ermöglichen möchten, finden Sie das Kamerasymbol in der Adressleiste, klicken Sie auf sie, lassen Sie die Kamerazugriff und aktualisieren Sie die Seite.',\r\n    fr: \"Cette étude doit utiliser la webcam. Accorder l'accès à votre webcam est facultatif, mais nous ne pouvons pas continuer sans lui. Si vous avez dit non par erreur et que vous souhaitez maintenant nous donner accès à votre appareil photo, veuillez trouver l'icône de la caméra dans la barre d'adresse, cliquez dessus, permettez à l'accès de la caméra et actualisez la page.\",\r\n    es: 'Este estudio necesita usar la cámara web. Otorgar acceso a su cámara web es opcional, pero no podemos continuar sin ella. Si dijo que no por error y ahora desea darnos acceso a su cámara, busque el icono de la cámara en la barra de direcciones, haga clic en, permita el acceso de la cámara y actualice la página.',\r\n    pt: 'Este estudo precisa usar a webcam. A concessão de acesso à sua webcam é opcional, mas não podemos continuar sem ela. Se você disse não por engano e agora deseja nos dar acesso à sua câmera, encontre o ícone da câmera na barra de endereços, clique nele, permita o acesso à câmera e atualize a página.',\r\n    it: \"Questo studio deve utilizzare la webcam. Concedere l'accesso alla tua webcam è facoltativo, ma non possiamo continuare senza di essa. Se hai detto di no per errore e ora desideri darci accesso alla tua fotocamera, ti preghiamo di trovare l'icona della fotocamera nella barra degli indirizzi, fare clic su di esso, consentire l'accesso alla fotocamera e aggiornare la pagina.\",\r\n    ro: 'Acest studiu trebuie să utilizeze camera web. Acordarea accesului la camera web este opțională, dar nu putem continua fără el. Dacă nu ați spus nu din greșeală și acum doriți să ne oferiți acces la camera dvs., vă rugăm să găsiți pictograma camerei în bara de adrese, faceți clic pe ea, permiteți accesul camerei și reîmprospătați pagina.',\r\n    pl: 'To badanie musi korzystać z kamery internetowej. Przyznanie dostępu do kamery internetowej jest opcjonalne, ale nie możemy bez niego kontynuować. Jeśli powiedziałeś nie przez pomyłkę i teraz chcesz zapewnić nam dostęp do aparatu, znajdź ikonę aparatu na pasku adresu, kliknij ją, zezwól na dostęp do aparatu i odśwież stronę.',\r\n    ru: 'Это исследование должно использовать веб -камеру. Предоставление доступа к вашей веб -камере не является обязательным, но мы не можем продолжать без нее. Если вы сказали, что нет по ошибке и теперь хотите предоставить нам доступ к вашей камере, найдите значок камеры в адресной панели, нажмите на нее, разрешите доступ к камере и обновите страницу.',\r\n    hy: 'Այս ուսումնասիրությունը պետք է օգտագործի վեբ-տեսախցիկը: Ձեր վեբ-տեսախցիկ մուտք ունենալը պարտադիր չէ, բայց մենք չենք կարող շարունակել առանց դրա: Եթե ​​սխալմամբ ասեք, եւ հիմա ցանկանում եք մեզ մուտք գործել ձեր տեսախցիկ, խնդրում ենք գտնել տեսախցիկի պատկերակը Հասցեի բարում, կտտացրեք այն եւ թարմացրեք էջը:',\r\n    fi: 'Tämän tutkimuksen on käytettävä verkkokameraa. Pääsy verkkokamerallesi on valinnaista, mutta emme voi jatkaa ilman sitä. Jos sanoit vahingossa ja haluat nyt antaa meille pääsyn kameraan, etsi kamerakuvake osoitepalkista, napsauta sitä, salli kameran käyttöoikeus ja päivitä sivu.',\r\n    ka: 'ამ კვლევას უნდა გამოიყენოს ვებკამერა. თქვენს ვებკამერაზე წვდომის მინიჭება არჩევითია, მაგრამ ამის გარეშე ვერ გავაგრძელებთ. თუ შეცდომით უარი თქვით და ახლა გსურთ მოგვმართოთ თქვენი კამერა, გთხოვთ, იპოვოთ კამერის ხატი მისამართის ზოლში, დააჭირეთ მას, დაუშვით კამერის წვდომა და განაახლეთ გვერდი.',\r\n    he: 'מחקר זה צריך להשתמש במצלמת הרשת. מתן גישה למצלמת הרשת שלך הוא אופציונלי, אך איננו יכולים להמשיך בלעדיו. אם אמרת לא בטעות ועכשיו ברצונך לתת לנו גישה למצלמה שלך, אנא מצא את סמל המצלמה בסרגל הכתובות, לחץ עליו, אפשר גישה למצלמה ורענן את הדף.',\r\n    ar: 'تحتاج هذه الدراسة إلى استخدام كاميرا الويب. يعد منح الوصول إلى كاميرا الويب الخاصة بك اختياريًا ، لكن لا يمكننا الاستمرار بدونها. إذا قلت لا عن طريق الخطأ وترغب الآن في منحنا الوصول إلى الكاميرا ، فيرجى العثور على أيقونة الكاميرا في شريط العناوين ، وانقر فوقه ، والسماح للوصول إلى الكاميرا ، وتحديث الصفحة.',\r\n    ur: 'اس مطالعے کو ویب کیم استعمال کرنے کی ضرورت ہے۔ آپ کے ویب کیم تک رسائی دینا اختیاری ہے ، لیکن ہم اس کے بغیر جاری نہیں رکھ سکتے۔ اگر آپ نے غلطی سے نہیں کہا ہے اور اب ہمیں اپنے کیمرہ تک رسائی دینا چاہتے ہیں تو ، براہ کرم ایڈریس بار میں کیمرہ آئیکن تلاش کریں ، اس پر کلک کریں ، کیمرہ تک رسائی کی اجازت دیں ، اور صفحہ کو تازہ دم کریں۔',\r\n    hi: 'इस अध्ययन को वेबकैम का उपयोग करने की आवश्यकता है। अपने वेबकैम तक पहुंच प्रदान करना वैकल्पिक है, लेकिन हम इसके बिना जारी नहीं रख सकते। यदि आपने गलती से नहीं कहा है और अब हमें अपने कैमरे तक पहुंचना चाहते हैं, तो कृपया एड्रेस बार में कैमरा आइकन ढूंढें, इसे क्लिक करें, कैमरा एक्सेस की अनुमति दें, और पेज को रिफ्रेश करें।',\r\n    ta: 'இந்த ஆய்வு வெப்கேமைப் பயன்படுத்த வேண்டும். உங்கள் வெப்கேமுக்கு அணுகலை வழங்குவது விருப்பமானது, ஆனால் அது இல்லாமல் எங்களால் தொடர முடியாது. நீங்கள் தவறில்லை என்று சொன்னால், இப்போது உங்கள் கேமராவை எங்களுக்கு அணுக விரும்பினால், தயவுசெய்து முகவரி பட்டியில் கேமரா ஐகானைக் கண்டுபிடித்து, அதைக் கிளிக் செய்து, கேமரா அணுகலை அனுமதிக்கவும், பக்கத்தைப் புதுப்பிக்கவும்.',\r\n    ml: 'ഈ പഠനം വെബ്ക്യാം ഉപയോഗിക്കേണ്ടതുണ്ട്. നിങ്ങളുടെ വെബ്ക്യാമിലേക്കുള്ള ആക്സസ് അനുവദിക്കുന്നത് ഓപ്ഷണലാണ്, പക്ഷേ ഞങ്ങൾക്ക് ഇത് കൂടാതെ തുടരാനാവില്ല. നിങ്ങൾ അബദ്ധത്തിൽ പറഞ്ഞിട്ടും നിങ്ങളുടെ ക്യാമറയിലേക്ക് ഞങ്ങൾക്ക് ആക്സസ് നൽകാൻ ആഗ്രഹിക്കുന്നുവെങ്കിൽ, ദയവായി വിലാസ ബാറിലെ ക്യാമറ ഐക്കൺ കണ്ടെത്തുക, അതിൽ ക്ലിക്കുചെയ്യുക, ക്യാമറ ആക്സസ് അനുവദിക്കുക, പേജ് പുതുക്കുക.',\r\n    te: 'ఈ అధ్యయనం వెబ్‌క్యామ్‌ను ఉపయోగించాలి. మీ వెబ్‌క్యామ్‌కు ప్రాప్యతను ఇవ్వడం ఐచ్ఛికం, కానీ మేము అది లేకుండా కొనసాగలేము. మీరు పొరపాటున నో చెప్పి, ఇప్పుడు మీ కెమెరాకు మాకు ప్రాప్యత ఇవ్వాలనుకుంటే, దయచేసి చిరునామా పట్టీలో కెమెరా చిహ్నాన్ని కనుగొనండి, దాన్ని క్లిక్ చేయండి, కెమెరా యాక్సెస్‌ను అనుమతించండి మరియు పేజీని రిఫ్రెష్ చేయండి.',\r\n    kn: 'ಈ ಅಧ್ಯಯನವು ವೆಬ್‌ಕ್ಯಾಮ್ ಅನ್ನು ಬಳಸಬೇಕಾಗಿದೆ. ನಿಮ್ಮ ವೆಬ್‌ಕ್ಯಾಮ್‌ಗೆ ಪ್ರವೇಶವನ್ನು ನೀಡುವುದು ಐಚ್ al ಿಕವಾಗಿದೆ, ಆದರೆ ನಾವು ಇಲ್ಲದೆ ಮುಂದುವರಿಯಲು ಸಾಧ್ಯವಿಲ್ಲ. ನೀವು ತಪ್ಪಾಗಿ ಇಲ್ಲ ಎಂದು ಹೇಳಿದ್ದರೆ ಮತ್ತು ಈಗ ನಿಮ್ಮ ಕ್ಯಾಮೆರಾಗೆ ನಮಗೆ ಪ್ರವೇಶವನ್ನು ನೀಡಲು ಬಯಸಿದರೆ, ದಯವಿಟ್ಟು ವಿಳಾಸ ಪಟ್ಟಿಯಲ್ಲಿರುವ ಕ್ಯಾಮೆರಾ ಐಕಾನ್ ಅನ್ನು ಹುಡುಕಿ, ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ, ಕ್ಯಾಮೆರಾ ಪ್ರವೇಶವನ್ನು ಅನುಮತಿಸಿ ಮತ್ತು ಪುಟವನ್ನು ರಿಫ್ರೆಶ್ ಮಾಡಿ.',\r\n    bn: 'এই অধ্যয়নের ওয়েবক্যাম ব্যবহার করা দরকার। আপনার ওয়েবক্যামে অ্যাক্সেস দেওয়া al চ্ছিক, তবে আমরা এটি ছাড়া চালিয়ে যেতে পারি না। যদি আপনি ভুল করে না বলেন এবং এখন আমাদের আপনার ক্যামেরায় অ্যাক্সেস দিতে চান তবে দয়া করে ঠিকানা বারে ক্যামেরা আইকনটি সন্ধান করুন, এটি ক্লিক করুন, ক্যামেরা অ্যাক্সেসের অনুমতি দিন এবং পৃষ্ঠাটি রিফ্রেশ করুন।',\r\n    id: 'Studi ini perlu menggunakan webcam. Memberikan akses ke webcam Anda adalah opsional, tetapi kami tidak dapat melanjutkan tanpanya. Jika Anda mengatakan tidak secara tidak sengaja dan sekarang ingin memberi kami akses ke kamera Anda, silakan temukan ikon kamera di bilah alamat, klik, izinkan akses kamera, dan segarkan halaman.',\r\n    'zh-CN': '我们找不到您的摄像头。',\r\n    'zh-HK': '我們找不到您的攝像頭。',\r\n    ja: 'この調査では、ウェブカメラを使用する必要があります。ウェブカメラへのアクセスを許可することはオプションですが、それなしでは継続することはできません。誤ってノーと言って、カメラにアクセスできるようにしたい場合は、アドレスバーにカメラアイコンを見つけて、クリックしてカメラにアクセスできるようにし、ページを更新してください。',\r\n    ko: '이 연구는 웹캠을 사용해야합니다. 웹캠에 대한 액세스 권한을 부여하는 것은 선택 사항이지만, 우리는 그 없이는 계속할 수 없습니다. 실수로 거절하지 말고 카메라에 액세스 할 수 있으시면 주소 표시 줄에서 카메라 아이콘을 찾아 클릭하고 카메라 액세스 허용 및 페이지를 새로 고치십시오.',\r\n  },\r\n  RC_gazeTracking: {\r\n    'en-US': 'Gaze Tracking',\r\n    de: 'Blickverfolgung',\r\n    fr: 'Suivi du regard',\r\n    es: 'Seguimiento de la mirada',\r\n    pt: 'Olhando',\r\n    it: 'Monitoraggio dello sguardo',\r\n    ro: 'In cautarea',\r\n    pl: 'Śledzenie wzroku.',\r\n    ru: 'Отслеживание взгляда',\r\n    hy: 'Նայելով հայացքը',\r\n    fi: 'Katseiden seuranta',\r\n    ka: 'მზერა თვალყურის დევნება',\r\n    he: 'מעקב אחר מבט',\r\n    ar: 'تتبع النظر',\r\n    ur: 'آنکھ سے باخبر رہنا',\r\n    hi: 'आँखों का ट्रैकिंग',\r\n    ta: 'பார்வை கண்காணிப்பு',\r\n    ml: 'ലോട്ടർ ട്രാക്കിംഗ്',\r\n    te: 'చూపుల ట్రాకింగ్',\r\n    kn: 'ನೋಟದ ಟ್ರ್ಯಾಕಿಂಗ್',\r\n    bn: 'গেজ ট্র্যাকিং',\r\n    id: 'Tatapan pelacakan',\r\n    'zh-CN': '眼动追踪',\r\n    'zh-HK': '眼動追踪',\r\n    ja: '視線追跡',\r\n    ko: '시선 추적',\r\n  },\r\n  RC_gazeTrackingIntro: {\r\n    'en-US':\r\n      'PLAY \"CATCH THE CROSS!\" Now we’ll set up gaze tracking, to monitor eye position. Keep your face in the video feed (see below). Click on the center of the cross hairs, wherever it is. Make sure that your eyes are on it when you click it. When you click it, the cross hairs will move to a new location. Click it in each new location, until the calibration is done. It\\'s a game. Catch the cross!',\r\n    de: 'Spielen Sie \"Catch the Cross!\" Jetzt werden wir eine Blickverfolgung einrichten, um die Augenposition zu überwachen. Behalten Sie Ihr Gesicht im Video -Feed (siehe unten). Klicken Sie auf die Mitte der Kreuzhaare, wo immer es ist. Stellen Sie sicher, dass Ihre Augen darauf sind, wenn Sie darauf klicken. Wenn Sie darauf klicken, bewegen sich die Cross -Haare an einen neuen Ort. Klicken Sie an jedem neuen Standort, bis die Kalibrierung abgeschlossen ist. Es ist ein Spiel. Fang das Kreuz!',\r\n    fr: \"Jouez \\\"Catch the Cross!\\\" Nous allons maintenant configurer le suivi du regard pour surveiller la position des yeux. Gardez votre visage dans le flux vidéo (voir ci-dessous). Cliquez sur le centre des poils, où qu'il se trouve. Assurez-vous que vos yeux sont dessus lorsque vous cliquez dessus. Lorsque vous cliquez dessus, les poils de la transmission se déplaceront vers un nouvel emplacement. Cliquez dessus dans chaque nouvel emplacement jusqu'à ce que l'étalonnage soit terminé. C'est un jeu. Attrapez la croix!\",\r\n    es: 'Juega \"¡Atrapa la cruz!\" Ahora configuraremos el seguimiento de la mirada, para monitorear la posición del ojo. Mantenga su cara en la alimentación del video (ver más abajo). Haga clic en el centro de la cruz, donde sea que esté. Asegúrese de que sus ojos estén en él cuando haga clic en él. Cuando haga clic en él, los pelos cruzados se moverán a una nueva ubicación. Haga clic en cada nueva ubicación, hasta que se realice la calibración. Es un juego. ¡Atrapa la cruz!',\r\n    pt: 'Jogue \"Catch the Cross!\" Agora, configuraremos o rastreamento do olhar, para monitorar a posição dos olhos. Mantenha seu rosto no feed de vídeo (veja abaixo). Clique no centro dos cabelos cruzados, onde quer que esteja. Certifique -se de que seus olhos estejam nele quando clicar nele. Ao clicar nele, os cabelos cruzados se movem para um novo local. Clique nele em cada novo local, até que a calibração esteja concluída. É um jogo. Pegue a cruz!',\r\n    it: 'Gioca \"Catch the Cross!\" Ora imposteremo il monitoraggio dello sguardo, per monitorare la posizione degli occhi. Tieni il viso nel feed video (vedi sotto). Fai clic sul centro dei capelli incrociati, ovunque si trovi. Assicurati che i tuoi occhi siano su di esso quando fai clic. Quando fai clic su di esso, i capelli incrociati si sposteranno in una nuova posizione. Fare clic su ogni nuova posizione, fino a quando la calibrazione è terminata. È un gioco. Cattura la croce!',\r\n    ro: 'Joacă „Prinde Crucea!” Acum vom stabili urmărirea privind privirea, pentru a monitoriza poziția ochilor. Păstrați -vă fața în fluxul video (vezi mai jos). Faceți clic pe centrul părului încrucișat, oriunde s -ar afla. Asigurați -vă că ochii dvs. sunt pe el când faceți clic pe el. Când faceți clic pe el, părul încrucișat se va muta într -o nouă locație. Faceți clic pe el în fiecare locație nouă, până când se termină calibrarea. Este un joc. Crucea!',\r\n    pl: 'Zagraj w „Catch the Cross!” Teraz skonfigurujemy śledzenie spojrzenia, aby monitorować pozycję oczu. Trzymaj twarz w kanale wideo (patrz poniżej). Kliknij środek włosów krzyżowych, gdziekolwiek się znajdują. Upewnij się, że twoje oczy są na nim po kliknięciu. Po kliknięciu włosy krzyżowe przeniosą się do nowej lokalizacji. Kliknij go w każdej nowej lokalizacji, aż do zakończenia kalibracji. To jest gra. Złap krzyż!',\r\n    ru: 'Играть \"Поймай крест!\" Теперь мы настроим отслеживание взгляда, чтобы контролировать положение глаз. Держите лицо в видеопроводе (см. Ниже). Нажмите на центр кросс -волосков, где бы это ни было. Убедитесь, что ваши глаза на нем, когда вы нажимаете на него. Когда вы нажимаете на него, кросс -волоска перейдет в новое место. Нажмите на него в каждом новом месте, пока калибровка не будет сделана. Это игра. Поймай крест!',\r\n    hy: 'Խաղացեք «Բռնել խաչը»: Այժմ մենք կստեղծենք հայացք նետելու, հետեւելու աչքի դիրքը: Ձեր դեմքը պահեք տեսանյութի մեջ (տես ստորեւ): Կտտացրեք խաչի մազերի կենտրոնին, որտեղ էլ որ լինի: Համոզվեք, որ ձեր աչքերը դրա վրա են, երբ կտտացրեք այն: Երբ կտտացնում եք այն, խաչաձեւ մազերը կտեղափոխվեն նոր վայր: Կտտացրեք այն յուրաքանչյուր նոր վայրում, մինչեւ ստուգումը կատարվի: Դա խաղ է: Բռնել խաչը:',\r\n    fi: 'Pelaa \"Catch the Risti!\" Nyt asetamme katseenseurannan silmien sijainnin seuraamiseksi. Pidä kasvosi videosyötteessä (katso alla). Napsauta ristikästen keskustaa missä tahansa. Varmista, että silmäsi ovat siinä, kun napsautat sitä. Kun napsautat sitä, ristikarvat siirtyvät uuteen sijaintiin. Napsauta sitä jokaisessa uudessa paikassa, kunnes kalibrointi on tehty. Se on peli. Pudota risti!',\r\n    ka: 'ითამაშეთ \"დაჭერა ჯვარი!\" ახლა ჩვენ დავაყენებთ მზერა თვალყურის დევნას, თვალის პოზიციის მონიტორინგს. შეინახეთ სახე ვიდეო საკვებად (იხ. ქვემოთ). დააჭირეთ ჯვრის თმების ცენტრს, სადაც არ უნდა იყოს. დარწმუნდით, რომ თქვენი თვალები მასზეა, როდესაც დააჭირეთ მას. როდესაც დააჭირეთ მას, ჯვრის თმები გადავა ახალ ადგილას. დააჭირეთ მას თითოეულ ახალ ადგილას, სანამ კალიბრაცია არ გაკეთდება. ეს თამაშია. დაიჭირე ჯვარი!',\r\n    he: 'שחק \"תפוס את הצלב!\" כעת נקבע מעקב אחר מבט, כדי לפקח על מיקום העיניים. שמור את הפנים שלך בעדכון הווידיאו (ראה להלן). לחץ על מרכז שערות הצלב, בכל מקום שהוא. וודא שהעיניים שלך עומדות על זה כשאתה לוחץ עליו. כשתלחץ עליו, שערות הצלב יעברו למיקום חדש. לחץ עליו בכל מיקום חדש, עד לסיום הכיול. זה משחק. לתפוס את הצלב!',\r\n    ar: 'العب \"اصطاد الصليب!\" الآن سنقوم بإعداد تتبع النظرة ، لمراقبة موضع العين. حافظ على وجهك في تغذية الفيديو (انظر أدناه). انقر على مركز الشعر المتقاطع ، أينما كان. تأكد من أن عينيك عليها عند النقر فوقها. عند النقر فوقه ، سينتقل الشعر المتقاطع إلى موقع جديد. انقر فوقه في كل موقع جديد ، حتى يتم المعايرة. انها لعبة. اصطاد الصليب!',\r\n    ur: 'کھیلو \"کراس پکڑو!\" اب ہم آنکھوں کی پوزیشن کی نگرانی کے لئے ، نگاہوں سے باخبر رہنے کو ترتیب دیں گے۔ اپنا چہرہ ویڈیو فیڈ میں رکھیں (نیچے ملاحظہ کریں) کراس بالوں کے مرکز پر کلک کریں ، جہاں کہیں بھی ہے۔ اس بات کو یقینی بنائیں کہ جب آپ اس پر کلک کریں تو آپ کی آنکھیں اس پر ہیں۔ جب آپ اس پر کلک کرتے ہیں تو ، کراس بال ایک نئے مقام پر چلے جائیں گے۔ ہر نئے مقام پر اس پر کلک کریں ، جب تک کہ انشانکن نہ ہوجائے۔ یہ ایک کھیل ہے۔ کراس پکڑو!',\r\n    hi: '\"क्रॉस पकड़ो!\" अब हम आंखों की स्थिति की निगरानी करने के लिए, गेज़ ट्रैकिंग सेट करेंगे। वीडियो फ़ीड में अपना चेहरा रखें (नीचे देखें)। जहां भी हो, क्रॉस हेयर के केंद्र पर क्लिक करें। सुनिश्चित करें कि जब आप इसे क्लिक करते हैं तो आपकी आंखें उस पर होती हैं। जब आप इसे क्लिक करते हैं, तो क्रॉस हेयर एक नए स्थान पर चले जाएंगे। कैलिब्रेशन होने तक इसे प्रत्येक नए स्थान पर क्लिक करें। यह एक खेल है। क्रॉस को पकड़ो!',\r\n    ta: '\"சிலுவையைப் பிடிக்கவும்!\" கண் நிலையை கண்காணிக்க, இப்போது நாம் பார்வை கண்காணிப்பை அமைப்போம். வீடியோ ஊட்டத்தில் உங்கள் முகத்தை வைத்திருங்கள் (கீழே காண்க). குறுக்கு முடிகளின் மையத்தில், அது எங்கிருந்தாலும் கிளிக் செய்க. நீங்கள் அதைக் கிளிக் செய்யும் போது உங்கள் கண்கள் அதில் இருப்பதை உறுதிப்படுத்திக் கொள்ளுங்கள். நீங்கள் அதைக் கிளிக் செய்யும் போது, ​​குறுக்கு முடிகள் புதிய இடத்திற்கு நகரும். அளவுத்திருத்தம் முடியும் வரை ஒவ்வொரு புதிய இடத்திலும் அதைக் கிளிக் செய்க. இது ஒரு விளையாட்டு. சிலுவையைப் பிடிக்கவும்!',\r\n    ml: '\"ക്രോസ് പിടിക്കുക!\" ഇപ്പോൾ ഞങ്ങൾ കണ്ണ് സ്ഥാനം നിരീക്ഷിക്കാൻ ഞങ്ങൾ ലജ്ഗ് ട്രാക്കിംഗ് സജ്ജമാക്കും. വീഡിയോ ഫീഡിൽ മുഖം സൂക്ഷിക്കുക (ചുവടെ കാണുക). അത് എവിടെയായിരുന്നാലും ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് ക്ലിക്കുചെയ്യുക. നിങ്ങൾ ക്ലിക്കുചെയ്യുമ്പോൾ നിങ്ങളുടെ കണ്ണുകൾ അതിലുണ്ടെന്ന് ഉറപ്പാക്കുക. നിങ്ങൾ അതിൽ ക്ലിക്കുചെയ്യുമ്പോൾ, ക്രോസ് ഹെയർ ഒരു പുതിയ സ്ഥലത്തേക്ക് നീങ്ങും. കാലിബ്രേഷൻ നടക്കുന്നതുവരെ ഓരോ പുതിയ സ്ഥലത്തും ക്ലിക്കുചെയ്യുക. ഇതൊരു ഗെയിമാണ്. കുരിശ് പിടിക്കൂ!',\r\n    te: '\"క్యాచ్ ది క్రాస్!\" కంటి స్థానాన్ని పర్యవేక్షించడానికి ఇప్పుడు మేము చూపుల ట్రాకింగ్‌ను ఏర్పాటు చేస్తాము. మీ ముఖాన్ని వీడియో ఫీడ్‌లో ఉంచండి (క్రింద చూడండి). క్రాస్ హెయిర్స్ మధ్యలో క్లిక్ చేయండి, అది ఎక్కడ ఉన్నా. మీరు క్లిక్ చేసినప్పుడు మీ కళ్ళు దానిపై ఉన్నాయని నిర్ధారించుకోండి. మీరు దీన్ని క్లిక్ చేసినప్పుడు, క్రాస్ హెయిర్స్ క్రొత్త ప్రదేశానికి వెళ్తాయి. క్రమాంకనం పూర్తయ్యే వరకు ప్రతి క్రొత్త ప్రదేశంలో క్లిక్ చేయండి. ఇది ఒక ఆట. సిలువను పట్టుకోండి!',\r\n    kn: '\"ಕ್ಯಾಚ್ ದಿ ಕ್ರಾಸ್!\" ಕಣ್ಣಿನ ಸ್ಥಾನವನ್ನು ಮೇಲ್ವಿಚಾರಣೆ ಮಾಡಲು ನಾವು ಈಗ ನೋಟದ ಟ್ರ್ಯಾಕಿಂಗ್ ಅನ್ನು ಹೊಂದಿಸುತ್ತೇವೆ. ನಿಮ್ಮ ಮುಖವನ್ನು ವೀಡಿಯೊ ಫೀಡ್‌ನಲ್ಲಿ ಇರಿಸಿ (ಕೆಳಗೆ ನೋಡಿ). ಅದು ಎಲ್ಲಿದ್ದರೂ ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗದಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡಿ. ನೀವು ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿದಾಗ ನಿಮ್ಮ ಕಣ್ಣುಗಳು ಅದರ ಮೇಲೆ ಇದ್ದವು ಎಂದು ಖಚಿತಪಡಿಸಿಕೊಳ್ಳಿ. ನೀವು ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿದಾಗ, ಅಡ್ಡ ಕೂದಲುಗಳು ಹೊಸ ಸ್ಥಳಕ್ಕೆ ಹೋಗುತ್ತವೆ. ಮಾಪನಾಂಕ ನಿರ್ಣಯವನ್ನು ಮಾಡುವವರೆಗೆ ಪ್ರತಿ ಹೊಸ ಸ್ಥಳದಲ್ಲಿ ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ. ಇದು ಒಂದು ಆಟ. ಶಿಲುಬೆಯನ್ನು ಹಿಡಿಯಿರಿ!',\r\n    bn: '\"ক্রস ধরুন!\" চোখের অবস্থান নিরীক্ষণের জন্য এখন আমরা গেজ ট্র্যাকিং সেট আপ করব। ভিডিও ফিডে আপনার মুখ রাখুন (নীচে দেখুন)। ক্রস চুলের কেন্দ্রে ক্লিক করুন, যেখানেই হোক না কেন। নিশ্চিত হয়ে নিন যে আপনি যখন এটি ক্লিক করেন তখন আপনার চোখ এটির দিকে রয়েছে। আপনি যখন এটি ক্লিক করেন, ক্রস চুলগুলি একটি নতুন স্থানে চলে যাবে। ক্রমাঙ্কন সম্পন্ন না হওয়া পর্যন্ত প্রতিটি নতুন স্থানে এটি ক্লিক করুন। এটি একটি খেলা. ক্রস ধরুন!',\r\n    id: 'Mainkan \"Tangkap Salib!\" Sekarang kami akan mengatur pelacakan tatapan, untuk memantau posisi mata. Simpan wajah Anda di umpan video (lihat di bawah). Klik di tengah rambut silang, di mana pun itu. Pastikan mata Anda tertuju saat Anda mengkliknya. Saat Anda mengkliknya, Cross Hairs akan pindah ke lokasi baru. Klik di setiap lokasi baru, sampai kalibrasi selesai. Ini permainan. Tangkap salib!',\r\n    'zh-CN':\r\n      '播放“赶十字架！”现在，我们将设置凝视跟踪，以监视眼睛位置。在视频提要中保持脸部（见下文）。无论何处，单击十字头发的中心。单击它时，请确保您的眼睛在上面。当您单击它时，十字头发将移至新位置。在每个新位置单击它，直到完成校准。游戏而已。抓住十字架！',\r\n    'zh-HK':\r\n      '播放“趕十字架！”現在，我們將設置凝視跟踪，以監視眼睛位置。在視頻提要中保持臉部（見下文）。無論何處，單擊十字頭髮的中心。單擊它時，請確保您的眼睛在上面。當您單擊它時，十字頭髮將移至新位置。在每個新位置單擊它，直到完成校準。遊戲而已。抓住十字架！',\r\n    ja: '「Catch the Cross！」を再生しますこれで、目の位置を監視するために、視線追跡を設定します。ビデオフィードに顔を入れてください（以下を参照）。どこにいても、交差毛の中心をクリックします。クリックしたときに目がそれにあることを確認してください。クリックすると、クロスヘアが新しい場所に移動します。キャリブレーションが完了するまで、新しい場所ごとにクリックします。それはゲームです。十字架をキャッチ！',\r\n    ko: '\"Catch the Cross!\" 이제 눈 위치를 모니터링하기 위해 시선 추적을 설정합니다. 비디오 피드에 얼굴을 유지하십시오 (아래 참조). 크로스 털의 중앙을 어디에 있든 클릭하십시오. 클릭하면 눈이 켜져 있는지 확인하십시오. 클릭하면 크로스 헤어가 새로운 위치로 이동합니다. 교정이 완료 될 때까지 각 새 위치에서 클릭하십시오. 그것은 게임이다. 십자가를 잡아라!',\r\n  },\r\n  RC_gazeTrackingNudge: {\r\n    'en-US':\r\n      \"CATCH THE CROSS! We need your help. The eye tracker needs more training. As shown by the arrow, when you clicked, the tracker thought your gaze was far from the cross hairs. Please click the cross hairs at each new position. It's a game. Catch the cross!\",\r\n    de: 'Fang das Kreuz! Wir brauchen deine Hilfe. Der Eye Tracker braucht mehr Training. Wie der Pfeil zeigt, dachte der Tracker, als Sie klicken, Ihr Blick sei weit entfernt von den Kreuzhaaren. Bitte klicken Sie auf die Cross -Haare an jeder neuen Position. Es ist ein Spiel. Fang das Kreuz!',\r\n    fr: \"Attrapez la croix! Nous avons besoin de votre aide. Le tracker des yeux a besoin de plus de formation. Comme le montre la flèche, lorsque vous avez cliqué, le tracker pensait que votre regard était loin des poils. Veuillez cliquer sur les poils à chaque nouvelle position. C'est un jeu. Attrapez la croix!\",\r\n    es: '¡Atrapa la cruz! Necesitamos tu ayuda. El rastreador ocular necesita más entrenamiento. Como se muestra en la flecha, cuando hizo clic, el rastreador pensó que su mirada estaba lejos de la cruz. Haga clic en los pelos transversales en cada nueva posición. Es un juego. ¡Atrapa la cruz!',\r\n    pt: 'Pegue a cruz! Nós precisamos da sua ajuda. O rastreador ocular precisa de mais treinamento. Como mostrado pela seta, quando você clicou, o rastreador pensou que seu olhar estava longe dos cabelos cruzados. Clique nos cabelos cruzados em cada nova posição. É um jogo. Pegue a cruz!',\r\n    it: 'Cattura la croce! Abbiamo bisogno del tuo aiuto. Il tracker eye ha bisogno di più allenamento. Come mostrato dalla freccia, quando hai fatto clic, il tracker pensava che il tuo sguardo fosse lontano dai capelli incrociati. Fare clic sui peli incrociati in ogni nuova posizione. È un gioco. Cattura la croce!',\r\n    ro: 'Crucea! Noi avem nevoie de ajutorul tau. Trackerul pentru ochi are nevoie de mai mult antrenament. După cum arată săgeata, când ați dat clic, tracker -ul a crezut că privirea ta este departe de părul încrucișat. Vă rugăm să faceți clic pe părul încrucișat la fiecare poziție nouă. Este un joc. Crucea!',\r\n    pl: 'Złap krzyż! Potrzebujemy Twojej pomocy. Śledzenie wzroku wymaga więcej treningu. Jak pokazuje strzałka, po kliknięciu, tracker pomyślał, że twoje spojrzenie było dalekie od włosów krzyżowych. Kliknij włosy krzyżowe w każdej nowej pozycji. To jest gra. Złap krzyż!',\r\n    ru: 'Поймай крест! Мы нуждаемся в твоей помощи. Трекер глаз нуждается в большем обучении. Как показано стрелкой, когда вы нажимаете, трекер думал, что ваш взгляд был далеко от кросс -волос. Пожалуйста, нажмите на кросс -волоски в каждой новой позиции. Это игра. Поймай крест!',\r\n    hy: 'Բռնել խաչը: Մենք քո օգնության կարիքը ունենք. Աչքի հետեւորդին ավելի շատ մարզումներ են պետք: Ինչպես ցույց է տրված սլաքը, երբ սեղմել եք, հետեւորդը կարծում էր, որ ձեր հայացքը հեռու է խաչի մազերից: Խնդրում ենք կտտացնել խաչի մազերը յուրաքանչյուր նոր դիրքում: Դա խաղ է: Բռնել խաչը:',\r\n    fi: 'Pudota risti! Tarvitsemme apuasi. Silmäseuranta tarvitsee enemmän koulutusta. Kuten nuoli osoittaa, napsauttaessasi seuranta ajatteli katseesi olevan kaukana ristikarvoista. Napsauta ristikarvoja jokaisessa uudessa asennossa. Se on peli. Pudota risti!',\r\n    ka: 'დაიჭირე ჯვარი! Ჩვენ გვჭირდება თქვენი დახმარება. თვალის ტრეკერს მეტი ტრენინგი სჭირდება. როგორც ისარი აჩვენებს, როდესაც დააჭირეთ, ტრეკერი ფიქრობდა, რომ თქვენი მზერა ჯვრის თმებისგან შორს იყო. გთხოვთ, დააჭირეთ ჯვრის თმას თითოეულ ახალ პოზიციაზე. ეს თამაშია. დაიჭირე ჯვარი!',\r\n    he: 'לתפוס את הצלב! אנחנו צריכים את עזרתך. גשש העיניים זקוק לאימונים נוספים. כפי שמוצג על ידי החץ, כשלחצתם, הגשש חשב שהמבט שלכם היה רחוק משערות הצלב. אנא לחץ על שערות הצלב בכל עמדה חדשה. זה משחק. לתפוס את הצלב!',\r\n    ar: 'اصطاد الصليب! نحن نحتاج مساعدتك. يحتاج متتبع العين إلى مزيد من التدريب. كما هو موضح في السهم ، عند النقر فوق ، اعتقد المتتبع أن نظرتك كانت بعيدة عن الشعر المتقاطع. يرجى النقر على الشعر المتقاطع في كل موقف جديد. انها لعبة. اصطاد الصليب!',\r\n    ur: 'کراس پکڑو! ہمیں آپ کی مدد کی ضرورت ہے۔ آئی ٹریکر کو مزید تربیت کی ضرورت ہے۔ جیسا کہ تیر کے ذریعہ دکھایا گیا ہے ، جب آپ نے کلک کیا تو ، ٹریکر نے سوچا کہ آپ کی نگاہیں کراس بالوں سے بہت دور ہیں۔ براہ کرم ہر نئی پوزیشن پر کراس بالوں پر کلک کریں۔ یہ ایک کھیل ہے۔ کراس پکڑو!',\r\n    hi: 'क्रॉस को पकड़ो! हमे आपकी मदद की जरूरत है। आई ट्रैकर को अधिक प्रशिक्षण की आवश्यकता है। जैसा कि तीर द्वारा दिखाया गया है, जब आपने क्लिक किया, तो ट्रैकर ने सोचा कि आपका टकटकी क्रॉस हेयर से दूर है। कृपया प्रत्येक नई स्थिति पर क्रॉस हेयर पर क्लिक करें। यह एक खेल है। क्रॉस को पकड़ो!',\r\n    ta: 'சிலுவையைப் பிடிக்கவும்! உங்களின் உதவி எங்களுக்கு தேவை. கண் டிராக்கருக்கு கூடுதல் பயிற்சி தேவை. அம்பு காட்டியபடி, நீங்கள் கிளிக் செய்தபோது, ​​உங்கள் பார்வை குறுக்கு முடிகளிலிருந்து வெகு தொலைவில் இருப்பதாக டிராக்கர் நினைத்தார். ஒவ்வொரு புதிய நிலையிலும் குறுக்கு முடிகளைக் கிளிக் செய்க. இது ஒரு விளையாட்டு. சிலுவையைப் பிடிக்கவும்!',\r\n    ml: 'കുരിശ് പിടിക്കൂ! ഞങ്ങൾക്ക് നിങ്ങളുടെ സഹായം ആവശ്യമാണ്. ഐ ട്രാക്കർ കൂടുതൽ പരിശീലനം ആവശ്യമാണ്. അമ്പടയാളം കാണിച്ചിരിക്കുന്നതുപോലെ, നിങ്ങൾ ക്ലിക്കുചെയ്യുമ്പോൾ, നിങ്ങളുടെ നോട്ടം ക്രോസ് ഹെയർസിൽ നിന്ന് വളരെ അകലെയാണെന്ന് ട്രാക്കർ കരുതി. ഓരോ പുതിയ സ്ഥാനത്തും ക്രോസ് ഹെറിൽ ക്ലിക്കുചെയ്യുക. ഇതൊരു ഗെയിമാണ്. കുരിശ് പിടിക്കൂ!',\r\n    te: 'సిలువను పట్టుకోండి! మాకు మీ సహాయం కావాలి. కంటి ట్రాకర్‌కు మరింత శిక్షణ అవసరం. బాణం చూపినట్లుగా, మీరు క్లిక్ చేసినప్పుడు, మీ చూపులు క్రాస్ హెయిర్‌లకు దూరంగా ఉన్నాయని ట్రాకర్ భావించారు. దయచేసి ప్రతి కొత్త స్థానంలో క్రాస్ హెయిర్స్ క్లిక్ చేయండి. ఇది ఒక ఆట. సిలువను పట్టుకోండి!',\r\n    kn: 'ಶಿಲುಬೆಯನ್ನು ಹಿಡಿಯಿರಿ! ನಿಮ್ಮ ಸಹಾಯ ನಮಗೆ ಬೇಕು. ಕಣ್ಣಿನ ಟ್ರ್ಯಾಕರ್‌ಗೆ ಹೆಚ್ಚಿನ ತರಬೇತಿಯ ಅಗತ್ಯವಿದೆ. ಬಾಣವು ತೋರಿಸಿದಂತೆ, ನೀವು ಕ್ಲಿಕ್ ಮಾಡಿದಾಗ, ನಿಮ್ಮ ನೋಟವು ಅಡ್ಡ ಕೂದಲಿನಿಂದ ದೂರವಿದೆ ಎಂದು ಟ್ರ್ಯಾಕರ್ ಭಾವಿಸಿದ್ದಾನೆ. ದಯವಿಟ್ಟು ಪ್ರತಿ ಹೊಸ ಸ್ಥಾನದಲ್ಲಿ ಅಡ್ಡ ಕೂದಲನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ. ಇದು ಒಂದು ಆಟ. ಶಿಲುಬೆಯನ್ನು ಹಿಡಿಯಿರಿ!',\r\n    bn: 'ক্রস ধরুন! আমাদের আপনার সাহায্য দরকার. চোখের ট্র্যাকারের আরও প্রশিক্ষণ প্রয়োজন। তীর দ্বারা দেখানো হিসাবে, আপনি যখন ক্লিক করেছেন, ট্র্যাকারটি ভেবেছিল আপনার দৃষ্টিশক্তি ক্রস কেশ থেকে অনেক দূরে। প্রতিটি নতুন পজিশনে ক্রস চুল ক্লিক করুন। এটি একটি খেলা. ক্রস ধরুন!',\r\n    id: 'Tangkap salib! Kami membutuhkan bantuan Anda. Pelacak mata membutuhkan lebih banyak pelatihan. Seperti yang ditunjukkan oleh panah, ketika Anda mengklik, pelacak berpikir tatapan Anda jauh dari rambut salib. Silakan klik Cross Hairs di setiap posisi baru. Ini permainan. Tangkap salib!',\r\n    'zh-CN':\r\n      '抓住十字架！我们需要你的帮助。眼神跟踪器需要更多的培训。如箭头所示，当您单击时，跟踪器认为您的目光远非叉毛。请单击每个新位置的杂毛。游戏而已。抓住十字架！',\r\n    'zh-HK':\r\n      '抓住十字架！我們需要你的幫助。眼神跟踪器需要更多的培訓。如箭頭所示，當您單擊時，跟踪器認為您的目光遠非叉毛。請單擊每個新位置的雜毛。遊戲而已。抓住十字架！',\r\n    ja: '十字架をキャッチ！君の力が必要なんだ。アイトラッカーにはさらにトレーニングが必要です。矢印で示されているように、クリックしたとき、トラッカーはあなたの視線が十字毛からはほど遠いと思った。それぞれの新しい位置でクロスヘアをクリックしてください。それはゲームです。十字架をキャッチ！',\r\n    ko: '십자가를 잡아라! 우리는 너의 도움이 필요해. 눈 추적기에는 더 많은 훈련이 필요합니다. 화살표에서 볼 수 있듯이, 클릭했을 때 트래커는 시선이 십자 머리카락과는 거리가 멀다고 생각했습니다. 각각의 새로운 위치에서 십자 머리카락을 클릭하십시오. 그것은 게임이다. 십자가를 잡아라!',\r\n  },\r\n  RC_gazeTrackingTitle: {\r\n    'en-US': 'Set Up Gaze Tracking',\r\n    de: 'Bauen Sie eine Blickverfolgung auf',\r\n    fr: 'Configuration pour le suivi du regard',\r\n    es: 'Configuración para seguimiento de mirada',\r\n    pt: 'Configuração para visualização',\r\n    it: 'Impostare il monitoraggio dello sguardo',\r\n    ro: 'Configurare pentru vizualizare',\r\n    pl: 'Ustaw śledzenie wzroku',\r\n    ru: 'Настроить отслеживание взгляда',\r\n    hy: 'Կազմաձեւեք ձեր աչքի հետեւումը',\r\n    fi: 'Aseta katseen seuranta',\r\n    ka: 'შექმენით მზერა თვალყურის დევნება',\r\n    he: 'הגדר מעקב אחר מבט',\r\n    ar: 'الإعداد لتتبع النظر',\r\n    ur: 'آنکھیں ٹریکنگ کے لئے طے کرنے دیں',\r\n    hi: 'आँखों का ट्रैकिंग के लिए तयार हो जाए',\r\n    ta: 'பார்வை கண்காணிப்பை அமைக்கவும்',\r\n    ml: 'കണക്കെടുപ്പ് ആരംഭിക്കുക',\r\n    te: 'చూపుల ట్రాకింగ్‌ను సెటప్ చేయండి',\r\n    kn: 'ನೋಟದ ಟ್ರ್ಯಾಕಿಂಗ್ ಅನ್ನು ಹೊಂದಿಸಿ',\r\n    bn: 'গেজ ট্র্যাকিং সেট আপ করুন',\r\n    id: 'Mengatur pelacakan tatapan',\r\n    'zh-CN': '眼动追踪初始化',\r\n    'zh-HK': '眼動追踪初始化',\r\n    ja: '視線追跡を設定します。',\r\n    ko: '시선 추적을 설정하십시오',\r\n  },\r\n  RC_getPhoneMicrophoneReady: {\r\n    'en-US':\r\n      \"2. When your phone is vertical, its microphone is in the lower edge.\\n3. Expose your phone's microphone by removing any protective case.\\n4. Fold a soft cloth (e.g. towel, scarf, sweater, jacket) in half several times and place it on the table between you and your computer.\\n5. Point your phone camera at the QR code below (black and white checks), and click on it in your phone's screen.\\n\",\r\n    de: '2. Wenn Ihr Telefon vertikal ist, befindet sich sein Mikrofon in der unteren Kante.\\n3. Stellen Sie das Mikrofon Ihres Telefons aus, indem Sie einen Schutzhülle entfernen.\\n4. Falten Sie ein weiches Tuch (z. B. Handtuch, Schal, Pullover, Jacke) mehrmals und legen Sie es auf den Tisch zwischen Ihnen und Ihrem Computer.\\n5. Zeigen Sie Ihre Telefonkamera im folgenden QR -Code (Schwarzweißkontrollen) und klicken Sie auf dem Bildschirm Ihres Telefons darauf.\\n',\r\n    fr: \"2. Lorsque votre téléphone est vertical, son microphone est dans le bord inférieur.\\n3. Exposer le microphone de votre téléphone en supprimant tout cas de protection.\\n4. Pliez un chiffon doux (par exemple, une serviette, une écharpe, un pull, une veste) à moitié plusieurs fois et la placer sur la table entre vous et votre ordinateur.\\n5. Pointez votre appareil photo de téléphone au code QR ci-dessous (vérifications en noir et blanc), puis cliquez dessus sur l'écran de votre téléphone.\\n\",\r\n    es: '2. Cuando su teléfono es vertical, su micrófono está en el borde inferior.\\n3. Exponga el micrófono de su teléfono eliminando cualquier caso de protección.\\n4. Dobla un paño suave (por ejemplo, toalla, bufanda, suéter, chaqueta) por la mitad varias veces y colóquelo sobre la mesa entre tú y tu computadora.\\n5. Apunte la cámara de su teléfono en el código QR a continuación (verificaciones en blanco y negro) y haga clic en ella en la pantalla de su teléfono.\\n',\r\n    pt: '2. Quando o telefone é vertical, o microfone está na borda inferior.\\n3. Exponha o microfone do seu telefone removendo qualquer caso de proteção.\\n4. Dobre um pano macio (por exemplo, toalha, lenço, suéter, jaqueta) ao meio várias vezes e coloque -o na mesa entre você e seu computador.\\n5. Aponte a câmera do seu telefone no código QR abaixo (cheques em preto e branco) e clique nele na tela do seu telefone.\\n',\r\n    it: '2. Quando il telefono è verticale, il suo microfono è al bordo inferiore.\\n3. Esporre il microfono del telefono rimuovendo qualsiasi custodia protettiva.\\n4. Piegare un panno morbido (ad esempio asciugamano, sciarpa, maglione, giacca) a metà più volte e posizionarlo sul tavolo tra te e il tuo computer.\\n5. Puntare la fotocamera del telefono sul codice QR in basso (controlli in bianco e nero) e fai clic su di esso nella schermata del telefono.\\n',\r\n    ro: '2. Când telefonul dvs. este vertical, microfonul său este în marginea inferioară.\\n3. Expuneți microfonul telefonului dvs. eliminând orice caz de protecție.\\n4. Îndoiți o cârpă moale (de exemplu, prosop, eșarfă, pulover, sacou) în jumătate de mai multe ori și așezați -o pe masa dintre dvs. și computer.\\n5. Indicați camera telefonului la codul QR de mai jos (verificări alb -negru) și faceți clic pe el în ecranul telefonului.\\n',\r\n    pl: '2. Gdy telefon jest pionowy, jego mikrofon znajduje się w dolnej krawędzi.\\n3. Odsłaniaj mikrofon telefonu, usuwając dowolną sprawę ochronną.\\n4. Złóż miękką szmatkę (np. Ręcznik, szalik, sweter, kurtka) kilka razy i umieść ją na stole między tobą a komputerem.\\n5. Wskaż aparat telefoniczny na poniższy kod QR (czarno -białe czeki) i kliknij go na ekranie telefonu.\\n',\r\n    ru: '2. Когда ваш телефон вертикаль, его микрофон находится в нижнем краю.\\n3. Выставьте микрофон вашего телефона, удалив любой защитный чехол.\\n4. Сложите мягкую ткань (например, полотенце, шарф, свитер, куртку) несколько раз и поместите ее на стол между вами и вашим компьютером.\\n5. Укажите камеру телефона на QR -код ниже (черно -белые проверки) и нажмите на нее на экране вашего телефона.\\n',\r\n    hy: '2. Երբ ձեր հեռախոսը ուղղահայաց է, դրա խոսափողը ստորին եզրին է:\\n3. Բացահայտեք ձեր հեռախոսի խոսափողը `հեռացնելով ցանկացած պաշտպանիչ դեպք:\\n4. Ծալեք փափուկ կտոր (օրինակ, սրբիչ, շարֆ, սվիտեր, բաճկոն) կես անգամ եւ տեղադրեք այն սեղանի շուրջ ձեր եւ ձեր համակարգչի միջեւ:\\n5. Ձեռք բերեք ձեր հեռախոսի տեսախցիկը ստորեւ նշված QR կոդով (սեւ եւ սպիտակ ստուգումներ) եւ կտտացրեք այն ձեր հեռախոսի էկրանին:\\n',\r\n    fi: '2. Kun puhelimesi on pystysuora, sen mikrofoni on alareunassa.\\n3. Paljasta puhelimen mikrofoni poistamalla kaikki suojatapaukset.\\n4. Taita pehmeä kangas (esim. Pyyhe, huivi, villapaita, takki) puoliksi useita kertoja ja aseta se pöydälle sinun ja tietokoneesi väliin.\\n5. Osoita puhelinkamera alla olevaan QR -koodiin (mustavalkoiset tarkistukset) ja napsauta sitä puhelimen näytöllä.\\n',\r\n    ka: '2. როდესაც თქვენი ტელეფონი ვერტიკალურია, მისი მიკროფონი ქვედა ზღვარზეა.\\n3. გამოავლინეთ თქვენი ტელეფონის მიკროფონი ნებისმიერი დამცავი საქმის ამოღებით.\\n4. რამდენჯერმე ჩამოყარეთ რბილი ქსოვილი (მაგ. პირსახოცი, შარფი, სვიტერი, ქურთუკი) და მოათავსეთ მაგიდაზე თქვენსა და თქვენს კომპიუტერს შორის.\\n5. მიუთითეთ თქვენი ტელეფონის კამერა ქვემოთ მოცემულ QR კოდზე (შავი და თეთრი ჩეკები) და დააჭირეთ მას თქვენი ტელეფონის ეკრანზე.\\n',\r\n    he: \"2. כאשר הטלפון שלך אנכי, המיקרופון שלו נמצא בקצה התחתון.\\n3. חשוף את המיקרופון של הטלפון שלך על ידי הסרת כל מקרה מגן.\\n4. קפלו מטלית רכה (למשל מגבת, צעיף, סוודר, ז'קט) לחצי מספר פעמים והניחו אותה על השולחן בינך לבין המחשב.\\n5. כוון את מצלמת הטלפון שלך בקוד ה- QR למטה (צ'קים בשחור לבן) ולחץ עליה במסך הטלפון שלך.\\n\",\r\n    ar: '2. عندما يكون هاتفك رأسيًا ، يكون الميكروفون في الحافة السفلية.\\n3. فضح ميكروفون هاتفك عن طريق إزالة أي حالة وقائية.\\n4. قم بطي قطعة قماش ناعمة (مثل المنشفة والوشاح والسترة والسترة) إلى نصف عدة مرات ووضعها على الطاولة بينك وبين جهاز الكمبيوتر الخاص بك.\\n5. قم بإشارة كاميرا هاتفك إلى رمز الاستجابة السريعة أدناه (الشيكات بالأبيض والأسود) ، وانقر عليها في شاشة هاتفك.\\n',\r\n    ur: '2. جب آپ کا فون عمودی ہے تو ، اس کا مائکروفون نچلے کنارے میں ہے۔\\n3. کسی بھی حفاظتی کیس کو ہٹا کر اپنے فون کے مائکروفون کو بے نقاب کریں۔\\n4. آدھے کئی بار ایک نرم کپڑا (جیسے تولیہ ، اسکارف ، سویٹر ، جیکٹ) فولڈ کریں اور اسے اپنے اور اپنے کمپیوٹر کے درمیان ٹیبل پر رکھیں۔\\n5. اپنے فون کیمرہ کو نیچے کیو آر کوڈ (سیاہ اور سفید چیک) پر نشاندہی کریں ، اور اپنے فون کی اسکرین میں اس پر کلک کریں۔\\n',\r\n    hi: '2. जब आपका फोन ऊर्ध्वाधर होता है, तो इसका माइक्रोफोन निचले किनारे में होता है।\\n3. किसी भी सुरक्षात्मक मामले को हटाकर अपने फोन के माइक्रोफोन को उजागर करें।\\n4. आधे बार एक नरम कपड़ा (जैसे तौलिया, स्कार्फ, स्वेटर, जैकेट) को कई बार मोड़ो और इसे और आपके और आपके कंप्यूटर के बीच की मेज पर रखें।\\n5. नीचे दिए गए क्यूआर कोड (ब्लैक एंड व्हाइट चेक) पर अपना फोन कैमरा इंगित करें, और अपने फोन की स्क्रीन में उस पर क्लिक करें।\\n',\r\n    ta: '2. உங்கள் தொலைபேசி செங்குத்தாக இருக்கும்போது, ​​அதன் மைக்ரோஃபோன் கீழ் விளிம்பில் உள்ளது.\\n3. எந்தவொரு பாதுகாப்பு வழக்கையும் அகற்றுவதன் மூலம் உங்கள் தொலைபேசியின் மைக்ரோஃபோனை அம்பலப்படுத்துங்கள்.\\n4. ஒரு மென்மையான துணியை (எ.கா. துண்டு, தாவணி, ஸ்வெட்டர், ஜாக்கெட்) பாதி பல முறை மடித்து உங்களுக்கும் உங்கள் கணினிக்கும் இடையில் மேசையில் வைக்கவும்.\\n5. உங்கள் தொலைபேசி கேமராவை கீழே உள்ள QR குறியீட்டில் சுட்டிக்காட்டவும் (கருப்பு மற்றும் வெள்ளை காசோலைகள்), உங்கள் தொலைபேசியின் திரையில் அதைக் கிளிக் செய்க.\\n',\r\n    ml: '2. നിങ്ങളുടെ ഫോൺ ലംബമായിരിക്കുമ്പോൾ, അതിന്റെ മൈക്രോഫോൺ താഴത്തെ അരികിലാണ്.\\n3. ഏതെങ്കിലും സംരക്ഷണ കേസ് നീക്കംചെയ്ത് നിങ്ങളുടെ ഫോണിന്റെ മൈക്രോഫോൺ തുറന്നുകാട്ടുക.\\n4. ഒരു മൃദുവായ തുണി (E.G. ടവൽ, സ്കാർഫ്, സ്കാർഫ്, ജാക്കറ്റ്) അരക്കെട്ടിലും നിങ്ങൾക്കും നിങ്ങളുടെ കമ്പ്യൂട്ടറിനും ഇടയിലുള്ള മേശപ്പുറത്ത് വയ്ക്കുക.\\n5. നിങ്ങളുടെ ഫോൺ ക്യാമറ ചുവടെയുള്ള QR കോഡിൽ പോയിറ്റ് ചെയ്യുക (കറുപ്പും വെളുപ്പും ചെക്കുകൾ), നിങ്ങളുടെ ഫോണിന്റെ സ്ക്രീനിൽ അതിൽ ക്ലിക്കുചെയ്യുക.\\n',\r\n    te: '2. మీ ఫోన్ నిలువుగా ఉన్నప్పుడు, దాని మైక్రోఫోన్ దిగువ అంచున ఉంటుంది.\\n3. ఏదైనా రక్షిత కేసును తొలగించడం ద్వారా మీ ఫోన్ యొక్క మైక్రోఫోన్‌ను బహిర్గతం చేయండి.\\n4. మృదువైన వస్త్రాన్ని (ఉదా. టవల్, కండువా, ater లుకోటు, జాకెట్) సగం సార్లు మడవండి మరియు మీకు మరియు మీ కంప్యూటర్‌కు మధ్య ఉన్న టేబుల్‌పై ఉంచండి.\\n5. మీ ఫోన్ కెమెరాను దిగువ QR కోడ్ (బ్లాక్ అండ్ వైట్ చెక్కులు) వద్ద సూచించండి మరియు మీ ఫోన్ స్క్రీన్‌లో దానిపై క్లిక్ చేయండి.\\n',\r\n    kn: '2. ನಿಮ್ಮ ಫೋನ್ ಲಂಬವಾಗಿದ್ದಾಗ, ಅದರ ಮೈಕ್ರೊಫೋನ್ ಕೆಳಗಿನ ಅಂಚಿನಲ್ಲಿದೆ.\\n3. ಯಾವುದೇ ರಕ್ಷಣಾತ್ಮಕ ಪ್ರಕರಣವನ್ನು ತೆಗೆದುಹಾಕುವ ಮೂಲಕ ನಿಮ್ಮ ಫೋನ್‌ನ ಮೈಕ್ರೊಫೋನ್ ಅನ್ನು ಬಹಿರಂಗಪಡಿಸಿ.\\n4. ಮೃದುವಾದ ಬಟ್ಟೆಯನ್ನು (ಉದಾ. ಟವೆಲ್, ಸ್ಕಾರ್ಫ್, ಸ್ವೆಟರ್, ಜಾಕೆಟ್) ಅರ್ಧದಷ್ಟು ಬಾರಿ ಮಡಿಸಿ ಮತ್ತು ಅದನ್ನು ನಿಮ್ಮ ಮತ್ತು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ನಡುವೆ ಮೇಜಿನ ಮೇಲೆ ಇರಿಸಿ.\\n5. ನಿಮ್ಮ ಫೋನ್ ಕ್ಯಾಮೆರಾವನ್ನು ಕೆಳಗಿನ ಕ್ಯೂಆರ್ ಕೋಡ್‌ನಲ್ಲಿ (ಕಪ್ಪು ಮತ್ತು ಬಿಳಿ ಚೆಕ್‌ಗಳು) ಸೂಚಿಸಿ, ಮತ್ತು ನಿಮ್ಮ ಫೋನ್‌ನ ಪರದೆಯಲ್ಲಿ ಅದರ ಮೇಲೆ ಕ್ಲಿಕ್ ಮಾಡಿ.\\n',\r\n    bn: '২. যখন আপনার ফোনটি উল্লম্ব হয়, তখন এর মাইক্রোফোনটি নীচের প্রান্তে থাকে।\\n৩. কোনও প্রতিরক্ষামূলক কেস সরিয়ে আপনার ফোনের মাইক্রোফোনটি প্রকাশ করুন।\\n৪. একটি নরম কাপড় (উদাঃ তোয়ালে, স্কার্ফ, সোয়েটার, জ্যাকেট) ভাঁজ করুন এবং এটি আপনার এবং আপনার কম্পিউটারের মধ্যে টেবিলে রাখুন।\\n৫. নীচের কিউআর কোডে আপনার ফোন ক্যামেরাটি নির্দেশ করুন (কালো এবং সাদা চেক), এবং এটি আপনার ফোনের স্ক্রিনে ক্লিক করুন।\\n',\r\n    id: '2. Saat ponsel Anda vertikal, mikrofonnya berada di tepi bawah.\\n3. Ekspos mikrofon ponsel Anda dengan menghapus kasus pelindung apa pun.\\n4. Lipat kain lembut (mis. Handuk, syal, sweter, jaket) menjadi setengah kali dan letakkan di atas meja antara Anda dan komputer Anda.\\n5. Arahkan kamera ponsel Anda ke kode QR di bawah ini (cek hitam dan putih), dan klik di layar ponsel Anda.\\n',\r\n    'zh-CN':\r\n      '2.当您的手机垂直时，其麦克风处于下边缘。\\n3.通过删除任何保护性案例来暴露手机的麦克风。\\n4.将一块软布（例如毛巾，围巾，毛衣，夹克）折成两半，然后将其放在您和计算机之间的桌子上。\\n5.将手机摄像机指向下面的QR码（黑白检查），然后在手机的屏幕上单击它。\\n',\r\n    'zh-HK':\r\n      '2.當您的手機垂直時，其麥克風處於下邊緣。\\n3.通過刪除任何保護性案例來暴露手機的麥克風。\\n4.將一塊軟布（例如毛巾，圍巾，毛衣，夾克）折成兩半，然後將其放在您和計算機之間的桌子上。\\n5.將手機攝像機指向下面的QR碼（黑白檢查），然後在手機的屏幕上單擊它。\\n',\r\n    ja: '2.携帯電話が垂直になると、マイクは下端にあります。\\n3.保護ケースを削除して、携帯電話のマイクを公開します。\\n4.柔らかい布（タオル、スカーフ、セーター、ジャケットなど）を半分の数回折り、あなたとあなたのコンピューターの間のテーブルに置きます。\\n5.以下のQRコード（黒と白のチェック）で電話カメラをポイントし、携帯電話の画面でクリックします。\\n',\r\n    ko: '2. 휴대 전화가 수직 인 경우 마이크가 아래쪽 가장자리에 있습니다.\\n3. 보호 케이스를 제거하여 휴대 전화의 마이크를 노출시킵니다.\\n4. 부드러운 천 (예 : 수건, 스카프, 스웨터, 재킷)을 반으로 몇 번 접고 컴퓨터 사이에 테이블에 놓습니다.\\n5. 휴대 전화 카메라를 아래 QR 코드 (흑백 체크)로 가리키고 전화 화면에서 클릭하십시오.\\n',\r\n  },\r\n  RC_getUSBMicrophoneReady: {\r\n    'en-US':\r\n      \"2. Plug the microphone into one of your computer's USB-C ports. Attach the microphone to its tripod. The microphone should be vertical, pointing up to the ceiling. Place it on the table between you and your computer. \\n3. Click Proceed.\",\r\n    de: '2. Stecken Sie das Mikrofon in einen der USB-C-Anschlüsse Ihres Computers. Befestigen Sie das Mikrofon an seinem Stativ. Das Mikrofon sollte vertikal sein und auf die Decke hinweisen. Legen Sie es auf den Tisch zwischen Ihnen und Ihrem Computer.\\n3. Klicken Sie auf fortfahren.',\r\n    fr: \"2. Branchez le microphone sur l'un des ports USB-C de votre ordinateur. Fixez le microphone à son trépied. Le microphone doit être vertical, pointant vers le plafond. Placez-le sur la table entre vous et votre ordinateur.\\n3. Cliquez sur Procéder.\",\r\n    es: '2. Conecte el micrófono a uno de los puertos USB-C de su computadora. Conecte el micrófono a su trípode. El micrófono debe ser vertical, apuntando al techo. Colóquelo sobre la mesa entre usted y su computadora.\\n3. Haga clic en continuar.',\r\n    pt: '2. Conecte o microfone em uma das portas USB-C do seu computador. Prenda o microfone ao seu tripé. O microfone deve ser vertical, apontando para o teto. Coloque -o na mesa entre você e seu computador.\\n3. Clique em prosseguir.',\r\n    it: '2. Collegare il microfono in una delle porte USB-C del tuo computer. Attacca il microfono al suo treppiede. Il microfono dovrebbe essere verticale, rivolto verso il soffitto. Mettilo sul tavolo tra te e il tuo computer.\\n3. Fare clic su procedere.',\r\n    ro: '2. Conectați microfonul la unul dintre porturile USB-C ale computerului dvs. Atașați microfonul la trepiedul său. Microfonul trebuie să fie vertical, îndreptându -se spre tavan. Plasați -l pe masa dintre dvs. și computer.\\n3. Faceți clic pe continuați.',\r\n    pl: '2. Podłącz mikrofon do jednego z portów USB-C komputera. Przymocuj mikrofon do jego statywu. Mikrofon powinien być pionowy, wskazując na sufit. Umieść go na stole między tobą a komputerem.\\n3. Kliknij Postępuj.',\r\n    ru: '2. Подключите микрофон к одному из портов USB-C вашего компьютера. Прикрепите микрофон к его штативу. Микрофон должен быть вертикальным, указывая на потолок. Поместите его на стол между вами и вашим компьютером.\\n3. Нажмите «Продолжить».',\r\n    hy: '2. Խոսափողը միացրեք ձեր համակարգչի USB-C նավահանգիստներից մեկի մեջ: Կցեք միկրոֆոնը իր եռոտանի վրա: Խոսափողը պետք է լինի ուղղահայաց, մատնանշելով առաստաղը: Տեղադրեք այն սեղանի վրա ձեր եւ ձեր համակարգչի միջեւ:\\n3. Կտտացրեք Շարունակել:',\r\n    fi: '2. Kytke mikrofoni johonkin tietokoneen USB-C-portteihin. Kiinnitä mikrofoni jalustaansa. Mikrofonin tulisi olla pystysuora, osoittaen kattoon asti. Aseta se pöydälle sinun ja tietokoneesi välillä.\\n3. Napsauta Jatka.',\r\n    ka: '2. შეაერთეთ მიკროფონი თქვენი კომპიუტერის USB-C ერთ პორტებში. მიამაგრეთ მიკროფონი თავის სამფეხა. მიკროფონი უნდა იყოს ვერტიკალური, მიუთითებს ჭერზე. განათავსეთ იგი მაგიდაზე თქვენსა და თქვენს კომპიუტერს შორის.\\n3. დააჭირეთ გაგრძელება.',\r\n    he: '2. חבר את המיקרופון לאחד מיציאות ה- USB-C של המחשב שלך. חבר את המיקרופון לחצובה שלו. המיקרופון צריך להיות אנכי, ומצביע על התקרה. הניחו אותו על השולחן בינך לבין המחשב.\\n3. לחץ על המשך.',\r\n    ar: '2. قم بتوصيل الميكروفون بأحد منافذ USB-C بجهاز الكمبيوتر الخاص بك. نعلق الميكروفون إلى ترايبود. يجب أن يكون الميكروفون رأسيًا ، مما يشير إلى السقف. ضعه على الطاولة بينك وبين جهاز الكمبيوتر الخاص بك.\\n3. انقر فوق متابعة.',\r\n    ur: '2. مائکروفون کو اپنے کمپیوٹر کی USB-C بندرگاہوں میں سے ایک میں پلگ ان کریں۔ مائکروفون کو اس کے تپائی سے جوڑیں۔ مائکروفون عمودی ہونا چاہئے ، چھت کی طرف اشارہ کرتے ہوئے۔ اسے اپنے اور اپنے کمپیوٹر کے درمیان ٹیبل پر رکھیں۔\\n3. آگے بڑھیں پر کلک کریں۔',\r\n    hi: '2. माइक्रोफोन को अपने कंप्यूटर के USB-C पोर्ट में से एक में प्लग करें। माइक्रोफोन को उसके तिपाई से संलग्न करें। माइक्रोफोन ऊर्ध्वाधर होना चाहिए, छत की ओर इशारा करते हुए। इसे आप और आपके कंप्यूटर के बीच की मेज पर रखें।\\n3. आगे पर क्लिक करें।',\r\n    ta: '2. உங்கள் கணினியின் யூ.எஸ்.பி-சி துறைமுகங்களில் ஒன்றில் மைக்ரோஃபோனை செருகவும். மைக்ரோஃபோனை அதன் முக்காலியில் இணைக்கவும். மைக்ரோஃபோன் செங்குத்தாக இருக்க வேண்டும், உச்சவரம்பு வரை சுட்டிக்காட்டுகிறது. உங்களுக்கும் உங்கள் கணினிக்கும் இடையிலான அட்டவணையில் வைக்கவும்.\\n3. தொடரவும் என்பதைக் கிளிக் செய்க.',\r\n    ml: '2. നിങ്ങളുടെ കമ്പ്യൂട്ടറിന്റെ യുഎസ്ബി-സി പോർട്ടുകളിലൊന്നിൽ മൈക്രോഫോൺ പ്ലഗ് ചെയ്യുക. മൈക്രോഫോൺ അതിന്റെ ട്രൈപോഡിലേക്ക് അറ്റാച്ചുചെയ്യുക. മൈക്രോഫോൺ ലംബമായിരിക്കണം, സീലിംഗ് വരെ ചൂണ്ടിക്കാണിക്കണം. നിങ്ങൾക്കും നിങ്ങളുടെ കമ്പ്യൂട്ടറിനും ഇടയിലുള്ള മേശപ്പുറത്ത് വയ്ക്കുക.\\n3. തുടരുക ക്ലിക്കുചെയ്യുക.',\r\n    te: '2. మైక్రోఫోన్‌ను మీ కంప్యూటర్ యొక్క USB-C పోర్ట్‌లలో ఒకటిగా ప్లగ్ చేయండి. మైక్రోఫోన్‌ను దాని త్రిపాదకు అటాచ్ చేయండి. మైక్రోఫోన్ నిలువుగా ఉండాలి, పైకప్పు వరకు ఉంటుంది. మీకు మరియు మీ కంప్యూటర్ మధ్య పట్టికలో ఉంచండి.\\n3. కొనసాగండి క్లిక్ చేయండి.',\r\n    kn: '2. ಮೈಕ್ರೊಫೋನ್ ಅನ್ನು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್‌ನ ಯುಎಸ್‌ಬಿ-ಸಿ ಪೋರ್ಟ್‌ಗಳಲ್ಲಿ ಒಂದಕ್ಕೆ ಪ್ಲಗ್ ಮಾಡಿ. ಮೈಕ್ರೊಫೋನ್ ಅನ್ನು ಅದರ ಟ್ರೈಪಾಡ್‌ಗೆ ಲಗತ್ತಿಸಿ. ಮೈಕ್ರೊಫೋನ್ ಲಂಬವಾಗಿರಬೇಕು, ಇದು ಸೀಲಿಂಗ್‌ಗೆ ಸೂಚಿಸುತ್ತದೆ. ಅದನ್ನು ನಿಮ್ಮ ಮತ್ತು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ನಡುವೆ ಮೇಜಿನ ಮೇಲೆ ಇರಿಸಿ.\\n3. ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: '2. আপনার কম্পিউটারের ইউএসবি-সি পোর্টগুলির মধ্যে একটিতে মাইক্রোফোনটি প্লাগ করুন। মাইক্রোফোনটি তার ট্রিপডের সাথে সংযুক্ত করুন। মাইক্রোফোনটি উল্লম্ব হওয়া উচিত, সিলিং পর্যন্ত নির্দেশ করে। এটি আপনার এবং আপনার কম্পিউটারের মধ্যে টেবিলে রাখুন।\\n3. এগিয়ে ক্লিক করুন।',\r\n    id: '2. Colokkan mikrofon ke salah satu port USB-C komputer Anda. Pasang mikrofon ke tripod -nya. Mikrofon harus vertikal, menunjuk ke langit -langit. Tempatkan di atas meja antara Anda dan komputer Anda.\\n3. Klik Lanjutkan.',\r\n    'zh-CN':\r\n      '2.将麦克风插入计算机的一个USB-C端口之一。将麦克风连接到其三脚架上。麦克风应垂直，指向天花板。将其放在您和您的计算机之间的桌子上。\\n3.点击继续。',\r\n    'zh-HK':\r\n      '2.將麥克風插入計算機的一個USB-C端口之一。將麥克風連接到其三腳架上。麥克風應垂直，指向天花板。將其放在您和您的計算機之間的桌子上。\\n3.點擊繼續。',\r\n    ja: '2.マイクをコンピューターのUSB-Cポートの1つに接続します。マイクを三脚に取り付けます。マイクは垂直であり、天井を指している必要があります。あなたとあなたのコンピューターの間のテーブルにそれを置きます。\\n3. [続行]をクリックします。',\r\n    ko: '2. 마이크를 컴퓨터의 USB-C 포트 중 하나에 연결하십시오. 마이크를 삼각대에 부착하십시오. 마이크는 천장을 가리키며 수직이어야합니다. 당신과 당신의 컴퓨터 사이에 테이블에 놓으십시오.\\n3. 진행을 클릭하십시오.',\r\n  },\r\n  RC_howLongToCalibrate: {\r\n    'en-US': 'Calibration takes about 111 minutes.',\r\n    de: 'Die Kalibrierung dauert ungefähr 111 Minuten.',\r\n    fr: \"L'étalonnage dure environ 111 minutes.\",\r\n    es: 'La calibración lleva unos 111 minutos.',\r\n    pt: 'A calibração leva cerca de 111 minutos.',\r\n    it: 'La calibrazione richiede circa 111 minuti.',\r\n    ro: 'Calibrarea durează aproximativ 111 minute.',\r\n    pl: 'Kalibracja zajmuje około 111 minut.',\r\n    ru: 'Калибровка занимает около 111 минут.',\r\n    hy: 'Կալիբրացումը տեւում է մոտ 111 րոպե:',\r\n    fi: 'Kalibrointi kestää noin 111 minuuttia.',\r\n    ka: 'კალიბრაციას დაახლოებით 111 წუთი სჭირდება.',\r\n    he: 'הכיול אורך כ 111 דקות.',\r\n    ar: 'يستغرق المعايرة حوالي 111 دقيقة.',\r\n    ur: 'انشانکن میں تقریبا 111 منٹ لگتے ہیں۔',\r\n    hi: 'अंशांकन में लगभग 111 मिनट लगते हैं।',\r\n    ta: 'அளவுத்திருத்தம் சுமார் 111 நிமிடங்கள் ஆகும்.',\r\n    ml: 'കാലിബ്രേഷൻ ഏകദേശം 111 മിനിറ്റ് എടുക്കും.',\r\n    te: 'అమరిక 111 నిమిషాలు పడుతుంది.',\r\n    kn: 'ಮಾಪನಾಂಕ ನಿರ್ಣಯವು ಸುಮಾರು 111 ನಿಮಿಷಗಳನ್ನು ತೆಗೆದುಕೊಳ್ಳುತ್ತದೆ.',\r\n    bn: 'ক্রমাঙ্কন প্রায় 111 মিনিট সময় নেয়।',\r\n    id: 'Kalibrasi membutuhkan waktu sekitar 111 menit.',\r\n    'zh-CN': '校准大约需要111分钟。',\r\n    'zh-HK': '校準大約需要111分鐘。',\r\n    ja: 'キャリブレーションには約111分かかります。',\r\n    ko: '교정은 약 111 분이 걸립니다.',\r\n  },\r\n  RC_identifyMicrophone: {\r\n    'en-US':\r\n      '1. In the box below, type the make and model of the smartphone or USB microphone, e.g. iPhone 12 Pro.\\n',\r\n    de: '1. Geben Sie im folgenden Feld das Make und das Modell des Smartphones oder des USB -Mikrofons ein, z. iPhone 12 Pro.\\n',\r\n    fr: '1. Dans la case ci-dessous, tapez la marque et le modèle du smartphone ou du microphone USB, par ex. iPhone 12 Pro.\\n',\r\n    es: '1. En el cuadro a continuación, escriba la marca y el modelo del teléfono inteligente o el micrófono USB, p. iPhone 12 Pro.\\n',\r\n    pt: '1. Na caixa abaixo, digite a marca e o modelo do smartphone ou microfone USB, p. iPhone 12 Pro.\\n',\r\n    it: '1. Nella casella sottostante, digitare la marca e il modello dello smartphone o del microfono USB, ad es. iPhone 12 Pro.\\n',\r\n    ro: '1. În caseta de mai jos, tastați marca și modelul smartphone -ului sau microfonului USB, de ex. iPhone 12 Pro.\\n',\r\n    pl: '1. W poniższym polu wpisz markę i model smartfona lub mikrofonu USB, np. iPhone 12 Pro.\\n',\r\n    ru: '1. В приведенной ниже поле введите Make and Model смартфона или USB -микрофона, например, iPhone 12 Pro.\\n',\r\n    hy: '1. Ստորեւ նշված վանդակում մուտքագրեք սմարթֆոնի կամ USB խոսափողի պատրաստումը եւ մոդելը, օրինակ: iPhone 12 Pro.\\n',\r\n    fi: '1. Kirjoita alla olevaan laatikkoon älypuhelimen tai USB -mikrofonin malli ja malli, esim. iPhone 12 Pro.\\n',\r\n    ka: '1. ქვემოთ მოცემულ ყუთში ჩაწერეთ სმარტფონის ან USB მიკროფონის მაკიაჟი და მოდელი, მაგ. iPhone 12 Pro.\\n',\r\n    he: '1. בתיבה למטה, הקלד את הייצור והדגם של הטלפון החכם או המיקרופון USB, למשל. Pro iPhone 12.\\n',\r\n    ar: '1. في المربع أدناه ، اكتب صنع وطراز الهاتف الذكي أو ميكروفون USB ، على سبيل المثال iPhone 12 Pro.\\n',\r\n    ur: '1. نیچے دیئے گئے خانے میں ، اسمارٹ فون یا USB مائکروفون کے میک اور ماڈل کو ٹائپ کریں ، جیسے۔ آئی فون 12 پرو۔\\n',\r\n    hi: '1. नीचे दिए गए बॉक्स में, स्मार्टफोन या यूएसबी माइक्रोफोन का मेक और मॉडल टाइप करें, उदा। iPhone 12 प्रो।\\n',\r\n    ta: '1. கீழேயுள்ள பெட்டியில், ஸ்மார்ட்போன் அல்லது யூ.எஸ்.பி மைக்ரோஃபோனின் மேக் மற்றும் மாடலை தட்டச்சு செய்க, எ.கா. ஐபோன் 12 புரோ.\\n',\r\n    ml: '1. ചുവടെയുള്ള ബോക്സിൽ, സ്മാർട്ട്ഫോണിന്റെ അല്ലെങ്കിൽ യുഎസ്ബി മൈക്രോഫോൺ, ഉദാ. ഐഫോൺ 12 പ്രോ.\\n',\r\n    te: '1. దిగువ పెట్టెలో, స్మార్ట్‌ఫోన్ లేదా యుఎస్‌బి మైక్రోఫోన్ యొక్క మేక్ మరియు మోడల్‌ను టైప్ చేయండి, ఉదా. ఐఫోన్ 12 ప్రో.\\n',\r\n    kn: '1. ಕೆಳಗಿನ ಪೆಟ್ಟಿಗೆಯಲ್ಲಿ, ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಅಥವಾ ಯುಎಸ್‌ಬಿ ಮೈಕ್ರೊಫೋನ್‌ನ ತಯಾರಿಕೆ ಮತ್ತು ಮಾದರಿಯನ್ನು ಟೈಪ್ ಮಾಡಿ, ಉದಾ. ಐಫೋನ್ 12 ಪ್ರೊ.\\n',\r\n    bn: '1. নীচের বাক্সে, স্মার্টফোন বা ইউএসবি মাইক্রোফোনের মেক এবং মডেলটি টাইপ করুন, উদাঃ আইফোন 12 প্রো।\\n',\r\n    id: '1. Dalam kotak di bawah ini, ketik Make dan Model Smartphone atau Mikrofon USB, mis. iPhone 12 Pro.\\n',\r\n    'zh-CN': '1.在下面的框中，键入智能手机或USB麦克风的制造和型号，例如iPhone 12 Pro。\\n',\r\n    'zh-HK': '1.在下面的框中，鍵入智能手機或USB麥克風的製造和型號，例如iPhone 12 Pro。\\n',\r\n    ja: '1.以下のボックスに、スマートフォンまたはUSBマイクのメーカーとモデルを入力します。 iPhone 12 Pro。\\n',\r\n    ko: '1. 아래 상자에 스마트 폰 또는 USB 마이크의 제조사 및 모델을 입력하십시오 (예 : iPhone 12 Pro.\\n',\r\n  },\r\n  RC_ifStuckPleaseReturn: {\r\n    'en-US':\r\n      \"It's rare, but if your computer gets stuck in calibration, please return your study to Prolific.co. \",\r\n    de: 'Es ist selten, aber wenn Ihr Computer in der Kalibrierung stecken bleibt, geben Sie Ihre Studie an produktiv.co zurück.',\r\n    fr: \"C'est rare, mais si votre ordinateur est coincé dans l'étalonnage, veuillez retourner votre étude sur prolific.co.\",\r\n    es: 'Es raro, pero si su computadora se atasca en la calibración, devuelva su estudio a Prolific.co.',\r\n    pt: 'É raro, mas se o seu computador ficar preso na calibração, devolva seu estudo ao prolific.co.',\r\n    it: 'È raro, ma se il tuo computer rimane bloccato nella calibrazione, ti preghiamo di restituire il tuo studio a prolific.co.',\r\n    ro: 'Este rar, dar dacă computerul dvs. se blochează în calibrare, vă rugăm să returnați studiul la Prolific.co.',\r\n    pl: 'Jest to rzadkie, ale jeśli komputer utknie w kalibracji, zwróć swoje badanie na Prolific.co.',\r\n    ru: 'Это редко, но если ваш компьютер застрял в калибровке, верните свое исследование в Pellific.co.',\r\n    hy: 'Հազվադեպ է, բայց եթե ձեր համակարգիչը խրված է տրամաչափման մեջ, խնդրում ենք վերադարձնել ձեր ուսումնասիրությունը Pringific.co- ին:',\r\n    fi: 'Se on harvinaista, mutta jos tietokoneesi takertuu kalibrointiin, palauta opintosi tuotteelle Lensific.co.',\r\n    ka: 'ეს იშვიათია, მაგრამ თუ თქვენი კომპიუტერი ჩერდება კალიბრაციაში, გთხოვთ, დააბრუნოთ თქვენი შესწავლა Prolific.co- ზე.',\r\n    he: 'זה נדיר, אבל אם המחשב שלך נתקע בכיול, אנא החזיר את המחקר שלך ל- prolific.co.',\r\n    ar: 'إنه أمر نادر الحدوث ، ولكن إذا كان جهاز الكمبيوتر الخاص بك عالقًا في المعايرة ، فيرجى إرجاع دراستك إلى Prolific.co.',\r\n    ur: 'یہ شاذ و نادر ہی ہے ، لیکن اگر آپ کا کمپیوٹر انشانکن میں پھنس جاتا ہے تو ، براہ کرم اپنا مطالعہ prolific.co پر واپس کریں۔',\r\n    hi: 'यह दुर्लभ है, लेकिन यदि आपका कंप्यूटर अंशांकन में फंस जाता है, तो कृपया अपने अध्ययन को prolific.co पर लौटाएं।',\r\n    ta: 'இது அரிதானது, ஆனால் உங்கள் கணினி அளவுத்திருத்தத்தில் சிக்கிக்கொண்டால், தயவுசெய்து உங்கள் ஆய்வை plemific.co க்கு திருப்பித் தரவும்.',\r\n    ml: 'ഇത് അപൂർവമാണ്, പക്ഷേ നിങ്ങളുടെ കമ്പ്യൂട്ടർ കാലിബ്രേഷനിൽ കുടുങ്ങുകയാണെങ്കിൽ, ദയവായി നിങ്ങളുടെ പഠനം സമൃദ്ധമായ.cCO- ലേക്ക് തിരികെ നൽകുക.',\r\n    te: 'ఇది చాలా అరుదు, కానీ మీ కంప్యూటర్ క్రమాంకనం చేస్తే, దయచేసి మీ అధ్యయనాన్ని ఫలవంతమైన.కోకు తిరిగి ఇవ్వండి.',\r\n    kn: 'ಇದು ಅಪರೂಪ, ಆದರೆ ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ಮಾಪನಾಂಕ ನಿರ್ಣಯದಲ್ಲಿ ಸಿಲುಕಿಕೊಂಡರೆ, ದಯವಿಟ್ಟು ನಿಮ್ಮ ಅಧ್ಯಯನವನ್ನು verific.co ಗೆ ಹಿಂತಿರುಗಿ.',\r\n    bn: 'এটি বিরল, তবে যদি আপনার কম্পিউটারটি ক্রমাঙ্কনটিতে আটকে যায় তবে দয়া করে আপনার অধ্যয়নটি প্রলিফিক.কম এ ফিরিয়ে দিন।',\r\n    id: 'Ini jarang, tetapi jika komputer Anda macet dalam kalibrasi, silakan kembalikan studi Anda ke Prolific.co.',\r\n    'zh-CN': '这很少见，但是如果您的计算机被卡在校准中，请将您的书房归还Pollific.co。',\r\n    'zh-HK': '這很少見，但是如果您的計算機被卡在校準中，請將您的書房歸還Pollific.co。',\r\n    ja: 'まれですが、コンピューターがキャリブレーションに巻き込まれた場合は、勉強をProlific.coに返送してください。',\r\n    ko: '드물지만 컴퓨터가 교정에 갇히면 연구를 Prolific.co로 반환하십시오.',\r\n  },\r\n  RC_nearPointIntro: {\r\n    'en-US':\r\n      \"We'll measure the distance between your eyes. Use the video image to watch your eyes. Hold a pen horizontally against your face in front of your eyes. Align your right and left thumb nails with the centers of your right and left pupils. Then bring the pen to the on-screen ruler to measure the separation between your  thumbs. Allign your left thumb with zero and notice where your right thumb is. Put down the pen and click the ruler at that point. Finally, click OK to continue.\",\r\n    de: 'Wir werden den Abstand zwischen Ihren Augen messen. Verwenden Sie das Videobild, um Ihre Augen zu sehen. Halten Sie einen Stift horizontal gegen Ihr Gesicht vor Ihren Augen. Richten Sie Ihre rechten und linken Daumennägel mit den Zentren Ihrer rechten und linken Schüler aus. Bringen Sie dann den Stift zum Lineal auf dem Bildschirm, um die Trennung zwischen Ihren Daumen zu messen. Allign Ihren linken Daumen mit Null und bemerken Sie, wo sich Ihr rechter Daumen befindet. Legen Sie den Stift nieder und klicken Sie zu diesem Zeitpunkt auf das Lineal. Klicken Sie schließlich auf OK, um fortzufahren.',\r\n    fr: \"Nous mesurerons la distance entre vos yeux. Utilisez l'image vidéo pour regarder vos yeux. Tenez un stylo horizontalement contre votre visage devant vos yeux. Alignez vos ongles de pouce droit et gauche avec les centres de vos élèves droits et gauche. Ensuite, apportez le stylo à la règle à l'écran pour mesurer la séparation entre vos pouces. Allsign votre pouce gauche avec zéro et remarquez où se trouve votre pouce droit. Posez le stylo et cliquez sur la règle à ce moment-là. Enfin, cliquez sur OK pour continuer.\",\r\n    es: 'Mediremos la distancia entre sus ojos. Usa la imagen de video para ver tus ojos. Mantenga un bolígrafo horizontalmente contra su cara frente a sus ojos. Alinee las uñas de pulgar derecha e izquierda con los centros de sus alumnos derecho e izquierdo. Luego traiga la pluma a la regla en pantalla para medir la separación entre los pulgares. Alinee el pulgar izquierdo con cero y observe dónde está el pulgar derecho. Coloque la pluma y haga clic en la regla en ese punto. Finalmente, haga clic en Aceptar para continuar.',\r\n    pt: 'Mediremos a distância entre seus olhos. Use a imagem de vídeo para assistir seus olhos. Segure uma caneta horizontalmente contra o seu rosto na frente dos seus olhos. Alinhe as unhas do polegar direito e esquerdo com os centros das pupilas direita e esquerda. Em seguida, leve a caneta ao governante na tela para medir a separação entre os polegares. ALLIGN seu polegar esquerdo com zero e observe onde está o polegar direito. Abaixe a caneta e clique na régua nesse ponto. Por fim, clique em OK para continuar.',\r\n    it: \"Misurare la distanza tra i tuoi occhi. Usa l'immagine video per guardare i tuoi occhi. Tieni una penna in orizzontale contro il viso davanti ai tuoi occhi. Allinea le unghie del pollice destro e sinistro con i centri delle alunni destra e sinistra. Quindi porta la penna sul sovrano sullo schermo per misurare la separazione tra i pollici. Alllinea il pollice sinistro con zero e nota dove si trova il pollice destro. Metti giù la penna e fai clic sul righello a quel punto. Infine, fai clic su OK per continuare.\",\r\n    ro: 'Vom măsura distanța dintre ochi. Folosiți imaginea video pentru a vă urmări ochii. Țineți un stilou pe orizontală pe față în fața ochilor. Aliniați -vă unghiile de degetul mare din dreapta și stânga cu centrele elevilor din dreapta și stânga. Apoi aduceți stiloul la conducătorul de pe ecran pentru a măsura separarea dintre degetele mari. Alujați -vă degetul mare cu zero și observați unde este degetul mare. Puneți stiloul și faceți clic pe riglă în acel moment. În cele din urmă, faceți clic pe OK pentru a continua.',\r\n    pl: 'Zmienimy odległość między twoimi oczami. Użyj obrazu wideo, aby oglądać oczy. Trzymaj pióro poziomo na twarzy przed oczami. Wyrównaj swoje prawe i lewe paznokcie kciuka z centrami prawej i lewej uczniów. Następnie przynieś pióro do linijki na ekranie, aby zmierzyć rozdział między kciukami. All lewy kciuk zero i zauważ, gdzie jest twój prawy kciuk. Odłóż pióro i kliknij władcę w tym momencie. Na koniec kliknij OK, aby kontynuować.',\r\n    ru: 'Мы измеряем расстояние между вашими глазами. Используйте видео изображение, чтобы посмотреть свои глаза. Держите ручку горизонтально к лицу перед глазами. Выровняйте свои правые и левые пальцы с помощью центров ваших зрачков правого и левого. Затем принесите ручку к линейке на экране, чтобы измерить разделение между большими пальцами. Выравнивайте левый большой палец с нулем и обратите внимание, где находится правый большой палец. Положите ручку и щелкните правителя в этот момент. Наконец, нажмите OK, чтобы продолжить.',\r\n    hy: 'Մենք չափելու ենք ձեր աչքերի միջեւ եղած հեռավորությունը: Օգտագործեք տեսանյութի պատկերը `ձեր աչքերը դիտելու համար: Ձեր աչքերի առջեւ ձեր դեմքի դեմ հորիզոնական գրիչ պահեք: Հավասարեցրեք ձեր աջ եւ ձախ մատի եղունգները ձեր աջ եւ ձախ աշակերտների կենտրոններով: Այնուհետեւ գրիչը հասցրեք էկրանի տիրակալին `ձեր մատների միջեւ տարանջատումը չափելու համար: Ձեռք բերեք ձեր ձախ բութը զրոյով եւ նկատեք, թե որտեղ է ձեր աջ բութը: Ներդրեք գրիչը եւ այդ պահին սեղմեք կառավարիչը: Վերջապես, կտտացրեք OK, շարունակելու համար:',\r\n    fi: 'Mittaamme silmäsi välisen etäisyyden. Katso videokuvasi silmäsi. Pidä kynää vaakasuoraan kasvojasi vasten silmäsi edessä. Kohdista oikeat ja vasen peukalokynnet oikean ja vasemman oppilaasi keskuksiin. Tuo sitten kynä näytön hallitsijalle mitata peukaloidesi välinen ero. Allign vasen peukalo nollalla ja huomaa missä oikea peukalo on. Laita kynä alas ja napsauta viivainta siinä vaiheessa. Lopuksi napsauta OK jatkaaksesi.',\r\n    ka: 'ჩვენ გავზომავთ მანძილს თქვენს თვალებს შორის. გამოიყენეთ ვიდეო სურათი, რომ ნახოთ თქვენი თვალები. თქვენი თვალის წინაშე ჰორიზონტალურად დაიჭირე კალამი. თქვენი მარჯვენა და მარცხენა თითის ფრჩხილების გასწორება თქვენი მარჯვენა და მარცხენა მოსწავლეების ცენტრებთან. შემდეგ კალამი მიიტანეთ ეკრანზე მმართველთან, რათა გაზომოთ თქვენი თითების განცალკევება. მარცხენა ცერა თითი ნულოვანი და შეამჩნიეთ სად არის თქვენი მარჯვენა თითი. ჩაიცვი კალამი და დააჭირეთ მმართველს იმ ეტაპზე. დაბოლოს, დააჭირეთ ღილაკს, რომ გააგრძელოთ.',\r\n    he: 'נמדוד את המרחק בין העיניים שלך. השתמש בתמונת הווידיאו כדי לצפות בעיניים שלך. החזק עט אופקית על פניך מול עיניך. יישר את ציפורני האגודל הימנית והשמאלית שלך עם מרכזי התלמידים הימניים והשמאליים שלך. ואז הביאו את העט לשליט על המסך כדי למדוד את ההפרדה בין האגודלים. יש ליישר את האגודל השמאלי שלך עם אפס ושים לב איפה האגודל הימני שלך. הניחו את העט ולחצו על השליט באותה נקודה. לבסוף, לחץ על אישור כדי להמשיך.',\r\n    ar: 'سنقوم بقياس المسافة بين عينيك. استخدم صورة الفيديو لمشاهدة عينيك. امسك قلمًا أفقيًا على وجهك أمام عينيك. قم بمحاذاة أظافر الإبهام اليمنى واليسرى مع مراكز التلاميذ الأيمن واليسرى. ثم أحضر القلم إلى المسطرة على الشاشة لقياس الفصل بين إبهامك. قم بلف إبهامك الأيسر بصفر ولاحظ أين يوجد إبهامك الأيمن. ضع القلم وانقر فوق المسطرة في تلك المرحلة. أخيرًا ، انقر فوق \"موافق\" للمتابعة.',\r\n    ur: 'ہم آپ کی آنکھوں کے درمیان فاصلہ طے کریں گے۔ آنکھیں دیکھنے کے لئے ویڈیو امیج کا استعمال کریں۔ اپنی آنکھوں کے سامنے اپنے چہرے کے خلاف افقی طور پر قلم رکھیں۔ اپنے دائیں اور بائیں انگوٹھے کے ناخن کو اپنے دائیں اور بائیں شاگردوں کے مراکز کے ساتھ سیدھ کریں۔ اس کے بعد اپنے انگوٹھوں کے مابین علیحدگی کی پیمائش کے لئے آن اسکرین حکمران کے پاس قلم لائیں۔ اپنے بائیں انگوٹھے کو صفر سے الگ کریں اور نوٹس کریں کہ آپ کا دائیں انگوٹھا کہاں ہے۔ قلم کو نیچے رکھیں اور اس مقام پر حکمران پر کلک کریں۔ آخر میں ، جاری رکھنے کے لئے ٹھیک ہے پر کلک کریں۔',\r\n    hi: 'हम आपकी आंखों के बीच की दूरी को मापेंगे। अपनी आँखें देखने के लिए वीडियो छवि का उपयोग करें। अपनी आंखों के सामने अपने चेहरे के खिलाफ क्षैतिज रूप से एक पेन पकड़ो। अपने दाएं और बाएं विद्यार्थियों के केंद्रों के साथ अपने दाएं और बाएं अंगूठे के नाखूनों को संरेखित करें। फिर अपने अंगूठे के बीच पृथक्करण को मापने के लिए पेन को ऑन-स्क्रीन शासक में लाएं। अपने बाएं अंगूठे को शून्य के साथ एलगेट करें और नोटिस करें कि आपका दाहिना अंगूठा कहां है। पेन को नीचे रखें और उस बिंदु पर शासक पर क्लिक करें। अंत में, जारी रखने के लिए ओके पर क्लिक करें।',\r\n    ta: 'உங்கள் கண்களுக்கு இடையிலான தூரத்தை நாங்கள் அளவிடுவோம். உங்கள் கண்களைக் காண வீடியோ படத்தைப் பயன்படுத்தவும். உங்கள் கண்களுக்கு முன்னால் உங்கள் முகத்திற்கு எதிராக கிடைமட்டமாக ஒரு பேனாவைப் பிடித்துக் கொள்ளுங்கள். உங்கள் வலது மற்றும் இடது கட்டைவிரல் நகங்களை உங்கள் வலது மற்றும் இடது மாணவர்களின் மையங்களுடன் சீரமைக்கவும். உங்கள் கட்டைவிரல்களுக்கு இடையில் பிரிவினை அளவிட பேனாவை திரையில் உள்ள ஆட்சியாளரிடம் கொண்டு வாருங்கள். உங்கள் இடது கட்டைவிரலை பூஜ்ஜியத்துடன் ஒதுக்கி, உங்கள் வலது கட்டைவிரல் எங்கே என்பதைக் கவனியுங்கள். பேனாவை கீழே வைத்து, அந்த நேரத்தில் ஆட்சியாளரைக் கிளிக் செய்க. இறுதியாக, தொடர சரி என்பதைக் கிளிக் செய்க.',\r\n    ml: 'നിങ്ങളുടെ കണ്ണുകൾ തമ്മിലുള്ള ദൂരം ഞങ്ങൾ അളക്കും. നിങ്ങളുടെ കണ്ണുകൾ കാണാൻ വീഡിയോ ചിത്രം ഉപയോഗിക്കുക. നിങ്ങളുടെ മുഖത്ത് നിങ്ങളുടെ മുഖത്തിന് മുന്നിൽ ഒരു പേന അമർത്തിപ്പിടിക്കുക. നിങ്ങളുടെ വലതുവശത്ത് നിങ്ങളുടെ വലതുവശത്തും ഉപേക്ഷിച്ച വിദ്യാർത്ഥികളോടും ഒപ്പം വിന്യസിക്കുക. നിങ്ങളുടെ തള്ളവിരൽ തമ്മിലുള്ള വേർപിരിയൽ അളക്കാൻ പേന ഓൺ-സ്ക്രീൻ ഭരണാധികാരിയിലേക്ക് കൊണ്ടുവരിക. നിങ്ങളുടെ ഇടത് തള്ളവിരൽ പൂജ്യവും അറിയിപ്പും ഉപയോഗിച്ച് നിങ്ങളുടെ വലത് തലം. പേന താഴെയിടുക, ആ സമയത്ത് ഭരണാധികാരി ക്ലിക്കുചെയ്യുക. അവസാനമായി, തുടരാൻ ശരി ക്ലിക്കുചെയ്യുക.',\r\n    te: 'మేము మీ కళ్ళ మధ్య దూరాన్ని కొలుస్తాము. మీ కళ్ళు చూడటానికి వీడియో చిత్రాన్ని ఉపయోగించండి. మీ కళ్ళ ముందు మీ ముఖానికి వ్యతిరేకంగా పెన్ను పట్టుకోండి. మీ కుడి మరియు ఎడమ బొటనవేలు గోళ్లను మీ కుడి మరియు ఎడమ విద్యార్థుల కేంద్రాలతో సమలేఖనం చేయండి. అప్పుడు మీ బ్రొటనవేళ్లు మధ్య విభజనను కొలవడానికి తెరపై పెన్నును తెరపైకి తీసుకురండి. మీ ఎడమ బొటనవేలును సున్నాతో allin మరియు మీ కుడి బొటనవేలు ఎక్కడ ఉందో గమనించండి. పెన్ను అణిచివేసి, ఆ సమయంలో పాలకుడిని క్లిక్ చేయండి. చివరగా, కొనసాగించడానికి సరే క్లిక్ చేయండి.',\r\n    kn: 'ನಿಮ್ಮ ಕಣ್ಣುಗಳ ನಡುವಿನ ಅಂತರವನ್ನು ನಾವು ಅಳೆಯುತ್ತೇವೆ. ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ವೀಕ್ಷಿಸಲು ವೀಡಿಯೊ ಚಿತ್ರವನ್ನು ಬಳಸಿ. ನಿಮ್ಮ ಕಣ್ಣುಗಳ ಮುಂದೆ ನಿಮ್ಮ ಮುಖದ ವಿರುದ್ಧ ಅಡ್ಡಲಾಗಿ ಪೆನ್ನು ಹಿಡಿದುಕೊಳ್ಳಿ. ನಿಮ್ಮ ಬಲ ಮತ್ತು ಎಡ ಹೆಬ್ಬೆರಳು ಉಗುರುಗಳನ್ನು ನಿಮ್ಮ ಬಲ ಮತ್ತು ಎಡ ವಿದ್ಯಾರ್ಥಿಗಳ ಕೇಂದ್ರಗಳೊಂದಿಗೆ ಜೋಡಿಸಿ. ನಿಮ್ಮ ಹೆಬ್ಬೆರಳುಗಳ ನಡುವಿನ ಪ್ರತ್ಯೇಕತೆಯನ್ನು ಅಳೆಯಲು ಪರದೆಯ ಆಡಳಿತಗಾರನಿಗೆ ಪೆನ್ನು ತಂದುಕೊಡಿ. ನಿಮ್ಮ ಎಡ ಹೆಬ್ಬೆರಳನ್ನು ಶೂನ್ಯದೊಂದಿಗೆ ಅಲೈನ್ ಮಾಡಿ ಮತ್ತು ನಿಮ್ಮ ಬಲ ಹೆಬ್ಬೆರಳು ಎಲ್ಲಿದೆ ಎಂಬುದನ್ನು ಗಮನಿಸಿ. ಪೆನ್ನು ಕೆಳಗೆ ಇರಿಸಿ ಮತ್ತು ಆ ಸಮಯದಲ್ಲಿ ಆಡಳಿತಗಾರನನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ. ಅಂತಿಮವಾಗಿ, ಮುಂದುವರಿಸಲು ಸರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'আমরা আপনার চোখের মধ্যে দূরত্ব পরিমাপ করব। আপনার চোখ দেখতে ভিডিও চিত্রটি ব্যবহার করুন। আপনার চোখের সামনে আপনার মুখের বিরুদ্ধে অনুভূমিকভাবে একটি কলম ধরে রাখুন। আপনার ডান এবং বাম ছাত্রদের কেন্দ্রগুলির সাথে আপনার ডান এবং বাম থাম্ব নখগুলি সারিবদ্ধ করুন। তারপরে আপনার থাম্বগুলির মধ্যে বিচ্ছেদ পরিমাপ করতে অন-স্ক্রিন শাসকের কাছে কলমটি আনুন। আপনার বাম থাম্বকে শূন্য দিয়ে অলাইন করুন এবং আপনার ডান থাম্বটি কোথায় তা লক্ষ্য করুন। কলমটি নামিয়ে দিন এবং সেই পর্যায়ে শাসককে ক্লিক করুন। অবশেষে, চালিয়ে যেতে ওকে ক্লিক করুন।',\r\n    id: 'Kami akan mengukur jarak di antara mata Anda. Gunakan gambar video untuk menonton mata Anda. Pegang pena secara horizontal di wajah Anda di depan mata Anda. Sejajarkan kuku ibu jari kanan dan kiri Anda dengan pusat -pusat murid kanan dan kiri Anda. Kemudian bawa pena ke penguasa di layar untuk mengukur pemisahan di antara ibu jari Anda. Lepaskan ibu jari kiri Anda dengan nol dan perhatikan di mana ibu jari kanan Anda berada. Letakkan pena dan klik penguasa pada saat itu. Terakhir, klik OK untuk melanjutkan.',\r\n    'zh-CN':\r\n      '我们将测量您的眼睛之间的距离。使用视频图像观看您的眼睛。水平握在眼前的脸上。将您的左右拇指指甲与左右学生的中心对齐。然后将笔带到屏幕上的统治者，以测量拇指之间的分离。用零左右拇指，并注意右拇指在哪里。放下笔，然后单击标尺。最后，单击确定继续。',\r\n    'zh-HK':\r\n      '我們將測量您的眼睛之間的距離。使用視頻圖像觀看您的眼睛。水平握在眼前的臉上。將您的左右拇指指甲與左右學生的中心對齊。然後將筆帶到屏幕上的統治者，以測量拇指之間的分離。用零左右拇指，並註意右拇指在哪裡。放下筆，然後單擊標尺。最後，單擊確定繼續。',\r\n    ja: '目の間の距離を測定します。ビデオ画像を使用して目を見る。目の前で顔に水平にペンを保持します。右と左の親指の爪を右と左の生徒の中心に合わせます。次に、画面上の定規にペンを持ってきて、親指の分離を測定します。左手の親指をゼロで割り当て、右親指がどこにあるかに注意してください。ペンを置いて、その時点で定規をクリックします。最後に、[OK]をクリックして続行します。',\r\n    ko: '우리는 당신의 눈 사이의 거리를 측정 할 것입니다. 비디오 이미지를 사용하여 눈을보십시오. 눈 앞에서 얼굴에 수평으로 펜을 잡으십시오. 오른쪽과 왼쪽 엄지 손톱을 오른쪽과 왼쪽 학생의 중심과 정렬하십시오. 그런 다음 펜을 화면 통치자에게 가져와 엄지 손가락 사이의 분리를 측정하십시오. 왼쪽 엄지 손가락을 0으로 동조하고 오른쪽 엄지 손가락이 어디에 있는지 확인하십시오. 펜을 내려 놓고 그 시점에서 통치자를 클릭하십시오. 마지막으로 확인을 클릭하여 계속하십시오.',\r\n  },\r\n  RC_nearPointTitle: {\r\n    'en-US': 'Measure Pupillary Distance',\r\n    de: 'Messung der Pupillarabstand',\r\n    fr: 'Mesurer la distance pupillaire',\r\n    es: 'Medir la distancia pupilar',\r\n    pt: 'Meça a distância pupilar',\r\n    it: 'Misurare la distanza pupillare',\r\n    ro: 'Măsurați distanța pupilară',\r\n    pl: 'Zmierz odległość źrenic',\r\n    ru: 'Измерьте зрачковое расстояние',\r\n    hy: 'Չափել աշակերտական ​​հեռավորությունը',\r\n    fi: 'Mittaa pupilli -etäisyys',\r\n    ka: 'გაზომეთ მოსწავლეთა მანძილი',\r\n    he: 'למדוד מרחק תלמידים',\r\n    ar: 'قياس المسافة الوائسة',\r\n    ur: 'pupillary فاصلہ کی پیمائش',\r\n    hi: 'प्यूपिलरी दूरी को मापें',\r\n    ta: 'மாணவர் தூரத்தை அளவிடவும்',\r\n    ml: 'പ്യൂപ്പിലറി ദൂരം അളക്കുക',\r\n    te: 'పపిల్లరీ దూరాన్ని కొలవండి',\r\n    kn: 'ಪಪಿಲರಿ ದೂರವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: 'পিউপিলারি দূরত্ব পরিমাপ করুন',\r\n    id: 'Ukur jarak pupil',\r\n    'zh-CN': '测量瞳孔距离',\r\n    'zh-HK': '測量瞳孔距離',\r\n    ja: '瞳孔距離を測定します',\r\n    ko: '동공 거리를 측정하십시오',\r\n  },\r\n  RC_needPortraitOrientation: {\r\n    'en-US': 'Rotate this phone to portrait orientation.',\r\n    de: 'Drehen Sie dieses Telefon in die Porträtorientierung.',\r\n    fr: \"Faites pivoter ce téléphone pour l'orientation du portrait.\",\r\n    es: 'Gire este teléfono a la orientación del retrato.',\r\n    pt: 'Gire este telefone para a orientação do retrato.',\r\n    it: \"Ruota questo telefono all'orientamento del ritratto.\",\r\n    ro: 'Rotiți acest telefon pentru orientarea portretului.',\r\n    pl: 'Obróć ten telefon do orientacji portretowej.',\r\n    ru: 'Поверните этот телефон к портретной ориентации.',\r\n    hy: 'Պտտեք այս հեռախոսը դիմանկարների կողմնորոշմանը:',\r\n    fi: 'Kierrä tätä puhelinta muotokuvien suunnitteluun.',\r\n    ka: 'გადააკეთეთ ეს ტელეფონი პორტრეტული ორიენტაციისთვის.',\r\n    he: 'סובב את הטלפון הזה לכיוון דיוקן.',\r\n    ar: 'قم بتدوير هذا الهاتف إلى اتجاه الصورة.',\r\n    ur: 'اس فون کو پورٹریٹ واقفیت میں گھمائیں۔',\r\n    hi: 'इस फोन को पोर्ट्रेट ओरिएंटेशन के लिए घुमाएं।',\r\n    ta: 'இந்த தொலைபேசியை உருவப்பட நோக்குநிலைக்கு சுழற்றுங்கள்.',\r\n    ml: 'പോർട്രെയിറ്റ് ഓറിയന്റേഷനായി ഈ ഫോൺ തിരിക്കുക.',\r\n    te: 'ఈ ఫోన్‌ను పోర్ట్రెయిట్ ధోరణికి తిప్పండి.',\r\n    kn: 'ಈ ಫೋನ್ ಅನ್ನು ಭಾವಚಿತ್ರ ದೃಷ್ಟಿಕೋನಕ್ಕೆ ತಿರುಗಿಸಿ.',\r\n    bn: 'প্রতিকৃতি ওরিয়েন্টেশনে এই ফোনটি ঘোরান।',\r\n    id: 'Putar ponsel ini ke orientasi potret.',\r\n    'zh-CN': '旋转此手机以肖像为导向。',\r\n    'zh-HK': '旋轉此手機以肖像為導向。',\r\n    ja: 'この電話をポートレートオリエンテーションに回転させます。',\r\n    ko: '이 전화를 초상화 방향으로 회전시킵니다.',\r\n  },\r\n  RC_ok: {\r\n    'en-US': 'OK',\r\n    de: 'OK',\r\n    fr: 'OK',\r\n    es: 'DE ACUERDO',\r\n    pt: 'OK',\r\n    it: 'DE ACUERDO',\r\n    ro: 'OK',\r\n    pl: 'OK',\r\n    ru: 'OK',\r\n    hy: 'լավ',\r\n    fi: 'Hyvä',\r\n    ka: 'კარგი',\r\n    he: 'בסדר',\r\n    ar: 'نعم',\r\n    ur: 'ٹھیک ہے',\r\n    hi: 'ठीक है',\r\n    ta: 'சரி',\r\n    ml: 'ശരി',\r\n    te: 'అలాగే',\r\n    kn: 'ಸರಿ',\r\n    bn: 'ঠিক আছে',\r\n    id: 'OKE',\r\n    'zh-CN': '确认',\r\n    'zh-HK': '確認',\r\n    ja: '確認',\r\n    ko: '좋아요',\r\n  },\r\n  RC_panelButton: {\r\n    'en-US': 'Done',\r\n    de: 'Erledigt',\r\n    fr: 'Fait',\r\n    es: 'Hecho',\r\n    pt: 'Feito',\r\n    it: 'Fatto',\r\n    ro: 'Terminat',\r\n    pl: 'Zrobione',\r\n    ru: 'Сделанный',\r\n    hy: 'Կատարած',\r\n    fi: 'Tehty',\r\n    ka: 'შესრულებულია',\r\n    he: 'בוצע',\r\n    ar: 'منتهي',\r\n    ur: 'کیا',\r\n    hi: 'पूर्ण',\r\n    ta: 'முடிந்தது',\r\n    ml: 'നിറവേറ്റി',\r\n    te: 'పూర్తి',\r\n    kn: 'ಮುಗಿದ',\r\n    bn: 'সম্পন্ন',\r\n    id: 'Selesai',\r\n    'zh-CN': '完毕',\r\n    'zh-HK': '完畢',\r\n    ja: '終わり',\r\n    ko: '완료',\r\n  },\r\n  RC_panelIntro: {\r\n    'en-US': '❌ RC_panelIntro is obsolete.',\r\n    de: '',\r\n    fr: '',\r\n    es: '',\r\n    pt: '',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: '',\r\n    ur: '',\r\n    hi: '',\r\n    ta: '',\r\n    ml: '',\r\n    te: '',\r\n    kn: '',\r\n    bn: '',\r\n    id: '',\r\n    'zh-CN': '',\r\n    'zh-HK': '',\r\n    ja: '',\r\n    ko: '',\r\n  },\r\n  RC_panelIntroNext: {\r\n    'en-US': '❌ RC_panelIntroNext is obsolete.',\r\n    de: '',\r\n    fr: '',\r\n    es: '',\r\n    pt: '',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: '',\r\n    ur: '',\r\n    hi: '',\r\n    ta: '',\r\n    ml: '',\r\n    te: '',\r\n    kn: '',\r\n    bn: '',\r\n    id: '',\r\n    'zh-CN': '',\r\n    'zh-HK': '',\r\n    ja: '',\r\n    ko: '',\r\n  },\r\n  RC_panelTitle: {\r\n    'en-US': 'Please press a button to calibrate',\r\n    de: 'Bitte drücken Sie eine Taste, um zu kalibrieren',\r\n    fr: 'Veuillez appuyer sur un bouton pour calibrer',\r\n    es: 'Presione un botón para calibrar',\r\n    pt: 'Pressione um botão para calibrar',\r\n    it: 'Si prega di premere un pulsante per calibrare',\r\n    ro: 'Vă rugăm să apăsați un buton pentru a calibra',\r\n    pl: 'Naciśnij przycisk, aby kalibrować',\r\n    ru: 'Пожалуйста, нажмите кнопку для калибровки',\r\n    hy: 'Խնդրում ենք սեղմել կոճակը `տրամաչափելու համար',\r\n    fi: 'Kalibroida painamalla painiketta',\r\n    ka: 'გთხოვთ, დააჭირეთ ღილაკს კალიბრისთვის',\r\n    he: 'אנא לחץ על כפתור לכיול',\r\n    ar: 'يرجى الضغط على زر للمعايرة',\r\n    ur: 'براہ کرم کیلیبریٹ کے لئے ایک بٹن دبائیں',\r\n    hi: 'कृपया कैलिब्रेट करने के लिए एक बटन दबाएं',\r\n    ta: 'அளவீடு செய்ய ஒரு பொத்தானை அழுத்தவும்',\r\n    ml: 'കാലിബ്രേറ്റ് ചെയ്യുന്നതിന് ദയവായി ഒരു ബട്ടൺ അമർത്തുക',\r\n    te: 'క్రమాంకనం చేయడానికి దయచేసి ఒక బటన్‌ను నొక్కండి',\r\n    kn: 'ಮಾಪನಾಂಕ ನಿರ್ಣಯಿಸಲು ದಯವಿಟ್ಟು ಬಟನ್ ಒತ್ತಿರಿ',\r\n    bn: 'ক্যালিব্রেট করতে দয়া করে একটি বোতাম টিপুন',\r\n    id: 'Harap tekan tombol untuk mengkalibrasi',\r\n    'zh-CN': '请按按钮校准',\r\n    'zh-HK': '請按按鈕校準',\r\n    ja: 'ボタンを押して調整してください',\r\n    ko: '버튼을 눌러 교정하십시오',\r\n  },\r\n  RC_panelTitleNext: {\r\n    'en-US': 'Thanks for calibrating. Hit the button to continue.',\r\n    de: 'Danke fürs Kalibrieren. Klicken Sie auf die Taste, um fortzufahren.',\r\n    fr: \"Merci d'avoir calibré. Appuyez sur le bouton pour continuer.\",\r\n    es: 'Gracias por calibrar. Presione el botón para continuar.',\r\n    pt: 'Obrigado por calibrar. Aperte o botão para continuar.',\r\n    it: 'Grazie per la calibrazione. Premi il pulsante per continuare.',\r\n    ro: 'Mulțumesc pentru calibrare. Apăsați butonul pentru a continua.',\r\n    pl: 'Dzięki za kalibrację. Naciśnij przycisk, aby kontynuować.',\r\n    ru: 'Спасибо за калибровку. Нажмите кнопку, чтобы продолжить.',\r\n    hy: 'Շնորհակալություն տրամաչափման համար: Հարվածեք կոճակին շարունակելու համար:',\r\n    fi: 'Kiitos kalibroinnista. Napsauta painiketta jatkaaksesi.',\r\n    ka: 'მადლობა კალიბრაციისთვის. დააჭირეთ ღილაკს გასაგრძელებლად.',\r\n    he: 'תודה שכיול. לחץ על הכפתור כדי להמשיך.',\r\n    ar: 'شكرا للمعايرة. اضغط على الزر للمتابعة.',\r\n    ur: 'کیلیبریٹنگ کا شکریہ۔ جاری رکھنے کے لئے بٹن کو دبائیں۔',\r\n    hi: 'कैलिब्रेट करने के लिए धन्यवाद। जारी रखने के लिए बटन दबाएं।',\r\n    ta: 'அளவீடு செய்ததற்கு நன்றி. தொடர பொத்தானை அழுத்தவும்.',\r\n    ml: 'കാലിബ്രേറ്റിംഗിന് നന്ദി. തുടരാൻ ബട്ടൺ അമർത്തുക.',\r\n    te: 'క్రమాంకనం చేసినందుకు ధన్యవాదాలు. కొనసాగించడానికి బటన్‌ను నొక్కండి.',\r\n    kn: 'ಮಾಪನಾಂಕ ನಿರ್ಣಯಿಸಿದ್ದಕ್ಕಾಗಿ ಧನ್ಯವಾದಗಳು. ಮುಂದುವರಿಸಲು ಗುಂಡಿಯನ್ನು ಒತ್ತಿರಿ.',\r\n    bn: 'ক্যালিব্রেট করার জন্য ধন্যবাদ। চালিয়ে যেতে বোতামটি আঘাত করুন।',\r\n    id: 'Terima kasih telah mengkalibrasi. Tekan tombol untuk melanjutkan.',\r\n    'zh-CN': '感谢您的校准。点击按钮继续。',\r\n    'zh-HK': '感謝您的校準。點擊按鈕繼續。',\r\n    ja: 'キャリブレーションしてくれてありがとう。ボタンを押して続行します。',\r\n    ko: '교정 해주셔서 감사합니다. 계속하려면 버튼을 누르십시오.',\r\n  },\r\n  RC_panelUsesWebcam: {\r\n    'en-US': 'uses webcam',\r\n    de: 'Verwendet Webcam',\r\n    fr: 'utilise la webcam',\r\n    es: 'Utiliza la webcam',\r\n    pt: 'usa webcam',\r\n    it: 'Utilizza la webcam',\r\n    ro: 'utilizează webcam',\r\n    pl: 'używa kamery internetowej',\r\n    ru: 'использует веб -камеру',\r\n    hy: 'Օգտագործում է վեբ-տեսախցիկը',\r\n    fi: 'käyttää verkkokameraa',\r\n    ka: 'იყენებს ვებკამერას',\r\n    he: 'משתמש במצלמת רשת',\r\n    ar: 'يستخدم كاميرا الويب',\r\n    ur: 'ویب کیم استعمال کرتا ہے',\r\n    hi: 'वेबकैम का उपयोग करता है',\r\n    ta: 'வெப்கேம் பயன்படுத்துகிறது',\r\n    ml: 'വെബ്ക്യാം ഉപയോഗിക്കുന്നു',\r\n    te: 'వెబ్‌క్యామ్‌ను ఉపయోగిస్తుంది',\r\n    kn: 'ವೆಬ್‌ಕ್ಯಾಮ್ ಅನ್ನು ಬಳಸುತ್ತದೆ',\r\n    bn: 'ওয়েবক্যাম ব্যবহার করে',\r\n    id: 'menggunakan webcam',\r\n    'zh-CN': '使用网络摄像头',\r\n    'zh-HK': '使用網絡攝像頭',\r\n    ja: 'ウェブカメラを使用します',\r\n    ko: '웹캠을 사용합니다',\r\n  },\r\n  RC_panelUsesWebcamPhone: {\r\n    'en-US': 'uses webcam and phone',\r\n    de: 'Verwendet Webcam und Telefon',\r\n    fr: 'utilise la webcam et le téléphone',\r\n    es: 'Utiliza cámara web y teléfono',\r\n    pt: 'usa webcam e telefone',\r\n    it: 'Utilizza webcam e telefono',\r\n    ro: 'Utilizează webcam și telefon',\r\n    pl: 'używa kamery internetowej i telefonu',\r\n    ru: 'использует веб -камеру и телефон',\r\n    hy: 'Օգտագործում է վեբ-տեսախցիկ եւ հեռախոս',\r\n    fi: 'käyttää verkkokameraa ja puhelinta',\r\n    ka: 'იყენებს ვებკამერასა და ტელეფონს',\r\n    he: 'משתמש במצלמת רשת ובטלפון',\r\n    ar: 'يستخدم كاميرا الويب والهاتف',\r\n    ur: 'ویب کیم اور فون استعمال کرتا ہے',\r\n    hi: 'वेबकैम और फोन का उपयोग करता है',\r\n    ta: 'வெப்கேம் மற்றும் தொலைபேசியைப் பயன்படுத்துகிறது',\r\n    ml: 'വെബ്ക്യാമും ഫോണും ഉപയോഗിക്കുന്നു',\r\n    te: 'వెబ్‌క్యామ్ మరియు ఫోన్‌ను ఉపయోగిస్తుంది',\r\n    kn: 'ವೆಬ್‌ಕ್ಯಾಮ್ ಮತ್ತು ಫೋನ್ ಬಳಸುತ್ತದೆ',\r\n    bn: 'ওয়েবক্যাম এবং ফোন ব্যবহার করে',\r\n    id: 'menggunakan webcam dan telepon',\r\n    'zh-CN': '使用网络摄像头和手机',\r\n    'zh-HK': '使用網絡攝像頭和電話',\r\n    ja: 'ウェブカメラと電話を使用します',\r\n    ko: '웹캠과 전화를 사용합니다',\r\n  },\r\n  RC_performance: {\r\n    'en-US': 'Graphics Performance',\r\n    de: 'Grafikleistung',\r\n    fr: 'Performance graphique',\r\n    es: 'Rendimiento gráfico',\r\n    pt: 'Desempenho gráfico',\r\n    it: 'Prestazioni grafiche',\r\n    ro: 'Performanță grafică',\r\n    pl: 'Wydajność grafiki',\r\n    ru: 'Графическая производительность',\r\n    hy: 'Գրաֆիկայի կատարումը',\r\n    fi: 'Grafiikan suorituskyky',\r\n    ka: 'გრაფიკული შესრულება',\r\n    he: 'ביצועי גרפיקה',\r\n    ar: 'أداء الرسومات',\r\n    ur: 'گرافکس کی کارکردگی',\r\n    hi: 'ग्राफिक्स प्रदर्शन',\r\n    ta: 'கிராபிக்ஸ் செயல்திறன்',\r\n    ml: 'ഗ്രാഫിക്സ് പ്രകടനം',\r\n    te: 'గ్రాఫిక్స్ పనితీరు',\r\n    kn: 'ಗ್ರಾಫಿಕ್ಸ್ ಕಾರ್ಯಕ್ಷಮತೆ',\r\n    bn: 'গ্রাফিক্স পারফরম্যান্স',\r\n    id: 'Kinerja grafis',\r\n    'zh-CN': '图形性能',\r\n    'zh-HK': '圖形性能',\r\n    ja: 'グラフィックパフォーマンス',\r\n    ko: '그래픽 성능',\r\n  },\r\n  RC_performanceIntro: {\r\n    'en-US': 'Please do not disturb. Drawing graphics to assess web browser performance ...',\r\n    de: 'Bitte nicht stören. Grafik zeichnen, um die Leistung des Webbrowsers zu bewerten ...',\r\n    fr: 'Prière de ne pas déranger. Dessin graphiques pour évaluer les performances du navigateur Web ...',\r\n    es: 'Por favor no molestar. Dibujo de gráficos para evaluar el rendimiento del navegador web ...',\r\n    pt: 'Por favor não incomode. Desenho de gráficos para avaliar o desempenho do navegador da web ...',\r\n    it: 'Per favore non disturbare. Disegnare grafica per valutare le prestazioni del browser Web ...',\r\n    ro: 'Va rog nu deranjati. Desenarea graficelor pentru a evalua performanța browserului web ...',\r\n    pl: 'Proszę nie przeszkadzać. Rysowanie grafiki w celu oceny wydajności przeglądarki internetowej ...',\r\n    ru: 'Пожалуйста, не беспокойте. Рисование графики для оценки производительности веб -браузера ...',\r\n    hy: 'Խնդրում ենք մի խանգարել: Գրաֆիկայի գծագրումը `վեբ զննարկչի աշխատանքը գնահատելու համար ...',\r\n    fi: 'Ole kiltti äläkä häiritse. Grafiikan piirtäminen verkkoselaimen suorituskyvyn arvioimiseksi ...',\r\n    ka: 'Გთხოვთ არ შემაწუხოთ. გრაფიკის შედგენა ვებ - ბრაუზერის შესრულების შესაფასებლად ...',\r\n    he: 'נא לא להפריע. ציור גרפיקה כדי להעריך את ביצועי דפדפן האינטרנט ...',\r\n    ar: 'الرجاء عدم الإزعاج. رسم الرسومات لتقييم أداء متصفح الويب ...',\r\n    ur: 'برائے مہربانی تنگ نہ کریں. ویب براؤزر کی کارکردگی کا اندازہ کرنے کے لئے گرافکس ڈرائنگ ...',\r\n    hi: 'कृपया परेशान न करें। वेब ब्राउज़र प्रदर्शन का आकलन करने के लिए ग्राफिक्स ड्राइंग ...',\r\n    ta: 'தயவுசெய்து தொந்தரவு செய்ய வேண்டாம். வலை உலாவி செயல்திறனை மதிப்பிடுவதற்கு கிராபிக்ஸ் வரைதல் ...',\r\n    ml: 'ശല്യപ്പെടുത്തരുത്. വെബ് ബ്ര browser സർ പ്രകടനം വിലയിരുത്താൻ ഗ്രാഫിക്സ് വരയ്ക്കുന്നു ...',\r\n    te: 'దయచేసి భంగం కలిగించవద్దు. వెబ్ బ్రౌజర్ పనితీరును అంచనా వేయడానికి గ్రాఫిక్స్ గీయడం ...',\r\n    kn: 'ದಯವಿಟ್ಟು ತೊಂದರೆಗೊಳಿಸಬೇಡಿ. ವೆಬ್ ಬ್ರೌಸರ್ ಕಾರ್ಯಕ್ಷಮತೆಯನ್ನು ನಿರ್ಣಯಿಸಲು ಗ್ರಾಫಿಕ್ಸ್ ಅನ್ನು ಚಿತ್ರಿಸುವುದು ...',\r\n    bn: 'অনুগ্রহ করে বিরক্ত করবেন না. ওয়েব ব্রাউজারের কার্যকারিতা মূল্যায়ন করতে গ্রাফিক্স অঙ্কন ...',\r\n    id: 'Tolong jangan ganggu. Menggambar grafik untuk menilai kinerja browser web ...',\r\n    'zh-CN': '请不要打扰。绘制图形以评估Web浏览器性能...',\r\n    'zh-HK': '請不要打擾。繪製圖形以評估Web瀏覽器性能...',\r\n    ja: '邪魔しないでください。 Webブラウザのパフォーマンスを評価するためのグラフィックを描く...',\r\n    ko: '방해하지 마십시오. 웹 브라우저 성능을 평가하기위한 그래픽 그리기 ...',\r\n  },\r\n  RC_performanceTitle: {\r\n    'en-US': 'Graphics Performance',\r\n    de: 'Grafikleistung',\r\n    fr: 'Performance graphique',\r\n    es: 'Rendimiento gráfico',\r\n    pt: 'Desempenho gráfico',\r\n    it: 'Prestazioni grafiche',\r\n    ro: 'Performanță grafică',\r\n    pl: 'Wydajność grafiki',\r\n    ru: 'Графическая производительность',\r\n    hy: 'Գրաֆիկայի կատարումը',\r\n    fi: 'Grafiikan suorituskyky',\r\n    ka: 'გრაფიკული შესრულება',\r\n    he: 'ביצועי גרפיקה',\r\n    ar: 'أداء الرسومات',\r\n    ur: 'گرافکس کی کارکردگی',\r\n    hi: 'ग्राफिक्स प्रदर्शन',\r\n    ta: 'கிராபிக்ஸ் செயல்திறன்',\r\n    ml: 'ഗ്രാഫിക്സ് പ്രകടനം',\r\n    te: 'గ్రాఫిక్స్ పనితీరు',\r\n    kn: 'ಗ್ರಾಫಿಕ್ಸ್ ಕಾರ್ಯಕ್ಷಮತೆ',\r\n    bn: 'গ্রাফিক্স পারফরম্যান্স',\r\n    id: 'Kinerja grafis',\r\n    'zh-CN': '图形性能',\r\n    'zh-HK': '圖形性能',\r\n    ja: 'グラフィックパフォーマンス',\r\n    ko: '그래픽 성능',\r\n  },\r\n  RC_phoneMicrophoneInstructions: {\r\n    'en-US':\r\n      '1. If a pop up appears, asking for your permission to use the microphone, click \"Allow\".\\n2. Your folded towel should be on the table between you and your computer. Place this phone on the towel, extending beyond the towel, with the microphone (bottom) edge facing your computer.\\n3. Press \"Proceed\".',\r\n    de: '1. Wenn ein Pop -up angezeigt wird und um Ihre Erlaubnis zur Verwendung des Mikrofons gebeten wird, klicken Sie auf \"Zulassung\".\\n2. Ihr gefaltetes Handtuch sollte auf dem Tisch zwischen Ihnen und Ihrem Computer liegen. Legen Sie dieses Telefon auf das Handtuch und erstrecken sich über das Handtuch hinaus, wobei der Mikrofon (unten) Ihren Computer zugewandt ist.\\n3. Drücken Sie \"Fahren\".',\r\n    fr: '1. Si une fenêtre contextuelle apparaît, demandant votre autorisation d\\'utiliser le microphone, cliquez sur \"Autoriser\".\\n2. Votre serviette pliée doit être sur la table entre vous et votre ordinateur. Placez ce téléphone sur la serviette, s\\'étendant au-delà de la serviette, avec le bord du microphone (en bas) face à votre ordinateur.\\n3. Appuyez sur \"Procéder\".',\r\n    es: '1. Si aparece una ventana emergente, pidiendo su permiso para usar el micrófono, haga clic en \"Permitir\".\\n2. Su toalla doblada debe estar sobre la mesa entre usted y su computadora. Coloque este teléfono en la toalla, extendiéndose más allá de la toalla, con el borde del micrófono (abajo) frente a su computadora.\\n3. Presione \"proceda\".',\r\n    pt: '1. Se aparecer um pop -up, solicitando sua permissão para usar o microfone, clique em \"Permitir\".\\n2. Sua toalha dobrada deve estar sobre a mesa entre você e seu computador. Coloque este telefone na toalha, estendendo -se além da toalha, com a borda do microfone (inferior) voltada para o computador.\\n3. Pressione \"prossiga\".',\r\n    it: '1. Se appare un pop -up, chiedendo il permesso di utilizzare il microfono, fare clic su \"Consenti\".\\n2. Il tuo asciugamano piegato dovrebbe essere sul tavolo tra te e il tuo computer. Posiziona questo telefono sull\\'asciugamano, estendendosi oltre l\\'asciugamano, con il bordo del microfono (in basso) rivolto verso il computer.\\n3. Premere \"Procedere\".',\r\n    ro: '1. Dacă apare un pop -up, solicitând permisiunea dvs. de a utiliza microfonul, faceți clic pe „Permite”.\\n2. Prosopul tău pliat ar trebui să fie pe masa dintre dvs. și computer. Puneți acest telefon pe prosop, extinzându -se dincolo de prosop, cu marginea microfonului (de jos) orientată spre computer.\\n3. Apăsați „Continuați”.',\r\n    pl: '1. Jeśli pojawi się wyskakujący okienko, prosząc o pozwolenie na użycie mikrofonu, kliknij „Zezwalaj”.\\n2. Złożony ręcznik powinien znajdować się na stole między tobą a komputerem. Umieść ten telefon na ręczniku, rozciągając się poza ręcznik, z mikrofonem (dolnym) krawędzi skierowanego na komputer.\\n3. Naciśnij „Przejdź”.',\r\n    ru: '1. Если появляется всплывающее окно, попросив ваше разрешение использовать микрофон, нажмите «Разрешить».\\n2. Ваше сложенное полотенце должно быть на столе между вами и вашим компьютером. Поместите этот телефон на полотенце, выходящее за полотенце, с краем микрофона (внизу), обращенным к вашему компьютеру.\\n3. Нажмите «Продолжайте».',\r\n    hy: '1. Եթե հայտնվում է փոփը, խնդրելով ձեր խոսափողը օգտագործելու ձեր թույլտվությունը, կտտացրեք «Թույլ տվեք»:\\n2. Ձեր ծալովի սրբիչը պետք է լինի սեղանի շուրջ ձեր եւ ձեր համակարգչի միջեւ: Տեղադրեք այս հեռախոսը սրբիչի վրա, տարածվելով սրբիչից այն կողմ, ձեր համակարգչով խոսափողով (ներքեւի) եզրով:\\n3. Սեղմեք «Շարունը»:',\r\n    fi: '1. Jos ponnahdusikkuna tulee näkyviin, pyydetään lupaa käyttää mikrofonia, napsauta \"Salli\".\\n2. Taitettu pyyhe tulee olla pöydällä sinun ja tietokoneesi välillä. Aseta tämä puhelin pyyhkeeseen ulottuen pyyhkeen ulkopuolelle, mikrofonin (pohja) reunalla tietokonetta kohti.\\n3. Paina \"Jatka\".',\r\n    ka: '1. თუ გამოჩნდება pop up, ითხოვს თქვენი ნებართვას მიკროფონის გამოყენების შესახებ, დააჭირეთ ღილაკს \"დაუშვებელია\".\\n2. თქვენი დაკეცილი პირსახოცი უნდა იყოს მაგიდაზე თქვენსა და თქვენს კომპიუტერს შორის. მოათავსეთ ეს ტელეფონი პირსახოცზე, ვრცელდება პირსახოცის მიღმა, მიკროფონის (ქვედა) ზღვარით თქვენს კომპიუტერში.\\n3. დააჭირეთ \"გაგრძელება\".',\r\n    he: '1. אם מופיע פופ -אפ, מבקש את רשותך להשתמש במיקרופון, לחץ על \"אפשר\".\\n2. המגבת המקופלת שלך צריכה להיות על השולחן בינך לבין המחשב שלך. הניחו את הטלפון הזה על המגבת, המשתרע מעבר למגבת, כאשר קצה המיקרופון (התחתון) פונה למחשב.\\n3. לחץ על \"המשך\".',\r\n    ar: '1. إذا ظهر أحد المنبثقة ، فطلب إذنك لاستخدام الميكروفون ، انقر فوق \"السماح\".\\n2. يجب أن تكون المنشفة المطوية على الطاولة بينك وبين جهاز الكمبيوتر الخاص بك. ضع هذا الهاتف على المنشفة ، ويمتد إلى ما وراء المنشفة ، مع حافة الميكروفون (أسفل) تواجه جهاز الكمبيوتر الخاص بك.\\n3. اضغط على \"متابعة\".',\r\n    ur: '1. اگر کوئی پاپ اپ ظاہر ہوتا ہے تو ، مائکروفون کو استعمال کرنے کی اجازت طلب کرتے ہیں تو ، \"اجازت دیں\" پر کلک کریں۔\\n2. آپ کا جوڑا ہوا تولیہ آپ اور آپ کے کمپیوٹر کے درمیان میز پر ہونا چاہئے۔ اس فون کو تولیہ پر رکھیں ، تولیہ سے آگے بڑھتے ہوئے ، مائکروفون (نیچے) کنارے کے ساتھ اپنے کمپیوٹر کا سامنا کریں۔\\n3. \"آگے بڑھیں\" دبائیں۔',\r\n    hi: '1. यदि कोई पॉप अप दिखाई देता है, तो माइक्रोफोन का उपयोग करने के लिए आपकी अनुमति के लिए पूछें, \"अनुमति\" पर क्लिक करें।\\n2. आपका मुड़ा हुआ तौलिया आपके और आपके कंप्यूटर के बीच की मेज पर होना चाहिए। इस फोन को तौलिया पर रखें, तौलिया से परे फैली हुई, माइक्रोफोन (नीचे) किनारे के साथ आपके कंप्यूटर का सामना करना पड़ रहा है।\\n3. \"आगे बढ़ें\" दबाएं।',\r\n    ta: '1. ஒரு பாப் அப் தோன்றினால், மைக்ரோஃபோனைப் பயன்படுத்த உங்கள் அனுமதி கேட்கிறது, \"அனுமதி\" என்பதைக் கிளிக் செய்க.\\n2. உங்கள் மடிந்த துண்டு உங்களுக்கும் உங்கள் கணினிக்கும் இடையிலான அட்டவணையில் இருக்க வேண்டும். உங்கள் கணினியை எதிர்கொள்ளும் மைக்ரோஃபோன் (கீழே) விளிம்பில், துண்டுக்கு அப்பால் நீட்டி, இந்த தொலைபேசியை துண்டில் வைக்கவும்.\\n3. \"தொடரவும்\" என்பதை அழுத்தவும்.',\r\n    ml: '1. ഒരു പോപ്പ് അപ്പ് പ്രത്യക്ഷപ്പെടുകയാണെങ്കിൽ, മൈക്രോഫോൺ ഉപയോഗിക്കാൻ നിങ്ങളുടെ അനുമതി ആവശ്യപ്പെടുക, \"അനുവദിക്കുക\" ക്ലിക്കുചെയ്യുക.\\n2. നിങ്ങളുടെ മടക്ക തൂവാല നിങ്ങൾക്കും നിങ്ങളുടെ കമ്പ്യൂട്ടറിനും ഇടയിലുള്ള മേശപ്പുറത്ത് ആയിരിക്കണം. ഈ ഫോൺ തൂവാലയിൽ വയ്ക്കുക, ടവലിനപ്പുറത്തേക്ക്, മൈക്രോഫോൺ (ചുവടെ) എഡ്ജ് നിങ്ങളുടെ കമ്പ്യൂട്ടറിനെ അഭിമുഖീകരിക്കുന്നു.\\n3. \"തുടരുക\" അമർത്തുക.',\r\n    te: '1. పాప్ అప్ కనిపిస్తే, మైక్రోఫోన్‌ను ఉపయోగించడానికి మీ అనుమతి అడుగుతూ, \"అనుమతించు\" క్లిక్ చేయండి.\\n2. మీ ముడుచుకున్న టవల్ మీకు మరియు మీ కంప్యూటర్‌కు మధ్య పట్టికలో ఉండాలి. ఈ ఫోన్‌ను టవల్ మీద ఉంచండి, టవల్ దాటి, మీ కంప్యూటర్‌కు ఎదురుగా ఉన్న మైక్రోఫోన్ (దిగువ) అంచుతో.\\n3. \"కొనసాగండి\" నొక్కండి.',\r\n    kn: '1. ಪಾಪ್ ಅಪ್ ಕಾಣಿಸಿಕೊಂಡರೆ, ಮೈಕ್ರೊಫೋನ್ ಬಳಸಲು ನಿಮ್ಮ ಅನುಮತಿಯನ್ನು ಕೇಳಿದಾಗ, \"ಅನುಮತಿಸಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ.\\n2. ನಿಮ್ಮ ಮಡಿಸಿದ ಟವೆಲ್ ನಿಮ್ಮ ಮತ್ತು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ನಡುವಿನ ಮೇಜಿನ ಮೇಲೆ ಇರಬೇಕು. ಈ ಫೋನ್ ಅನ್ನು ಟವೆಲ್ನಲ್ಲಿ ಇರಿಸಿ, ಟವೆಲ್ ಅನ್ನು ಮೀರಿ ವಿಸ್ತರಿಸಿ, ಮೈಕ್ರೊಫೋನ್ (ಕೆಳಗಿನ) ಅಂಚಿನೊಂದಿಗೆ ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್ ಎದುರಾಗಿರುತ್ತದೆ.\\n3. \"ಮುಂದುವರಿಯಿರಿ\" ಒತ್ತಿರಿ.',\r\n    bn: '1. যদি কোনও পপ আপ উপস্থিত হয়, মাইক্রোফোনটি ব্যবহার করার জন্য আপনার অনুমতি চেয়ে জিজ্ঞাসা করুন, \"অনুমতি দিন\" ক্লিক করুন।\\n২. আপনার ভাঁজ তোয়ালে আপনার এবং আপনার কম্পিউটারের মধ্যে টেবিলে থাকা উচিত। আপনার কম্পিউটারের মুখোমুখি মাইক্রোফোন (নীচে) প্রান্তের সাথে তোয়ালে ছাড়িয়ে তোয়ালে এই ফোনটি রাখুন।\\n3. \"এগিয়ে যান\" টিপুন।',\r\n    id: '1. Jika muncul muncul, meminta izin Anda untuk menggunakan mikrofon, klik \"Izinkan\".\\n2. Handuk terlipat Anda harus di atas meja antara Anda dan komputer Anda. Tempatkan ponsel ini di atas handuk, memanjang melampaui handuk, dengan tepi mikrofon (bagian bawah) menghadap komputer Anda.\\n3. Tekan \"Lanjutkan\".',\r\n    'zh-CN':\r\n      '1.如果出现弹出式，请要求您使用麦克风的权限，请单击“允许”。\\n2.折叠的毛巾应在您和计算机之间的桌子上。将此手机放在毛巾上，延伸到毛巾之外，麦克风（底部）面向您的计算机。\\n3.按“继续”。',\r\n    'zh-HK':\r\n      '1.如果出現彈出式，請要求您使用麥克風的權限，請單擊“允許”。\\n2.折疊的毛巾應在您和計算機之間的桌子上。將此手機放在毛巾上，延伸到毛巾之外，麥克風（底部）面向您的計算機。\\n3.按“繼續”。',\r\n    ja: '1.ポップアップが表示された場合は、マイクを使用する許可を求めている場合は、「許可」をクリックします。\\n2.折り畳まれたタオルは、あなたとあなたのコンピューターの間のテーブルの上にある必要があります。この携帯電話をタオルの上に置き、タオルを越えて伸び、マイク（下）のエッジがコンピューターに面しています。\\n3.「続行」を押します。',\r\n    ko: '1. 팝업이 나타나면 마이크 사용 권한을 요청하면 \"허용\"을 클릭하십시오.\\n2. 접힌 수건은 귀하와 컴퓨터 사이의 테이블 위에 있어야합니다. 이 전화기를 타월 위에 놓고 수건 너머로 뻗어 마이크 (하단) 가장자리가 컴퓨터를 향하고 있습니다.\\n3. \"진행\"을 누릅니다.',\r\n  },\r\n  RC_privacyCamera: {\r\n    'en-US':\r\n      'ASSURANCE OF CAMERA PRIVACY. No photos or video are recorded. Each webcam frame is used only inside this computer, solely to estimate eye and gaze positions, and then erased, within 10 seconds. Only the eye and gaze positions are retained.',\r\n    de: 'Gewissheit der Privatsphäre der Kamera. Es werden keine Fotos oder Videos aufgezeichnet. Jeder Webcam -Rahmen wird nur in diesem Computer verwendet, um nur die Augen- und Blickpositionen zu schätzen, und dann innerhalb von 10 Sekunden gelöscht. Nur die Augen- und Blickpositionen bleiben erhalten.',\r\n    fr: \"Assurance de la confidentialité de la caméra. Aucune photo ou vidéo n'est enregistrée. Chaque cadre de webcam est utilisé uniquement à l'intérieur de cet ordinateur, uniquement pour estimer les positions des yeux et du regard, puis effacée, dans les 10 secondes. Seules les positions des yeux et du regard sont conservées.\",\r\n    es: 'Aseguramiento de la privacidad de la cámara. No se graban fotos o video. Cada marco de cámara web se usa solo dentro de esta computadora, únicamente para estimar las posiciones de los ojos y la mirada, y luego se borra, en 10 segundos. Solo se conservan las posiciones de ojo y mirada.',\r\n    pt: 'Garantia da privacidade da câmera. Nenhuma fotos ou vídeo são gravados. Cada quadro da webcam é usado apenas dentro deste computador, apenas para estimar as posições dos olhos e do olhar, e depois apagado, dentro de 10 segundos. Somente as posições de olho e olhar são retidas.',\r\n    it: \"Assicurazione della privacy della telecamera. Non vengono registrate foto o video. Ogni cornice di webcam viene utilizzato solo all'interno di questo computer, solo per stimare le posizioni degli occhi e dello sguardo, quindi cancellato, in 10 secondi. Vengono mantenute solo le posizioni degli occhi e dello sguardo.\",\r\n    ro: 'Asigurarea confidențialității camerei. Nu sunt înregistrate fotografii sau videoclipuri. Fiecare cadru webcam este utilizat doar în interiorul acestui computer, exclusiv pentru a estima pozițiile ochilor și privirea, apoi șters, în 10 secunde. Sunt păstrate doar pozițiile ochiului și privirii.',\r\n    pl: 'Zapewnienie prywatności aparatu. Żadne zdjęcia ani wideo nie są nagrywane. Każda ramka kamery internetowej jest używana tylko wewnątrz tego komputera, wyłącznie do oszacowania pozycji oka i spojrzenia, a następnie wymazana w ciągu 10 sekund. Zatrzymane są tylko pozycje oka i spojrzenia.',\r\n    ru: 'Уверенность в конфиденциальности камеры. Фотографии или видео не записаны. Каждая рама веб -камеры используется только в этом компьютере, исключительно для оценки положений глаз и взгляда, а затем стерт в течение 10 секунд. Только положения глаз и взгляда сохраняются.',\r\n    hy: 'Խցիկի գաղտնիության ապահովում: Ոչ մի լուսանկար կամ տեսանյութ չի արձանագրվում: Տեսախցիկի յուրաքանչյուր շրջանակ է օգտագործվում միայն այս համակարգչի ներսում, բացառապես աչքերի եւ հայացքի դիրքերը գնահատելու համար, այնուհետեւ ջնջվել, 10 վայրկյանում: Պահպանվում են միայն աչքի եւ հայացքի դիրքերը:',\r\n    fi: 'Kameran yksityisyyden varmuus. Valokuvia tai videoita ei ole tallennettu. Jokaista verkkokameran kehystä käytetään vain tämän tietokoneen sisällä, pelkästään silmä- ja katselututkintojen arvioimiseksi ja poistetaan sitten 10 sekunnissa. Vain silmä- ja katseasennot säilytetään.',\r\n    ka: 'კამერის კონფიდენციალურობის უზრუნველყოფა. არ არის ჩაწერილი ფოტო ან ვიდეო. თითოეული ვებკამერის ჩარჩო გამოიყენება მხოლოდ ამ კომპიუტერის შიგნით, მხოლოდ თვალის და მზერა პოზიციების შესაფასებლად, შემდეგ კი წაშლილია, 10 წამის განმავლობაში. შენარჩუნებულია მხოლოდ თვალისა და მზერა.',\r\n    he: 'הבטחה לפרטיות המצלמה. לא מוקלטים תמונות או וידאו. כל מסגרת מצלמת רשת משמשת רק בתוך מחשב זה, אך ורק כדי להעריך עמדות עיניים ומבט ואז למחוק, תוך 10 שניות. רק עמדות העין והמבט נשמרות.',\r\n    ar: 'ضمان خصوصية الكاميرا. لا يتم تسجيل أي صور أو فيديو. يتم استخدام كل إطار كاميرا ويب فقط داخل هذا الكمبيوتر ، فقط لتقدير مواقف العين والنظرة ، ثم تمحى ، في غضون 10 ثوان. يتم الاحتفاظ فقط بمواقف العين والنظرة.',\r\n    ur: 'کیمرے کی رازداری کی یقین دہانی۔ کوئی فوٹو یا ویڈیو ریکارڈ نہیں کی گئی ہے۔ ہر ویب کیم فریم صرف اس کمپیوٹر کے اندر استعمال ہوتا ہے ، مکمل طور پر آنکھوں اور نگاہوں کی پوزیشنوں کا تخمینہ لگانے کے لئے ، اور پھر 10 سیکنڈ کے اندر مٹا دیا جاتا ہے۔ صرف آنکھ اور نگاہوں کی پوزیشنیں برقرار ہیں۔',\r\n    hi: 'कैमरा गोपनीयता का आश्वासन। कोई फ़ोटो या वीडियो रिकॉर्ड नहीं किया गया है। प्रत्येक वेबकैम फ्रेम का उपयोग केवल इस कंप्यूटर के अंदर किया जाता है, केवल आंख और टकटकी स्थिति का अनुमान लगाने के लिए, और फिर 10 सेकंड के भीतर मिटा दिया जाता है। केवल आंख और टकटकी की स्थिति बनाए रखी जाती है।',\r\n    ta: 'கேமரா தனியுரிமையின் உறுதி. புகைப்படங்கள் அல்லது வீடியோ எதுவும் பதிவு செய்யப்படவில்லை. ஒவ்வொரு வெப்கேம் சட்டமும் இந்த கணினிக்குள் மட்டுமே பயன்படுத்தப்படுகிறது, இது கண் மற்றும் பார்வை நிலைகளை மதிப்பிடுவதற்கு மட்டுமே, பின்னர் 10 வினாடிகளுக்குள் அழிக்கப்படுகிறது. கண் மற்றும் பார்வை நிலைகள் மட்டுமே தக்கவைக்கப்படுகின்றன.',\r\n    ml: 'ക്യാമറ സ്വകാര്യതയുടെ ഉറപ്പ്. ഫോട്ടോകളോ വീഡിയോയോ രേഖപ്പെടുത്തിയിട്ടില്ല. ഓരോ വെബ്ക്യാം ഫ്രെയിം ഈ കമ്പ്യൂട്ടറിനുള്ളിൽ മാത്രമേ ഉപയോഗിക്കുന്നുള്ളൂ, കണ്ണ്, നോട്ടങ്ങൾ സ്ഥാനങ്ങൾ കണക്കാക്കാൻ മാത്രം, തുടർന്ന് 10 സെക്കൻഡിനുള്ളിൽ മായ്ച്ചുകളഞ്ഞു. കണ്ണ്, നോട്ടം സ്ഥാനങ്ങൾ മാത്രം നിലനിർത്തുന്നു.',\r\n    te: 'కెమెరా గోప్యత యొక్క భరోసా. ఫోటోలు లేదా వీడియో రికార్డ్ చేయబడలేదు. ప్రతి వెబ్‌క్యామ్ ఫ్రేమ్ ఈ కంప్యూటర్ లోపల మాత్రమే ఉపయోగించబడుతుంది, ఇది కంటి మరియు చూపుల స్థానాలను అంచనా వేయడానికి మాత్రమే, ఆపై 10 సెకన్లలోపు తొలగించబడుతుంది. కంటి మరియు చూపుల స్థానాలు మాత్రమే అలాగే ఉంచబడతాయి.',\r\n    kn: 'ಕ್ಯಾಮೆರಾ ಗೌಪ್ಯತೆಯ ಭರವಸೆ. ಯಾವುದೇ ಫೋಟೋಗಳು ಅಥವಾ ವೀಡಿಯೊವನ್ನು ದಾಖಲಿಸಲಾಗಿಲ್ಲ. ಪ್ರತಿಯೊಂದು ವೆಬ್‌ಕ್ಯಾಮ್ ಫ್ರೇಮ್ ಅನ್ನು ಈ ಕಂಪ್ಯೂಟರ್ ಒಳಗೆ ಮಾತ್ರ ಬಳಸಲಾಗುತ್ತದೆ, ಕೇವಲ ಕಣ್ಣು ಮತ್ತು ನೋಟದ ಸ್ಥಾನಗಳನ್ನು ಅಂದಾಜು ಮಾಡಲು, ಮತ್ತು ನಂತರ 10 ಸೆಕೆಂಡುಗಳಲ್ಲಿ ಅಳಿಸಿಹಾಕಲಾಗುತ್ತದೆ. ಕಣ್ಣು ಮತ್ತು ನೋಟದ ಸ್ಥಾನಗಳನ್ನು ಮಾತ್ರ ಉಳಿಸಿಕೊಳ್ಳಲಾಗುತ್ತದೆ.',\r\n    bn: 'ক্যামেরার গোপনীয়তার আশ্বাস। কোনও ফটো বা ভিডিও রেকর্ড করা হয় না। প্রতিটি ওয়েবক্যাম ফ্রেম কেবলমাত্র এই কম্পিউটারের ভিতরে ব্যবহৃত হয়, কেবলমাত্র চোখ এবং দৃষ্টিতে অবস্থানগুলি অনুমান করার জন্য এবং তারপরে 10 সেকেন্ডের মধ্যে মুছে ফেলা হয়। কেবল চোখ এবং দৃষ্টিতে অবস্থানগুলি ধরে রাখা হয়।',\r\n    id: 'Jaminan privasi kamera. Tidak ada foto atau video yang direkam. Setiap bingkai webcam hanya digunakan di dalam komputer ini, semata -mata untuk memperkirakan posisi mata dan pandangan, dan kemudian dihapus, dalam 10 detik. Hanya posisi mata dan tatapan yang dipertahankan.',\r\n    'zh-CN':\r\n      '保证相机隐私。没有录制照片或视频。每个网络摄像头框架仅在该计算机内使用，仅用于估计眼睛和凝视位置，然后在10秒内删除。只保留了眼睛和凝视位置。',\r\n    'zh-HK':\r\n      '保證相機隱私。沒有錄製照片或視頻。每個網絡攝像頭框架僅在該計算機內使用，僅用於估計眼睛和凝視位置，然後在10秒內刪除。只保留了眼睛和凝視位置。',\r\n    ja: 'カメラのプライバシーの保証。写真やビデオは記録されていません。各ウェブカメラフレームは、目と視線の位置を推定するためだけにこのコンピューター内でのみ使用され、10秒以内に消去されます。目と視線の位置のみが保持されます。',\r\n    ko: '카메라 프라이버시의 보증. 사진이나 비디오가 녹음되지 않습니다. 각 웹캠 프레임은이 컴퓨터 내부에서만 사용되며 눈과 시선 위치를 추정 한 다음 10 초 이내에 지워집니다. 눈과 시선 위치 만 유지됩니다.',\r\n  },\r\n  RC_privacyIphoneMicrophone: {\r\n    'en-US':\r\n      '❌ ASSURANCE OF MICROPHONE PRIVACY. Obsolete version. Update from RC_privacyIphoneMicrophone to RC_privacyMicrophoneCalibration',\r\n    de: '❌ Zusicherung der Privatsphäre von Mikrofon. Veraltete Version. Update von RC_Privacyiphonemicrophon zu RC_PrivacyMicrophonekalibrierung',\r\n    fr: \"❌ Assurance de l'intimité des microphones. Version obsolète. Mise à jour de rc_privacyiphonémicrophone à rc_privacymicrophonecalibration\",\r\n    es: '❌ Aseguramiento de la privacidad del micrófono. Versión obsoleta. Actualización de rc_privacyiphonemicrophone a rc_privacymicrophonecalibration',\r\n    pt: '❌ Garantia da privacidade do microfone. Versão obsoleta. Atualização de rc_privacyiphonemicrophone para rc_privacymicrophonecalibration',\r\n    it: '❌ Assicurazione della privacy del microfono. Versione obsoleta. AGGIORNAMENTO DA RC_PRIVACIPHONEMICROPHONE A RC_PRIVACYMICROPHONECalibration',\r\n    ro: '❌ Asigurarea vieții private a microfonului. Versiune învechită. Actualizare de la RC_PRIVACACYIFONYMOPHON la RC_PRIVACYMICROPHONECALIBRAȚIE',\r\n    pl: '❌ Zapewnienie prywatności mikrofonu. Przestarzała wersja. Aktualizacja od RC_Privacyiphonemikrofonu do RC_PrivacyMicrofonecealibation',\r\n    ru: '❌ Гарантия конфиденциальности микрофона. Устаревшая версия. Обновление от rc_privacyiphonemicrophone до rc_privacymicrophonecalibration',\r\n    hy: '❌ խոսափողի գաղտնիության ապահովում: Հնացած տարբերակը: Թարմացրեք RC_PRIVACYIPHONEMOPOPHONE- ից rc_privacymicrophonecalibration',\r\n    fi: '❌ Mikrofonin yksityisyyden varmuus. Vanhentunut versio. Päivitys RC_Privacyiphonemicrofonista RC_Privacymikrofonekalibrointiin',\r\n    ka: '❌ მიკროფონის კონფიდენციალურობის უზრუნველყოფა. მოძველებული ვერსია. განახლება rc_privacyiphonemicrophone– დან RC_PrivacyMicrophoneCalibration',\r\n    he: '❌ הבטחה לפרטיות המיקרופון. גרסה מיושנת. עדכון מ- rc_privacyiphonemicrophone ל- rc_privacymicrophonecalibration',\r\n    ar: '❌ ضمان خصوصية الميكروفون. نسخة عفا عليها الزمن. تحديث من rc_privacyiphonemicrophone',\r\n    ur: 'mic مائکروفون پرائیویسی کی یقین دہانی۔ متروک ورژن. RC_Privacyiphonemicrophone سے RC_Privacymicrophonecalibration میں اپ ڈیٹ کریں',\r\n    hi: '❌ माइक्रोफोन गोपनीयता का आश्वासन। अप्रचलित संस्करण। RC_PRIVACYIPHONEMICROPHONE से RC_PRIVACYMICROPHONECALIBRATION',\r\n    ta: 'Micro மைக்ரோஃபோன் தனியுரிமையின் உறுதி. வழக்கற்றுப் போன பதிப்பு. RC_PRIVACYIPHONEMICROBONE இலிருந்து RC_PRIVACYMICROPHONECALIBRATION க்கு புதுப்பிக்கவும்',\r\n    ml: 'Meio മൈക്രോഫോൺ സ്വകാര്യതയുടെ ഉറപ്പ്. കാലഹരണപ്പെട്ട പതിപ്പ്. Rc_privashonehonekramphome- ൽ നിന്ന് Rc_privasemiCrofgonecaalibruation- ലേക്ക് അപ്ഡേറ്റ് ചെയ്യുക',\r\n    te: 'మైక్రోఫోన్ గోప్యత యొక్క హామీ. వాడుకలో లేని వెర్షన్. Rc_privacyiphonemicrophone నుండి RC_PRIVACYMICROCALIBRATION వరకు నవీకరణ',\r\n    kn: 'Mic ಮೈಕ್ರೊಫೋನ್ ಗೌಪ್ಯತೆಯ ಭರವಸೆ. ಬಳಕೆಯಲ್ಲಿಲ್ಲದ ಆವೃತ್ತಿ. RC_PRIVACYIPHONEMICROPHONE ನಿಂದ RC_PRIVACYMICROFONECALIBARATION ಗೆ ನವೀಕರಿಸಿ',\r\n    bn: 'Microp মাইক্রোফোন গোপনীয়তার নিশ্চয়তা। অপ্রচলিত সংস্করণ। RC_PRIVACYIFHONEMROFONE থেকে RC_PRIVACYMICROFONECALIBRATION এ আপডেট করুন',\r\n    id: '❌ Jaminan privasi mikrofon. Versi usang. UPDATE DARI RC_PRIVACYIPHONEMICROPHONE ke RC_PRIVACYMICROPHONECalibration',\r\n    'zh-CN':\r\n      '❌保证麦克风隐私。过时的版本。从RC_privacyiphonemicrophone到RC_PRIVACYMICROPHONECALIBRATION的更新',\r\n    'zh-HK':\r\n      '❌保證麥克風隱私。過時的版本。從RC_privacyiphonemicrophone到RC_PRIVACYMICROPHONECALIBRATION的更新',\r\n    ja: 'michマイクのプライバシーの保証。時代遅れのバージョン。 RC_PRIVACYIPHONEMICROPHONEからRC_PRIVACYMICOROPHONECALIBRATIONへの更新',\r\n    ko: 'microphone 마이크 프라이버시의 보증. 쓸모없는 버전. rc_privacyiphonemicrophone에서 rc_privacymicrophonecalibration으로 업데이트하십시오',\r\n  },\r\n  RC_privacyMicrophoneCalibration: {\r\n    'en-US':\r\n      'ASSURANCE OF MICROPHONE PRIVACY. While recording, the software plays loud sounds and prominently displays, \"Silence please. Now recording.\" The recording is used solely to measure microphone and loudspeaker properties and then erased, within 30 seconds. Only the microphone and loudspeaker characteristics are retained.',\r\n    de: 'Gewissheit der Privatsphäre von Mikrofon. Während der Aufnahme spielt die Software laute Sounds und zeigt prominent an: \"Stille bitte. Jetzt aufnehmen.\" Die Aufzeichnung wird ausschließlich zur Messung von Mikrofon- und Lautsprechereigenschaften verwendet und dann innerhalb von 30 Sekunden gelöscht. Es werden nur das Mikrofon- und Lautsprechereigenschaften erhalten.',\r\n    fr: \"Assurance de la confidentialité des microphones. Pendant l'enregistrement, le logiciel joue des sons forts et s'affiche en évidence, \\\"Silence s'il vous plaît. Maintenant l'enregistrement\\\". L'enregistrement est utilisé uniquement pour mesurer les propriétés du microphone et du haut-parleur, puis effacée, dans les 30 secondes. Seules les caractéristiques du microphone et des haut-parleurs sont conservées.\",\r\n    es: 'Aseguramiento de la privacidad del micrófono. Mientras graba, el software reproduce sonidos fuertes y muestra prominentemente: \"Silence por favor. Ahora grabando\". La grabación se usa únicamente para medir las propiedades de micrófono y altavoz y luego se borra, en 30 segundos. Solo se conservan las características del micrófono y el altavoz.',\r\n    pt: 'Garantia da privacidade do microfone. Durante a gravação, o software toca sons altos e exibe com destaque, \"Silêncio, por favor. Agora gravação\". A gravação é usada exclusivamente para medir as propriedades do microfone e do alto -falante e depois apagada, dentro de 30 segundos. Somente as características do microfone e do alto -falante são retidos.',\r\n    it: 'Assicurazione della privacy del microfono. Durante la registrazione, il software suona suoni forti e visualizza in modo prominente: \"Silenzio per favore. Ora registrazione\". La registrazione viene utilizzata esclusivamente per misurare le proprietà del microfono e degli altoparlanti e quindi cancellata, entro 30 secondi. Vengono mantenute solo le caratteristiche del microfono e degli altoparlanti.',\r\n    ro: 'Asigurarea confidențialității microfonului. În timp ce înregistrează, software -ul joacă sunete puternice și afișează în mod proeminent, „Tăcerea te rog. Acum înregistrează”. Înregistrarea este utilizată exclusiv pentru a măsura proprietățile microfonului și difuzorului și apoi șterse, în termen de 30 de secunde. Doar caracteristicile microfonului și difuzorului sunt păstrate.',\r\n    pl: 'Zapewnienie prywatności mikrofonu. Podczas nagrywania oprogramowanie odtwarza głośne dźwięki i wyraźnie wyświetla się: „Cisza, proszę. Teraz nagrywanie”. Nagrywanie służy wyłącznie do pomiaru właściwości mikrofonu i głośników, a następnie usunięte w ciągu 30 sekund. Zachowane są tylko właściwości mikrofonu i głośnika.',\r\n    ru: 'Гарантия конфиденциальности микрофона. Во время записи программное обеспечение воспроизводит громкие звуки и заметно отображается: «Молчания, пожалуйста. Теперь запись». Запись используется исключительно для измерения свойств микрофона и громкоговорителя, а затем стирается в течение 30 секунд. Только характеристики микрофона и громкоговорителя сохраняются.',\r\n    hy: 'Խոսափողի գաղտնիության ապահովում: Ձայնագրվելիս ծրագրաշարը բարձր հնչյուններ է խաղում եւ ակնհայտորեն ցուցադրում է, «Լռություն խնդրում եմ: Հիմա ձայնագրվում է»: Ձայնագրությունը օգտագործվում է բացառապես միկրոֆոն եւ բարձրախոսի հատկություններ չափելու համար, այնուհետեւ ջնջվում է 30 վայրկյանում: Պահպանվում են միայն խոսափողը եւ բարձրախոսի բնութագրերը:',\r\n    fi: 'Mikrofonin yksityisyyden varmuus. Tallennettaessa ohjelmisto toistaa kovia ääniä ja näyttää näkyvästi: \"Hiljaisu kiitos. Nyt nauhoitetaan.\" Tallennusta käytetään yksinomaan mikrofonin ja kaiuttimen ominaisuuksien mittaamiseen ja sitten poistetaan 30 sekunnin sisällä. Vain mikrofoni- ja kaiutinominaisuudet säilyvät.',\r\n    ka: 'მიკროფონის კონფიდენციალურობის უზრუნველყოფა. ჩაწერისას, პროგრამა ხმამაღლა თამაშობს და აშკარად აჩვენებს, \"დუმილი გთხოვთ. ახლა ჩაწერეთ.\" ჩანაწერი გამოიყენება მხოლოდ მიკროფონის და დინამიკის თვისებების გასაზომად და შემდეგ წაშლილია, 30 წამში. შენარჩუნებულია მხოლოდ მიკროფონის და დინამიკის მახასიათებლები.',\r\n    he: 'הבטחה לפרטיות המיקרופון. בזמן ההקלטה, התוכנה מנגנת צלילים רועשים ומציגה באופן בולט, \"שתיקה בבקשה. עכשיו הקלטה.\" ההקלטה משמשת אך ורק למדידת תכונות מיקרופון ורמקול ואז למחוק, תוך 30 שניות. רק מאפייני המיקרופון והרמקול נשמרים.',\r\n    ar: 'ضمان خصوصية الميكروفون. أثناء التسجيل ، يلعب البرنامج أصواتًا عالية ويعرض بشكل بارز ، \"Silence من فضلك. التسجيل الآن.\" يتم استخدام التسجيل فقط لقياس خصائص الميكروفون ومكبر الصوت ثم تمحى ، في غضون 30 ثانية. يتم الاحتفاظ فقط بخصائص الميكروفون ومكبر الصوت.',\r\n    ur: 'مائکروفون پرائیویسی کی یقین دہانی۔ ریکارڈنگ کے دوران ، سافٹ ویئر تیز آوازیں بجاتا ہے اور نمایاں طور پر دکھاتا ہے ، \"خاموشی براہ کرم۔ اب ریکارڈنگ۔\" ریکارڈنگ مکمل طور پر مائکروفون اور لاؤڈ اسپیکر خصوصیات کی پیمائش کے لئے استعمال کی جاتی ہے اور پھر 30 سیکنڈ کے اندر مٹ گئی۔ صرف مائکروفون اور لاؤڈ اسپیکر خصوصیات کو برقرار رکھا گیا ہے۔',\r\n    hi: 'माइक्रोफोन गोपनीयता का आश्वासन। रिकॉर्डिंग करते समय, सॉफ्टवेयर जोर से आवाज खेलता है और प्रमुखता से प्रदर्शित करता है, \"मौन कृपया। अब रिकॉर्डिंग।\" रिकॉर्डिंग का उपयोग केवल माइक्रोफोन और लाउडस्पीकर गुणों को मापने के लिए किया जाता है और फिर 30 सेकंड के भीतर मिटा दिया जाता है। केवल माइक्रोफोन और लाउडस्पीकर विशेषताओं को बनाए रखा जाता है।',\r\n    ta: 'மைக்ரோஃபோன் தனியுரிமையின் உறுதி. பதிவு செய்யும் போது, ​​மென்பொருள் உரத்த ஒலிகளை இயக்குகிறது மற்றும் \"ம silence னம் தயவுசெய்து. இப்போது பதிவுசெய்கிறது.\" மைக்ரோஃபோன் மற்றும் ஒலிபெருக்கி பண்புகளை அளவிட மட்டுமே பதிவு பயன்படுத்தப்படுகிறது, பின்னர் 30 வினாடிகளுக்குள் அழிக்கப்படுகிறது. மைக்ரோஃபோன் மற்றும் ஒலிபெருக்கி பண்புகள் மட்டுமே தக்கவைக்கப்படுகின்றன.',\r\n    ml: 'മൈക്രോഫോൺ സ്വകാര്യതയുടെ ഉറപ്പ്. റെക്കോർഡുചെയ്യുമ്പോൾ, സോഫ്റ്റ്വെയർ ഉച്ചത്തിലുള്ള ശബ്ദങ്ങളും പ്രധാനമായി പ്രദർശിപ്പിക്കുന്നു, \"ദയവായി നിശബ്ദത കാണിക്കുക. ഇപ്പോൾ റെക്കോർഡിംഗ്.\" മൈക്രോഫോൺ, ഉച്ചഭാഷിണികൾ എന്നിവ അളക്കുന്നതിനും 30 സെക്കൻഡിനുള്ളിൽ മായ്ക്കുന്നതിനും റെക്കോർഡിംഗ് ഉപയോഗിക്കുന്നു. മൈക്രോഫോൺ, ഉച്ചഭാഷിൾ സവിശേഷതകൾ മാത്രം നിലനിർത്തുന്നു.',\r\n    te: 'మైక్రోఫోన్ గోప్యత యొక్క హామీ. రికార్డింగ్ చేస్తున్నప్పుడు, సాఫ్ట్‌వేర్ బిగ్గరగా శబ్దాలు ఆడుతుంది మరియు \"సైలెన్స్ ప్లీజ్ ప్లీజ్. ఇప్పుడు రికార్డింగ్\" అని ప్రముఖంగా ప్రదర్శిస్తుంది. రికార్డింగ్ మైక్రోఫోన్ మరియు లౌడ్‌స్పీకర్ లక్షణాలను కొలవడానికి మాత్రమే ఉపయోగించబడుతుంది మరియు తరువాత 30 సెకన్లలో తొలగించబడుతుంది. మైక్రోఫోన్ మరియు లౌడ్‌స్పీకర్ లక్షణాలు మాత్రమే అలాగే ఉంచబడతాయి.',\r\n    kn: 'ಮೈಕ್ರೊಫೋನ್ ಗೌಪ್ಯತೆಯ ಭರವಸೆ. ರೆಕಾರ್ಡಿಂಗ್ ಮಾಡುವಾಗ, ಸಾಫ್ಟ್‌ವೇರ್ ಜೋರಾಗಿ ಶಬ್ದಗಳನ್ನು ಆಡುತ್ತದೆ ಮತ್ತು \"ಮೌನ ದಯವಿಟ್ಟು. ಈಗ ರೆಕಾರ್ಡಿಂಗ್\" ಎಂದು ಪ್ರಮುಖವಾಗಿ ಪ್ರದರ್ಶಿಸುತ್ತದೆ. ರೆಕಾರ್ಡಿಂಗ್ ಅನ್ನು ಮೈಕ್ರೊಫೋನ್ ಮತ್ತು ಧ್ವನಿವರ್ಧಕ ಗುಣಲಕ್ಷಣಗಳನ್ನು ಅಳೆಯಲು ಮಾತ್ರ ಬಳಸಲಾಗುತ್ತದೆ ಮತ್ತು ನಂತರ 30 ಸೆಕೆಂಡುಗಳಲ್ಲಿ ಅಳಿಸಲಾಗುತ್ತದೆ. ಮೈಕ್ರೊಫೋನ್ ಮತ್ತು ಧ್ವನಿವರ್ಧಕ ಗುಣಲಕ್ಷಣಗಳನ್ನು ಮಾತ್ರ ಉಳಿಸಿಕೊಳ್ಳಲಾಗುತ್ತದೆ.',\r\n    bn: 'মাইক্রোফোন গোপনীয়তার আশ্বাস। রেকর্ডিংয়ের সময়, সফ্টওয়্যারটি উচ্চ শব্দ বাজায় এবং বিশিষ্টভাবে প্রদর্শন করে, \"সাইলেন্স প্লিজ প্লিজ Now এখন রেকর্ডিং।\" রেকর্ডিংটি সম্পূর্ণরূপে মাইক্রোফোন এবং লাউডস্পিকারের বৈশিষ্ট্যগুলি পরিমাপ করতে ব্যবহৃত হয় এবং তারপরে 30 সেকেন্ডের মধ্যে মুছে ফেলা হয়। কেবল মাইক্রোফোন এবং লাউডস্পিকারের বৈশিষ্ট্যগুলি ধরে রাখা হয়।',\r\n    id: 'Jaminan privasi mikrofon. Saat merekam, perangkat lunak ini memainkan suara keras dan menampilkan dengan jelas, \"Hening tolong. Sekarang perekaman.\" Rekaman digunakan semata -mata untuk mengukur sifat mikrofon dan pengeras suara dan kemudian dihapus, dalam waktu 30 detik. Hanya karakteristik mikrofon dan pengeras suara yang dipertahankan.',\r\n    'zh-CN':\r\n      '保证麦克风隐私。在录制时，该软件会播放大声的声音，并显着显示：“请静音。现在正在录制。”该记录仅用于测量麦克风和扬声器特性，然后在30秒内擦除。仅保留麦克风和扬声器特性。',\r\n    'zh-HK':\r\n      '保證麥克風隱私。在錄製時，該軟件會播放大聲的聲音，並顯著顯示：“請靜音。現在正在錄製。”該記錄僅用於測量麥克風和揚聲器特性，然後在30秒內擦除。僅保留麥克風和揚聲器特性。',\r\n    ja: 'マイクのプライバシーの保証。録音中に、ソフトウェアは大音量の音を再生し、「Silence Please。今は録音している」と目立って表示します。録音は、マイクとスピーカーの特性を測定するためだけに使用され、30秒以内に消去されます。マイクとスピーカーの特性のみが保持されます。',\r\n    ko: '마이크 프라이버시의 보증. 녹음하는 동안 소프트웨어는 큰 소리를 내며 눈에 띄게 표시됩니다. 기록은 마이크 및 라우드 스피커 특성을 측정하는 데만 사용 된 다음 30 초 이내에 지워집니다. 마이크 및 라우드 스피커 특성 만 유지됩니다.',\r\n  },\r\n  RC_proceedToExperiment: {\r\n    'en-US': 'Proceed to experiment',\r\n    de: 'Fahren Sie mit experimentieren',\r\n    fr: \"Procéder à l'expérience\",\r\n    es: 'Proceder a experimentar',\r\n    pt: 'Prosseguir para experimentar',\r\n    it: \"Procedere all'esperimento\",\r\n    ro: 'Continuați să experimentați',\r\n    pl: 'Przejdź do eksperymentu',\r\n    ru: 'Перейти к эксперименту',\r\n    hy: 'Անցնել փորձի',\r\n    fi: 'Jatkaa kokeilua',\r\n    ka: 'განაგრძეთ ექსპერიმენტი',\r\n    he: 'המשך להתנסות',\r\n    ar: 'تابع التجربة',\r\n    ur: 'تجربہ کرنے کے لئے آگے بڑھیں',\r\n    hi: 'प्रयोग करने के लिए आगे बढ़ें',\r\n    ta: 'பரிசோதனைக்குச் செல்லுங்கள்',\r\n    ml: 'പരീക്ഷിക്കലിലേക്ക് പോകുക',\r\n    te: 'ప్రయోగానికి వెళ్లండి',\r\n    kn: 'ಪ್ರಯೋಗಕ್ಕೆ ಮುಂದುವರಿಯಿರಿ',\r\n    bn: 'পরীক্ষায় এগিয়ে যান',\r\n    id: 'Lanjutkan untuk bereksperimen',\r\n    'zh-CN': '继续进行实验',\r\n    'zh-HK': '繼續進行實驗',\r\n    ja: '実験に進みます',\r\n    ko: '실험을 진행하십시오',\r\n  },\r\n  RC_removeHeadphones: {\r\n    'en-US':\r\n      \"1. Remove and disconnect any headphones. This calibration won't work with headphones.\\n\",\r\n    de: '1. Kopfhörer entfernen und trennen. Diese Kalibrierung funktioniert nicht mit Kopfhörern.\\n',\r\n    fr: '1. Retirez et déconnectez tous les écouteurs. Cet étalonnage ne fonctionnera pas avec des écouteurs.\\n',\r\n    es: '1. Retire y desconecte los auriculares. Esta calibración no funcionará con auriculares.\\n',\r\n    pt: '1. Remova e desconecte todos os fones de ouvido. Essa calibração não funcionará com fones de ouvido.\\n',\r\n    it: '1. Rimuovere e scollegare eventuali cuffie. Questa calibrazione non funzionerà con le cuffie.\\n',\r\n    ro: '1. Scoateți și deconectați orice căști. Această calibrare nu va funcționa cu căști.\\n',\r\n    pl: '1. Wyjmij i odłącz wszelkie słuchawki. Ta kalibracja nie będzie działać z słuchawkami.\\n',\r\n    ru: '1. Снимите и отключите любые наушники. Эта калибровка не будет работать с наушниками.\\n',\r\n    hy: '1. Հեռացրեք եւ անջատեք որեւէ ականջակալ: Այս տրամաչափումը չի աշխատի ականջակալների հետ:\\n',\r\n    fi: '1. Poista ja katkaise kaikki kuulokkeet. Tämä kalibrointi ei toimi kuulokkeiden kanssa.\\n',\r\n    ka: '1. ამოიღეთ და გათიშეთ ნებისმიერი ყურსასმენი. ეს კალიბრაცია არ იმუშავებს ყურსასმენებით.\\n',\r\n    he: '1. הסר ונתק את כל האוזניות. כיול זה לא יעבוד עם אוזניות.\\n',\r\n    ar: '1. إزالة وقطع أي سماعات. لن تعمل هذه المعايرة مع سماعات الرأس.\\n',\r\n    ur: '1. کسی بھی ہیڈ فون کو ہٹا دیں اور منقطع کریں۔ یہ انشانکن ہیڈ فون کے ساتھ کام نہیں کرے گا۔\\n',\r\n    hi: '1. किसी भी हेडफ़ोन को हटा दें और डिस्कनेक्ट करें। यह अंशांकन हेडफ़ोन के साथ काम नहीं करेगा।\\n',\r\n    ta: '1. எந்த ஹெட்ஃபோன்களையும் அகற்றி துண்டிக்கவும். இந்த அளவுத்திருத்தம் ஹெட்ஃபோன்களுடன் வேலை செய்யாது.\\n',\r\n    ml: '1. ഏതെങ്കിലും ഹെഡ്ഫോണുകൾ നീക്കം ചെയ്ത് വിച്ഛേദിക്കുക. ഈ കാലിബ്രേഷൻ ഹെഡ്ഫോണുകളുമായി പ്രവർത്തിക്കില്ല.\\n',\r\n    te: '1. ఏదైనా హెడ్‌ఫోన్‌లను తొలగించి డిస్‌కనెక్ట్ చేయండి. ఈ క్రమాంకనం హెడ్‌ఫోన్‌లతో పనిచేయదు.\\n',\r\n    kn: '1. ಯಾವುದೇ ಹೆಡ್‌ಫೋನ್‌ಗಳನ್ನು ತೆಗೆದುಹಾಕಿ ಮತ್ತು ಸಂಪರ್ಕ ಕಡಿತಗೊಳಿಸಿ. ಈ ಮಾಪನಾಂಕ ನಿರ್ಣಯವು ಹೆಡ್‌ಫೋನ್‌ಗಳೊಂದಿಗೆ ಕಾರ್ಯನಿರ್ವಹಿಸುವುದಿಲ್ಲ.\\n',\r\n    bn: '1. কোনও হেডফোন সরান এবং সংযোগ বিচ্ছিন্ন করুন। এই ক্রমাঙ্কন হেডফোনগুলির সাথে কাজ করবে না।\\n',\r\n    id: '1. Lepaskan dan lepaskan headphone apa pun. Kalibrasi ini tidak akan berfungsi dengan headphone.\\n',\r\n    'zh-CN': '1.卸下并断开所有耳机。这种校准无法与耳机一起使用。\\n',\r\n    'zh-HK': '1.卸下並斷開所有耳機。這種校準無法與耳機一起使用。\\n',\r\n    ja: '1.ヘッドフォンを取り外して切断します。このキャリブレーションはヘッドフォンでは機能しません。\\n',\r\n    ko: '1. 헤드폰을 제거하고 분리하십시오. 이 교정은 헤드폰과 함께 작동하지 않습니다.\\n',\r\n  },\r\n  RC_requestCamera: {\r\n    'en-US': 'To proceed, this study needs your permission to use the camera. ',\r\n    de: 'Um fortzufahren, erfordert diese Studie Ihre Erlaubnis, die Kamera zu verwenden.',\r\n    fr: \"Pour continuer, cette étude a besoin de votre permission d'utiliser la caméra.\",\r\n    es: 'Para continuar, este estudio necesita su permiso para usar la cámara.',\r\n    pt: 'Para prosseguir, este estudo precisa de sua permissão para usar a câmera.',\r\n    it: 'Per procedere, questo studio richiede il permesso di utilizzare la fotocamera.',\r\n    ro: 'Pentru a continua, acest studiu are nevoie de permisiunea dvs. de a utiliza camera.',\r\n    pl: 'Aby kontynuować, to badanie wymaga zgody na korzystanie z aparatu.',\r\n    ru: 'Чтобы продолжить, это исследование требует вашего разрешения на использование камеры.',\r\n    hy: 'Շարունակելու համար այս ուսումնասիրությունը պետք է ձեր թույլտվությունը օգտագործելու տեսախցիկը:',\r\n    fi: 'Jatkamaan tämä tutkimus tarvitsee lupaasi käyttää kameraa.',\r\n    ka: 'გასაგრძელებლად, ამ კვლევას სჭირდება თქვენი ნებართვა კამერის გამოყენების შესახებ.',\r\n    he: 'כדי להמשיך, מחקר זה זקוק לרשותך להשתמש במצלמה.',\r\n    ar: 'للمتابعة ، تحتاج هذه الدراسة إلى إذنك لاستخدام الكاميرا.',\r\n    ur: 'آگے بڑھنے کے ل this ، اس مطالعے کو کیمرہ استعمال کرنے کے ل your آپ کی اجازت کی ضرورت ہے۔',\r\n    hi: 'आगे बढ़ने के लिए, इस अध्ययन को कैमरे का उपयोग करने के लिए आपकी अनुमति की आवश्यकता है।',\r\n    ta: 'தொடர, இந்த ஆய்வுக்கு கேமராவைப் பயன்படுத்த உங்கள் அனுமதி தேவை.',\r\n    ml: 'തുടരാൻ, ഈ പഠനത്തിന് ക്യാമറ ഉപയോഗിക്കാൻ നിങ്ങളുടെ അനുമതി ആവശ്യമാണ്.',\r\n    te: 'కొనసాగడానికి, ఈ అధ్యయనానికి కెమెరాను ఉపయోగించడానికి మీ అనుమతి అవసరం.',\r\n    kn: 'ಮುಂದುವರಿಯಲು, ಈ ಅಧ್ಯಯನಕ್ಕೆ ಕ್ಯಾಮೆರಾವನ್ನು ಬಳಸಲು ನಿಮ್ಮ ಅನುಮತಿ ಅಗತ್ಯವಿದೆ.',\r\n    bn: 'এগিয়ে যাওয়ার জন্য, এই অধ্যয়নের জন্য ক্যামেরাটি ব্যবহারের জন্য আপনার অনুমতি প্রয়োজন।',\r\n    id: 'Untuk melanjutkan, studi ini membutuhkan izin Anda untuk menggunakan kamera.',\r\n    'zh-CN': '为了进行，这项研究需要您使用相机的许可。',\r\n    'zh-HK': '為了進行，這項研究需要您使用相機的許可。',\r\n    ja: '続行するには、この調査にはカメラを使用する許可が必要です。',\r\n    ko: '진행하려면이 연구는 카메라 사용 권한이 필요합니다.',\r\n  },\r\n  RC_screenSize: {\r\n    'en-US': 'Screen Size',\r\n    de: 'Bildschirmgröße',\r\n    fr: \"Taille de l'écran\",\r\n    es: 'Tamaño de pantalla',\r\n    pt: 'Tamanho da tela',\r\n    it: 'Dimensione dello schermo',\r\n    ro: 'Marimea ecranului',\r\n    pl: 'Rozmiar ekranu',\r\n    ru: 'Размер экрана',\r\n    hy: 'Էկրանի չափը',\r\n    fi: 'Näytön koko',\r\n    ka: 'Ეკრანის ზომა',\r\n    he: 'גודל מסך',\r\n    ar: 'حجم الشاشة',\r\n    ur: 'اسکرین سائز',\r\n    hi: 'स्क्रीन का साईज़',\r\n    ta: 'திரை அளவு',\r\n    ml: 'സ്ക്രീനിന്റെ വലിപ്പം',\r\n    te: 'తెర పరిమాణము',\r\n    kn: 'ತೆರೆಯಳತೆ',\r\n    bn: 'পর্দার আকার',\r\n    id: 'Ukuran layar',\r\n    'zh-CN': '屏幕尺寸',\r\n    'zh-HK': '屏幕尺寸',\r\n    ja: '画面サイズ',\r\n    ko: '화면 크기',\r\n  },\r\n  RC_screenSizeCredit: {\r\n    'en-US': 'Credit card suggested by the Li et al. (2020) \"Virtual Chinrest\" paper.',\r\n    de: 'Kreditkarte von Li et al. (2020) \"Virtual Chinentrest\" -Papier.',\r\n    fr: 'Carte de crédit suggérée par Li et al. (2020) Papier \"Chinrest virtuel\".',\r\n    es: 'Tarjeta de crédito sugerida por Li et al. (2020) Papel \"Chinrest virtual\".',\r\n    pt: 'Cartão de crédito sugerido por Li et al. (2020) papel \"Virtual ChinRest\".',\r\n    it: 'Carta di credito suggerita da Li et al. (2020) carta \"Virtual Chinrest\".',\r\n    ro: 'Card de credit sugerat de Li și colab. (2020) Hârtie „virtuală Chinrest”.',\r\n    pl: 'Karta kredytowa sugerowana przez Li i in. (2020) Papier „Virtual Chinrest”.',\r\n    ru: 'Кредитная карта, предложенная Li et al. (2020) «Виртуальный подбородок».',\r\n    hy: 'Վարկային քարտ, որն առաջարկվում է Li et al- ի կողմից: (2020) «Վիրտուալ chinrest» թուղթ:',\r\n    fi: 'Li et al. Ehdotti luottokortti. (2020) \"Virtual Chinrest\" -paperi.',\r\n    ka: 'საკრედიტო ბარათი, რომელიც შემოთავაზებულია Li et al. (2020) \"ვირტუალური Chinrest\" ქაღალდი.',\r\n    he: 'כרטיס אשראי שהוצע על ידי ה- Li et al. (2020) נייר \"צ\\'ינרסט וירטואלי\".',\r\n    ar: 'بطاقة الائتمان التي اقترحها Li et al. (2020) ورقة \"chinrest الظاهرية\".',\r\n    ur: 'لی ایٹ ال کے ذریعہ کریڈٹ کارڈ تجویز کردہ۔ (2020) \"ورچوئل چنیسٹ\" کاغذ۔',\r\n    hi: 'ली एट अल द्वारा सुझाए गए क्रेडिट कार्ड। (2020) \"वर्चुअल चिनरेस्ट\" पेपर।',\r\n    ta: 'கிரெடிட் கார்டு லி மற்றும் பலர் பரிந்துரைத்தனர். (2020) \"மெய்நிகர் சின்ரெஸ்ட்\" காகிதம்.',\r\n    ml: 'Li et at al നിർദ്ദേശിച്ച ക്രെഡിറ്റ് കാർഡ്. (2020) \"വെർച്വൽ ചിൻറെസ്റ്റ്\" പേപ്പർ.',\r\n    te: 'క్రెడిట్ కార్డ్ లి మరియు ఇతరులు సూచించింది. (2020) \"వర్చువల్ చిన్‌రెస్ట్\" పేపర్.',\r\n    kn: 'ಲಿ ಮತ್ತು ಇತರರು ಸೂಚಿಸಿದ ಕ್ರೆಡಿಟ್ ಕಾರ್ಡ್. (2020) \"ವರ್ಚುವಲ್ ಚಿನ್‌ರೆಸ್ಟ್\" ಕಾಗದ.',\r\n    bn: 'লি এট আল দ্বারা প্রস্তাবিত ক্রেডিট কার্ড। (2020) \"ভার্চুয়াল চিনেস্ট\" কাগজ।',\r\n    id: 'Kartu kredit yang disarankan oleh Li et al. (2020) kertas \"virtual chinrest\".',\r\n    'zh-CN': 'Li等人建议的信用卡。 （2020）“虚拟Chinrest”纸。',\r\n    'zh-HK': 'Li等人建議的信用卡。 （2020）“虛擬Chinrest”紙。',\r\n    ja: 'Li et alが提案したクレジットカード。 （2020）「仮想チンレスト」論文。',\r\n    ko: 'Li et al. (2020) \"Virtual Chinrest\"용지.',\r\n  },\r\n  RC_screenSizeCreditCard: {\r\n    'en-US': 'a credit card',\r\n    de: 'eine Kreditkarte',\r\n    fr: 'Une carte de crédit',\r\n    es: 'una tarjeta de crédito',\r\n    pt: 'um cartão de crédito',\r\n    it: 'una carta di credito',\r\n    ro: 'un card de credit',\r\n    pl: 'karta kredytowa',\r\n    ru: 'кредитная карта',\r\n    hy: 'Վարկային քարտ',\r\n    fi: 'luottokortti',\r\n    ka: 'საკრედიტო ბარათი',\r\n    he: 'כרטיס אשראי',\r\n    ar: 'بطاقة ائتمان',\r\n    ur: 'ادھار کا کارڈ',\r\n    hi: 'एक क्रेडिट कार्ड',\r\n    ta: 'கடன் அட்டை',\r\n    ml: 'ഒരു ക്രെഡിറ്റ് കാർഡ്',\r\n    te: 'ఒక క్రెడిట్ కార్డు',\r\n    kn: 'ಕ್ರೆಡಿಟ್ ಕಾರ್ಡ್',\r\n    bn: 'একটি ক্রেডিট কার্ড',\r\n    id: 'sebuah kartu kredit',\r\n    'zh-CN': '一张信用卡',\r\n    'zh-HK': '一張信用卡',\r\n    ja: 'クレジットカード',\r\n    ko: '신용 카드',\r\n  },\r\n  RC_screenSizeHave: {\r\n    'en-US': 'I have xxx with me.',\r\n    de: 'Ich habe xxx bei mir.',\r\n    fr: \"J'ai xxx avec moi.\",\r\n    es: 'Tengo xxx conmigo.',\r\n    pt: 'Eu tenho xxx comigo.',\r\n    it: 'Ho xxx con me.',\r\n    ro: 'Am xxx cu mine.',\r\n    pl: 'Mam ze mną xxx.',\r\n    ru: 'У меня со мной ххх.',\r\n    hy: 'Ես ինձ հետ xxx ունեմ:',\r\n    fi: 'Minulla on xxx kanssani.',\r\n    ka: 'მე მაქვს xxx ჩემთან.',\r\n    he: 'יש לי xxx איתי.',\r\n    ar: 'لدي xxx معي.',\r\n    ur: 'میرے پاس xxx ہے۔',\r\n    hi: 'मेरे पास xxx है।',\r\n    ta: 'என்னிடம் xxx உள்ளது.',\r\n    ml: 'എനിക്ക് എന്നോടൊപ്പം xxx ഉണ്ട്.',\r\n    te: 'నాతో xxx ఉంది.',\r\n    kn: 'ನನ್ನೊಂದಿಗೆ xxx ಇದೆ.',\r\n    bn: 'আমার সাথে xxx আছে।',\r\n    id: 'Saya memiliki xxx dengan saya.',\r\n    'zh-CN': '我有xxx。',\r\n    'zh-HK': '我有xxx。',\r\n    ja: '私はxxxを持っています。',\r\n    ko: '나는 나와 xxx를 가지고있다.',\r\n  },\r\n  RC_screenSizeIntro: {\r\n    'en-US':\r\n      \"We will measure the size of this screen. Use the pull-down menu to choose something handy. You can use any common USB connector (including the one providing power to your computer) or a credit card (or any card of the same size). Place your object on the screen and move the slider to adjust the image to match your object's size. When they match, press RETURN (or click OK) to proceed.\",\r\n    de: 'Wir werden die Größe dieses Bildschirms messen. Verwenden Sie das Pulldown-Menü, um etwas Handiges auszuwählen. Sie können einen gängigen USB -Anschluss (einschließlich derjenigen verwenden, die Ihren Computer anbietet) oder einer Kreditkarte (oder einer beliebigen Karte derselben Größe). Platzieren Sie Ihr Objekt auf den Bildschirm und verschieben Sie den Schieberegler, um das Bild an die Größe Ihres Objekts anzupassen. Wenn sie übereinstimmen, drücken Sie die Rückgabe (oder klicken Sie auf OK), um fortzufahren.',\r\n    fr: \"Nous mesurerons la taille de cet écran. Utilisez le menu déroulant pour choisir quelque chose de pratique. Vous pouvez utiliser n'importe quel connecteur USB commun (y compris celui qui fournit une alimentation à votre ordinateur) ou une carte de crédit (ou toute carte de la même taille). Placez votre objet sur l'écran et déplacez le curseur pour ajuster l'image pour correspondre à la taille de votre objet. Lorsqu'ils correspondent, appuyez sur retour (ou cliquez sur OK) pour continuer.\",\r\n    es: 'Mediremos el tamaño de esta pantalla. Use el menú desplegable para elegir algo útil. Puede usar cualquier conector USB común (incluido el que proporciona energía a su computadora) o una tarjeta de crédito (o cualquier tarjeta del mismo tamaño). Coloque su objeto en la pantalla y mueva el control deslizante para ajustar la imagen para que coincida con el tamaño de su objeto. Cuando coincidan, presione Return (o haga clic en Aceptar) para continuar.',\r\n    pt: 'Mediremos o tamanho desta tela. Use o menu suspenso para escolher algo útil. Você pode usar qualquer conector USB comum (incluindo o que fornece energia ao seu computador) ou um cartão de crédito (ou qualquer cartão do mesmo tamanho). Coloque seu objeto na tela e mova o controle deslizante para ajustar a imagem para corresponder ao tamanho do seu objeto. Quando eles corresponderem, pressione Return (ou clique em OK) para prosseguir.',\r\n    it: \"Misurare le dimensioni di questa schermata. Usa il menu a discesa per scegliere qualcosa di utile. È possibile utilizzare qualsiasi connettore USB comune (incluso quello che fornisce energia al tuo computer) o una carta di credito (o qualsiasi carta della stessa dimensione). Posiziona il tuo oggetto sullo schermo e sposta il cursore per regolare l'immagine in modo che corrisponda alle dimensioni del tuo oggetto. Quando corrispondono, premere return (o fare clic su OK) per procedere.\",\r\n    ro: 'Vom măsura dimensiunea acestui ecran. Utilizați meniul derulant pentru a alege ceva la îndemână. Puteți utiliza orice conector USB comun (inclusiv cel care furnizează energie computerului dvs.) sau un card de credit (sau orice card de aceeași dimensiune). Plasați obiectul pe ecran și mutați glisorul pentru a regla imaginea pentru a se potrivi cu dimensiunea obiectului. Când se potrivesc, apăsați Return (sau faceți clic pe OK) pentru a continua.',\r\n    pl: 'Zmienimy rozmiar tego ekranu. Użyj menu rozwiniętego, aby wybrać coś przydatnego. Możesz użyć dowolnego wspólnego złącza USB (w tym jednego dostarczającego zasilania dla komputera) lub karty kredytowej (lub dowolnej karty tego samego rozmiaru). Umieść obiekt na ekranie i przesuń suwak, aby dostosować obraz, aby pasował do rozmiaru obiektu. Po dopasowaniu naciśnij Return (lub kliknij OK), aby kontynuować.',\r\n    ru: 'Мы измеряем размер этого экрана. Используйте выпадающее меню, чтобы выбрать что-то удобное. Вы можете использовать любой общий USB -разъем (включая тот, который обеспечивает питание для вашего компьютера) или кредитную карту (или любую карту того же размера). Поместите свой объект на экран и переместите слайдер, чтобы настроить изображение, чтобы соответствовать размеру вашего объекта. Когда они соответствуют, нажмите «Возврат» (или нажмите ОК), чтобы продолжить.',\r\n    hy: 'Մենք չափելու ենք այս էկրանի չափը: Օգտագործեք ներքեւի ընտրացանկը `ինչ-որ բան ընտրելու համար: Կարող եք օգտագործել ցանկացած ընդհանուր USB միակցիչ (ներառյալ ձեր համակարգչին ուժ ունեցող մեկ ապահովող) կամ վարկային քարտ (կամ նույն չափի ցանկացած քարտ): Տեղադրեք ձեր օբյեկտը էկրանին եւ տեղափոխեք սահնակը `պատկերը կարգավորելու համար` ձեր օբյեկտի չափը համապատասխանելու համար: Երբ նրանք համընկնում են, սեղմեք RETURT (կամ կտտացրեք OK), շարունակելու համար:',\r\n    fi: 'Mittaamme tämän näytön koon. Valitse jotain kätevää. Voit käyttää mitä tahansa yleistä USB -liitintä (mukaan lukien tietokoneellesi virran) tai luottokortti (tai mikä tahansa samankokoinen kortti). Aseta objekti näytölle ja siirrä liukusäädintä kuvan säätämiseksi objektin kokoa. Kun ne vastaavat, jatka paina (tai napsauta OK).',\r\n    ka: 'ჩვენ გავზომავთ ამ ეკრანის ზომას. გამოიყენეთ მენიუ, რომ აირჩიოთ რაიმე მოსახერხებელი. თქვენ შეგიძლიათ გამოიყენოთ ნებისმიერი საერთო USB კონექტორი (მათ შორის, რომელიც თქვენს კომპიუტერში ენერგიას უზრუნველყოფს) ან საკრედიტო ბარათით (ან იმავე ზომის ნებისმიერი ბარათი). განათავსეთ თქვენი ობიექტი ეკრანზე და გადაიტანეთ სლაიდერი, რომ შეცვალოთ სურათი, რომ შეესაბამებოდეს თქვენი ობიექტის ზომას. როდესაც ისინი ემთხვევა, დააჭირეთ დაბრუნებას (ან დააჭირეთ ღილაკს OK), რომ გააგრძელოთ.',\r\n    he: 'נמדוד את גודל המסך הזה. השתמש בתפריט הנפתח כדי לבחור משהו שימושי. אתה יכול להשתמש בכל מחבר USB נפוץ (כולל זה המספק כוח למחשב שלך) או בכרטיס אשראי (או כל כרטיס באותו גודל). הנח את האובייקט שלך על המסך והזז את המחוון כדי להתאים את התמונה כך שתתאים לגודל האובייקט שלך. כאשר הם תואמים, לחץ על החזרה (או לחץ על אישור) כדי להמשיך.',\r\n    ar: 'سنقوم بقياس حجم هذه الشاشة. استخدم القائمة المنسدلة لاختيار شيء مفيد. يمكنك استخدام أي موصل USB شائع (بما في ذلك الموصل الذي يوفر الطاقة لجهاز الكمبيوتر الخاص بك) أو بطاقة ائتمان (أو أي بطاقة بنفس الحجم). ضع كائنك على الشاشة وحرك شريط التمرير لضبط الصورة لمطابقة حجم كائنك. عندما تتطابق ، اضغط على Return (أو انقر فوق موافق) للمتابعة.',\r\n    ur: 'ہم اس اسکرین کے سائز کی پیمائش کریں گے۔ آسان چیز کا انتخاب کرنے کے لئے پل ڈاؤن مینو کا استعمال کریں۔ آپ کسی بھی عام USB کنیکٹر (بشمول اپنے کمپیوٹر کو بجلی فراہم کرنے والی) یا کریڈٹ کارڈ (یا ایک ہی سائز کا کوئی کارڈ) استعمال کرسکتے ہیں۔ اپنے آبجیکٹ کو اسکرین پر رکھیں اور اپنے آبجیکٹ کے سائز سے ملنے کے لئے تصویر کو ایڈجسٹ کرنے کے لئے سلائیڈر کو منتقل کریں۔ جب وہ میچ کرتے ہیں تو ، آگے بڑھنے کے لئے ریٹرن دبائیں (یا ٹھیک ہے پر کلک کریں)۔',\r\n    hi: 'हम इस स्क्रीन के आकार को मापेंगे। कुछ आसान चुनने के लिए पुल-डाउन मेनू का उपयोग करें। आप किसी भी सामान्य USB कनेक्टर (आपके कंप्यूटर को पावर प्रदान करने वाले) या क्रेडिट कार्ड (या उसी आकार के किसी भी कार्ड) का उपयोग कर सकते हैं। अपनी ऑब्जेक्ट को स्क्रीन पर रखें और अपनी ऑब्जेक्ट के आकार से मेल खाने के लिए छवि को समायोजित करने के लिए स्लाइडर को स्थानांतरित करें। जब वे मैच करते हैं, तो आगे बढ़ने के लिए रिटर्न (या ओके पर क्लिक करें) दबाएं।',\r\n    ta: 'இந்த திரையின் அளவை அளவிடுவோம். எளிமையான ஒன்றைத் தேர்வுசெய்ய புல்-டவுன் மெனுவைப் பயன்படுத்தவும். நீங்கள் எந்தவொரு பொதுவான யூ.எஸ்.பி இணைப்பாளரையும் (உங்கள் கணினிக்கு மின்சாரம் வழங்கும் ஒன்று உட்பட) அல்லது கிரெடிட் கார்டு (அல்லது அதே அளவிலான எந்த அட்டையும்) பயன்படுத்தலாம். உங்கள் பொருளை திரையில் வைக்கவும், உங்கள் பொருளின் அளவைப் பொருத்த படத்தை சரிசெய்ய ஸ்லைடரை நகர்த்தவும். அவை பொருந்தும்போது, ​​தொடர திரும்பவும் (சரி என்பதைக் கிளிக் செய்யவும்) அழுத்தவும்.',\r\n    ml: 'ഈ സ്ക്രീനിന്റെ വലുപ്പം ഞങ്ങൾ അളക്കും. ഹാൻഡി തിരഞ്ഞെടുക്കാൻ പുൾ-ഡ menu ൺ മെനു ഉപയോഗിക്കുക. നിങ്ങൾക്ക് ഏതെങ്കിലും സാധാരണ യുഎസ്ബി കണക്റ്റർ (നിങ്ങളുടെ കമ്പ്യൂട്ടറിന് നൽകുന്ന ഒന്ന് ഉൾപ്പെടെ) അല്ലെങ്കിൽ ഒരു ക്രെഡിറ്റ് കാർഡ് (അല്ലെങ്കിൽ ഒരേ വലുപ്പത്തിലുള്ള ഏതെങ്കിലും കാർഡ്) ഉപയോഗിക്കാം. നിങ്ങളുടെ ഒബ്ജക്റ്റ് സ്ക്രീനിൽ വയ്ക്കുക നിങ്ങളുടെ ഒബ്ജക്റ്റിന്റെ വലുപ്പവുമായി പൊരുത്തപ്പെടുന്നതിന് ഇമേജ് ക്രമീകരിക്കുന്നതിന് സ്ലൈഡർ നീക്കുക. തുടരുമ്പോൾ, തുടരുന്നതിന് റിട്ടേൺ അമർത്തുക (അല്ലെങ്കിൽ ശരി ക്ലിക്കുചെയ്യുക).',\r\n    te: 'మేము ఈ స్క్రీన్ పరిమాణాన్ని కొలుస్తాము. సులభమైనదాన్ని ఎంచుకోవడానికి పుల్-డౌన్ మెనుని ఉపయోగించండి. మీరు ఏదైనా సాధారణ USB కనెక్టర్‌ను (మీ కంప్యూటర్‌కు శక్తితో అందించే వాటితో సహా) లేదా క్రెడిట్ కార్డు (లేదా ఒకే పరిమాణంలోని ఏదైనా కార్డు) ఉపయోగించవచ్చు. మీ వస్తువు యొక్క పరిమాణానికి సరిపోయేలా మీ వస్తువును తెరపై ఉంచండి మరియు చిత్రాన్ని సర్దుబాటు చేయడానికి స్లైడర్‌ను తరలించండి. అవి సరిపోలినప్పుడు, కొనసాగడానికి రిటర్న్ నొక్కండి (లేదా సరే క్లిక్ చేయండి).',\r\n    kn: 'ನಾವು ಈ ಪರದೆಯ ಗಾತ್ರವನ್ನು ಅಳೆಯುತ್ತೇವೆ. ಸೂಕ್ತವಾದದ್ದನ್ನು ಆಯ್ಕೆ ಮಾಡಲು ಪುಲ್-ಡೌನ್ ಮೆನು ಬಳಸಿ. ನೀವು ಯಾವುದೇ ಸಾಮಾನ್ಯ ಯುಎಸ್‌ಬಿ ಕನೆಕ್ಟರ್ (ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್‌ಗೆ ಶಕ್ತಿಯನ್ನು ಒದಗಿಸುವ ಒಂದು ಸೇರಿದಂತೆ) ಅಥವಾ ಕ್ರೆಡಿಟ್ ಕಾರ್ಡ್ (ಅಥವಾ ಒಂದೇ ಗಾತ್ರದ ಯಾವುದೇ ಕಾರ್ಡ್) ಅನ್ನು ಬಳಸಬಹುದು. ನಿಮ್ಮ ವಸ್ತುವಿನ ಗಾತ್ರವನ್ನು ಹೊಂದಿಸಲು ಚಿತ್ರವನ್ನು ಹೊಂದಿಸಲು ನಿಮ್ಮ ವಸ್ತುವನ್ನು ಪರದೆಯ ಮೇಲೆ ಇರಿಸಿ ಮತ್ತು ಸ್ಲೈಡರ್ ಅನ್ನು ಸರಿಸಿ. ಅವರು ಹೊಂದಿಕೆಯಾದಾಗ, ಮುಂದುವರಿಯಲು ರಿಟರ್ನ್ ಒತ್ತಿರಿ (ಅಥವಾ ಸರಿ ಕ್ಲಿಕ್ ಮಾಡಿ).',\r\n    bn: 'আমরা এই পর্দার আকার পরিমাপ করব। সহজ কিছু চয়ন করতে পুল-ডাউন মেনু ব্যবহার করুন। আপনি যে কোনও সাধারণ ইউএসবি সংযোগকারী (আপনার কম্পিউটারে পাওয়ার সরবরাহকারী একটি সহ) বা ক্রেডিট কার্ড (বা একই আকারের কোনও কার্ড) ব্যবহার করতে পারেন। আপনার অবজেক্টটি স্ক্রিনে রাখুন এবং আপনার বস্তুর আকারের সাথে মেলে চিত্রটি সামঞ্জস্য করতে স্লাইডারটি সরান। যখন তারা মেলে, এগিয়ে যেতে রিটার্ন (বা ওকে ক্লিক করুন) টিপুন।',\r\n    id: 'Kami akan mengukur ukuran layar ini. Gunakan menu pull-down untuk memilih sesuatu yang berguna. Anda dapat menggunakan konektor USB umum apa pun (termasuk yang memberikan daya ke komputer Anda) atau kartu kredit (atau kartu apa pun dengan ukuran yang sama). Tempatkan objek Anda di layar dan pindahkan slider untuk menyesuaikan gambar agar sesuai dengan ukuran objek Anda. Saat mereka cocok, tekan kembali (atau klik OK) untuk melanjutkan.',\r\n    'zh-CN':\r\n      '我们将测量此屏幕的大小。使用下拉菜单选择方便的东西。您可以使用任何常见的USB连接器（包括为计算机提供电源的连接器）或信用卡（或任何相同尺寸的卡）。将对象放在屏幕上，然后移动滑块以调整图像以匹配对象的大小。匹配时，按返回（或单击“确定”）继续进行。',\r\n    'zh-HK':\r\n      '我們將測量此屏幕的大小。使用下拉菜單選擇方便的東西。您可以使用任何常見的USB連接器（包括為計算機提供電源的連接器）或信用卡（或任何相同尺寸的卡）。將對象放在屏幕上，然後移動滑塊以調整圖像以匹配對象的大小。匹配時，按返回（或單擊“確定”）繼續進行。',\r\n    ja: 'この画面のサイズを測定します。プルダウンメニューを使用して、便利なものを選択します。一般的なUSBコネクタ（コンピューターに電力を提供するものを含む）またはクレジットカード（または同じサイズのカード）を使用できます。オブジェクトを画面に配置し、スライダーを移動して、オブジェクトのサイズに合わせて画像を調整します。一致したら、return（またはクリックOK）を押して続行します。',\r\n    ko: '이 화면의 크기를 측정합니다. 풀다운 메뉴를 사용하여 편리한 것을 선택하십시오. 공통 USB 커넥터 (컴퓨터에 전원을 공급하는 것) 또는 신용 카드 (또는 동일한 크기의 카드)를 사용할 수 있습니다. 화면에 객체를 놓고 슬라이더를 이동하여 객체의 크기에 맞게 이미지를 조정하십시오. 그들이 일치하면 반환 (또는 확인을 클릭)을 눌러 진행하십시오.',\r\n  },\r\n  RC_screenSizeTitle: {\r\n    'en-US': 'Screen Size Calibration',\r\n    de: 'Kalibrierung der Bildschirmgröße',\r\n    fr: \"Étalonnage de la taille de l'écran\",\r\n    es: 'Calibración del tamaño de la pantalla',\r\n    pt: 'Calibração do tamanho da tela',\r\n    it: 'Calibrazione delle dimensioni dello schermo',\r\n    ro: 'Calibrarea dimensiunii ecranului',\r\n    pl: 'Kalibracja rozmiaru ekranu',\r\n    ru: 'Калибровка размера экрана',\r\n    hy: 'Էկրանի չափի տրամաչափում',\r\n    fi: 'Näytön koon kalibrointi',\r\n    ka: 'ეკრანის ზომის კალიბრაცია',\r\n    he: 'כיול בגודל המסך',\r\n    ar: 'معايرة حجم الشاشة',\r\n    ur: 'اسکرین سائز انشانکن',\r\n    hi: 'स्क्रीन आकार अंशांकन',\r\n    ta: 'திரை அளவு அளவுத்திருத்தம்',\r\n    ml: 'സ്ക്രീൻ വലുപ്പം കാലിബ്രേഷൻ',\r\n    te: 'స్క్రీన్ సైజు క్రమాంకనం',\r\n    kn: 'ಪರದೆಯ ಗಾತ್ರ ಮಾಪನಾಂಕ ನಿರ್ಣಯ',\r\n    bn: 'পর্দার আকারের ক্রমাঙ্কন',\r\n    id: 'Kalibrasi ukuran layar',\r\n    'zh-CN': '屏幕尺寸校准',\r\n    'zh-HK': '屏幕尺寸校準',\r\n    ja: '画面サイズのキャリブレーション',\r\n    ko: '화면 크기 교정',\r\n  },\r\n  RC_screenSizeUSBA: {\r\n    'en-US': 'a USB Type A connector',\r\n    de: 'Ein USB -Typ A Connector',\r\n    fr: 'Un connecteur USB Type A',\r\n    es: 'un conector USB tipo A',\r\n    pt: 'Um conector USB tipo A',\r\n    it: 'Un connettore di tipo A USB',\r\n    ro: 'Un conector USB de tip A',\r\n    pl: 'Złącze USB typu A',\r\n    ru: 'Разъем типа USB A',\r\n    hy: 'USB ա',\r\n    fi: 'USB -tyypin A -liitin',\r\n    ka: 'USB ტიპის A კონექტორი',\r\n    he: 'מחבר מסוג USB מסוג A',\r\n    ar: 'موصل USB من النوع A',\r\n    ur: 'USB ایک کنیکٹر ٹائپ کریں',\r\n    hi: 'यूएसबी टाइप ए कनेक्टर',\r\n    ta: 'ஒரு யூ.எஸ்.பி வகை ஒரு இணைப்பான்',\r\n    ml: 'ഒരു യുഎസ്ബി തരം ഒരു കണക്റ്റർ',\r\n    te: 'USB టైప్ ఎ కనెక్టర్',\r\n    kn: 'ಯುಎಸ್ಬಿ ಟೈಪ್ ಎ ಕನೆಕ್ಟರ್',\r\n    bn: 'একটি ইউএসবি টাইপ এ সংযোগকারী',\r\n    id: 'Konektor Tipe A USB',\r\n    'zh-CN': 'USB A 型接口',\r\n    'zh-HK': 'USB A 型接口',\r\n    ja: 'USB コネクタ　タイプA',\r\n    ko: 'USB 유형 A 커넥터',\r\n  },\r\n  RC_screenSizeUSBC: {\r\n    'en-US': 'a USB Type C connector',\r\n    de: 'Ein USB -Typ -C -Anschluss',\r\n    fr: 'Un connecteur USB de type C',\r\n    es: 'un conector USB tipo C',\r\n    pt: 'Um conector USB tipo C',\r\n    it: 'Un connettore di tipo C USB',\r\n    ro: 'Un conector USB de tip C',\r\n    pl: 'Złącze USB typu C',\r\n    ru: 'Разъем типа USB C',\r\n    hy: 'USB տիպի միակցիչ գ',\r\n    fi: 'USB -tyypin C liitin',\r\n    ka: 'USB ტიპის C კონექტორი',\r\n    he: 'מחבר USB מסוג C',\r\n    ar: 'موصل USB من النوع C',\r\n    ur: 'USB ٹائپ سی کنیکٹر',\r\n    hi: 'यूएसबी टाइप सी कनेक्टर',\r\n    ta: 'ஒரு யூ.எஸ்.பி வகை சி இணைப்பு',\r\n    ml: 'ഒരു യുഎസ്ബി തരം സി കണക്റ്റർ',\r\n    te: 'USB రకం C కనెక్టర్',\r\n    kn: 'ಯುಎಸ್ಬಿ ಟೈಪ್ ಸಿ ಕನೆಕ್ಟರ್',\r\n    bn: 'একটি ইউএসবি টাইপ সি সংযোগকারী',\r\n    id: 'Konektor USB Tipe C',\r\n    'zh-CN': 'USB C 型接口',\r\n    'zh-HK': 'USB C 型接口',\r\n    ja: 'USB コネクタ　タイプC',\r\n    ko: 'USB 유형 C 커넥터',\r\n  },\r\n  RC_selectMicrophone: {\r\n    'en-US':\r\n      'Preparing to calibrate your loudspeaker, if you have a smartphone handy, do you see its make and model in the list below? If so, select it. Otherwise, select \"No match\". Then click Proceed.\\n',\r\n    de: 'Sehen Sie, ob Sie Ihr Lautsprecher kalibrieren, wenn Sie ein Smartphone griffbereit haben, und sehen Sie es in der folgenden Liste aus? Wenn ja, wählen Sie es aus. Ansonsten wählen Sie \"No Match\". Klicken Sie dann auf fortfahren.\\n',\r\n    fr: 'Vous préparez à calibrer votre haut-parleur, si vous avez un smartphone à portée de main, voyez-vous sa marque et son modèle dans la liste ci-dessous? Si c\\'est le cas, sélectionnez-le. Sinon, sélectionnez \"Pas de correspondance\". Puis cliquez sur Procéder.\\n',\r\n    es: 'Preparándose para calibrar su altavoz, si tiene un teléfono inteligente a mano, ¿ve su marca y modelo en la lista a continuación? Si es así, seleccione. De lo contrario, seleccione \"Sin coincidencia\". Luego haga clic en continuar.\\n',\r\n    pt: 'Preparando -se para calibrar seu alto -falante, se você tiver um smartphone à mão, você vê a marca e o modelo na lista abaixo? Nesse caso, selecione -o. Caso contrário, selecione \"sem correspondência\". Em seguida, clique em prosseguir.\\n',\r\n    it: 'Preparando a calibrare il tuo altoparlante, se hai uno smartphone a portata di mano, vedi la sua marca e il modello nell\\'elenco qui sotto? In tal caso, selezionalo. Altrimenti, selezionare \"Nessuna corrispondenza\". Quindi fare clic su Procedi.\\n',\r\n    ro: 'Pregătiți -vă să calibrați difuzorul dvs., dacă aveți un smartphone la îndemână, vedeți marca și modelul său în lista de mai jos? Dacă da, selectați -l. În caz contrar, selectați „Fără potrivire”. Apoi faceți clic pe Continuați.\\n',\r\n    pl: 'Przygotowujesz się do kalibracji głośnika, jeśli masz pod ręką smartfon, czy widzisz jego markę i model na poniższej liście? Jeśli tak, wybierz to. W przeciwnym razie wybierz „Brak dopasowania”. Następnie kliknij kontynuuj.\\n',\r\n    ru: 'Подготовка к калиброванию вашего громкоговорителя, если у вас есть под рукой смартфон, вы видите его марку и модель в списке ниже? Если так, выберите это. В противном случае выберите «Нет совпадения». Затем нажмите «Продолжить».\\n',\r\n    hy: 'Պատրաստվում եք տրամաչափել ձեր բարձրախոսը, եթե ունեք սմարթֆոն, որն ունի սմարթֆոն, տեսեք դրա պատրաստումը եւ մոդելը ներքեւում: Եթե ​​այդպես է, ընտրեք այն: Հակառակ դեպքում ընտրեք «Ոչ մի համընկնում»: Այնուհետեւ կտտացրեք\\n',\r\n    fi: 'Valmistautuminen kaiuttimesi kalibrointiin, jos sinulla on kätevä älypuhelin, näetkö sen make ja mallin alla olevassa luettelossa? Jos näin on, valitse se. Muussa tapauksessa valitse \"Ei ottelua\". Napsauta sitten Jatka.\\n',\r\n    ka: 'ემზადებით თქვენი დინამიკის დაკალიბრებისთვის, თუ სმარტფონი გაქვთ მოსახერხებელი, ხედავთ თუ არა მის დამზადებას და მოდელს ქვემოთ მოცემულ სიაში? თუ ასეა, შეარჩიეთ იგი. წინააღმდეგ შემთხვევაში, აირჩიეთ \"No Match\". შემდეგ დააჭირეთ ღილაკს.\\n',\r\n    he: 'מתכוננים לכיול הרמקול שלכם, אם יש לכם סמארטפון שימושי, האם אתם רואים את הייצור והדגם שלו ברשימה למטה? אם כן, בחר אותו. אחרת, בחר \"ללא התאמה\". ואז לחץ על המשך.\\n',\r\n    ar: 'الاستعداد لمعايرة مكبر الصوت الخاص بك ، إذا كان لديك هاتف ذكي في متناول يدي ، هل ترى طرازه ونموذجه في القائمة أدناه؟ إذا كان الأمر كذلك ، حدده. خلاف ذلك ، حدد \"لا تطابق\". ثم انقر فوق متابعة.\\n',\r\n    ur: 'اپنے لاؤڈ اسپیکر کو کیلیبریٹ کرنے کی تیاری ، اگر آپ کے پاس اسمارٹ فون آسان ہے تو ، کیا آپ ذیل کی فہرست میں اس کا میک اور ماڈل دیکھتے ہیں؟ اگر ایسا ہے تو ، اسے منتخب کریں۔ بصورت دیگر ، \"کوئی میچ نہیں\" منتخب کریں۔ پھر آگے بڑھیں پر کلک کریں۔\\n',\r\n    hi: 'अपने लाउडस्पीकर को जांचने की तैयारी करना, यदि आपके पास स्मार्टफोन है, तो क्या आप नीचे दी गई सूची में इसका मेक और मॉडल देखते हैं? यदि हां, तो इसे चुनें। अन्यथा, \"नो मैच\" चुनें। फिर आगे बढ़ने पर क्लिक करें।\\n',\r\n    ta: 'உங்கள் ஒலிபெருக்கியை அளவீடு செய்யத் தயாராகி, உங்களிடம் ஸ்மார்ட்போன் எளிது இருந்தால், அதன் தயாரிப்பையும் மாதிரியையும் கீழே உள்ள பட்டியலில் பார்க்கிறீர்களா? அப்படியானால், அதைத் தேர்ந்தெடுக்கவும். இல்லையெனில், \"பொருந்தவில்லை\" என்பதைத் தேர்ந்தெடுக்கவும். பின்னர் தொடரவும் என்பதைக் கிளிக் செய்க.\\n',\r\n    ml: 'നിങ്ങളുടെ ഉച്ചഭാഷിണി, നിങ്ങൾക്ക് ഒരു സ്മാർട്ട്ഫോൺ ഹാൻഡി ഉണ്ടെങ്കിൽ, ചുവടെയുള്ള പട്ടികയിൽ അതിന്റെ സൃഷ്ടിയും മോഡലും നിങ്ങൾ കാണുന്നുണ്ടോ? അങ്ങനെയാണെങ്കിൽ, അത് തിരഞ്ഞെടുക്കുക. അല്ലെങ്കിൽ, \"പൊരുത്തമില്ല\" തിരഞ്ഞെടുക്കുക. തുടർന്ന് തുടരുക ക്ലിക്കുചെയ്യുക.\\n',\r\n    te: 'మీ లౌడ్‌స్పీకర్‌ను క్రమాంకనం చేయడానికి సిద్ధమవుతోంది, మీకు స్మార్ట్‌ఫోన్ ఉపయోగకరంగా ఉంటే, ఈ క్రింది జాబితాలో దాని మేక్ మరియు మోడల్‌ను మీరు చూస్తున్నారా? అలా అయితే, దాన్ని ఎంచుకోండి. లేకపోతే, \"మ్యాచ్ లేదు\" ఎంచుకోండి. అప్పుడు కొనసాగించండి క్లిక్ చేయండి.\\n',\r\n    kn: 'ನಿಮ್ಮ ಧ್ವನಿವರ್ಧಕವನ್ನು ಮಾಪನಾಂಕ ಮಾಡಲು ಸಿದ್ಧತೆ, ನೀವು ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಹ್ಯಾಂಡಿ ಹೊಂದಿದ್ದರೆ, ಕೆಳಗಿನ ಪಟ್ಟಿಯಲ್ಲಿ ಅದರ ತಯಾರಿಕೆ ಮತ್ತು ಮಾದರಿಯನ್ನು ನೀವು ನೋಡುತ್ತೀರಾ? ಹಾಗಿದ್ದಲ್ಲಿ, ಅದನ್ನು ಆಯ್ಕೆಮಾಡಿ. ಇಲ್ಲದಿದ್ದರೆ, \"ಹೊಂದಾಣಿಕೆ ಇಲ್ಲ\" ಆಯ್ಕೆಮಾಡಿ. ನಂತರ ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.\\n',\r\n    bn: 'আপনার লাউডস্পিকারটি ক্যালিব্রেট করার জন্য প্রস্তুতি নিচ্ছেন, যদি আপনার স্মার্টফোনটি হ্যান্ডি থাকে তবে আপনি কি নীচের তালিকায় এর মেক এবং মডেলটি দেখতে পাচ্ছেন? যদি তা হয় তবে এটি নির্বাচন করুন। অন্যথায়, \"কোনও মিল নেই\" নির্বাচন করুন। তারপরে এগিয়ে ক্লিক করুন।\\n',\r\n    id: 'Mempersiapkan untuk mengkalibrasi pengeras suara Anda, jika Anda memiliki smartphone yang berguna, apakah Anda melihat membuat dan model dalam daftar di bawah ini? Jika demikian, pilihnya. Jika tidak, pilih \"No Match\". Lalu klik Lanjutkan.\\n',\r\n    'zh-CN':\r\n      '准备校准扬声器，如果您有方便的智能手机，您是否在下面的列表中看到了它的品牌和型号？如果是这样，请选择它。否则，选择“无匹配”。然后单击继续。\\n',\r\n    'zh-HK':\r\n      '準備校準揚聲器，如果您有方便的智能手機，您是否在下面的列表中看到了它的品牌和型號？如果是這樣，請選擇它。否則，選擇“無匹配”。然後單擊繼續。\\n',\r\n    ja: 'スピーカーを校正する準備をしてください。スマートフォンが手元にある場合は、以下のリストにメーカーとモデルが表示されますか？もしそうなら、それを選択してください。それ以外の場合は、「一致なし」を選択します。 [続行]をクリックします。\\n',\r\n    ko: '라우드 스피커를 보정하기 위해 준비하면 스마트 폰이 편리한 경우 아래 목록에 제조사와 모델이 표시됩니까? 그렇다면 선택하십시오. 그렇지 않으면 \"없음 일치\"를 선택하십시오. 그런 다음 진행을 클릭하십시오.\\n',\r\n  },\r\n  RC_selectMicrophoneIncludeUSB: {\r\n    'en-US':\r\n      'Preparing to calibrate your loudspeaker, if you have a smartphone (or USB microphone) handy, do you see its make and model in the list below? If so, select it. Otherwise, select \"No match\". Then click Proceed.\\n',\r\n    de: 'Bereiten Sie sich darauf vor, Ihren Lautsprecher zu kalibrieren. Wenn Sie ein Smartphone (oder USB -Mikrofon) haben, sehen Sie es in der unten stehenden Liste, wenn Sie erledigt sind? Wenn ja, wählen Sie es aus. Ansonsten wählen Sie \"No Match\". Klicken Sie dann auf fortfahren.\\n',\r\n    fr: 'Préparer à calibrer votre haut-parleur, si vous avez un smartphone (ou un microphone USB) à portée de main, voyez-vous sa marque et son modèle dans la liste ci-dessous? Si c\\'est le cas, sélectionnez-le. Sinon, sélectionnez \"Pas de correspondance\". Puis cliquez sur Procéder.\\n',\r\n    es: 'Preparándose para calibrar su altavoz, si tiene un teléfono inteligente (o micrófono USB) a mano, ¿ve su marca y modelo en la lista a continuación? Si es así, seleccione. De lo contrario, seleccione \"Sin coincidencia\". Luego haga clic en continuar.\\n',\r\n    pt: 'Preparando -se para calibrar seu alto -falante, se você possui um smartphone (ou microfone USB), você vê sua marca e modelo na lista abaixo? Nesse caso, selecione -o. Caso contrário, selecione \"sem correspondência\". Em seguida, clique em prosseguir.\\n',\r\n    it: 'Preparando a calibrare il tuo altoparlante, se hai uno smartphone (o un microfono USB) a portata di mano, vedi la sua marca e il modello nell\\'elenco qui sotto? In tal caso, selezionalo. Altrimenti, selezionare \"Nessuna corrispondenza\". Quindi fare clic su Procedi.\\n',\r\n    ro: 'Pregătiți -vă să vă calibrați difuzorul, dacă aveți la îndemână un smartphone (sau microfon USB), vedeți make -ul și modelul său în lista de mai jos? Dacă da, selectați -l. În caz contrar, selectați „Fără potrivire”. Apoi faceți clic pe Continuați.\\n',\r\n    pl: 'Przygotowując się do kalibracji głośnika, jeśli masz pod ręką smartfon (lub mikrofon USB), czy widać jego markę i model na poniższej liście? Jeśli tak, wybierz to. W przeciwnym razie wybierz „Brak dopasowania”. Następnie kliknij kontynuuj.\\n',\r\n    ru: 'Подготовка к калиброванию вашего громкоговорителя, если у вас есть смартфон (или USB -микрофон), вы видите его создание и модель в списке ниже? Если так, выберите это. В противном случае выберите «Нет совпадения». Затем нажмите «Продолжить».\\n',\r\n    hy: 'Պատրաստվում եք տրամաչափել ձեր բարձրախոսը, եթե ունեք սմարթֆոն (կամ USB միկրոֆոն) հարմար, տեսնում եք դրա պատրաստումը եւ մոդելը ներքեւում նշված ցուցակում: Եթե ​​այդպես է, ընտրեք այն: Հակառակ դեպքում ընտրեք «Ոչ մի համընկնում»: Այնուհետեւ կտտացրեք\\n',\r\n    fi: 'Valmistautuminen kaiuttimesi kalibrointiin, jos sinulla on kätevä älypuhelin (tai USB -mikrofoni), näetkö sen make ja mallin alla olevassa luettelossa? Jos näin on, valitse se. Muussa tapauksessa valitse \"Ei ottelua\". Napsauta sitten Jatka.\\n',\r\n    ka: 'თქვენი დინამიკის კალიბრაციისთვის ემზადებით, თუ თქვენ გაქვთ სმარტფონი (ან USB მიკროფონი) მოსახერხებელი, ხედავთ თუ არა მის დამზადებას და მოდელს ქვემოთ მოცემულ სიაში? თუ ასეა, შეარჩიეთ იგი. წინააღმდეგ შემთხვევაში, აირჩიეთ \"No Match\". შემდეგ დააჭირეთ ღილაკს.\\n',\r\n    he: 'מתכונן לכיול הרמקול שלך, אם יש לך סמארטפון (או מיקרופון USB) שימושי, האם אתה רואה את היוצר והדגם שלו ברשימה למטה? אם כן, בחר אותו. אחרת, בחר \"ללא התאמה\". ואז לחץ על המשך.\\n',\r\n    ar: 'الاستعداد لمعايرة مكبر الصوت الخاص بك ، إذا كان لديك هاتف ذكي (أو ميكروفون USB) في متناول يديك ، هل ترى طرازه ونموذجه في القائمة أدناه؟ إذا كان الأمر كذلك ، حدده. خلاف ذلك ، حدد \"لا تطابق\". ثم انقر فوق متابعة.\\n',\r\n    ur: 'اپنے لاؤڈ اسپیکر کو کیلیبریٹ کرنے کی تیاری ، اگر آپ کے پاس اسمارٹ فون (یا USB مائکروفون) آسان ہے تو ، کیا آپ نیچے کی فہرست میں اس کا میک اور ماڈل دیکھتے ہیں؟ اگر ایسا ہے تو ، اسے منتخب کریں۔ بصورت دیگر ، \"کوئی میچ نہیں\" منتخب کریں۔ پھر آگے بڑھیں پر کلک کریں۔\\n',\r\n    hi: 'अपने लाउडस्पीकर को कैलिब्रेट करने की तैयारी करना, यदि आपके पास एक स्मार्टफोन (या यूएसबी माइक्रोफोन) है, तो क्या आप नीचे दी गई सूची में इसका मेक और मॉडल देखते हैं? यदि हां, तो इसे चुनें। अन्यथा, \"नो मैच\" चुनें। फिर आगे बढ़ने पर क्लिक करें।\\n',\r\n    ta: 'உங்கள் ஒலிபெருக்கியை அளவீடு செய்யத் தயாராகி, உங்களிடம் ஸ்மார்ட்போன் (அல்லது யூ.எஸ்.பி மைக்ரோஃபோன்) இருந்தால், அதன் தயாரிப்பையும் மாதிரியையும் கீழே உள்ள பட்டியலில் பார்க்கிறீர்களா? அப்படியானால், அதைத் தேர்ந்தெடுக்கவும். இல்லையெனில், \"பொருந்தவில்லை\" என்பதைத் தேர்ந்தெடுக்கவும். பின்னர் தொடரவும் என்பதைக் கிளிக் செய்க.\\n',\r\n    ml: 'നിങ്ങളുടെ ഉച്ചഭാഷിണി കാലിബ്രേറ്റ് ചെയ്യുന്നതിന് തയ്യാറെടുക്കുന്നു, നിങ്ങൾക്ക് ഒരു സ്മാർട്ട്ഫോൺ (അല്ലെങ്കിൽ യുഎസ്ബി മൈക്രോഫോൺ) ഹാൻഡി ഉണ്ടെങ്കിൽ, ചുവടെയുള്ള പട്ടികയിൽ അതിന്റെ ആറ്റും മോഡലും നിങ്ങൾ കാണുന്നുണ്ടോ? അങ്ങനെയാണെങ്കിൽ, അത് തിരഞ്ഞെടുക്കുക. അല്ലെങ്കിൽ, \"പൊരുത്തമില്ല\" തിരഞ്ഞെടുക്കുക. തുടർന്ന് തുടരുക ക്ലിക്കുചെയ്യുക.\\n',\r\n    te: 'మీ లౌడ్‌స్పీకర్‌ను క్రమాంకనం చేయడానికి సిద్ధమవుతోంది, మీకు స్మార్ట్‌ఫోన్ (లేదా యుఎస్‌బి మైక్రోఫోన్) సులభమైతే, ఈ క్రింది జాబితాలో దాని మేక్ మరియు మోడల్‌ను మీరు చూస్తున్నారా? అలా అయితే, దాన్ని ఎంచుకోండి. లేకపోతే, \"మ్యాచ్ లేదు\" ఎంచుకోండి. అప్పుడు కొనసాగించండి క్లిక్ చేయండి.\\n',\r\n    kn: 'ನಿಮ್ಮ ಧ್ವನಿವರ್ಧಕವನ್ನು ಮಾಪನಾಂಕ ಮಾಡಲು ಸಿದ್ಧತೆ, ನೀವು ಸ್ಮಾರ್ಟ್‌ಫೋನ್ (ಅಥವಾ ಯುಎಸ್‌ಬಿ ಮೈಕ್ರೊಫೋನ್) ಸೂಕ್ತವಾಗಿದ್ದರೆ, ಕೆಳಗಿನ ಪಟ್ಟಿಯಲ್ಲಿ ಅದರ ತಯಾರಿಕೆ ಮತ್ತು ಮಾದರಿಯನ್ನು ನೀವು ನೋಡುತ್ತೀರಾ? ಹಾಗಿದ್ದಲ್ಲಿ, ಅದನ್ನು ಆಯ್ಕೆಮಾಡಿ. ಇಲ್ಲದಿದ್ದರೆ, \"ಹೊಂದಾಣಿಕೆ ಇಲ್ಲ\" ಆಯ್ಕೆಮಾಡಿ. ನಂತರ ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.\\n',\r\n    bn: 'আপনার লাউডস্পিকারটি ক্যালিব্রেট করার জন্য প্রস্তুতি নিচ্ছেন, যদি আপনার কাছে স্মার্টফোন (বা ইউএসবি মাইক্রোফোন) সহজ থাকে তবে আপনি কি নীচের তালিকায় এর মেক এবং মডেলটি দেখতে পাচ্ছেন? যদি তা হয় তবে এটি নির্বাচন করুন। অন্যথায়, \"কোনও মিল নেই\" নির্বাচন করুন। তারপরে এগিয়ে ক্লিক করুন।\\n',\r\n    id: 'Mempersiapkan untuk mengkalibrasi pengeras suara Anda, jika Anda memiliki smartphone (atau mikrofon USB) yang berguna, apakah Anda melihat pembuatan dan modelnya dalam daftar di bawah ini? Jika demikian, pilihnya. Jika tidak, pilih \"No Match\". Lalu klik Lanjutkan.\\n',\r\n    'zh-CN':\r\n      '准备校准您的扬声器，如果您有智能手机（或USB麦克风）方便，您是否在下面的列表中看到了它的品牌和型号？如果是这样，请选择它。否则，选择“无匹配”。然后单击继续。\\n',\r\n    'zh-HK':\r\n      '準備校準您的揚聲器，如果您有智能手機（或USB麥克風）方便，您是否在下面的列表中看到了它的品牌和型號？如果是這樣，請選擇它。否則，選擇“無匹配”。然後單擊繼續。\\n',\r\n    ja: 'スピーカーを校正する準備をしてください。スマートフォン（またはUSBマイク）が手元にある場合、以下のリストにメーカーとモデルが表示されますか？もしそうなら、それを選択してください。それ以外の場合は、「一致なし」を選択します。 [続行]をクリックします。\\n',\r\n    ko: '스마트 폰 (또는 USB 마이크)이 편리한 경우 라우드 스피커를 보정하기 위해 준비하면 아래 목록에 제조사 및 모델이 표시됩니까? 그렇다면 선택하십시오. 그렇지 않으면 \"없음 일치\"를 선택하십시오. 그런 다음 진행을 클릭하십시오.\\n',\r\n  },\r\n  RC_soundCalibration: {\r\n    'en-US': 'Sound Calibration',\r\n    de: 'Schallkalibrierung',\r\n    fr: 'Étalonnage',\r\n    es: 'Calibración de sonido',\r\n    pt: 'Calibração do som',\r\n    it: 'Calibrazione del suono',\r\n    ro: 'Calibrarea sunetului',\r\n    pl: 'Kalibracja dźwięku',\r\n    ru: 'Калибровка звука',\r\n    hy: 'Ձայնային տրամաչափում',\r\n    fi: 'Äänen kalibrointi',\r\n    ka: 'ხმის კალიბრაცია',\r\n    he: 'כיול קול',\r\n    ar: 'معايرة الصوت',\r\n    ur: 'صوتی انشانکن',\r\n    hi: 'ध्वनि अंशांकन',\r\n    ta: 'ஒலி அளவுத்திருத்தம்',\r\n    ml: 'ശബ്ദ കാലിബ്രേഷൻ',\r\n    te: 'ధ్వని క్రమాంకనం',\r\n    kn: 'ಶಬ್ದ ಮಾಪನಾಂಕ ನಿರ್ಣಯ',\r\n    bn: 'শব্দ ক্রমাঙ্কন',\r\n    id: 'Kalibrasi suara',\r\n    'zh-CN': '声音校准',\r\n    'zh-HK': '聲音校準',\r\n    ja: 'サウンドキャリブレーション',\r\n    ko: '음향 교정',\r\n  },\r\n  RC_usbMicrophoneInstructions: {\r\n    'en-US':\r\n      '1. If a pop up appears, asking for your permission to use the microphone, click \"Allow\".\\n2. Click \"Proceed\" or hit RETURN.',\r\n    de: '1. Wenn ein Pop -up angezeigt wird und um Ihre Erlaubnis zur Verwendung des Mikrofons gebeten wird, klicken Sie auf \"Zulassung\".\\n2. Klicken Sie auf \"Fahren\" oder klicken Sie auf die Rückgabe.',\r\n    fr: '1. Si une fenêtre contextuelle apparaît, demandant votre autorisation d\\'utiliser le microphone, cliquez sur \"Autoriser\".\\n2. Cliquez sur \"Procéder\" ou appuyez sur Retour.',\r\n    es: '1. Si aparece una ventana emergente, pidiendo su permiso para usar el micrófono, haga clic en \"Permitir\".\\n2. Haga clic en \"continuar\" o presione la devolución.',\r\n    pt: '1. Se aparecer um pop -up, solicitando sua permissão para usar o microfone, clique em \"Permitir\".\\n2. Clique em \"prosseguir\" ou acertar o retorno.',\r\n    it: '1. Se appare un pop -up, chiedendo il permesso di utilizzare il microfono, fare clic su \"Consenti\".\\n2. Fare clic su \"Procedere\" o premere restituzione.',\r\n    ro: '1. Dacă apare un pop -up, solicitând permisiunea dvs. de a utiliza microfonul, faceți clic pe „Permite”.\\n2. Faceți clic pe „Continuați” sau apăsați Return.',\r\n    pl: '1. Jeśli pojawi się wyskakujący okienko, prosząc o pozwolenie na użycie mikrofonu, kliknij „Zezwalaj”.\\n2. Kliknij „Przejdź” lub naciśnij Return.',\r\n    ru: '1. Если появляется всплывающее окно, попросив ваше разрешение использовать микрофон, нажмите «Разрешить».\\n2. Нажмите «Продолжить» или нажмите возврат.',\r\n    hy: '1. Եթե հայտնվում է փոփը, խնդրելով ձեր խոսափողը օգտագործելու ձեր թույլտվությունը, կտտացրեք «Թույլ տվեք»:\\n2. Կտտացրեք «Շարունը» կամ հարվածի վերադարձը:',\r\n    fi: '1. Jos ponnahdusikkuna tulee näkyviin, pyydetään lupaa käyttää mikrofonia, napsauta \"Salli\".\\n2. Napsauta \"Jatka\" tai paina palautetta.',\r\n    ka: '1. თუ გამოჩნდება pop up, ითხოვს თქვენი ნებართვას მიკროფონის გამოყენების შესახებ, დააჭირეთ ღილაკს \"დაუშვებელია\".\\n2. დააჭირეთ ღილაკს \"გაგრძელება\" ან დააჭირეთ დაბრუნებას.',\r\n    he: '1. אם מופיע פופ -אפ, מבקש את רשותך להשתמש במיקרופון, לחץ על \"אפשר\".\\n2. לחץ על \"המשך\" או לחץ על החזרה.',\r\n    ar: '1. إذا ظهر أحد المنبثقة ، فطلب إذنك لاستخدام الميكروفون ، انقر فوق \"السماح\".\\n2. انقر فوق \"متابعة\" أو اضغط على العودة.',\r\n    ur: '1. اگر کوئی پاپ اپ ظاہر ہوتا ہے تو ، مائکروفون کو استعمال کرنے کی اجازت طلب کرتے ہیں تو ، \"اجازت دیں\" پر کلک کریں۔\\n2. \"آگے بڑھیں\" پر کلک کریں یا واپسی کو ماریں۔',\r\n    hi: '1. यदि कोई पॉप अप दिखाई देता है, तो माइक्रोफोन का उपयोग करने के लिए आपकी अनुमति के लिए पूछें, \"अनुमति\" पर क्लिक करें।\\n2. \"आगे बढ़ें\" या हिट रिटर्न पर क्लिक करें।',\r\n    ta: '1. ஒரு பாப் அப் தோன்றினால், மைக்ரோஃபோனைப் பயன்படுத்த உங்கள் அனுமதி கேட்கிறது, \"அனுமதி\" என்பதைக் கிளிக் செய்க.\\n2. \"தொடரவும்\" என்பதைக் கிளிக் செய்யவும் அல்லது திரும்பவும்.',\r\n    ml: '1. ഒരു പോപ്പ് അപ്പ് പ്രത്യക്ഷപ്പെടുകയാണെങ്കിൽ, മൈക്രോഫോൺ ഉപയോഗിക്കാൻ നിങ്ങളുടെ അനുമതി ആവശ്യപ്പെടുക, \"അനുവദിക്കുക\" ക്ലിക്കുചെയ്യുക.\\n2. \"തുടരുക\" ക്ലിക്കുചെയ്യുക അല്ലെങ്കിൽ മടങ്ങുക.',\r\n    te: '1. పాప్ అప్ కనిపిస్తే, మైక్రోఫోన్‌ను ఉపయోగించడానికి మీ అనుమతి అడుగుతూ, \"అనుమతించు\" క్లిక్ చేయండి.\\n2. \"కొనసాగండి\" క్లిక్ చేయండి లేదా రిటర్న్ నొక్కండి.',\r\n    kn: '1. ಪಾಪ್ ಅಪ್ ಕಾಣಿಸಿಕೊಂಡರೆ, ಮೈಕ್ರೊಫೋನ್ ಬಳಸಲು ನಿಮ್ಮ ಅನುಮತಿಯನ್ನು ಕೇಳಿದಾಗ, \"ಅನುಮತಿಸಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ.\\n2. \"ಮುಂದುವರಿಯಿರಿ\" ಕ್ಲಿಕ್ ಮಾಡಿ ಅಥವಾ ರಿಟರ್ನ್ ಹಿಟ್.',\r\n    bn: '1. যদি কোনও পপ আপ উপস্থিত হয়, মাইক্রোফোনটি ব্যবহার করার জন্য আপনার অনুমতি চেয়ে জিজ্ঞাসা করুন, \"অনুমতি দিন\" ক্লিক করুন।\\n2. \"এগিয়ে যান\" ক্লিক করুন বা হিট রিটার্ন।',\r\n    id: '1. Jika muncul muncul, meminta izin Anda untuk menggunakan mikrofon, klik \"Izinkan\".\\n2. Klik \"Lanjutkan\" atau tekan kembali.',\r\n    'zh-CN': '1.如果出现弹出式，请要求您使用麦克风的权限，请单击“允许”。\\n2.单击“继续”或点击返回。',\r\n    'zh-HK': '1.如果出現彈出式，請要求您使用麥克風的權限，請單擊“允許”。\\n2.單擊“繼續”或點擊返回。',\r\n    ja: '1.ポップアップが表示された場合は、マイクを使用する許可を求めている場合は、「許可」をクリックします。\\n2.「続行」をクリックするか、返されます。',\r\n    ko: '1. 팝업이 나타나면 마이크 사용 권한을 요청하면 \"허용\"을 클릭하십시오.\\n2. \"진행\"을 클릭하거나 반품을 누르십시오.',\r\n  },\r\n  RC_testSounds: {\r\n    'en-US': 'Test sounds',\r\n    de: 'Testgeräusche',\r\n    fr: 'Tester les sons',\r\n    es: 'Sonidos de prueba',\r\n    pt: 'Sons de teste',\r\n    it: 'Suoni di prova',\r\n    ro: 'Sunete de testare',\r\n    pl: 'Dźwięki testowe',\r\n    ru: 'Тестовые звуки',\r\n    hy: 'Թեստային հնչյուններ',\r\n    fi: 'Testiäänet',\r\n    ka: 'ტესტის ჟღერადობა',\r\n    he: 'צלילי מבחן',\r\n    ar: 'أصوات الاختبار',\r\n    ur: 'ٹیسٹ کی آوازیں',\r\n    hi: 'परीक्षण',\r\n    ta: 'சோதனை ஒலிகள்',\r\n    ml: 'ടെസ്റ്റ് ശബ്ദങ്ങൾ',\r\n    te: 'పరీక్ష శబ్దాలు',\r\n    kn: 'ಪರೀಕ್ಷಾ ಶಬ್ದಗಳು',\r\n    bn: 'পরীক্ষার শব্দ',\r\n    id: 'Suara tes',\r\n    'zh-CN': '测试声音',\r\n    'zh-HK': '測試聲音',\r\n    ja: 'サウンドをテストします',\r\n    ko: '테스트 소리',\r\n  },\r\n  RC_noSounds: {\r\n    'en-US': 'The experiment did not provide a targetSoundFolder, so there are no sounds to play.',\r\n    de: 'Das Experiment lieferte keinen TargetSoundSoundFolder, sodass keine Geräusche zu spielen sind.',\r\n    fr: \"L'expérience n'a pas fourni de CiblesoundFolder, il n'y a donc pas de sons à jouer.\",\r\n    es: 'El experimento no proporcionó una Folder TargetSound, por lo que no hay sonidos para reproducir.',\r\n    pt: 'O experimento não forneceu uma dobra de destino, portanto não há sons a serem reproduzidos.',\r\n    it: \"L'esperimento non ha fornito un TargetSoundFolder, quindi non ci sono suoni da suonare.\",\r\n    ro: 'Experimentul nu a oferit un TargetSoundfolder, așa că nu există sunete de redat.',\r\n    pl: 'Eksperyment nie zapewnił CelSoundFolder, więc nie ma dźwięków do gry.',\r\n    ru: 'Эксперимент не обеспечил целевой диапазон, поэтому нет никаких звуков.',\r\n    hy: 'Փորձը չի ապահովել TargetOndfolder, այնպես որ խաղալու հնչյուններ չկան:',\r\n    fi: 'Koe ei antanut TargetSoundFolderia, joten pelaamiseen ei ole ääniä.',\r\n    ka: 'ექსპერიმენტმა არ მიაწოდა სამიზნე, ასე რომ, სათამაშო ხმები არ არსებობს.',\r\n    he: 'הניסוי לא סיפק מטרה של SoundFolder, כך שאין צלילים לשחק.',\r\n    ar: 'لم توفر التجربة مستهدفة ، لذلك لا توجد أصوات للعب.',\r\n    ur: 'اس تجربے نے ٹارگٹ ساؤنڈ فولڈر فراہم نہیں کیا ، لہذا کھیلنے کے لئے کوئی آواز نہیں ہے۔',\r\n    hi: 'प्रयोग ने एक TargetSoundFolder प्रदान नहीं किया, इसलिए खेलने के लिए कोई आवाज़ नहीं है।',\r\n    ta: 'சோதனை ஒரு இலக்கு வால்ஃபோல்டரை வழங்கவில்லை, எனவே விளையாடுவதற்கு எந்த ஒலிகளும் இல்லை.',\r\n    ml: 'പരീക്ഷണം ഒരു ടാർഗെറ്റ് ഫോൾഡർ നൽകിയില്ല, അതിനാൽ കളിക്കാൻ ശബ്ദമില്ല.',\r\n    te: 'ఈ ప్రయోగం టార్గెట్‌సౌండ్‌ఫోల్డర్‌ను అందించలేదు, కాబట్టి ఆడటానికి శబ్దాలు లేవు.',\r\n    kn: 'ಪ್ರಯೋಗವು ಟಾರ್ಗೆಟ್ ಸೌಂಡ್ ಫೋಲ್ಡರ್ ಅನ್ನು ಒದಗಿಸಲಿಲ್ಲ, ಆದ್ದರಿಂದ ಆಡಲು ಯಾವುದೇ ಶಬ್ದಗಳಿಲ್ಲ.',\r\n    bn: 'পরীক্ষাটি কোনও টার্গাউন্ডফোল্ডার সরবরাহ করে না, তাই খেলার মতো কোনও শব্দ নেই।',\r\n    id: 'Eksperimen tidak memberikan target -oundfolder, jadi tidak ada suara untuk dimainkan.',\r\n    'zh-CN': '该实验没有提供TargetSoundFolder，因此没有声音可以播放。',\r\n    'zh-HK': '該實驗沒有提供TargetSoundFolder，因此沒有聲音可供播放。',\r\n    ja: 'この実験では、TargetSoundFolderを提供しなかったため、再生する音はありません。',\r\n    ko: '실험은 TargetSoundfolder를 제공하지 않았으므로 재생할 소리가 없습니다.',\r\n  },\r\n  RC_loudspeakerCalibration: {\r\n    'en-US': 'Loudspeaker Calibration (page 111 of 222)',\r\n    de: 'Lautsprecherkalibrierung (Seite 111 von 222)',\r\n    fr: 'Calibration des haut-parleurs (page 111 sur 222)',\r\n    es: 'Calibración del altavoz (página 111 de 222)',\r\n    pt: 'Calibração do alto -falante (página 111 de 222)',\r\n    it: 'Calibrazione degli altoparlanti (pagina 111 di 222)',\r\n    ro: 'Calibrarea difuzoarelor (pagina 111 din 222)',\r\n    pl: 'Kalibracja głośnika (strona 111 z 222)',\r\n    ru: 'Калибровка громкоговорителей (стр. 111 из 222)',\r\n    hy: 'Բարձրախոսի տրամաչափում (222-ի էջ 111)',\r\n    fi: 'Kaiutinkalibrointi (sivu 111/222)',\r\n    ka: 'დინამიკის კალიბრაცია (222 -ე გვერდი 111)',\r\n    he: 'כיול הרמקול (עמוד 111 מתוך 222)',\r\n    ar: 'معايرة مكبرات الصوت (صفحة 111 من 222)',\r\n    ur: 'لاؤڈ اسپیکر انشانکن (صفحہ 111 کا 222)',\r\n    hi: 'लाउडस्पीकर अंशांकन (222 का पृष्ठ 111)',\r\n    ta: 'ஒலிபெருக்கி அளவுத்திருத்தம் (பக்கம் 111 இன் 222)',\r\n    ml: 'ഉച്ചഭാഷിണി കാലിബ്രേഷൻ (222) പേജ് 111)',\r\n    te: 'లౌడ్‌స్పీకర్ క్రమాంకనం (పేజీ 111 యొక్క 222)',\r\n    kn: 'ಧ್ವನಿವರ್ಧಕ ಮಾಪನಾಂಕ ನಿರ್ಣಯ (ಪುಟ 111 ಆಫ್ 222)',\r\n    bn: 'লাউডস্পিকার ক্রমাঙ্কন (222 এর পৃষ্ঠা 111)',\r\n    id: 'Kalibrasi Loudspeaker (halaman 111 dari 222)',\r\n    'zh-CN': '扬声器校准（第111页，共222页）',\r\n    'zh-HK': '揚聲器校準（第111頁，共222頁）',\r\n    ja: 'スピーカーキャリブレーション（222ページのページ）',\r\n    ko: '라우드 스피커 교정 (111/222 페이지)',\r\n  },\r\n  RC_citeSoundCompressionModel: {\r\n    'en-US':\r\n      'Based on Eq. 4 of Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/GiannoulisMassbergReiss-dynamicrangecompression-JAES2012.pdf\">Digital dynamic range compressor design.</a> J. Audio Eng. Soc. 6(6):399-408.',\r\n    de: 'Basierend auf Gl. 4 von Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangeCompression-jaes2012.pdf\"> Digital Dynamic Range Compressor-Design. </a> J. Audio Eng. SOC. 6 (6): 399-408.',\r\n    fr: 'Basé sur l\\'équation. 4 de Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-nynamicrangecompression-jaes2012.pdf\"> conception de compresseur de gamme dynamique numérique. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    es: 'Basado en la ecuación. 4 de Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicRangecompression-Jaes2012.pdf\"> diseño de compresor de rango dinámico digital. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    pt: 'Com base na Eq. 4 de Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismasssbergreiss-dynamicrangeCompression-jaes2012.pdf\"> design de compressor de faixa dinâmica digital. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    it: 'Basato sull\\'Eq. 4 di Giannoulis et al. (2012). <a href=\"http://eecs.qul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> design del compressore dinamico digitale. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    ro: 'Pe baza Eq. 4 din Giannoulis și colab. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicRangecompression-jaes2012.pdf\"> Digital Dynamic Range Design Compresor. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    pl: 'Na podstawie równania. 4 Giannoulis i in. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> Digital Dynamic Range Compressor Projekt. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    ru: 'На основе уравнения. 4 Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> Digital Dynamic Dange Design Design. </a> J. Audio Eng. Соц 6 (6): 399-408.',\r\n    hy: 'Ելնելով EQ- ի վրա: 4-ը giannoulis et al. (2012): <a href=\"http://eecs.qmul.ac.uk/~josh/docums/2012/giannoulismastergreissrynynamicrangecom.bregreissizsynynamicrangecom \": թվային դինամիկ միջակայքի կոմպրեսորի ձեւավորում: </a> J. Audio eng. Սոցի. 6 (6): 399-408:',\r\n    fi: 'Perustuu Eq. 4 of Giannoulis et ai. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> digitaalinen dynaaminen alue kompressorin suunnittelu. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    ka: 'Eq- ის საფუძველზე. 4 Giannoulis et al. (2012). > სოცი. 6 (6): 399-408.',\r\n    he: 'מבוסס על Eq. 4 של Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> תכנון מדחס דינמי דינמי דיגיטלי. </a> J. Audio Eng. SOC. 6 (6): 399-408.',\r\n    ar: 'بناء على Eq. 4 من جيانوليس وآخرون. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecression-jaes2012.pdf\"> تصميم ضاغط النطاق الديناميكي الرقمي. سوك. 6 (6): 399-408.',\r\n    ur: 'Eq پر مبنی 4 جیانولیس ET رحمہ اللہ تعالی کا۔ (2012) <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannolismassbergregregres-dynamicrangecompression-jaes2012.pdf\"> ڈیجیٹل متحرک رینج کمپریسر ڈیزائن۔ </a> جے آڈیو انجینئر۔ ایس او سی 6 (6): 399-408۔',\r\n    hi: 'Eq पर आधारित है। गियानोलिस एट अल के 4। (2012)। <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> डिजिटल डायनामिक रेंज कंप्रेसर डिजाइन। </a> जे। सोसाइटी। 6 (6): 399-408।',\r\n    ta: 'Eq ஐ அடிப்படையாகக் கொண்டது. கியான ou லிஸ் மற்றும் பலர். (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> டிஜிட்டல் டைனமிக் ரேஞ்ச் அமுக்கி வடிவமைப்பு. </a> ஜே. ஆடியோ இன்ஜி. சொக். 6 (6): 399-408.',\r\n    ml: 'ഇക് അടിസ്ഥാനമാക്കി. ജിയാനലിസ് എറ്റ്. (2012). > Soc. 6 (6): 399-408.',\r\n    te: 'Eq ఆధారంగా. జియానౌలిస్ మరియు ఇతరులలో 4. (2012). <a href=\"http: Soc. 6 (6): 399-408.',\r\n    kn: 'ಇಕ್ ಅನ್ನು ಆಧರಿಸಿದೆ. ಜಿಯಾನೌಲಿಸ್ ಮತ್ತು ಇತರರ 4. (2012). . ಸೊಕ್. 6 (6): 399-408.',\r\n    bn: 'একের উপর ভিত্তি করে। জিয়ান্নলিস এট আল এর 4। (2012)। <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergregreiss-dynamicrangecompress-jaes2012.pdf\"> ডিজিটাল ডায়নামিক রেঞ্জ কমপ্রেস ডিজাইন। </a> জে। সোক। 6 (6): 399-408।',\r\n    id: 'Berdasarkan Persamaan. 4 dari Giannoulis et al. (2012). <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\"> desain kompresor rentang dinamis digital. </a> J. Audio Eng. Soc. 6 (6): 399-408.',\r\n    'zh-CN':\r\n      '基于等式。 Giannoulis等人4。 （2012年）。 <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\">数字动态动态范围压缩机设计。 Soc。 6（6）：399-408。',\r\n    'zh-HK':\r\n      '基於等式。 Giannoulis等人4。 （2012年）。 <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecompression-jaes2012.pdf\">數字動態動態範圍壓縮機設計。 Soc。 6（6）：399-408。',\r\n    ja: '式に基づいています。 Giannoulis et al。 （2012）。 <a href=\"http://eecs.qmul.ac.uk/~josh/documents/2012/giannoulismassbergreiss-dynamicrangecression-jaes2012.pdf\">デジタルダイナミックレンジコンプレッサーデザイン。</a> J. Audio Eng。 Soc。 6（6）：399-408。',\r\n    ko: 'Eq. Giannoulis et al. (2012). \" 사회 6 (6) : 399-408.',\r\n  },\r\n  RC_microphoneCalibration: {\r\n    'en-US': 'Microphone Calibration (page 111 of 222)',\r\n    de: 'Mikrofonkalibrierung (Seite 111 von 222)',\r\n    fr: 'Calibration des microphones (page 111 sur 222)',\r\n    es: 'Calibración de micrófonos (página 111 de 222)',\r\n    pt: 'Calibração do microfone (página 111 de 222)',\r\n    it: 'Calibrazione del microfono (pagina 111 di 222)',\r\n    ro: 'Calibrarea microfonului (pagina 111 din 222)',\r\n    pl: 'Kalibracja mikrofonu (strona 111 z 222)',\r\n    ru: 'Калибровка микрофона (стр. 111 из 222)',\r\n    hy: 'Խոսափողի տրամաչափում (222-ի էջ 111)',\r\n    fi: 'Mikrofonin kalibrointi (sivu 111/222)',\r\n    ka: 'მიკროფონის კალიბრაცია (222 -ე გვერდი 111)',\r\n    he: 'כיול מיקרופון (עמוד 111 מתוך 222)',\r\n    ar: 'معايرة الميكروفون (صفحة 111 من 222)',\r\n    ur: 'مائکروفون انشانکن (صفحہ 111 کا 222)',\r\n    hi: 'माइक्रोफोन अंशांकन (222 का पृष्ठ 111)',\r\n    ta: 'மைக்ரோஃபோன் அளவுத்திருத்தம் (பக்கம் 111 இன் 222)',\r\n    ml: 'മൈക്രോഫോൺ കാലിബ്രേഷൻ (222 ന്റെ പേജ് 111)',\r\n    te: 'మైక్రోఫోన్ క్రమాంకనం (పేజీ 111 యొక్క 222)',\r\n    kn: 'ಮೈಕ್ರೊಫೋನ್ ಮಾಪನಾಂಕ ನಿರ್ಣಯ (ಪುಟ 111 ಆಫ್ 222)',\r\n    bn: 'মাইক্রোফোন ক্রমাঙ্কন (222 এর পৃষ্ঠা 111)',\r\n    id: 'Kalibrasi mikrofon (halaman 111 dari 222)',\r\n    'zh-CN': '麦克风校准（第111页，共222页）',\r\n    'zh-HK': '麥克風校準（第111頁，共222頁）',\r\n    ja: 'マイクのキャリブレーション（222ページのページ）',\r\n    ko: '마이크 교정 (111/222 페이지)',\r\n  },\r\n  RC_usingSmartPhoneMicrophone: {\r\n    'en-US': 'Using smartphone microphone',\r\n    de: 'Mit Smartphone -Mikrofon',\r\n    fr: 'Utilisation du microphone pour smartphone',\r\n    es: 'Usando micrófono de teléfono inteligente',\r\n    pt: 'Usando microfone para smartphone',\r\n    it: 'Utilizzando il microfono per smartphone',\r\n    ro: 'Utilizarea microfonului smartphone',\r\n    pl: 'Korzystanie z mikrofonu smartfona',\r\n    ru: 'Использование микрофона смартфона',\r\n    hy: 'Օգտագործելով սմարթֆոնի խոսափող',\r\n    fi: 'Älypuhelinmikrofonin käyttäminen',\r\n    ka: 'სმარტფონის მიკროფონის გამოყენებით',\r\n    he: 'באמצעות מיקרופון סמארטפון',\r\n    ar: 'باستخدام ميكروفون الهاتف الذكي',\r\n    ur: 'اسمارٹ فون مائکروفون کا استعمال',\r\n    hi: 'स्मार्टफोन माइक्रोफोन का उपयोग करना',\r\n    ta: 'ஸ்மார்ட்போன் மைக்ரோஃபோனைப் பயன்படுத்துதல்',\r\n    ml: 'സ്മാർട്ട്ഫോൺ മൈക്രോഫോൺ ഉപയോഗിക്കുന്നു',\r\n    te: 'స్మార్ట్‌ఫోన్ మైక్రోఫోన్ ఉపయోగించడం',\r\n    kn: 'ಸ್ಮಾರ್ಟ್ಫೋನ್ ಮೈಕ್ರೊಫೋನ್ ಬಳಸುವುದು',\r\n    bn: 'স্মার্টফোন মাইক্রোফোন ব্যবহার করে',\r\n    id: 'Menggunakan mikrofon smartphone',\r\n    'zh-CN': '使用智能手机麦克风',\r\n    'zh-HK': '使用智能手機麥克風',\r\n    ja: 'スマートフォンマイクの使用',\r\n    ko: '스마트 폰 마이크 사용',\r\n  },\r\n  RC_turnMeToReadBelow: {\r\n    'en-US': 'Put this phone on the folded cloth. Rotate me to read the instructions below.',\r\n    de: 'Legen Sie dieses Telefon auf das gefaltete Tuch. Drehen Sie mich, um die folgenden Anweisungen zu lesen.',\r\n    fr: 'Mettez ce téléphone sur le tissu plié. Faites-moi tourner pour lire les instructions ci-dessous.',\r\n    es: 'Pon este teléfono en la tela doblada. Gireme para leer las instrucciones a continuación.',\r\n    pt: 'Coloque este telefone no pano dobrado. Gire -me para ler as instruções abaixo.',\r\n    it: 'Metti questo telefono sul panno piegato. Ruotami per leggere le istruzioni qui sotto.',\r\n    ro: 'Puneți acest telefon pe pânza pliată. Rotiți -mă pentru a citi instrucțiunile de mai jos.',\r\n    pl: 'Umieść ten telefon na złożonej szmatce. Obróć mnie, aby przeczytać poniższe instrukcje.',\r\n    ru: 'Поместите этот телефон на сложенную ткань. Поверните меня, чтобы прочитать инструкции ниже.',\r\n    hy: 'Այս հեռախոսը դրեք ծալովի կտորի վրա: Պտտեք ինձ, ստորեւ նշված ցուցումները կարդալու համար:',\r\n    fi: 'Laita tämä puhelin taitetulle kankaalle. Kierrä minua lukemaan alla olevat ohjeet.',\r\n    ka: 'განათავსეთ ეს ტელეფონი დასაკეცი ქსოვილზე. როტაცია მომიტანე ქვემოთ მოცემული ინსტრუქციების წასაკითხად.',\r\n    he: 'שים את הטלפון הזה על הבד המקופל. סובב אותי לקרוא את ההוראות שלהלן.',\r\n    ar: 'ضع هذا الهاتف على القماش المطوي. قم بتدويرني لقراءة التعليمات أدناه.',\r\n    ur: 'اس فون کو جوڑ کپڑے پر رکھیں۔ نیچے دی گئی ہدایات کو پڑھنے کے لئے مجھے گھمائیں۔',\r\n    hi: 'इस फोन को मुड़े हुए कपड़े पर रखें। नीचे दिए गए निर्देशों को पढ़ने के लिए मुझे घुमाएं।',\r\n    ta: 'இந்த தொலைபேசியை மடிந்த துணியில் வைக்கவும். கீழே உள்ள வழிமுறைகளைப் படிக்க என்னை சுழற்றுங்கள்.',\r\n    ml: 'മടക്കിവെച്ച തുണിയിൽ ഈ ഫോൺ ഇടുക. ചുവടെയുള്ള നിർദ്ദേശങ്ങൾ വായിക്കാൻ എന്നെ തിരിക്കുക.',\r\n    te: 'ఈ ఫోన్‌ను ముడుచుకున్న వస్త్రంపై ఉంచండి. దిగువ సూచనలను చదవడానికి నన్ను తిప్పండి.',\r\n    kn: 'ಈ ಫೋನ್ ಅನ್ನು ಮಡಿಸಿದ ಬಟ್ಟೆಯ ಮೇಲೆ ಇರಿಸಿ. ಕೆಳಗಿನ ಸೂಚನೆಗಳನ್ನು ಓದಲು ನನ್ನನ್ನು ತಿರುಗಿಸಿ.',\r\n    bn: 'এই ফোনটি ভাঁজ করা কাপড়ে রাখুন। নীচের নির্দেশাবলী পড়তে আমাকে ঘোরান।',\r\n    id: 'Letakkan telepon ini di atas kain yang dilipat. Putar saya untuk membaca instruksi di bawah ini.',\r\n    'zh-CN': '将此手机放在折叠的布上。旋转我阅读下面的说明。',\r\n    'zh-HK': '將此手機放在折疊的布上。旋轉我閱讀下面的說明。',\r\n    ja: 'この電話を折り畳まれた布に置きます。以下の指示を読むために私を回転させてください。',\r\n    ko: '접힌 천 에이 전화기를 넣으십시오. 아래 지침을 읽으려면 회전하십시오.',\r\n  },\r\n  RC_placeSmartphoneMicrophone: {\r\n    'en-US':\r\n      'Resting your phone on the folded cloth, point this ⇧ phone edge at your computer, pushing it a bit past the edge of the folded cloth. Press Proceed.',\r\n    de: 'Legen Sie Ihr Telefon auf dem gefalteten Tuch und richten Sie diese ⇧ Telefonkante auf Ihren Computer und drücken Sie es ein wenig über die Kante des gefalteten Tuches. Presse gehen weiter.',\r\n    fr: 'Reposant votre téléphone sur le tissu plié, pointez ce bord de téléphone sur votre ordinateur, le poussant un peu devant le bord du tissu plié. Procéder à la presse.',\r\n    es: 'Descansando su teléfono en la tela doblada, apunte a este borde del teléfono ⇧ en su computadora, empujándolo un poco más allá del borde de la tela doblada. Presione proceder.',\r\n    pt: 'Descansando o telefone no pano dobrado, aponte esta ⇧ ⇧ Edge no seu computador, empurrando -o um pouco além da borda do pano dobrado. Pressione prosseguir.',\r\n    it: \"Appoggiare il telefono sul panno piegato, puntare questo ⇧ bordo del telefono sul computer, spingendolo un po 'oltre il bordo del panno piegato. Processo stampa.\",\r\n    ro: 'Odihnindu -vă telefonul pe pânza pliată, îndreptați această margine a telefonului pe computer, împingându -l puțin pe marginea pânzei pliate. Apăsați.',\r\n    pl: 'Odpoczywając telefon na złożonej szmatce, skieruj ten ⇧ krawędź telefonu przy komputerze, przesuwając go nieco obok krawędzi złożonej szmatki. Naciśnij postęp.',\r\n    ru: 'Оставьте свой телефон на сложенную ткань, укажите это ⇧ Thone Edge на вашем компьютере, немного проталкивая его по краю сложенной ткани. Пресса продолжается.',\r\n    hy: 'Հանգստացած ձեր հեռախոսը ծալովի կտորի վրա, նշեք այս ⇧ հեռախոսի եզրը ձեր համակարգչում, մի փոքր մղելով ծալովի կտորի եզրին: Մամուլի շարունակությունը:',\r\n    fi: 'Lepää puhelimesi taitetussa kankaassa, osoita tämä ⇧ puhelimen reuna tietokoneellesi työntämällä sitä hiukan taitetun kankaan reunan ohi. Paina jatka.',\r\n    ka: 'დაისვენეთ თქვენი ტელეფონი დასაკეცი ქსოვილზე, მიუთითეთ ეს ⇧ ტელეფონის ზღვარი თქვენს კომპიუტერში, უბიძგეთ მას ოდნავ გასწვრივ დასაკეცი ქსოვილის კიდეზე. დააჭირეთ ღილაკს.',\r\n    he: 'הניח את הטלפון שלך על הבד המקופל, הצביע על קצה הטלפון הזה במחשב שלך, דוחף אותו מעט מעבר לקצה הבד המקופל. לחץ על המשך.',\r\n    ar: 'استراح هاتفك على القماش المطوي ، قم بتوضيح حافة الهاتف هذه على جهاز الكمبيوتر الخاص بك ، ودفعه قليلاً بعد حافة القماش المطوي. اضغط على متابعة.',\r\n    ur: 'اپنے فون کو جوڑنے والے کپڑے پر آرام کرتے ہوئے ، اس فون کے کنارے کو اپنے کمپیوٹر پر نشاندہی کریں ، اور اس کو جوڑنے والے کپڑے کے کنارے سے تھوڑا سا آگے بڑھائیں۔ آگے بڑھیں۔',\r\n    hi: 'अपने फोन को मुड़े हुए कपड़े पर आराम करते हुए, अपने कंप्यूटर पर इस the फोन के किनारे को इंगित करें, इसे मुड़े हुए कपड़े के किनारे से थोड़ा पीछे धकेलें। दबाएं।',\r\n    ta: 'உங்கள் தொலைபேசியை மடிந்த துணியில் ஓய்வெடுத்தால், இந்த ⇧ தொலைபேசி விளிம்பை உங்கள் கணினியில் சுட்டிக்காட்டவும், அதை மடிந்த துணியின் விளிம்பைக் கடந்து தள்ளவும். தொடரவும்.',\r\n    ml: 'മടക്കിവെച്ച തുണിയിൽ നിങ്ങളുടെ ഫോൺ വിശ്രമിക്കുന്നു, ഇത് നിങ്ങളുടെ കമ്പ്യൂട്ടറിൽ ഫോൺ എഡ്ജ് പോയിന്റുചെയ്യുക, മടക്കിയ തുണിയുടെ അരികിൽ അല്പം മറികടക്കുക. തുടരുക അമർത്തുക.',\r\n    te: 'మడతపెట్టిన వస్త్రంపై మీ ఫోన్‌ను విశ్రాంతి తీసుకొని, ఈ ⇧ ఫోన్ అంచుని మీ కంప్యూటర్ వద్ద సూచించండి, మడతపెట్టిన వస్త్రం అంచున కొంచెం నెట్టండి. నొక్కండి.',\r\n    kn: 'ನಿಮ್ಮ ಫೋನ್ ಅನ್ನು ಮಡಿಸಿದ ಬಟ್ಟೆಯ ಮೇಲೆ ವಿಶ್ರಾಂತಿ ಮಾಡಿ, ಈ ⇧ ಫೋನ್ ಅಂಚನ್ನು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್‌ನಲ್ಲಿ ಸೂಚಿಸಿ, ಅದನ್ನು ಮಡಿಸಿದ ಬಟ್ಟೆಯ ಅಂಚಿಗೆ ಸ್ವಲ್ಪ ಮೀರಿ ತಳ್ಳುತ್ತದೆ. ಮುಂದುವರಿಯಿರಿ.',\r\n    bn: 'ভাঁজ কাপড়ের উপর আপনার ফোনটি বিশ্রামে, আপনার কম্পিউটারে এই ফোন প্রান্তটি নির্দেশ করুন, ভাঁজ করা কাপড়ের প্রান্তটি কিছুটা দূরে ঠেলে দিন। প্রেস প্রেস।',\r\n    id: 'Resting your phone on the folded cloth, point this ⇧ phone edge at your computer, pushing it a bit past the edge of the folded cloth. Tekan lanjutkan.',\r\n    'zh-CN': '将手机放在折叠的布上，将此⇧手机边缘指向您的计算机，将其推到折叠布的边缘。按继续。',\r\n    'zh-HK': '將手機放在折疊的布上，將此⇧手機邊緣指向您的計算機，將其推到折疊布的邊緣。按繼續。',\r\n    ja: '折り畳まれた布に電話を置き、コンピューターでこの携帯電話の端を指して、折り畳まれた布の端を少し通り過ぎます。押し続けます。',\r\n    ko: '접힌 천에 휴대 전화를 쉬고 컴퓨터 에서이 전화 가장자리를 가리키고 접힌 천의 가장자리를 약간 지나쳐 밀어 넣습니다. 프레스 진행.',\r\n  },\r\n  RC_usingSmartphoneMicrophone: {\r\n    'en-US': 'Using smartphone microphone',\r\n    de: 'Mit Smartphone -Mikrofon',\r\n    fr: 'Utilisation du microphone pour smartphone',\r\n    es: 'Usando micrófono de teléfono inteligente',\r\n    pt: 'Usando microfone para smartphone',\r\n    it: 'Utilizzando il microfono per smartphone',\r\n    ro: 'Utilizarea microfonului smartphone',\r\n    pl: 'Korzystanie z mikrofonu smartfona',\r\n    ru: 'Использование микрофона смартфона',\r\n    hy: 'Օգտագործելով սմարթֆոնի խոսափող',\r\n    fi: 'Älypuhelinmikrofonin käyttäminen',\r\n    ka: 'სმარტფონის მიკროფონის გამოყენებით',\r\n    he: 'באמצעות מיקרופון סמארטפון',\r\n    ar: 'باستخدام ميكروفون الهاتف الذكي',\r\n    ur: 'اسمارٹ فون مائکروفون کا استعمال',\r\n    hi: 'स्मार्टफोन माइक्रोफोन का उपयोग करना',\r\n    ta: 'ஸ்மார்ட்போன் மைக்ரோஃபோனைப் பயன்படுத்துதல்',\r\n    ml: 'സ്മാർട്ട്ഫോൺ മൈക്രോഫോൺ ഉപയോഗിക്കുന്നു',\r\n    te: 'స్మార్ట్‌ఫోన్ మైక్రోఫోన్ ఉపయోగించడం',\r\n    kn: 'ಸ್ಮಾರ್ಟ್ಫೋನ್ ಮೈಕ್ರೊಫೋನ್ ಬಳಸುವುದು',\r\n    bn: 'স্মার্টফোন মাইক্রোফোন ব্যবহার করে',\r\n    id: 'Menggunakan mikrofon smartphone',\r\n    'zh-CN': '使用智能手机麦克风',\r\n    'zh-HK': '使用智能手機麥克風',\r\n    ja: 'スマートフォンマイクの使用',\r\n    ko: '스마트 폰 마이크 사용',\r\n  },\r\n  RC_usingUSBMicrophone: {\r\n    'en-US': 'Using USB microphone',\r\n    de: 'Mit USB -Mikrofon',\r\n    fr: 'Utilisation du microphone USB',\r\n    es: 'Usando un micrófono USB',\r\n    pt: 'Usando microfone USB',\r\n    it: 'Usando il microfono USB',\r\n    ro: 'Folosind microfon USB',\r\n    pl: 'Za pomocą mikrofonu USB',\r\n    ru: 'Использование USB -микрофона',\r\n    hy: 'Օգտագործելով USB միկրոֆոն',\r\n    fi: 'USB -mikrofonin käyttäminen',\r\n    ka: 'USB მიკროფონის გამოყენებით',\r\n    he: 'באמצעות מיקרופון USB',\r\n    ar: 'باستخدام ميكروفون USB',\r\n    ur: 'USB مائکروفون کا استعمال کرتے ہوئے',\r\n    hi: 'USB माइक्रोफोन का उपयोग करना',\r\n    ta: 'யூ.எஸ்.பி மைக்ரோஃபோனைப் பயன்படுத்துதல்',\r\n    ml: 'യുഎസ്ബി മൈക്രോഫോൺ ഉപയോഗിക്കുന്നു',\r\n    te: 'USB మైక్రోఫోన్ ఉపయోగించడం',\r\n    kn: 'ಯುಎಸ್ಬಿ ಮೈಕ್ರೊಫೋನ್ ಬಳಸುವುದು',\r\n    bn: 'ইউএসবি মাইক্রোফোন ব্যবহার করে',\r\n    id: 'Menggunakan mikrofon USB',\r\n    'zh-CN': '使用USB麦克风',\r\n    'zh-HK': '使用USB麥克風',\r\n    ja: 'USBマイクの使用',\r\n    ko: 'USB 마이크 사용',\r\n  },\r\n  RC_soundCalibrationClickToStart: {\r\n    'en-US': 'Click Ok on your smartphone, and follow the instructions there.',\r\n    de: 'Klicken Sie auf OK auf Ihrem Smartphone und befolgen Sie die Anweisungen dort.',\r\n    fr: 'Cliquez sur OK sur votre smartphone et suivez les instructions là-bas.',\r\n    es: 'Haga clic en Aceptar en su teléfono inteligente y siga las instrucciones allí.',\r\n    pt: 'Clique em OK no seu smartphone e siga as instruções lá.',\r\n    it: 'Fai clic su OK sul tuo smartphone e segui le istruzioni lì.',\r\n    ro: 'Faceți clic pe OK pe smartphone -ul dvs. și urmați instrucțiunile de acolo.',\r\n    pl: 'Kliknij OK na smartfonie i postępuj zgodnie z instrukcjami.',\r\n    ru: 'Нажмите OK на своем смартфоне и следуйте инструкциям там.',\r\n    hy: 'Կտտացրեք OK ձեր սմարթֆոնի վրա եւ հետեւեք այնտեղ հրահանգներին:',\r\n    fi: 'Napsauta älypuhelimesi OK ja noudata siellä olevia ohjeita.',\r\n    ka: 'დააჭირეთ ღილაკს OK თქვენს სმარტფონზე და მიჰყევით იქ მითითებებს.',\r\n    he: 'לחץ על אישור בסמארטפון שלך, ועקוב אחר ההוראות שם.',\r\n    ar: 'انقر فوق \"موافق\" على هاتفك الذكي ، واتبع التعليمات هناك.',\r\n    ur: 'اپنے اسمارٹ فون پر اوکے پر کلک کریں ، اور وہاں کی ہدایات پر عمل کریں۔',\r\n    hi: 'अपने स्मार्टफोन पर ठीक क्लिक करें, और वहां के निर्देशों का पालन करें।',\r\n    ta: 'உங்கள் ஸ்மார்ட்போனில் சரி என்பதைக் கிளிக் செய்து, அங்குள்ள வழிமுறைகளைப் பின்பற்றவும்.',\r\n    ml: 'നിങ്ങളുടെ സ്മാർട്ട്ഫോണിൽ ശരി ക്ലിക്കുചെയ്യുക, കൂടാതെ അവിടെയുള്ള നിർദ്ദേശങ്ങൾ പാലിക്കുക.',\r\n    te: 'మీ స్మార్ట్‌ఫోన్‌లో సరే క్లిక్ చేసి, అక్కడి సూచనలను అనుసరించండి.',\r\n    kn: 'ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್‌ನಲ್ಲಿ ಸರಿ ಕ್ಲಿಕ್ ಮಾಡಿ, ಮತ್ತು ಅಲ್ಲಿನ ಸೂಚನೆಗಳನ್ನು ಅನುಸರಿಸಿ.',\r\n    bn: 'আপনার স্মার্টফোনে ওকে ক্লিক করুন এবং সেখানে নির্দেশাবলী অনুসরণ করুন।',\r\n    id: 'Klik OK di ponsel cerdas Anda, dan ikuti instruksi di sana.',\r\n    'zh-CN': '单击智能手机上的确定，然后按照那里的说明进行操作。',\r\n    'zh-HK': '單擊智能手機上的確定，然後按照那裡的說明進行操作。',\r\n    ja: 'スマートフォンの[OK]をクリックし、そこにある手順に従ってください。',\r\n    ko: '스마트 폰에서 확인을 클릭하고 그 지침을 따르십시오.',\r\n  },\r\n  RC_soundCalibrationDone: {\r\n    'en-US':\r\n      'Thanks. The loudspeaker is now calibrated, and you can put away the smartphone (or USB microphone). IMPORTANT: DO NOT TOUCH THE VOLUME CONTROL until the experiment is done. Changing the volume will ruin the loudspeaker calibration and invalidate all results. ',\r\n    de: 'Danke. Der Lautsprecher ist jetzt kalibriert und Sie können das Smartphone (oder USB -Mikrofon) weglegen. WICHTIG: Berühren Sie die Volumenkontrolle erst, wenn das Experiment durchgeführt wird. Durch das Ändern des Volumens wird die Lautsprecherkalibrierung ruiniert und alle Ergebnisse ungültig.',\r\n    fr: \"Merci. Le haut-parleur est désormais calibré et vous pouvez ranger le smartphone (ou microphone USB). IMPORTANT: Ne touchez pas le contrôle du volume avant la fin de l'expérience. La modification du volume ruinera l'étalonnage des haut-parleurs et invalidera tous les résultats.\",\r\n    es: 'Gracias. El altavoz ahora está calibrado, y puede guardar el teléfono inteligente (o micrófono USB). IMPORTANTE: No toque el control de volumen hasta que se realice el experimento. Cambiar el volumen arruinará la calibración del altavoz e invalidará todos los resultados.',\r\n    pt: 'Obrigado. O alto -falante agora está calibrado e você pode guardar o smartphone (ou microfone USB). IMPORTANTE: Não toque no controle de volume até que o experimento seja feito. A alteração do volume arruinará a calibração do alto -falante e invalidará todos os resultados.',\r\n    it: \"Grazie. L'altoparlante è ora calibrato e puoi mettere via lo smartphone (o microfono USB). Importante: non toccare il controllo del volume fino a quando l'esperimento non è terminato. La modifica del volume rovinerà la calibrazione degli altoparlanti e invaliderà tutti i risultati.\",\r\n    ro: 'Mulțumiri. Difuzorul este acum calibrat și puteți elimina smartphone -ul (sau microfonul USB). IMPORTANT: Nu atingeți controlul volumului până la finalizarea experimentului. Modificarea volumului va strica calibrarea difuzorului și va invalida toate rezultatele.',\r\n    pl: 'Dzięki. Głośnik jest teraz skalibrowany i możesz odłożyć smartfon (lub mikrofon USB). Ważne: nie dotykaj kontroli głośności, dopóki eksperyment nie zostanie zakończony. Zmiana objętości zrujnuje kalibrację głośnika i unieważni wszystkie wyniki.',\r\n    ru: 'Спасибо. Громкоговоритель теперь откалиброван, и вы можете убрать смартфон (или USB -микрофон). Важно: не касайтесь регулятора громкости, пока эксперимент не будет проведен. Изменение объема разрушит калибровку громкоговорителя и лишает аннулирования всех результатов.',\r\n    hy: 'Շնորհակալություն Բարձրախոսն այժմ տրամաչափված է, եւ դուք կարող եք հեռացնել սմարթֆոնը (կամ USB խոսափողը): ԿԱՐԵՎՈՐ. Մի դիպչեք ձայնի վերահսկմանը, մինչեւ փորձը կատարվի: Ծավալը փոխելը կվերացնի բարձրախոսի տրամաչափումը եւ անվավեր ճանաչի բոլոր արդյունքները:',\r\n    fi: 'Kiitos. Kaiutin on nyt kalibroitu, ja voit laittaa älypuhelimen (tai USB -mikrofonin) pois. Tärkeää: Älä kosketa äänenvoimakkuuden säätöä ennen kuin koe on tehty. Volumejen muuttaminen pilaa kaiutinkalibroinnin ja mitätöimään kaikki tulokset.',\r\n    ka: 'მადლობა. დინამიკი ახლა დაკალიბრებულია და შეგიძლიათ სმარტფონი (ან USB მიკროფონი) ჩამოაგდოთ. მნიშვნელოვანია: არ შეეხოთ მოცულობის კონტროლს, სანამ ექსპერიმენტი არ მოხდება. მოცულობის შეცვლა გაანადგურებს დინამიკის კალიბრაციას და ყველა შედეგს გააუქმებს.',\r\n    he: 'תודה. הרמקול מכויל כעת, ותוכלו להניח את הסמארטפון (או מיקרופון USB). חשוב: אל תיגע בבקרת עוצמת הקול עד לסיום הניסוי. שינוי הנפח יהרוס את כיול הרמקול ויבטל את כל התוצאות.',\r\n    ar: 'شكرًا. يتم الآن معايرة مكبر الصوت ، ويمكنك وضع الهاتف الذكي (أو ميكروفون USB). هام: لا تلمس التحكم في مستوى الصوت حتى تتم التجربة. سيؤدي تغيير مستوى الصوت إلى تدمير معايرة مكبر الصوت وإبطال جميع النتائج.',\r\n    ur: 'شکریہ. لاؤڈ اسپیکر اب کیلیبریٹڈ ہے ، اور آپ اسمارٹ فون (یا USB مائکروفون) کو دور کرسکتے ہیں۔ اہم: جب تک تجربہ نہ ہو اس وقت تک حجم کے کنٹرول کو مت لگائیں۔ حجم کو تبدیل کرنے سے لاؤڈ اسپیکر انشانکن برباد ہوجائے گا اور تمام نتائج کو کالعدم قرار دے گا۔',\r\n    hi: 'धन्यवाद। लाउडस्पीकर को अब कैलिब्रेट किया गया है, और आप स्मार्टफोन (या यूएसबी माइक्रोफोन) को दूर कर सकते हैं। महत्वपूर्ण: प्रयोग होने तक वॉल्यूम नियंत्रण को न छूएं। वॉल्यूम बदलने से लाउडस्पीकर अंशांकन बर्बाद हो जाएगा और सभी परिणामों को अमान्य कर देगा।',\r\n    ta: 'நன்றி. ஒலிபெருக்கி இப்போது அளவீடு செய்யப்பட்டுள்ளது, மேலும் நீங்கள் ஸ்மார்ட்போனை (அல்லது யூ.எஸ்.பி மைக்ரோஃபோன்) விலக்கி வைக்கலாம். முக்கியமானது: சோதனை செய்யப்படும் வரை தொகுதி கட்டுப்பாட்டைத் தொட வேண்டாம். அளவை மாற்றுவது ஒலிபெருக்கி அளவுத்திருத்தத்தை அழித்துவிடும் மற்றும் அனைத்து முடிவுகளையும் செல்லாது.',\r\n    ml: 'നന്ദി. ഉച്ചഭാഷിണി ഇപ്പോൾ കാലിബ്രേറ്റ് ചെയ്തു, നിങ്ങൾക്ക് സ്മാർട്ട്ഫോൺ (അല്ലെങ്കിൽ യുഎസ്ബി മൈക്രോഫോൺ) മാറ്റിവയ്ക്കാം. പ്രധാനം: പരീക്ഷണം നടക്കുന്നതുവരെ വോളിയം നിയന്ത്രണത്തിൽ തൊടരുത്. വോളിയം മാറ്റുന്നത് ഉച്ചഭാഷിണി കാലിബ്രേഷനെ നശിപ്പിക്കുകയും എല്ലാ ഫലങ്ങളും അസാധുവാക്കുകയും ചെയ്യും.',\r\n    te: 'ధన్యవాదాలు. లౌడ్‌స్పీకర్ ఇప్పుడు క్రమాంకనం చేయబడింది మరియు మీరు స్మార్ట్‌ఫోన్‌ను (లేదా యుఎస్‌బి మైక్రోఫోన్) దూరంగా ఉంచవచ్చు. ముఖ్యమైనది: ప్రయోగం పూర్తయ్యే వరకు వాల్యూమ్ నియంత్రణను తాకవద్దు. వాల్యూమ్‌ను మార్చడం లౌడ్‌స్పీకర్ క్రమాంకనాన్ని నాశనం చేస్తుంది మరియు అన్ని ఫలితాలను చెల్లదు.',\r\n    kn: 'ಧನ್ಯವಾದಗಳು. ಧ್ವನಿವರ್ಧಕವನ್ನು ಈಗ ಮಾಪನಾಂಕ ಮಾಡಲಾಗಿದೆ, ಮತ್ತು ನೀವು ಸ್ಮಾರ್ಟ್‌ಫೋನ್ (ಅಥವಾ ಯುಎಸ್‌ಬಿ ಮೈಕ್ರೊಫೋನ್) ಅನ್ನು ದೂರವಿಡಬಹುದು. ಪ್ರಮುಖ: ಪ್ರಯೋಗವನ್ನು ಮಾಡುವವರೆಗೆ ಪರಿಮಾಣ ನಿಯಂತ್ರಣವನ್ನು ಮುಟ್ಟಬೇಡಿ. ಪರಿಮಾಣವನ್ನು ಬದಲಾಯಿಸುವುದರಿಂದ ಧ್ವನಿವರ್ಧಕ ಮಾಪನಾಂಕ ನಿರ್ಣಯವನ್ನು ಹಾಳುಮಾಡುತ್ತದೆ ಮತ್ತು ಎಲ್ಲಾ ಫಲಿತಾಂಶಗಳನ್ನು ಅಮಾನ್ಯಗೊಳಿಸುತ್ತದೆ.',\r\n    bn: 'ধন্যবাদ। লাউডস্পিকারটি এখন ক্যালিব্রেটেড এবং আপনি স্মার্টফোনটি (বা ইউএসবি মাইক্রোফোন) ফেলে দিতে পারেন। গুরুত্বপূর্ণ: পরীক্ষাটি না হওয়া পর্যন্ত ভলিউম নিয়ন্ত্রণটি স্পর্শ করবেন না। ভলিউম পরিবর্তন করা লাউডস্পিকারের ক্রমাঙ্কন নষ্ট করবে এবং সমস্ত ফলাফলকে অকার্যকর করবে।',\r\n    id: 'Terima kasih. Loudspeaker sekarang dikalibrasi, dan Anda dapat menyingkirkan smartphone (atau mikrofon USB). Penting: Jangan menyentuh kontrol volume sampai percobaan selesai. Mengubah volume akan merusak kalibrasi pengeras suara dan membatalkan semua hasil.',\r\n    'zh-CN':\r\n      '谢谢。扬声器现在已经校准，您可以收起智能手机（或USB麦克风）。重要的是：在实验完成之前，请勿触摸音量控制。更改音量会破坏扬声器校准并使所有结果无效。',\r\n    'zh-HK':\r\n      '謝謝。揚聲器現在已經校準，您可以收起智能手機（或USB麥克風）。重要的是：在實驗完成之前，請勿觸摸音量控制。更改音量會破壞揚聲器校準並使所有結果無效。',\r\n    ja: 'ありがとう。スピーカーは校正され、スマートフォン（またはUSBマイク）を片付けることができます。重要：実験が完了するまで、ボリュームコントロールに触れないでください。ボリュームを変更すると、スピーカーのキャリブレーションが台無しになり、すべての結果が無効になります。',\r\n    ko: '감사해요. 라우드 스피커가 이제 보정되어 스마트 폰 (또는 USB 마이크)을 제거 할 수 있습니다. 중요 : 실험이 완료 될 때까지 볼륨 컨트롤에 닿지 마십시오. 볼륨을 변경하면 라우드 스피커 교정이 파괴되고 모든 결과가 무효화됩니다.',\r\n  },\r\n  RC_soundCalibrationContinue: {\r\n    'en-US': 'Click Ok to continue. \\n\\n',\r\n    de: 'Klicken Sie auf OK, um fortzufahren.\\n\\n',\r\n    fr: 'Cliquez sur OK pour continuer.\\n\\n',\r\n    es: 'Haga clic en Aceptar para continuar.\\n\\n',\r\n    pt: 'Clique em OK para continuar.\\n\\n',\r\n    it: 'Fai clic su OK per continuare.\\n\\n',\r\n    ro: 'Faceți clic pe OK pentru a continua.\\n\\n',\r\n    pl: 'Kliknij OK, aby kontynuować.\\n\\n',\r\n    ru: 'Нажмите OK, чтобы продолжить.\\n\\n',\r\n    hy: 'Կտտացրեք OK, շարունակելու համար:\\n\\n',\r\n    fi: 'Napsauta OK jatkaaksesi.\\n\\n',\r\n    ka: 'დააჭირეთ ღილაკს, რომ გააგრძელოთ.\\n\\n',\r\n    he: 'לחץ על אישור כדי להמשיך.\\n\\n',\r\n    ar: 'انقر فوق موافق للمتابعة.\\n\\n',\r\n    ur: 'جاری رکھنے کے لئے ٹھیک ہے پر کلک کریں۔\\n\\n',\r\n    hi: 'जारी रखने के लिए ठीक क्लिक करें।\\n\\n',\r\n    ta: 'தொடர சரி என்பதைக் கிளிக் செய்க.\\n\\n',\r\n    ml: 'തുടരാൻ ശരി ക്ലിക്കുചെയ്യുക.\\n\\n',\r\n    te: 'కొనసాగించడానికి సరే క్లిక్ చేయండి.\\n\\n',\r\n    kn: 'ಮುಂದುವರಿಸಲು ಸರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.\\n\\n',\r\n    bn: 'চালিয়ে যেতে ওকে ক্লিক করুন।\\n\\n',\r\n    id: 'Klik OK untuk melanjutkan.\\n\\n',\r\n    'zh-CN': '单击确定继续。\\n\\n',\r\n    'zh-HK': '單擊確定繼續。\\n\\n',\r\n    ja: '[OK]をクリックして続行します。\\n\\n',\r\n    ko: '계속하려면 확인을 클릭하십시오.\\n\\n',\r\n  },\r\n  RC_soundCalibrationHoldIPhoneOk: {\r\n    'en-US': '❌ RC_soundCalibrationHoldIPhoneOk is obsolete.\\n',\r\n    de: '❌ RC_SoundCalibrationHoldiPhoneok ist veraltet.\\n',\r\n    fr: '❌ RC_SOUNDCALIBRATIONHAGHOINGEOOK est obsolète.\\n',\r\n    es: '❌ rc_soundcalibrationHoldiphoneok es obsoleto.\\n',\r\n    pt: '❌ RC_SOUNDCALIBRATIONHOHDIPHONEOK é obsoleto.\\n',\r\n    it: '❌ RC_SoundCalibrationHoPhoneok è obsoleto.\\n',\r\n    ro: '❌ rc_soundcalibrationholdiphoneok este învechit.\\n',\r\n    pl: '❌ rc_soundcalibrationholphoneok jest przestarzały.\\n',\r\n    ru: '❌ rc_soundcalibrationholdiphoneok устарел.\\n',\r\n    hy: '❌ rc_soundcalibrationhonolokhoneok- ը հնացած է:\\n',\r\n    fi: '❌ RC_SOONDCALIBRATIONHALLIPHONOOK on vanhentunut.\\n',\r\n    ka: '❌ rc_soundcalibrationohdiphoneok არის მოძველებული.\\n',\r\n    he: '❌ RC_SoundCalibrationHoldiphoneoK מיושן.\\n',\r\n    ar: '❌ rc_soundcalibrationholdiphoneok عفا عليها الزمن.\\n',\r\n    ur: '❌ rc_soundcalibration ہولڈفونوک متروک ہے۔\\n',\r\n    hi: '❌ RC_SoundCalibrationHoldiphoneok अप्रचलित है।\\n',\r\n    ta: '❌ rc_soundcalibrationholdiphoneok வழக்கற்றுப் போய்விட்டது.\\n',\r\n    ml: '❌ rc_soundcalibroldipholdipholkokok opelete ആണ്.\\n',\r\n    te: '❌ RC_SOUNDCALIBRATION HOLDIPHONEOK వాడుకలో లేదు.\\n',\r\n    kn: '❌ RC_SOUNDCALIBARATIONHONDIPHONEOK ಬಳಕೆಯಲ್ಲಿಲ್ಲ.\\n',\r\n    bn: '❌ আরসি_সাউন্ডক্যালিব্রেশনহোল্ডফোনোক অপ্রচলিত।\\n',\r\n    id: '❌ rc_soundCalibrationHoldiphoneok sudah usang.\\n',\r\n    'zh-CN': 'RC_SOUNDCALIBRATION HOLDIPHONEOK已过时。\\n',\r\n    'zh-HK': 'RC_SOUNDCALIBRATION HOLDIPHONEOK已過時。\\n',\r\n    ja: 'rc_soundCalibrationholdiphoneokは時代遅れです。\\n',\r\n    ko: 'RC_SOUNDCALIBRATION HOLDIPHONEOK는 더 이상 사용되지 않습니다.\\n',\r\n  },\r\n  RC_soundCalibrationNeedsMicrophone: {\r\n    'en-US':\r\n      'To produce accurate sound, we need to calibrate the loudspeakers. This requires a smartphone connected to the internet (or a USB microphone). Do you have one handy? \\n',\r\n    de: 'Um einen genauen Klang zu erzeugen, müssen wir die Lautsprecher kalibrieren. Dies erfordert ein Smartphone, das mit dem Internet (oder einem USB -Mikrofon) verbunden ist. Hast du eine Handy?\\n',\r\n    fr: 'Pour produire un son précis, nous devons calibrer les haut-parleurs. Cela nécessite un smartphone connecté à Internet (ou un microphone USB). Avez-vous un à portée de main?\\n',\r\n    es: 'Para producir un sonido preciso, necesitamos calibrar los altavoces. Esto requiere un teléfono inteligente conectado a Internet (o un micrófono USB). ¿Tienes uno a mano?\\n',\r\n    pt: 'Para produzir som preciso, precisamos calibrar os alto -falantes. Isso requer um smartphone conectado à Internet (ou um microfone USB). Você tem um útil?\\n',\r\n    it: 'Per produrre un suono accurato, dobbiamo calibrare gli altoparlanti. Ciò richiede uno smartphone collegato a Internet (o un microfono USB). Hai uno a portata di mano?\\n',\r\n    ro: 'Pentru a produce un sunet precis, trebuie să calibrăm difuzoarele. Aceasta necesită un smartphone conectat la internet (sau un microfon USB). Ai unul la îndemână?\\n',\r\n    pl: 'Aby wytworzyć dokładny dźwięk, musimy skalibrować głośniki. Wymaga to smartfona podłączonego do Internetu (lub mikrofonu USB). Czy masz jeden przydatny?\\n',\r\n    ru: 'Чтобы получить точный звук, нам нужно калибровать громкоговорители. Для этого требуется смартфон, подключенный к Интернету (или USB -микрофон). У тебя есть одна удобная?\\n',\r\n    hy: 'Acc շգրիտ ձայն տալու համար հարկավոր է տրամաչափել բարձրախոսները: Սա պահանջում է սմարթֆոն, որը միացված է ինտերնետին (կամ USB միկրոֆոն): Դուք ունեք մեկ հարմար:\\n',\r\n    fi: 'Tarkan äänen tuottamiseksi meidän on kalibroida kaiuttimet. Tämä vaatii älypuhelimen, joka on kytketty Internetiin (tai USB -mikrofoniin). Onko sinulla yksi kätevä?\\n',\r\n    ka: 'ზუსტი ხმის შესაქმნელად, ჩვენ უნდა დავასახელოთ დინამიკები. ეს მოითხოვს ინტერნეტთან დაკავშირებულ სმარტფონს (ან USB მიკროფონს). ერთი მოსახერხებელი გაქვს?\\n',\r\n    he: 'כדי להפיק צליל מדויק, עלינו לכייל את הרמקולים. זה דורש סמארטפון המחובר לאינטרנט (או למיקרופון USB). יש לך שימושי?\\n',\r\n    ar: 'لإنتاج صوت دقيق ، نحتاج إلى معايرة مكبرات الصوت. يتطلب هذا هاتفًا ذكيًا متصلاً بالإنترنت (أو ميكروفون USB). هل لديك واحد في متناول يدي؟\\n',\r\n    ur: 'درست آواز پیدا کرنے کے ل we ، ہمیں لاؤڈ اسپیکر کو کیلیبریٹ کرنے کی ضرورت ہے۔ اس کے لئے انٹرنیٹ (یا USB مائکروفون) سے منسلک اسمارٹ فون کی ضرورت ہے۔ کیا آپ کے پاس ایک آسان ہے؟\\n',\r\n    hi: 'सटीक ध्वनि का उत्पादन करने के लिए, हमें लाउडस्पीकरों को जांचने की आवश्यकता है। इसके लिए इंटरनेट (या एक USB माइक्रोफोन) से जुड़े एक स्मार्टफोन की आवश्यकता होती है। क्या आपके पास एक काम है?\\n',\r\n    ta: 'துல்லியமான ஒலியை உருவாக்க, நாம் ஒலிபெருக்கிகளை அளவீடு செய்ய வேண்டும். இதற்கு இணையத்துடன் இணைக்கப்பட்ட ஸ்மார்ட்போன் (அல்லது யூ.எஸ்.பி மைக்ரோஃபோன்) தேவைப்படுகிறது. உங்களிடம் ஒரு எளிது இருக்கிறதா?\\n',\r\n    ml: 'കൃത്യമായ ശബ്ദം ഉത്പാദിപ്പിക്കാൻ, ഞങ്ങൾ ഉച്ചഭാഷിണികളെ കാലിബ്രേറ്റ് ചെയ്യേണ്ടതുണ്ട്. ഇതിന് ഇന്റർനെറ്റിലേക്ക് കണക്റ്റുചെയ്തിരിക്കുന്ന ഒരു സ്മാർട്ട്ഫോൺ ആവശ്യമാണ് (അല്ലെങ്കിൽ ഒരു യുഎസ്ബി മൈക്രോഫോൺ). നിങ്ങൾക്ക് ഒരു ഹാൻഡി ഉണ്ടോ?\\n',\r\n    te: 'ఖచ్చితమైన ధ్వనిని ఉత్పత్తి చేయడానికి, మేము లౌడ్‌స్పీకర్లను క్రమాంకనం చేయాలి. దీనికి ఇంటర్నెట్‌కు అనుసంధానించబడిన స్మార్ట్‌ఫోన్ (లేదా యుఎస్‌బి మైక్రోఫోన్) అవసరం. మీకు ఒక సులభ ఉందా?\\n',\r\n    kn: 'ನಿಖರವಾದ ಧ್ವನಿಯನ್ನು ಉತ್ಪಾದಿಸಲು, ನಾವು ಧ್ವನಿವರ್ಧಕಗಳನ್ನು ಮಾಪನಾಂಕ ನಿರ್ಣಯಿಸಬೇಕಾಗಿದೆ. ಇದಕ್ಕೆ ಇಂಟರ್ನೆಟ್ (ಅಥವಾ ಯುಎಸ್‌ಬಿ ಮೈಕ್ರೊಫೋನ್) ಗೆ ಸಂಪರ್ಕ ಹೊಂದಿದ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಅಗತ್ಯವಿದೆ. ನೀವು ಒಂದು ಸೂಕ್ತವಾಗಿದ್ದೀರಾ?\\n',\r\n    bn: 'সঠিক শব্দ উত্পাদন করতে, আমাদের লাউডস্পিকারগুলি ক্যালিব্রেট করতে হবে। এর জন্য ইন্টারনেটে সংযুক্ত একটি স্মার্টফোন (বা একটি ইউএসবি মাইক্রোফোন) প্রয়োজন। তোমার কি এক হাত আছে?\\n',\r\n    id: 'Untuk menghasilkan suara yang akurat, kita perlu mengkalibrasi pengeras suara. Ini membutuhkan smartphone yang terhubung ke internet (atau mikrofon USB). Apakah Anda punya satu berguna?\\n',\r\n    'zh-CN':\r\n      '为了产生准确的声音，我们需要校准扬声器。这需要连接到Internet（或USB麦克风）的智能手机。你有方便吗？\\n',\r\n    'zh-HK':\r\n      '為了產生準確的聲音，我們需要校準揚聲器。這需要連接到Internet（或USB麥克風）的智能手機。你有方便嗎？\\n',\r\n    ja: '正確なサウンドを生成するには、スピーカーを調整する必要があります。これには、インターネット（またはUSBマイク）に接続されたスマートフォンが必要です。便利ですか？\\n',\r\n    ko: '정확한 사운드를 생성하려면 라우드 스피커를 교정해야합니다. 인터넷에 연결된 스마트 폰 (또는 USB 마이크)이 필요합니다. 편리한 사람이 있습니까?\\n',\r\n  },\r\n  RC_soundCalibrationNeedsIPhone: {\r\n    'en-US':\r\n      'To produce accurate sound, we need to calibrate the loudspeakers. This requires a smartphone connected to the internet. Do you have one handy? \\n',\r\n    de: 'Um einen genauen Klang zu erzeugen, müssen wir die Lautsprecher kalibrieren. Dies erfordert ein Smartphone, das mit dem Internet verbunden ist. Hast du eine Handy?\\n',\r\n    fr: 'Pour produire un son précis, nous devons calibrer les haut-parleurs. Cela nécessite un smartphone connecté à Internet. Avez-vous un à portée de main?\\n',\r\n    es: 'Para producir un sonido preciso, necesitamos calibrar los altavoces. Esto requiere un teléfono inteligente conectado a Internet. ¿Tienes uno a mano?\\n',\r\n    pt: 'Para produzir som preciso, precisamos calibrar os alto -falantes. Isso requer um smartphone conectado à Internet. Você tem um útil?\\n',\r\n    it: 'Per produrre un suono accurato, dobbiamo calibrare gli altoparlanti. Ciò richiede uno smartphone connesso a Internet. Hai uno a portata di mano?\\n',\r\n    ro: 'Pentru a produce un sunet precis, trebuie să calibrăm difuzoarele. Acest lucru necesită un smartphone conectat la internet. Ai unul la îndemână?\\n',\r\n    pl: 'Aby wytworzyć dokładny dźwięk, musimy skalibrować głośniki. Wymaga to smartfona podłączonego do Internetu. Czy masz jeden przydatny?\\n',\r\n    ru: 'Чтобы получить точный звук, нам нужно калибровать громкоговорители. Это требует смартфона, подключенного к Интернету. У тебя есть одна удобная?\\n',\r\n    hy: 'Acc շգրիտ ձայն տալու համար հարկավոր է տրամաչափել բարձրախոսները: Սա պահանջում է սմարթֆոն, որը միացված է ինտերնետին: Դուք ունեք մեկ հարմար:\\n',\r\n    fi: 'Tarkan äänen tuottamiseksi meidän on kalibroida kaiuttimet. Tämä vaatii älypuhelimen, joka on kytketty Internetiin. Onko sinulla yksi kätevä?\\n',\r\n    ka: 'ზუსტი ხმის შესაქმნელად, ჩვენ უნდა დავასახელოთ დინამიკები. ეს მოითხოვს ინტერნეტთან დაკავშირებულ სმარტფონს. ერთი მოსახერხებელი გაქვს?\\n',\r\n    he: 'כדי להפיק צליל מדויק, עלינו לכייל את הרמקולים. זה דורש סמארטפון המחובר לאינטרנט. יש לך שימושי?\\n',\r\n    ar: 'لإنتاج صوت دقيق ، نحتاج إلى معايرة مكبرات الصوت. هذا يتطلب هاتفًا ذكيًا متصلاً بالإنترنت. هل لديك واحد في متناول يدي؟\\n',\r\n    ur: 'درست آواز پیدا کرنے کے ل we ، ہمیں لاؤڈ اسپیکر کو کیلیبریٹ کرنے کی ضرورت ہے۔ اس کے لئے انٹرنیٹ سے منسلک اسمارٹ فون کی ضرورت ہے۔ کیا آپ کے پاس ایک آسان ہے؟\\n',\r\n    hi: 'सटीक ध्वनि का उत्पादन करने के लिए, हमें लाउडस्पीकरों को जांचने की आवश्यकता है। इसके लिए इंटरनेट से जुड़े एक स्मार्टफोन की आवश्यकता होती है। क्या आपके पास एक काम है?\\n',\r\n    ta: 'துல்லியமான ஒலியை உருவாக்க, நாம் ஒலிபெருக்கிகளை அளவீடு செய்ய வேண்டும். இதற்கு இணையத்துடன் இணைக்கப்பட்ட ஸ்மார்ட்போன் தேவைப்படுகிறது. உங்களிடம் ஒரு எளிது இருக்கிறதா?\\n',\r\n    ml: 'കൃത്യമായ ശബ്ദം ഉത്പാദിപ്പിക്കാൻ, ഞങ്ങൾ ഉച്ചഭാഷിണികളെ കാലിബ്രേറ്റ് ചെയ്യേണ്ടതുണ്ട്. ഇതിന് ഇന്റർനെറ്റിലേക്ക് കണക്റ്റുചെയ്തിരിക്കുന്ന ഒരു സ്മാർട്ട്ഫോൺ ആവശ്യമാണ്. നിങ്ങൾക്ക് ഒരു ഹാൻഡി ഉണ്ടോ?\\n',\r\n    te: 'ఖచ్చితమైన ధ్వనిని ఉత్పత్తి చేయడానికి, మేము లౌడ్‌స్పీకర్లను క్రమాంకనం చేయాలి. దీనికి ఇంటర్నెట్‌కు కనెక్ట్ చేయబడిన స్మార్ట్‌ఫోన్ అవసరం. మీకు ఒక సులభ ఉందా?\\n',\r\n    kn: 'ನಿಖರವಾದ ಧ್ವನಿಯನ್ನು ಉತ್ಪಾದಿಸಲು, ನಾವು ಧ್ವನಿವರ್ಧಕಗಳನ್ನು ಮಾಪನಾಂಕ ನಿರ್ಣಯಿಸಬೇಕಾಗಿದೆ. ಇದಕ್ಕೆ ಇಂಟರ್ನೆಟ್ಗೆ ಸಂಪರ್ಕ ಹೊಂದಿದ ಸ್ಮಾರ್ಟ್ಫೋನ್ ಅಗತ್ಯವಿದೆ. ನೀವು ಒಂದು ಸೂಕ್ತವಾಗಿದ್ದೀರಾ?\\n',\r\n    bn: 'সঠিক শব্দ উত্পাদন করতে, আমাদের লাউডস্পিকারগুলি ক্যালিব্রেট করতে হবে। এর জন্য ইন্টারনেটে সংযুক্ত একটি স্মার্টফোন প্রয়োজন। তোমার কি এক হাত আছে?\\n',\r\n    id: 'Untuk menghasilkan suara yang akurat, kita perlu mengkalibrasi pengeras suara. Ini membutuhkan smartphone yang terhubung ke internet. Apakah Anda punya satu berguna?\\n',\r\n    'zh-CN':\r\n      '为了产生准确的声音，我们需要校准扬声器。这需要连接到Internet的智能手机。你有方便吗？\\n',\r\n    'zh-HK':\r\n      '為了產生準確的聲音，我們需要校準揚聲器。這需要連接到Internet的智能手機。你有方便嗎？\\n',\r\n    ja: '正確なサウンドを生成するには、スピーカーを調整する必要があります。これには、インターネットに接続されたスマートフォンが必要です。便利ですか？\\n',\r\n    ko: '정확한 사운드를 생성하려면 라우드 스피커를 교정해야합니다. 인터넷에 연결된 스마트 폰이 필요합니다. 편리한 사람이 있습니까?\\n',\r\n  },\r\n  RC_soundCalibrationNo: {\r\n    'en-US': 'No, end experiment now.',\r\n    de: 'Nein, Ende Experiment jetzt.',\r\n    fr: 'Non, Expérience finale maintenant.',\r\n    es: 'No, finaliza el experimento ahora.',\r\n    pt: 'Não, experimento final agora.',\r\n    it: 'No, End Experiment ora.',\r\n    ro: 'Nu, End Experiment acum.',\r\n    pl: 'Nie, końcowe eksperyment teraz.',\r\n    ru: 'Нет, конечный эксперимент сейчас.',\r\n    hy: 'Ոչ, հիմա ավարտեք փորձը:',\r\n    fi: 'Ei, loppukoe nyt.',\r\n    ka: 'არა, დაასრულეთ ექსპერიმენტი ახლა.',\r\n    he: 'לא, ניסוי סיום עכשיו.',\r\n    ar: 'لا ، تجربة نهاية الآن.',\r\n    ur: 'نہیں ، اب آخری تجربہ۔',\r\n    hi: 'नहीं, अब अंत प्रयोग।',\r\n    ta: 'இல்லை, இப்போது இறுதி பரிசோதனை.',\r\n    ml: 'ഇല്ല, ഇപ്പോൾ അവസാന പരീക്ഷണം.',\r\n    te: 'లేదు, ఇప్పుడు ప్రయోగం ముగింపు.',\r\n    kn: 'ಇಲ್ಲ, ಈಗ ಪ್ರಯೋಗವನ್ನು ಕೊನೆಗೊಳಿಸಿ.',\r\n    bn: 'না, এখন শেষ পরীক্ষা।',\r\n    id: 'Tidak, akhiri percobaan sekarang.',\r\n    'zh-CN': '不，现在结束实验。',\r\n    'zh-HK': '不，現在結束實驗。',\r\n    ja: 'いいえ、実験を終えてください。',\r\n    ko: '아니요, 이제 실험을 끝내십시오.',\r\n  },\r\n  RC_soundCalibrationQR: {\r\n    'en-US':\r\n      \"For the best sound calibration, please maximize your computer's sound volume now, before calibration, and then don't touch the volume until the end of the experiment.\\nWhen the QR code appears below, point your smartphone camera at it, and click the link that appears on your smartphone screen. Then follow the instructions on the smartphone screen.\\n——————————————————————————————————————————\\nQUIET PLEASE! NOW RECORDING. DO NOT TOUCH THE VOLUME CONTROL.\\n——————————————————————————————————————————\\nPROBLEM?                                                                                                                                 \\n1. The main web page running EasyEyes on your laptop uses the webRTC protocol to talk to the QR-linked webpage on your smartphone. This protocol seeks out the best of several ways to connect. The best is when your phone and computer are both on the same WiFi network.\\n                                                                                                                                 \\n2. If your smartphone reports an error in the connection, try quitting and restarting the smpartphone browser, or even restarting the smpartphone.\\n                                                                                                                             \\n3. It's rare, but, if the sound doesn't play, or, after it plays, no Proceed button appears, it means the calibration failed. You can try again by refreshing this browser page. That usually does the trick.\",\r\n    de: 'Für die beste Klangkalibrierung maximieren Sie bitte das Klangvolumen Ihres Computers vor der Kalibrierung und berühren Sie dann das Volumen erst am Ende des Experiments.\\nWenn der QR -Code unten angezeigt wird, weisen Sie Ihre Smartphone -Kamera auf und klicken Sie auf den Link, der auf Ihrem Smartphone -Bildschirm angezeigt wird. Befolgen Sie dann die Anweisungen auf dem Smartphone -Bildschirm.\\n—————————————————————————————————————————————————————————————————————————————————————–\\nRUHIG BITTE! Jetzt aufnehmen. Berühren Sie die Lautstärkekontrolle nicht.\\n—————————————————————————————————————————————————————————————————————————————————————–\\nPROBLEM?\\n1. Die Hauptwebseite, die Easyeyes auf Ihrem Laptop ausführt, verwendet das WebRTC-Protokoll, um mit der QR-verknüpften Webseite auf Ihrem Smartphone zu sprechen. Dieses Protokoll sucht nach den besten Möglichkeiten, um eine Verbindung herzustellen. Das Beste ist, wenn sich Ihr Telefon und Ihr Computer im selben WLAN -Netzwerk befinden.\\n                                                                                                                                 \\n2. Wenn Ihr Smartphone einen Fehler in der Verbindung meldet, beenden Sie den SmPartphone -Browser an und starten Sie das SmPartphone sogar neu.\\n                                                                                                                             \\n3. Es ist selten, aber wenn der Sound nicht spielt oder nach dem Spielen keine Taste erscheint, bedeutet dies, dass die Kalibrierung fehlgeschlagen ist. Sie können es erneut versuchen, indem Sie diese Browser -Seite aktualisieren. Das macht normalerweise den Trick.',\r\n    fr: \"Pour le meilleur étalonnage sonore, veuillez maximiser le volume sonore de votre ordinateur maintenant, avant l'étalonnage, puis ne touchez pas le volume jusqu'à la fin de l'expérience.\\nLorsque le code QR apparaît ci-dessous, pointez votre appareil photo pour smartphone et cliquez sur le lien qui apparaît sur l'écran de votre smartphone. Suivez ensuite les instructions sur l'écran du smartphone.\\n—————————————————————————————————————————————\\nSILENCE S.V.P! Maintenant enregistrer. Ne touchez pas le contrôle du volume.\\n—————————————————————————————————————————————\\nPROBLÈME?\\n1. La page Web principale exécutant EasyEyes sur votre ordinateur portable utilise le protocole WebBrTC pour parler à la page Web liée à QR sur votre smartphone. Ce protocole cherche le meilleur de plusieurs façons de se connecter. Le mieux est lorsque votre téléphone et votre ordinateur sont tous deux sur le même réseau WiFi.\\n                                                                                                                                 \\n2. Si votre smartphone signale une erreur dans la connexion, essayez de quitter et de redémarrer le navigateur SMPartphone ou même de redémarrer le SMPartphone.\\n                                                                                                                             \\n3. C'est rare, mais, si le son ne joue pas, ou, après son jeu, aucun bouton de procédure n'apparaît, cela signifie que l'étalonnage a échoué. Vous pouvez réessayer en rafraîchissant cette page de navigateur. Cela fait généralement l'affaire.\",\r\n    es: 'Para obtener la mejor calibración de sonido, maximice el volumen de sonido de su computadora ahora, antes de la calibración, y luego no toque el volumen hasta el final del experimento.\\nCuando el código QR aparezca a continuación, apunte a la cámara de su teléfono inteligente y haga clic en el enlace que aparece en la pantalla de su teléfono inteligente. Luego siga las instrucciones en la pantalla del teléfono inteligente.\\n——————————————————————————————————————————————\\n¡SILENCIO POR FAVOR! Ahora grabando. No toque el control de volumen.\\n——————————————————————————————————————————————\\n¿PROBLEMA?\\n1. La página web principal que ejecuta EasyEyes en su computadora portátil utiliza el protocolo WEBRTC para hablar con la página web vinculada a QR en su teléfono inteligente. Este protocolo busca lo mejor de varias formas de conectarse. Lo mejor es cuando su teléfono y computadora están en la misma red WiFi.\\n                                                                                                                                 \\n2. Si su teléfono inteligente informa un error en la conexión, intente dejar de fumar y reiniciar el navegador SMPartPhone, o incluso reiniciar el teléfono SMPART.\\n                                                                                                                             \\n3. Es raro, pero, si el sonido no se reproduce o, después de que se reproduce, no aparece el botón proceder, significa que la calibración falló. Puede intentarlo nuevamente actualizando esta página del navegador. Eso generalmente hace el truco.',\r\n    pt: 'Para a melhor calibração de som, maximize o volume de som do seu computador agora, antes da calibração e, em seguida, não toque no volume até o final do experimento.\\nQuando o código QR aparecer abaixo, aponte sua câmera de smartphone e clique no link que aparece na tela do seu smartphone. Em seguida, siga as instruções na tela do smartphone.\\n————————————————————————————————————————————\\nQUIETO POR FAVOR! Agora gravação. Não toque no controle de volume.\\n————————————————————————————————————————————\\nPROBLEMA?\\n1. A principal página da web executando o Easyeyes no seu laptop usa o protocolo WebRTC para conversar com a página da web vinculada ao QR no seu smartphone. Este protocolo procura o melhor de várias maneiras de se conectar. O melhor é quando o telefone e o computador estão na mesma rede wifi.\\n                                                                                                                                 \\n2. Se o seu smartphone relatar um erro na conexão, tente desistir e reiniciar o navegador SMPartphone ou até mesmo reiniciar o smpartphone.\\n                                                                                                                             \\n3. É raro, mas, se o som não reproduzir, ou, depois de tocar, nenhum botão de processo aparece, significa que a calibração falhou. Você pode tentar novamente refrescando esta página do navegador. Isso geralmente faz o truque.',\r\n    it: \"Per la migliore calibrazione del suono, massimizza ora il volume del suono del computer, prima della calibrazione, quindi non toccare il volume fino alla fine dell'esperimento.\\nQuando il codice QR viene visualizzato di seguito, punta la fotocamera per smartphone e fai clic sul collegamento che appare sullo schermo dello smartphone. Quindi seguire le istruzioni sullo schermo dello smartphone.\\n——————————————————————————————————————————————\\nSILENZIO PREGO! Ora registrazione. Non toccare il controllo del volume.\\n——————————————————————————————————————————————\\nPROBLEMA?\\n1. La pagina Web principale che esegue EasyEyes sul tuo laptop utilizza il protocollo WebRTC per parlare con la pagina Web legata al QR sul tuo smartphone. Questo protocollo cerca il meglio di diversi modi per connettersi. Il meglio è quando il telefono e il computer sono entrambi sulla stessa rete WiFi.\\n                                                                                                                                 \\n2. Se il tuo smartphone segnala un errore nella connessione, prova a smettere e riavviare il browser SMPARTphone o addirittura riavviare SMPARTphone.\\n                                                                                                                             \\n3. È raro, ma, se il suono non suona o, dopo che riproduce, non appare il pulsante di procedimento, significa che la calibrazione non è riuscita. Puoi riprovare aggiornando questa pagina del browser. Questo di solito fa il trucco.\",\r\n    ro: 'Pentru cea mai bună calibrare a sunetului, vă rugăm să maximizați acum volumul de sunet al computerului dvs., înainte de calibrare, apoi nu atingeți volumul până la sfârșitul experimentului.\\nCând apare codul QR mai jos, indicați camera smartphone -ului dvs. și faceți clic pe linkul care apare pe ecranul smartphone -ului. Apoi urmați instrucțiunile de pe ecranul smartphone -ului.\\n—————————————————————————————————————————————-\\nVĂ ROG LINIȘTE! Acum înregistrare. Nu atingeți controlul volumului.\\n—————————————————————————————————————————————-\\nPROBLEMĂ?\\n1. Pagina web principală care rulează EasyEyes pe laptopul dvs. folosește protocolul WebRTC pentru a vorbi cu pagina web legată de QR de pe smartphone-ul dvs. Acest protocol caută cele mai bune moduri de conectare. Cel mai bun este atunci când telefonul și computerul dvs. sunt ambele pe aceeași rețea WiFi.\\n                                                                                                                                 \\n2. Dacă smartphone -ul dvs. raportează o eroare în conexiune, încercați să renunțați și să reporniți browserul SMPARTPhone sau chiar să reporniți SMPartphone.\\n                                                                                                                             \\n3. Este rar, dar, dacă sunetul nu se joacă, sau, după ce se joacă, nu apare niciun buton continuu, înseamnă că calibrarea a eșuat. Puteți încerca din nou reîmprospătarea acestei pagini de browser. Asta de obicei face trucul.',\r\n    pl: 'Aby uzyskać najlepszą kalibrację dźwięku, maksymalizuj teraz głośność dźwięku komputera, przed kalibracją, a następnie nie dotykaj głośności do końca eksperymentu.\\nGdy kod QR pojawi się poniżej, skieruj na niego aparat smartfona i kliknij link, który pojawi się na ekranie smartfona. Następnie postępuj zgodnie z instrukcjami na ekranie smartfona.\\n——————————————————————————————————————————\\nCISZA PROSZĘ! Teraz nagrywanie. Nie dotykaj kontroli głośności.\\n——————————————————————————————————————————\\nPROBLEM?\\n1. Główna strona internetowa z łatwością na laptopie korzysta z protokołu WebRTC do rozmowy z stroną internetową połączoną przez QR na smartfonie. Ten protokół poszukuje najlepszych z kilku sposobów połączenia. Najlepsze jest to, że telefon i komputer znajdują się w tej samej sieci Wi -Fi.\\n                                                                                                                                 \\n2. Jeśli smartfon zgłosi błąd w połączeniu, spróbuj rzucić palenie i ponowne uruchomienie przeglądarki SMPartphone, a nawet ponownie uruchomić SMPartphone.\\n                                                                                                                             \\n3. Jest to rzadkie, ale jeśli dźwięk nie odtwarza lub, po odtworzeniu, nie pojawia się przycisk Przejdź, oznacza to, że kalibracja nie powiodła się. Możesz spróbować ponownie, odświeżając tę ​​stronę przeglądarki. To zwykle robi sprawę.',\r\n    ru: 'Для лучшей калибровки звука, пожалуйста, максимизируйте объем звука вашего компьютера, перед калибровкой, а затем не касайтесь громкости до конца эксперимента.\\nКогда QR -код появляется ниже, укажите на него камеру смартфона и нажмите на ссылку, которая появляется на экране вашего смартфона. Затем следуйте инструкциям на экране смартфона.\\n——————————————————————————————————————\\nТИХО, ПОЖАЛУЙСТА! Сейчас запись. Не касайтесь регулятора громкости.\\n——————————————————————————————————————\\nПРОБЛЕМА?\\n1. Основная веб-страница, работающая в easyeyes на вашем ноутбуке, использует протокол WEBRTC, чтобы поговорить с QR-связанной веб-страницей на вашем смартфоне. Этот протокол ищет лучших из нескольких способов подключения. Лучше всего, когда ваш телефон и компьютер находятся в одной сети Wi -Fi.\\n                                                                                                                                 \\n2. Если ваш смартфон сообщает об ошибке в подключении, попробуйте покинуть и перезагрузить браузер SMPARTPHone или даже перезапустить SMPARTPHone.\\n                                                                                                                             \\n3. Это редко, но, если звук не играет, или, после его воспроизведения, кнопка прохождения не появляется, это означает, что калибровка не удалась. Вы можете попробовать еще раз, освежив эту страницу браузера. Это обычно делает.',\r\n    hy: 'Ձայնի լավագույն տրամաչափման համար խնդրում ենք առավելագույնի հասցնել ձեր համակարգչի ձայնի ձայնը այժմ, նախքան տրամաչափումը, եւ ապա մի շոշափեք ծավալը մինչեւ փորձի ավարտը:\\nԵրբ QR ծածկագիրը հայտնվում է ստորեւ, մատնանշեք ձեր սմարթֆոնների տեսախցիկը դրա վրա եւ կտտացրեք հղումը, որը հայտնվում է ձեր սմարթֆոնների էկրանին: Այնուհետեւ հետեւեք սմարթֆոնների էկրանին ցուցումներին:\\n-------------------------------\\nԼՌՈՒԹՅՈՒՆ ԽՆԴՐՈՒՄ ԵՄ! Հիմա ձայնագրվում է: Մի դիպչեք ձայնի վերահսկմանը:\\n-------------------------------\\nԽնդիր?\\n1. Ձեր նոութբուքում գտնվող EasyEyes- ի հիմնական վեբ էջը օգտագործում է WebRTC արձանագրությունը `ձեր սմարթֆոնի վրա QR-Linked կայքում խոսելու համար: Այս արձանագրությունը որոնում է միացման մի քանի եղանակների լավագույն միջոցները: Լավագույնն այն է, երբ ձեր հեռախոսն ու համակարգիչը երկուսն էլ նույն WiFi ցանցում են:\\n                                                                                                                                 \\n2. Եթե ձեր սմարթֆոնը միացման մեջ սխալ է հաղորդում, փորձեք թողնել եւ վերագործարկել SMPartphone զննարկիչը կամ նույնիսկ վերագործարկել SMParthone- ը:\\n                                                                                                                             \\n3. Հազվադեպ է, բայց եթե ձայնը չի խաղում, կամ դրանում ներկայացվում է, որեւէ ընթացքի կոճակը չի երեւում: Կարող եք կրկին փորձել `թարմացնելով այս զննարկչի էջը: Դա սովորաբար անում է հնարքը:',\r\n    fi: 'Saat parhaan äänen kalibroinnin maksimoi tietokoneesi äänenvoimakkuus nyt ennen kalibrointia ja älä kosketa äänenvoimakkuutta ennen kokeen loppua.\\nKun QR -koodi näkyy alla, osoita älypuhelinkamera siihen ja napsauta älypuhelimen näytöllä näkyvää linkkiä. Seuraa sitten älypuhelimen näytön ohjeita.\\n———————————————————————————————————————————————————————————\\nHILJAA KIITOS! Nyt nauhoittaminen. Älä kosketa äänenvoimakkuutta.\\n———————————————————————————————————————————————————————————\\nONGELMA?\\n1. Kannettavan tietokoneen helpojen pääverkkosivu käyttää WEBRTC-protokollaa puhuaksesi älypuhelimesi QR-linkitetylle verkkosivulle. Tämä protokolla etsii parasta useista tavoista muodostaa yhteys. Paras on, kun puhelimesi ja tietokoneesi ovat molemmat samassa WiFi -verkossa.\\n                                                                                                                                 \\n2. Jos älypuhelimesi ilmoittaa virheen yhteydessä, yritä lopettaa ja käynnistää SMPONTHONE -selaimen uudelleen tai jopa käynnistää SMPartphone uudelleen.\\n                                                                                                                             \\n3. Se on harvinaista, mutta jos ääni ei soita tai sen pelaamisen jälkeen ei tule painiketta, se tarkoittaa, että kalibrointi epäonnistui. Voit yrittää uudelleen virkistämällä tätä selain -sivua. Se yleensä tekee tempun.',\r\n    ka: 'საუკეთესო ხმის კალიბრაციისთვის, გთხოვთ, მაქსიმალურად გაზარდოთ თქვენი კომპიუტერის ხმის მოცულობა ახლა, კალიბრაციამდე, შემდეგ კი არ შეეხოთ მოცულობას ექსპერიმენტის დასრულებამდე.\\nროდესაც QR კოდი ქვემოთ გამოჩნდება, მიუთითეთ თქვენი სმარტფონის კამერა მასზე და დააჭირეთ ბმულს, რომელიც ჩანს თქვენი სმარტფონის ეკრანზე. შემდეგ მიჰყევით ინსტრუქციებს სმარტფონის ეკრანზე.\\n——————————————————————————————————————————\\nᲒᲗᲮᲝᲕᲗ ᲩᲣᲛᲐᲓ! ახლა ჩაწერა. არ შეეხოთ მოცულობის კონტროლს.\\n——————————————————————————————————————————\\nპრობლემა?\\n1. თქვენი ლეპტოპის EasyEyes– ის მთავარი ვებ-გვერდი იყენებს WebRTC პროტოკოლს, რომ ისაუბროს QR– სთან დაკავშირებულ ვებ-გვერდზე თქვენს სმარტფონზე. ეს პროტოკოლი ეძებს დაკავშირების რამდენიმე გზას. საუკეთესოა, როდესაც თქვენი ტელეფონი და კომპიუტერი ორივე ერთსა და იმავე WiFi ქსელშია.\\n                                                                                                                                 \\n2. თუ თქვენი სმარტფონი აფიქსირებს შეცდომას კავშირში, შეეცადეთ დატოვოთ და გადატვირთოთ SMPartphone ბრაუზერი, ან თუნდაც SMPARTPHPHONE- ის გადატვირთვა.\\n                                                                                                                             \\n3. ეს იშვიათია, მაგრამ, თუ ხმა არ თამაშობს, ან, მას შემდეგ, რაც თამაშობს, ღილაკი არ გამოჩნდება, ეს ნიშნავს, რომ კალიბრაცია ვერ მოხერხდა. შეგიძლიათ კვლავ სცადოთ ამ ბრაუზერის გვერდის განახლებით. ეს ჩვეულებრივ ხრიკს აკეთებს.',\r\n    he: 'לקבלת כיול הקול הטוב ביותר, אנא מקסים את עוצמת הקול של המחשב שלך כעת, לפני הכיול, ואז אל תיגע בנפח עד סוף הניסוי.\\nכאשר קוד ה- QR מופיע למטה, כוון את מצלמת הסמארטפון שלך ולחץ על הקישור שמופיע במסך הסמארטפון שלך. לאחר מכן עקוב אחר ההוראות במסך הסמארטפון.\\n—————————————————————————————————————————————— -\\nשקט בבקשה! עכשיו הקלטה. אל תיגע בבקרת עוצמת הקול.\\n—————————————————————————————————————————————— -\\nבְּעָיָה?\\n1. דף האינטרנט הראשי המריץ EasyEyes במחשב הנייד שלך משתמש בפרוטוקול WebRTC כדי לדבר עם דף האינטרנט המקושר ל- QR בסמארטפון שלך. פרוטוקול זה מחפש את הטוב ביותר מכמה דרכים להתחבר. הטוב ביותר הוא כאשר הטלפון והמחשב שלך שניהם באותה רשת WiFi.\\n                                                                                                                                 \\n.\\n                                                                                                                             \\n3. זה נדיר, אבל אם הצליל לא מנגן, או אחרי שהוא משחק, שום כפתור המשך לא מופיע, זה אומר שהכיול נכשל. אתה יכול לנסות שוב על ידי רענון דף הדפדפן הזה. זה בדרך כלל עושה את העבודה.',\r\n    ar: 'للحصول على أفضل معايرة صوتية ، يرجى زيادة حجم صوت جهاز الكمبيوتر الخاص بك الآن ، قبل المعايرة ، ثم لا تلمس مستوى الصوت حتى نهاية التجربة.\\nعندما يظهر رمز الاستجابة السريعة أدناه ، قم بإشارة كاميرا الهاتف الذكي على ذلك ، وانقر فوق الرابط الذي يظهر على شاشة الهاتف الذكي. ثم اتبع التعليمات على شاشة الهاتف الذكي.\\n——————————————————————————————————————————————————————————————————————————————————————————————————————–\\nيرجى الهدوء! التسجيل الآن. لا تلمس التحكم في مستوى الصوت.\\n——————————————————————————————————————————————————————————————————————————————————————————————————————–\\nمشكلة؟\\n1. تستخدم صفحة الويب الرئيسية التي تعمل Easyeyes على الكمبيوتر المحمول بروتوكول WEBRTC للتحدث إلى صفحة الويب المرتبطة بـ QR على هاتفك الذكي. يبحث هذا البروتوكول عن أفضل الطرق العديدة للاتصال. الأفضل هو عندما يكون هاتفك وجهاز الكمبيوتر على نفس شبكة WiFi.\\n                                                                                                                                 \\n2. إذا أبلغ هاتفك الذكي عن خطأ في الاتصال ، فحاول الإقلاع عن متصفح SmpartPhone وإعادة تشغيله ، أو حتى إعادة تشغيل SmpartPhone.\\n                                                                                                                             \\n3. إنه أمر نادر الحدوث ، ولكن إذا لم يتم تشغيل الصوت ، أو بعد أن يلعبه ، لا يظهر زر المتابعة ، فهذا يعني أن المعايرة فشلت. يمكنك المحاولة مرة أخرى عن طريق تحديث صفحة المتصفح هذه. عادة ما يفعل الخدعة.',\r\n    ur: 'بہترین صوتی انشانکن کے ل please ، براہ کرم انشانکن سے پہلے اپنے کمپیوٹر کی آواز کا حجم زیادہ سے زیادہ کریں ، اور پھر تجربے کے اختتام تک حجم کو نہ لگائیں۔\\nجب کیو آر کوڈ نیچے ظاہر ہوتا ہے تو ، اپنے اسمارٹ فون کیمرہ کو اس پر اشارہ کریں ، اور آپ کے اسمارٹ فون اسکرین پر ظاہر ہونے والے لنک پر کلک کریں۔ پھر اسمارٹ فون اسکرین پر دی گئی ہدایات پر عمل کریں۔\\n————————————————————————————————————————————————————-\\nخاموش! اب ریکارڈنگ۔ حجم کنٹرول کو مت چھوئے۔\\n————————————————————————————————————————————————————-\\nمسئلہ؟\\n1. آپ کے لیپ ٹاپ پر ایزیئز چلانے والا مرکزی ویب صفحہ آپ کے اسمارٹ فون پر کیو آر سے منسلک ویب پیج سے بات کرنے کے لئے WEBRTC پروٹوکول کا استعمال کرتا ہے۔ اس پروٹوکول سے رابطہ قائم کرنے کے متعدد طریقوں کی تلاش ہے۔ سب سے بہتر یہ ہے کہ جب آپ کا فون اور کمپیوٹر دونوں ایک ہی وائی فائی نیٹ ورک پر ہوں۔\\n                                                                                                                                 \\nIf. اگر آپ کا اسمارٹ فون کنکشن میں کسی غلطی کی اطلاع دیتا ہے تو ، ایس ایم پارٹ فون براؤزر کو چھوڑنے اور دوبارہ شروع کرنے کی کوشش کریں ، یا یہاں تک کہ ایس ایم پی آر ٹی فون کو دوبارہ شروع کریں۔\\n                                                                                                                             \\nIt. یہ نایاب ہے ، لیکن ، اگر آواز نہیں چلتی ہے ، یا ، اس کے کھیلنے کے بعد ، کوئی آگے بڑھنے کا بٹن ظاہر نہیں ہوتا ہے ، اس کا مطلب ہے کہ انشانکن ناکام ہوگیا۔ آپ اس براؤزر کے صفحے کو تازہ دم کرکے دوبارہ کوشش کر سکتے ہیں۔ یہ عام طور پر چال چلاتا ہے۔',\r\n    hi: 'सबसे अच्छा ध्वनि अंशांकन के लिए, कृपया अपने कंप्यूटर की ध्वनि मात्रा को अधिकतम करें, अब अंशांकन से पहले, और फिर प्रयोग के अंत तक वॉल्यूम को स्पर्श न करें।\\nजब क्यूआर कोड नीचे दिखाई देता है, तो अपने स्मार्टफोन कैमरे को उस पर इंगित करें, और आपके स्मार्टफोन स्क्रीन पर दिखाई देने वाले लिंक पर क्लिक करें। फिर स्मार्टफोन स्क्रीन पर निर्देशों का पालन करें।\\n————————————————————————————————————————————————————————————\\nकृपया शांत! अब रिकॉर्डिंग। वॉल्यूम कंट्रोल को न स्पर्श करें।\\n————————————————————————————————————————————————————————————\\nसंकट?\\n1. आपके लैपटॉप पर Easyeyes चलाने वाला मुख्य वेब पेज आपके स्मार्टफोन पर QR- लिंक्ड वेबपेज से बात करने के लिए WEBRTC प्रोटोकॉल का उपयोग करता है। यह प्रोटोकॉल कनेक्ट करने के लिए कई तरीकों से सर्वश्रेष्ठ चाहता है। सबसे अच्छा है जब आपका फोन और कंप्यूटर दोनों एक ही वाईफाई नेटवर्क पर हैं।\\n                                                                                                                                 \\n2. यदि आपका स्मार्टफोन कनेक्शन में त्रुटि की रिपोर्ट करता है, तो SmpartPhone ब्राउज़र को छोड़ने और पुनरारंभ करने का प्रयास करें, या यहां तक ​​कि SmpartPhone को पुनरारंभ करने का प्रयास करें।\\n                                                                                                                             \\n3. यह दुर्लभ है, लेकिन, अगर ध्वनि नहीं खेलती है, या, खेलने के बाद, कोई आगे बढ़ने वाला बटन प्रकट नहीं होता है, तो इसका मतलब है कि अंशांकन विफल हो गया। आप इस ब्राउज़र पेज को रिफ्रेश करके फिर से प्रयास कर सकते हैं। यह आमतौर पर चाल करता है।',\r\n    ta: 'சிறந்த ஒலி அளவுத்திருத்தத்திற்கு, அளவுத்திருத்தத்திற்கு முன், இப்போது உங்கள் கணினியின் ஒலி அளவை அதிகரிக்கவும், பின்னர் பரிசோதனையின் இறுதி வரை அளவைத் தொட வேண்டாம்.\\nQR குறியீடு கீழே தோன்றும்போது, ​​உங்கள் ஸ்மார்ட்போன் கேமராவை சுட்டிக்காட்டி, உங்கள் ஸ்மார்ட்போன் திரையில் தோன்றும் இணைப்பைக் கிளிக் செய்க. ஸ்மார்ட்போன் திரையில் உள்ள வழிமுறைகளைப் பின்பற்றவும்.\\n———————————————————————————————————————————\\nதயவுசெய்து அமைதியாக இருக்கவும்! இப்போது பதிவு. தொகுதி கட்டுப்பாட்டைத் தொட வேண்டாம்.\\n———————————————————————————————————————————\\nபிரச்சனை?\\n1. உங்கள் லேப்டாப்பில் ஈஸிஇயிஸ் இயங்கும் பிரதான வலைப்பக்கம் உங்கள் ஸ்மார்ட்போனில் QR- இணைக்கப்பட்ட வலைப்பக்கத்துடன் பேச WEBRTC நெறிமுறையைப் பயன்படுத்துகிறது. இந்த நெறிமுறை இணைக்க பல வழிகளில் சிறந்ததை நாடுகிறது. உங்கள் தொலைபேசி மற்றும் கணினி இரண்டும் ஒரே வைஃபை நெட்வொர்க்கில் இருக்கும்போது சிறந்தது.\\n                                                                                                                                 \\n2. உங்கள் ஸ்மார்ட்போன் இணைப்பில் பிழையைப் புகாரளித்தால், SMPARTPHONE உலாவியை விட்டு வெளியேறவும் அல்லது SMPARTPONE ஐ மறுதொடக்கம் செய்யவும் முயற்சிக்கவும்.\\n                                                                                                                             \\n3. இது அரிதானது, ஆனால், ஒலி இயங்கவில்லை என்றால், அல்லது, அது விளையாடிய பிறகு, எந்த தொடர பொத்தானும் தோன்றவில்லை என்றால், அளவுத்திருத்தம் தோல்வியடைந்தது என்று அர்த்தம். இந்த உலாவி பக்கத்தை புதுப்பிப்பதன் மூலம் மீண்டும் முயற்சி செய்யலாம். அது பொதுவாக தந்திரத்தை செய்கிறது.',\r\n    ml: 'മികച്ച ശബ്ദത്തിനായി, കാലിബ്രേഷന് മുമ്പായി നിങ്ങളുടെ കമ്പ്യൂട്ടറിന്റെ ശബ്ദ വോളിയം പരമാവധി വർദ്ധിപ്പിക്കുക, തുടർന്ന് പരീക്ഷണത്തിന്റെ അവസാനം വരെ വോളിയം തൊടരുത്.\\nQR കോഡ് ചുവടെ ദൃശ്യമാകുമ്പോൾ, അതിൽ നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ ക്യാമറ ചൂണ്ടിക്കാണിക്കുക, കൂടാതെ നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ സ്ക്രീനിൽ ദൃശ്യമാകുന്ന ലിങ്കിൽ ക്ലിക്കുചെയ്യുക. സ്മാർട്ട്ഫോൺ സ്ക്രീനിലെ നിർദ്ദേശങ്ങൾ പാലിക്കുക.\\n----------------------------------------------------------------------------------------------------------------------\\nദയവായി നിശബ്ദമാകൂ! ഇപ്പോൾ റെക്കോർഡിംഗ്. വോളിയം നിയന്ത്രണത്തിൽ തൊടരുത്.\\n----------------------------------------------------------------------------------------------------------------------\\nപ്രശ്നം?\\n1. നിങ്ങളുടെ ലാപ്ടോപ്പിൽ എളുപ്പമുള്ള വെബ് പേജ് നിങ്ങളുടെ സ്മാർട്ട്ഫോണിലെ ക്യുആർ-ലിങ്കുചെയ്ത വെബ്പേജിനോട് സംസാരിക്കാൻ നിങ്ങളുടെ ലാപ്ടോപ്പിൽ പ്രവർത്തിക്കുന്ന വെബ്ആർടിസി പ്രോട്ടോക്കോൾ ഉപയോഗിക്കുന്നു. ഈ പ്രോട്ടോക്കോൾ കണക്റ്റുചെയ്യാനുള്ള നിരവധി മാർഗങ്ങൾ തേടുന്നു. നിങ്ങളുടെ ഫോണും കമ്പ്യൂട്ടറും ഒരേ വൈഫൈ നെറ്റ്വർക്കിൽ ആയിരിക്കുമ്പോൾ മികച്ചതാണ്.\\n                                                                                                                                 \\n2. കണക്ഷനിൽ നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ ഒരു പിശക് റിപ്പോർട്ടുചെയ്യുന്നുവെങ്കിൽ, SMPARTPhone ബ്ര browser സർ ഉപേക്ഷിച്ച് പുനരാരംഭിക്കാൻ ശ്രമിക്കുക, അല്ലെങ്കിൽ SMPARTPhone പുനരാരംഭിക്കുക.\\n                                                                                                                             \\n3. ഇത് അപൂർവമാണ്, പക്ഷേ, ശബ്ദം കളിക്കുന്നില്ലെങ്കിൽ, അല്ലെങ്കിൽ, അത് പ്ലേ ചെയ്യുമ്പോൾ, മുന്നോട്ട് പോയതിനുശേഷം, മുന്നോട്ട് ബട്ടൺ ദൃശ്യമാകുന്നില്ല, അതിനർത്ഥം കാലിബ്രേഷൻ പരാജയപ്പെട്ടു എന്നാണ്. ഈ ബ്ര browser സർ പേജ് പുതുക്കുന്നതിലൂടെ നിങ്ങൾക്ക് വീണ്ടും ശ്രമിക്കാം. അത് സാധാരണയായി തന്ത്രം ചെയ്യുന്നു.',\r\n    te: 'ఉత్తమమైన ధ్వని క్రమాంకనం కోసం, దయచేసి క్రమాంకనానికి ముందు, ఇప్పుడు మీ కంప్యూటర్ యొక్క ధ్వని వాల్యూమ్‌ను పెంచుకోండి, ఆపై ప్రయోగం ముగిసే వరకు వాల్యూమ్‌ను తాకవద్దు.\\nQR కోడ్ క్రింద కనిపించినప్పుడు, మీ స్మార్ట్‌ఫోన్ కెమెరాను దానిపై సూచించండి మరియు మీ స్మార్ట్‌ఫోన్ స్క్రీన్‌లో కనిపించే లింక్‌ను క్లిక్ చేయండి. అప్పుడు స్మార్ట్‌ఫోన్ స్క్రీన్‌పై సూచనలను అనుసరించండి.\\n——————————————————————————————————————————————\\nదయచేసి నిశ్శబ్ధంగా ఉండండి! ఇప్పుడు రికార్డింగ్. వాల్యూమ్ నియంత్రణను తాకవద్దు.\\n——————————————————————————————————————————————\\nసమస్య?\\n1. మీ ల్యాప్‌టాప్‌లో ఈజీయెస్ నడుస్తున్న ప్రధాన వెబ్ పేజీ మీ స్మార్ట్‌ఫోన్‌లో QR- లింక్డ్ వెబ్‌పేజీతో మాట్లాడటానికి WEBRTC ప్రోటోకాల్‌ను ఉపయోగిస్తుంది. ఈ ప్రోటోకాల్ కనెక్ట్ చేయడానికి అనేక మార్గాల్లో ఉత్తమమైన వాటిని కోరుతుంది. మీ ఫోన్ మరియు కంప్యూటర్ రెండూ ఒకే వైఫై నెట్‌వర్క్‌లో ఉన్నప్పుడు ఉత్తమమైనది.\\n                                                                                                                                 \\n2. మీ స్మార్ట్‌ఫోన్ కనెక్షన్‌లో లోపం నివేదించినట్లయితే, SMPARTPHONE BROWSER ని విడిచిపెట్టడానికి మరియు పున art ప్రారంభించడానికి లేదా SMPARTPHONE ని పున art ప్రారంభించడానికి ప్రయత్నించండి.\\n                                                                                                                             \\n3. ఇది చాలా అరుదు, కానీ, ధ్వని ఆడకపోతే, లేదా, అది ఆడిన తర్వాత, కొనసాగిన బటన్ కనిపించదు, దీని అర్థం క్రమాంకనం విఫలమైంది. ఈ బ్రౌజర్ పేజీని రిఫ్రెష్ చేయడం ద్వారా మీరు మళ్ళీ ప్రయత్నించవచ్చు. అది సాధారణంగా ట్రిక్ చేస్తుంది.',\r\n    kn: 'ಅತ್ಯುತ್ತಮ ಧ್ವನಿ ಮಾಪನಾಂಕ ನಿರ್ಣಯಕ್ಕಾಗಿ, ದಯವಿಟ್ಟು ಮಾಪನಾಂಕ ನಿರ್ಣಯದ ಮೊದಲು ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್‌ನ ಧ್ವನಿ ಪರಿಮಾಣವನ್ನು ಗರಿಷ್ಠಗೊಳಿಸಿ, ತದನಂತರ ಪ್ರಯೋಗದ ಅಂತ್ಯದವರೆಗೆ ಪರಿಮಾಣವನ್ನು ಮುಟ್ಟಬೇಡಿ.\\nಕ್ಯೂಆರ್ ಕೋಡ್ ಕೆಳಗೆ ಕಾಣಿಸಿಕೊಂಡಾಗ, ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಕ್ಯಾಮೆರಾವನ್ನು ಅದರಲ್ಲಿ ತೋರಿಸಿ, ಮತ್ತು ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಪರದೆಯಲ್ಲಿ ಗೋಚರಿಸುವ ಲಿಂಕ್ ಅನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ. ನಂತರ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಪರದೆಯಲ್ಲಿ ಸೂಚನೆಗಳನ್ನು ಅನುಸರಿಸಿ.\\n———————————————————————————————————————————————\\nದಯವಿಟ್ಟು ನಿಷ್ಯಬ್ಧವಾಗಿರಿ! ಈಗ ರೆಕಾರ್ಡಿಂಗ್. ಪರಿಮಾಣ ನಿಯಂತ್ರಣವನ್ನು ಮುಟ್ಟಬೇಡಿ.\\n———————————————————————————————————————————————\\nಸಮಸ್ಯೆ?\\n1. ನಿಮ್ಮ ಲ್ಯಾಪ್‌ಟಾಪ್‌ನಲ್ಲಿ ಚಲಿಸುವ ಮುಖ್ಯ ವೆಬ್ ಪುಟವು ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್‌ನಲ್ಲಿರುವ ಕ್ಯೂಆರ್-ಲಿಂಕ್ಡ್ ವೆಬ್‌ಪುಟದೊಂದಿಗೆ ಮಾತನಾಡಲು ವೆಬ್‌ಆರ್‌ಟಿಸಿ ಪ್ರೋಟೋಕಾಲ್ ಅನ್ನು ಬಳಸುತ್ತದೆ. ಈ ಪ್ರೋಟೋಕಾಲ್ ಸಂಪರ್ಕಿಸಲು ಹಲವಾರು ಮಾರ್ಗಗಳನ್ನು ಹುಡುಕುತ್ತದೆ. ನಿಮ್ಮ ಫೋನ್ ಮತ್ತು ಕಂಪ್ಯೂಟರ್ ಎರಡೂ ಒಂದೇ ವೈಫೈ ನೆಟ್‌ವರ್ಕ್‌ನಲ್ಲಿರುವಾಗ ಉತ್ತಮವಾಗಿದೆ.\\n                                                                                                                                 \\n2. ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಸಂಪರ್ಕದಲ್ಲಿ ದೋಷವನ್ನು ವರದಿ ಮಾಡಿದರೆ, ಎಸ್‌ಎಂಪಾರ್ಟ್‌ಫೋನ್ ಬ್ರೌಸರ್ ಅನ್ನು ತ್ಯಜಿಸಲು ಮತ್ತು ಮರುಪ್ರಾರಂಭಿಸಲು ಪ್ರಯತ್ನಿಸಿ, ಅಥವಾ ಎಸ್‌ಎಂಪಾರ್ಟ್‌ಫೋನ್ ಅನ್ನು ಮರುಪ್ರಾರಂಭಿಸಿ.\\n                                                                                                                             \\n3. ಇದು ಅಪರೂಪ, ಆದರೆ, ಧ್ವನಿ ಆಡದಿದ್ದರೆ, ಅಥವಾ, ಅದು ಆಡಿದ ನಂತರ, ಯಾವುದೇ ಮುಂದುವರಿಕೆ ಬಟನ್ ಕಾಣಿಸುವುದಿಲ್ಲ, ಇದರರ್ಥ ಮಾಪನಾಂಕ ನಿರ್ಣಯ ವಿಫಲವಾಗಿದೆ. ಈ ಬ್ರೌಸರ್ ಪುಟವನ್ನು ರಿಫ್ರೆಶ್ ಮಾಡುವ ಮೂಲಕ ನೀವು ಮತ್ತೆ ಪ್ರಯತ್ನಿಸಬಹುದು. ಅದು ಸಾಮಾನ್ಯವಾಗಿ ಟ್ರಿಕ್ ಮಾಡುತ್ತದೆ.',\r\n    bn: \"সেরা শব্দ ক্রমাঙ্কনের জন্য, দয়া করে ক্রমাঙ্কণের আগে আপনার কম্পিউটারের শব্দ ভলিউমটি এখনই সর্বাধিক করুন এবং তারপরে পরীক্ষার শেষ না হওয়া পর্যন্ত ভলিউমটি স্পর্শ করবেন না।\\nযখন কিউআর কোডটি নীচে প্রদর্শিত হবে, এতে আপনার স্মার্টফোন ক্যামেরাটি নির্দেশ করুন এবং আপনার স্মার্টফোনের স্ক্রিনে প্রদর্শিত লিঙ্কটি ক্লিক করুন। তারপরে স্মার্টফোনের স্ক্রিনে নির্দেশাবলী অনুসরণ করুন।\\n——————————————————————————————————————————————————————————————————————————————————————————————— আছে—————————————————————————————————— আছে—————————————————————————————————————— আছে——————————————————————————————————— আছে————————————————————————————————————————— আছে——————————————————— -\\nশান্ত দয়া করে! এখন রেকর্ডিং। ভলিউম নিয়ন্ত্রণ স্পর্শ করবেন না।\\n——————————————————————————————————————————————————————————————————————————————————————————————— আছে—————————————————————————————————— আছে—————————————————————————————————————— আছে——————————————————————————————————— আছে————————————————————————————————————————— আছে——————————————————— -\\nসমস্যা?\\n1. আপনার ল্যাপটপে ইজিয়েস চলমান মূল ওয়েব পৃষ্ঠাটি আপনার স্মার্টফোনে কিউআর-লিঙ্কযুক্ত ওয়েবপৃষ্ঠায় কথা বলতে ওয়েবআরটিসি প্রোটোকল ব্যবহার করে। এই প্রোটোকলটি সংযোগের জন্য বেশ কয়েকটি উপায়ের সেরা সন্ধান করে। সেরাটি হ'ল যখন আপনার ফোন এবং কম্পিউটার উভয়ই একই ওয়াইফাই নেটওয়ার্কে থাকে।\\n                                                                                                                                 \\n২. যদি আপনার স্মার্টফোনটি সংযোগে কোনও ত্রুটির প্রতিবেদন করে তবে এসএমপার্টফোন ব্রাউজারটি ছাড়তে এবং পুনরায় চালু করার চেষ্টা করুন, বা এমনকি এসএমপিআরফোনটি পুনরায় চালু করার চেষ্টা করুন।\\n                                                                                                                             \\n৩. এটি বিরল, তবে, যদি শব্দটি বাজায় না, বা এটি বাজানোর পরে, কোনও প্রসেস বোতাম উপস্থিত না হয়, এর অর্থ ক্রমাঙ্কন ব্যর্থ হয়েছে। আপনি এই ব্রাউজার পৃষ্ঠাটি সতেজ করে আবার চেষ্টা করতে পারেন। যে সাধারণত কৌতুক আছে।\",\r\n    id: 'Untuk kalibrasi suara terbaik, silakan memaksimalkan volume suara komputer Anda sekarang, sebelum kalibrasi, dan kemudian jangan menyentuh volume sampai akhir percobaan.\\nKetika kode QR muncul di bawah, arahkan kamera ponsel cerdas Anda ke sana, dan klik tautan yang muncul di layar ponsel cerdas Anda. Kemudian ikuti instruksi di layar ponsel cerdas.\\n—————————————————————————————————————————————-\\nHARAP TENANG! Sekarang merekam. Jangan menyentuh kontrol volume.\\n—————————————————————————————————————————————-\\nMASALAH?\\n1. Halaman web utama yang menjalankan EyyEyes di laptop Anda menggunakan protokol WEBRTC untuk berbicara dengan halaman web yang terkait dengan QR di ponsel cerdas Anda. Protokol ini mencari yang terbaik dari beberapa cara untuk terhubung. Yang terbaik adalah saat ponsel dan komputer Anda berada di jaringan WiFi yang sama.\\n                                                                                                                                 \\n2. Jika ponsel cerdas Anda melaporkan kesalahan dalam koneksi, cobalah berhenti dan mulai ulang browser SMPartphone, atau bahkan memulai kembali SMPartphone.\\n                                                                                                                             \\n3. Ini jarang, tetapi, jika suaranya tidak diputar, atau, setelah diputar, tidak ada tombol proses yang muncul, itu berarti kalibrasi gagal. Anda dapat mencoba lagi dengan menyegarkan halaman browser ini. Itu biasanya triknya.',\r\n    'zh-CN':\r\n      '为了进行最佳的声音校准，请在校准之前最大化计算机的声音音量，然后在实验结束之前触摸音量。\\n当QR码出现在下面的QR码时，将智能手机相机指向其，然后单击智能手机屏幕上出现的链接。然后按照智能手机屏幕上的说明进行操作。\\n—————————————————————————————————————————\\n请安静！现在录制。不要触摸音量控制。\\n—————————————————————————————————————————\\n问题？\\n1.在笔记本电脑上运行EasyEyes的主网页使用WEBRTC协议与智能手机上的QR链接网页通话。该协议为连接的几种方法提供了最好的选择。最好的是，当您的手机和计算机都在同一WiFi网络上时。\\n                                                                                                                                 \\n2.如果您的智能手机在连接中报告了错误，请尝试退出和重新启动SMPARTPHONE浏览器，甚至重新启动SMPARTPHONE。\\n                                                                                                                             \\n3.很少见，但是，如果声音不播放，或者在播放后，没有出现“继续”按钮，则意味着校准失败。您可以通过刷新此浏览器页面来重试。通常可以解决问题。',\r\n    'zh-HK':\r\n      '為了進行最佳的聲音校準，請在校準之前最大化計算機的聲音音量，然後在實驗結束之前觸摸音量。\\n當QR碼出現在下面的QR碼時，將智能手機相機指向其，然後單擊智能手機屏幕上出現的鏈接。然後按照智能手機屏幕上的說明進行操作。\\n—————————————————————————————————————————\\n請安靜！現在錄製。不要觸摸音量控制。\\n—————————————————————————————————————————\\n問題？\\n1.在筆記本電腦上運行EasyEyes的主網頁使用WEBRTC協議與智能手機上的QR鏈接網頁通話。該協議為連接的幾種方法提供了最好的選擇。最好的是，當您的手機和計算機都在同一WiFi網絡上時。\\n                                                                                                                                 \\n2.如果您的智能手機在連接中報告了錯誤，請嘗試退出和重新啟動SMPARTPHONE瀏覽器，甚至重新啟動SMPARTPHONE。\\n                                                                                                                             \\n3.很少見，但是，如果聲音不播放，或者在播放後，沒有出現“繼續”按鈕，則意味著校準失敗。您可以通過刷新此瀏覽器頁面來重試。通常可以解決問題。',\r\n    ja: '最高のサウンドキャリブレーションについては、キャリブレーション前にコンピューターのサウンドボリュームを最大化してから、実験の終了までボリュームに触れないでください。\\nQRコードが以下に表示されたら、スマートフォンカメラをポイントし、スマートフォン画面に表示されるリンクをクリックします。次に、スマートフォン画面の指示に従ってください。\\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\nしずかにしてください！今録音。ボリュームコントロールに触れないでください。\\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\n問題？\\n1.ラップトップでEasyEyesを実行しているメインのWebページでは、WeBRTCプロトコルを使用して、スマートフォンのQRリンクされたWebページと通信します。このプロトコルは、接続するためのいくつかの方法の最善を模索しています。一番いいのは、携帯電話とコンピューターが同じWiFiネットワーク上にあるときです。\\n                                                                                                                                 \\n2.スマートフォンが接続のエラーを報告した場合は、SMPARTPHONEブラウザを終了して再起動したり、SMPARTPHONEを再起動したりしてみてください。\\n                                                                                                                             \\n3.まれですが、サウンドが再生されない場合、または再生後、続行ボタンが表示されない場合、キャリブレーションが失敗したことを意味します。このブラウザページを更新して、再試行できます。それは通常、トリックを行います。',\r\n    ko: '최고의 사운드 교정을 위해서는 교정 전에 컴퓨터의 사운드 볼륨을 최대화 한 다음 실험이 끝날 때까지 볼륨을 만지지 마십시오.\\nQR 코드가 아래에 나타나면 스마트 폰 카메라를 가리키고 스마트 폰 화면에 나타나는 링크를 클릭하십시오. 그런 다음 스마트 폰 화면의 지침을 따르십시오.\\n——————————————————————————————————————————\\n조용해! 이제 녹음. 볼륨 컨트롤에 닿지 마십시오.\\n——————————————————————————————————————————\\n문제?\\n1. 랩톱에서 EasyEeyes를 실행하는 기본 웹 페이지는 WebRTC 프로토콜을 사용하여 스마트 폰의 QR 연결 웹 페이지와 대화합니다. 이 프로토콜은 여러 가지 방법을 최대한 활용합니다. 가장 좋은 점은 휴대 전화와 컴퓨터가 동일한 WiFi 네트워크에있을 때입니다.\\n                                                                                                                                 \\n2. 스마트 폰이 연결에 오류가보고되면 SMPartphone 브라우저를 종료하고 다시 시작하거나 SMPartPhone을 다시 시작하십시오.\\n                                                                                                                             \\n3. 드물지만 사운드가 재생되지 않거나 재생 후 진행 버튼이 나타나지 않으면 교정이 실패 함을 의미합니다. 이 브라우저 페이지를 새로 고쳐서 다시 시도 할 수 있습니다. 그것은 일반적으로 속임수를합니다.',\r\n  },\r\n  RC_soundCalibrationRedo: {\r\n    'en-US':\r\n      'Alas, the RMS fitting error of 111 dB exceeds the 222 dB tolerance, so the loudspeaker must be calibrated again.',\r\n    de: 'Alas ist der RMS -Anpassungsfehler von 111 dB die 222 dB -Toleranz überschreitet, sodass der Lautsprecher erneut kalibriert werden muss.',\r\n    fr: \"Hélas, l'erreur d'ajustement RMS de 111 dB dépasse la tolérance de 222 dB, de sorte que le haut-parleur doit être à nouveau calibré.\",\r\n    es: 'Por desgracia, el error de ajuste RMS de 111 dB excede la tolerancia de 222 dB, por lo que el altavoz debe calibrarse nuevamente.',\r\n    pt: 'Infelizmente, o erro de ajuste do RMS de 111 dB excede a tolerância de 222 dB, de modo que o alto -falante deve ser calibrado novamente.',\r\n    it: \"Ahimè, l'errore di adattamento RMS di 111 dB supera la tolleranza di 222 dB, quindi l'altoparlante deve essere nuovamente calibrato.\",\r\n    ro: 'Din păcate, eroarea de montare RMS de 111 dB depășește toleranța de 222 dB, astfel încât difuzorul trebuie calibrat din nou.',\r\n    pl: 'Niestety, błąd dopasowania RMS 111 dB przekracza tolerancję 222 dB, więc głośnik musi zostać ponownie skalibrowany.',\r\n    ru: 'Увы, среднеквадратичная ошибка подгонки 111 дБ превышает толерантность к 222 дБ, поэтому громкоговоритель должен быть снова откалиброван.',\r\n    hy: 'Ավաղ, 111 դԲ-ի RMS տեղավորվող սխալը գերազանցում է 222 DB հանդուրժողականությունը, ուստի բարձրախոսը պետք է նորից տրամաչափվի:',\r\n    fi: 'Valitettavasti RMS: n sovitusvirhe 111 dB ylittää 222 dB -toleranssin, joten kaiutin on kalibroitava uudelleen.',\r\n    ka: 'სამწუხაროდ, RMS- ის შესაფერისი შეცდომა 111 დბ -ს აღემატება 222 დბ ტოლერანტობას, ამიტომ დინამიკი კვლავ უნდა იყოს დაკალიბრებული.',\r\n    he: 'אבוי, שגיאת התאמת ה- RMS של 111 dB עולה על הסובלנות של 222 dB, כך שיש לכייל שוב את הרמקול.',\r\n    ar: 'للأسف ، يتجاوز خطأ تركيب RMS البالغ 111 ديسيبل التسامح 222 ديسيبل ، لذلك يجب معايرة مكبر الصوت مرة أخرى.',\r\n    ur: 'افسوس ، 111 ڈی بی کی آر ایم ایس فٹنگ کی غلطی 222 ڈی بی رواداری سے تجاوز کرتی ہے ، لہذا لاؤڈ اسپیکر کو دوبارہ کیلیبریٹ کرنا چاہئے۔',\r\n    hi: 'काश, 111 डीबी की आरएमएस फिटिंग त्रुटि 222 डीबी सहिष्णुता से अधिक है, इसलिए लाउडस्पीकर को फिर से कैलिब्रेट किया जाना चाहिए।',\r\n    ta: 'ஐயோ, 111 டி.பியின் ஆர்.எம்.எஸ் பொருத்துதல் பிழை 222 டிபி சகிப்புத்தன்மையை மீறுகிறது, எனவே ஒலிபெருக்கி மீண்டும் அளவீடு செய்யப்பட வேண்டும்.',\r\n    ml: 'അയ്യോ, 111 ഡിബിയുടെ ആർഎംഎസ് ഫിറ്റിംഗ് പിശക് 222 ഡിബി ടോളറൻസിനേക്കാൾ കവിയുന്നു, അതിനാൽ ഉച്ചഭാഷിണി വീണ്ടും കാലിബ്രേറ്റ് ചെയ്യണം.',\r\n    te: 'అయ్యో, 111 dB యొక్క RMS ఫిట్టింగ్ లోపం 222 dB టాలరెన్స్‌ను మించిపోయింది, కాబట్టి లౌడ్‌స్పీకర్ మళ్లీ క్రమాంకనం చేయాలి.',\r\n    kn: 'ಅಯ್ಯೋ, 111 ಡಿಬಿಯ ಆರ್ಎಂಎಸ್ ಫಿಟ್ಟಿಂಗ್ ದೋಷವು 222 ಡಿಬಿ ಸಹಿಷ್ಣುತೆಯನ್ನು ಮೀರಿದೆ, ಆದ್ದರಿಂದ ಧ್ವನಿವರ್ಧಕವನ್ನು ಮತ್ತೆ ಮಾಪನಾಂಕ ಮಾಡಬೇಕು.',\r\n    bn: 'হায়, 111 ডিবি এর আরএমএস ফিটিং ত্রুটি 222 ডিবি সহনশীলতা ছাড়িয়ে গেছে, সুতরাং লাউডস্পিকারটি অবশ্যই আবার ক্যালিব্রেট করতে হবে।',\r\n    id: 'Sayangnya, kesalahan pemasangan RMS 111 dB melebihi toleransi 222 dB, sehingga pengeras suara harus dikalibrasi lagi.',\r\n    'zh-CN': 'las，RMS拟合误差为111 dB超过222 dB的公差，因此必须再次校准扬声器。',\r\n    'zh-HK': 'las，RMS擬合誤差為111 dB超過222 dB的公差，因此必須再次校準揚聲器。',\r\n    ja: '残念ながら、111 dBのRMSフィッティングエラーは222 dB許容範囲を超えているため、スピーカーを再度調整する必要があります。',\r\n    ko: '아아, 111 dB의 RMS 피팅 오류는 222 dB 공차를 초과하므로 라우드 스피커를 다시 보정해야합니다.',\r\n  },\r\n  RC_soundCalibrationTitle: {\r\n    'en-US': 'Measure Sound Level at 1000 Hz',\r\n    de: 'Messen Sie den Schallpegel bei 1000 Hz',\r\n    fr: 'Mesurer le niveau sonore à 1000 Hz',\r\n    es: 'Medir el nivel de sonido a 1000 Hz',\r\n    pt: 'Meça o nível de som a 1000 Hz',\r\n    it: 'Misura il livello del suono a 1000 Hz',\r\n    ro: 'Măsurați nivelul sonor la 1000 Hz',\r\n    pl: 'Zmierz poziom dźwięku przy 1000 Hz',\r\n    ru: 'Измерьте уровень звука при 1000 Гц',\r\n    hy: 'Չափել ձայնի մակարդակը 1000 Հց',\r\n    fi: 'Mittaa äänitaso 1000 Hz: llä',\r\n    ka: 'გაზომეთ ხმის დონე 1000 ჰც -ზე',\r\n    he: 'למדוד את רמת הקול במהירות של 1000 הרץ',\r\n    ar: 'قياس مستوى الصوت عند 1000 هرتز',\r\n    ur: '1000 ہرٹج پر صوتی سطح کی پیمائش کریں',\r\n    hi: '1000 हर्ट्ज पर ध्वनि स्तर को मापें',\r\n    ta: 'ஒலி அளவை 1000 ஹெர்ட்ஸில் அளவிடவும்',\r\n    ml: '1000 HZ- ൽ ശബ്ദ നില അളക്കുക',\r\n    te: '1000 Hz వద్ద ధ్వని స్థాయిని కొలవండి',\r\n    kn: '1000 Hz ನಲ್ಲಿ ಧ್ವನಿ ಮಟ್ಟವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: '1000 হার্জেডে শব্দ স্তর পরিমাপ করুন',\r\n    id: 'Ukur level suara pada 1000 Hz',\r\n    'zh-CN': '测量1000 Hz的声音水平',\r\n    'zh-HK': '測量1000 Hz的聲音水平',\r\n    ja: '1000 Hzで音レベルを測定します',\r\n    ko: '1000Hz에서 사운드 레벨을 측정하십시오',\r\n  },\r\n  RC_soundCalibrationTitle1000Hz: {\r\n    'en-US': 'Measure Sound Level at 1000 Hz',\r\n    de: 'Messen Sie den Schallpegel bei 1000 Hz',\r\n    fr: 'Mesurer le niveau sonore à 1000 Hz',\r\n    es: 'Medir el nivel de sonido a 1000 Hz',\r\n    pt: 'Meça o nível de som a 1000 Hz',\r\n    it: 'Misura il livello del suono a 1000 Hz',\r\n    ro: 'Măsurați nivelul sonor la 1000 Hz',\r\n    pl: 'Zmierz poziom dźwięku przy 1000 Hz',\r\n    ru: 'Измерьте уровень звука при 1000 Гц',\r\n    hy: 'Չափել ձայնի մակարդակը 1000 Հց',\r\n    fi: 'Mittaa äänitaso 1000 Hz: llä',\r\n    ka: 'გაზომეთ ხმის დონე 1000 ჰც -ზე',\r\n    he: 'למדוד את רמת הקול במהירות של 1000 הרץ',\r\n    ar: 'قياس مستوى الصوت عند 1000 هرتز',\r\n    ur: '1000 ہرٹج پر صوتی سطح کی پیمائش کریں',\r\n    hi: '1000 हर्ट्ज पर ध्वनि स्तर को मापें',\r\n    ta: 'ஒலி அளவை 1000 ஹெர்ட்ஸில் அளவிடவும்',\r\n    ml: '1000 HZ- ൽ ശബ്ദ നില അളക്കുക',\r\n    te: '1000 Hz వద్ద ధ్వని స్థాయిని కొలవండి',\r\n    kn: '1000 Hz ನಲ್ಲಿ ಧ್ವನಿ ಮಟ್ಟವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: '1000 হার্জেডে শব্দ স্তর পরিমাপ করুন',\r\n    id: 'Ukur level suara pada 1000 Hz',\r\n    'zh-CN': '测量1000 Hz的声音水平',\r\n    'zh-HK': '測量1000 Hz的聲音水平',\r\n    ja: '1000 Hzで音レベルを測定します',\r\n    ko: '1000Hz에서 사운드 레벨을 측정하십시오',\r\n  },\r\n  RC_soundCalibrationTitleAllHz: {\r\n    'en-US': 'Measure Sound Level at All Frequencies',\r\n    de: 'Messen Sie die Schallpegel bei allen Frequenzen',\r\n    fr: 'Mesure le niveau sonore à toutes les fréquences',\r\n    es: 'Medir el nivel de sonido en todas las frecuencias',\r\n    pt: 'Meça o nível de som em todas as frequências',\r\n    it: 'Misura il livello del suono a tutte le frequenze',\r\n    ro: 'Măsurați nivelul sunetului la toate frecvențele',\r\n    pl: 'Mierzyć poziom dźwięku na wszystkich częstotliwościach',\r\n    ru: 'Измерить уровень звука на всех частотах',\r\n    hy: 'Չափել ձայնի մակարդակը բոլոր հաճախականություններում',\r\n    fi: 'Mittaa äänitaso kaikilla taajuuksilla',\r\n    ka: 'გაზომეთ ხმის დონე ყველა სიხშირეზე',\r\n    he: 'למדוד רמת צליל בכל התדרים',\r\n    ar: 'قياس مستوى الصوت في جميع الترددات',\r\n    ur: 'تمام تعدد پر صوتی سطح کی پیمائش کریں',\r\n    hi: 'सभी आवृत्तियों पर ध्वनि स्तर को मापें',\r\n    ta: 'அனைத்து அதிர்வெண்களிலும் ஒலி அளவை அளவிடவும்',\r\n    ml: 'എല്ലാ ആവൃത്തികളിലും ശബ്ദ നില അളക്കുക',\r\n    te: 'అన్ని పౌన .పున్యాల వద్ద ధ్వని స్థాయిని కొలవండి',\r\n    kn: 'ಎಲ್ಲಾ ಆವರ್ತನಗಳಲ್ಲಿ ಧ್ವನಿ ಮಟ್ಟವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: 'সমস্ত ফ্রিকোয়েন্সিগুলিতে শব্দ স্তর পরিমাপ করুন',\r\n    id: 'Ukur level suara di semua frekuensi',\r\n    'zh-CN': '在所有频率上测量声音水平',\r\n    'zh-HK': '測量所有頻率的聲音',\r\n    ja: 'すべての周波数でサウンドレベルを測定します',\r\n    ko: '모든 주파수에서 사운드 레벨을 측정하십시오',\r\n  },\r\n  RC_soundCalibrationYes: {\r\n    'en-US': 'Yes, continue.',\r\n    de: 'Ja, weiter.',\r\n    fr: 'Oui, continuez.',\r\n    es: 'Sí, continúa.',\r\n    pt: 'Sim, continue.',\r\n    it: 'Sì, continua.',\r\n    ro: 'Da, continuă.',\r\n    pl: 'Tak, kontynuuj.',\r\n    ru: 'Да, продолжай.',\r\n    hy: 'Այո, շարունակեք:',\r\n    fi: 'Kyllä, jatka.',\r\n    ka: 'დიახ, გააგრძელეთ.',\r\n    he: 'כן, המשך.',\r\n    ar: 'نعم ، تابع.',\r\n    ur: 'ہاں ، جاری رکھیں۔',\r\n    hi: 'हाँ, जारी रखें।',\r\n    ta: 'ஆம், தொடரவும்.',\r\n    ml: 'അതെ, തുടരുക.',\r\n    te: 'అవును, కొనసాగించండి.',\r\n    kn: 'ಹೌದು, ಮುಂದುವರಿಸಿ.',\r\n    bn: 'হ্যাঁ, চালিয়ে যান।',\r\n    id: 'Ya, lanjutkan.',\r\n    'zh-CN': '是的，继续。',\r\n    'zh-HK': '是的，繼續。',\r\n    ja: 'はい、続行します。',\r\n    ko: '예, 계속하십시오.',\r\n  },\r\n  RC_soundRecording: {\r\n    'en-US': '🤫 Silence please. Now recording. Do not disturb.',\r\n    de: '🤫 Schweigen bitte. Jetzt aufnehmen. Bitte nicht stören.',\r\n    fr: \"🤫 Silence s'il vous plaît. Maintenant enregistrer. Ne pas déranger.\",\r\n    es: '🤫 Silencio por favor. Ahora grabando. No molestar.',\r\n    pt: '🤫 Silêncio, por favor. Agora gravação. Não perturbe.',\r\n    it: '🤫 Silenzio per favore. Ora registrazione. Non disturbare.',\r\n    ro: '🤫 Tăcerea te rog. Acum înregistrare. Nu deranjați.',\r\n    pl: '🤫 Cisza, proszę. Teraz nagrywanie. Nie przeszkadzać.',\r\n    ru: '🤫 Тишина, пожалуйста. Сейчас запись. Просьба не беспокоить.',\r\n    hy: '🤫 Լռություն խնդրում եմ: Հիմա ձայնագրվում է: Չխանգարել.',\r\n    fi: '🤫 Hiljaisu kiitos. Nyt nauhoittaminen. Älä häiritse.',\r\n    ka: '🤫 ჩუმად გთხოვთ. ახლა ჩაწერა. Არ შემაწუხოთ.',\r\n    he: '🤫 שתיקה בבקשה. עכשיו הקלטה. אל תפריע.',\r\n    ar: '🤫 الصمت من فضلك. التسجيل الآن. لا تخل.',\r\n    ur: '🤫 براہ کرم خاموشی اب ریکارڈنگ۔ پریشان نہ کرو.',\r\n    hi: '🤫 मौन कृपया। अब रिकॉर्डिंग। परेशान न करें।',\r\n    ta: 'தயவுசெய்து ம silence னம் தயவுசெய்து. இப்போது பதிவு. தொந்தரவு செய்யாதீர்.',\r\n    ml: 'ദയവായി നിശബ്ദത. ഇപ്പോൾ റെക്കോർഡിംഗ്. ബുദ്ധിമുട്ടിക്കരുത്.',\r\n    te: 'దయచేసి నిశ్శబ్దం దయచేసి. ఇప్పుడు రికార్డింగ్. డిస్టర్బ్ చేయకు.',\r\n    kn: 'ದಯವಿಟ್ಟು ಮೌನ. ಈಗ ರೆಕಾರ್ಡಿಂಗ್. ತೊಂದರೆ ಕೊಡಬೇಡಿ.',\r\n    bn: '🤫 নীরব দয়া করে। এখন রেকর্ডিং। বিরক্ত করবেন না.',\r\n    id: '🤫 Tolong hening. Sekarang merekam. Jangan ganggu.',\r\n    'zh-CN': '🤫请沉默。现在录制。请勿打扰。',\r\n    'zh-HK': '🤫請沉默。現在錄製。請勿打擾。',\r\n    ja: 'silence沈黙をお願いします。今録音。邪魔しないでください。',\r\n    ko: '🤫 침묵 해주세요. 이제 녹음. 방해하지 마.',\r\n  },\r\n  RC_backToExperimentWindow: {\r\n    'en-US':\r\n      'Progress is displayed in the main experiment window. Please go there now, by clicking the \"EasyEyes Experiment\" tab above.',\r\n    de: 'Der Fortschritt wird im Hauptfenster des Hauptversuchs angezeigt. Bitte gehen Sie jetzt dorthin, indem Sie oben auf die Registerkarte \"Easyeyes Experiment\" klicken.',\r\n    fr: 'Les progrès sont affichés dans la fenêtre principale de l\\'expérience. Veuillez y aller maintenant, en cliquant sur l\\'onglet \"EasyEyes Experiment\" ci-dessus.',\r\n    es: 'El progreso se muestra en la ventana del experimento principal. Vaya allí ahora, haciendo clic en la pestaña \"Experimento EasyEyes\" arriba.',\r\n    pt: 'O progresso é exibido na janela principal do experimento. Por favor, vá para lá agora, clicando na guia \"Easyeyes Experiment\" acima.',\r\n    it: 'I progressi vengono visualizzati nella finestra dell\\'esperimento principale. Vai lì ora, facendo clic sulla scheda \"EasyEyes Experiment\" sopra.',\r\n    ro: 'Progresul este afișat în fereastra experimentului principal. Vă rugăm să mergeți acolo acum, făcând clic pe fila „EasyEyes Experiment” de mai sus.',\r\n    pl: 'Postęp jest wyświetlany w głównym oknie eksperymentu. Proszę, idź tam teraz, klikając kartę „Easyeyes Experiment” powyżej.',\r\n    ru: 'Прогресс отображается в основном окне эксперимента. Пожалуйста, перейдите туда, нажав на вкладку «Easyeyes Experime».',\r\n    hy: 'Առաջընթացը ցուցադրվում է հիմնական փորձի պատուհանում: Խնդրում ենք հիմա գնալ այնտեղ, կտտացնելով վերեւում գտնվող «EaseEyes Experiment» ներդիրին:',\r\n    fi: 'Edistyminen näkyy pääkoe -ikkunassa. Mene sinne nyt napsauttamalla yllä olevaa \"Easyeyes -kokeilu\" -välilehteä.',\r\n    ka: 'პროგრესი ნაჩვენებია მთავარი ექსპერიმენტის ფანჯარაში. გთხოვთ, წახვიდეთ ახლა, დააჭირეთ ზემოთ მოცემულ \"Easyeyes Experiment\" ჩანართს.',\r\n    he: 'ההתקדמות מוצגת בחלון הניסוי הראשי. אנא סע לשם עכשיו, על ידי לחיצה על הכרטיסייה \"ניסוי EasyEyes\" למעלה.',\r\n    ar: 'يتم عرض التقدم في نافذة التجربة الرئيسية. يرجى الذهاب إلى هناك الآن ، من خلال النقر فوق علامة التبويب \"Easyeyes Experience\" أعلاه.',\r\n    ur: 'مرکزی تجربہ ونڈو میں پیشرفت ظاہر ہوتی ہے۔ براہ کرم اوپر \"ایزیئس تجربہ\" ٹیب پر کلک کرکے ابھی وہاں جائیں۔',\r\n    hi: 'प्रगति मुख्य प्रयोग विंडो में प्रदर्शित होती है। कृपया अब वहां जाएं, ऊपर \"Easyeyes प्रयोग\" टैब पर क्लिक करके।',\r\n    ta: 'முக்கிய சோதனை சாளரத்தில் முன்னேற்றம் காட்டப்படும். மேலே உள்ள \"எளிதான பரிசோதனை\" தாவலைக் கிளிக் செய்வதன் மூலம் இப்போது அங்கு செல்லுங்கள்.',\r\n    ml: 'പ്രധാന പരീക്ഷണ വിൻഡോയിൽ പുരോഗതി പ്രദർശിപ്പിക്കുന്നു. മുകളിലുള്ള \"ഈസിയേസ് പരീക്ഷണം\" ടാബിൽ ക്ലിക്കുചെയ്തുകൊണ്ട് ദയവായി ഇപ്പോൾ അവിടെ പോകുക.',\r\n    te: 'ప్రధాన ప్రయోగ విండోలో పురోగతి ప్రదర్శించబడుతుంది. పైన ఉన్న \"ఈజీయెస్ ప్రయోగం\" టాబ్‌ను క్లిక్ చేయడం ద్వారా దయచేసి ఇప్పుడు అక్కడికి వెళ్లండి.',\r\n    kn: 'ಪ್ರಗತಿಯನ್ನು ಮುಖ್ಯ ಪ್ರಯೋಗ ವಿಂಡೋದಲ್ಲಿ ಪ್ರದರ್ಶಿಸಲಾಗುತ್ತದೆ. ಮೇಲಿನ \"ಈಸಿ ಐಸ್ ಪ್ರಯೋಗ\" ಟ್ಯಾಬ್ ಅನ್ನು ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಈಗ ಅಲ್ಲಿಗೆ ಹೋಗಿ.',\r\n    bn: 'অগ্রগতি প্রধান পরীক্ষার উইন্ডোতে প্রদর্শিত হয়। উপরের \"ইজিয়েয়েস এক্সপেরিমেন্ট\" ট্যাবে ক্লিক করে দয়া করে এখনই সেখানে যান।',\r\n    id: 'Kemajuan ditampilkan di jendela percobaan utama. Silakan pergi ke sana sekarang, dengan mengklik tab \"EyyEyes Experiment\" di atas.',\r\n    'zh-CN': '进度显示在主实验窗口中。请单击上面的“ EasyEyes实验”选项卡，现在就去那里。',\r\n    'zh-HK': '進度顯示在主實驗窗口中。請單擊上面的“ EasyEyes實驗”選項卡，現在就去那裡。',\r\n    ja: 'メイン実験ウィンドウに進行状況が表示されます。上記の「Easyeyes Experiment」タブをクリックして、今すぐ行ってください。',\r\n    ko: '주요 실험 창에 진행이 표시됩니다. 위의 \"Easyeyes Experiment\"탭을 클릭하여 지금 가십시오.',\r\n  },\r\n  RC_starting: {\r\n    'en-US': 'Starting ...',\r\n    de: 'Beginnend ...',\r\n    fr: 'Commencer ...',\r\n    es: 'A partir de ...',\r\n    pt: 'Iniciando ...',\r\n    it: 'A partire da ...',\r\n    ro: 'Începând ...',\r\n    pl: 'Rozpoczęcie ...',\r\n    ru: 'Начало ...',\r\n    hy: 'Սկսելով ...',\r\n    fi: 'Aloita ...',\r\n    ka: 'დაწყებული ...',\r\n    he: 'מתחיל ...',\r\n    ar: 'ابتداء ...',\r\n    ur: 'شروع کرنا ...',\r\n    hi: 'शुरुआत ...',\r\n    ta: 'தொடங்குகிறது ...',\r\n    ml: 'തുടങ്ങുന്ന ...',\r\n    te: 'ప్రారంభం ...',\r\n    kn: 'ಆರಂಭಿಕ ...',\r\n    bn: 'শুরু ...',\r\n    id: 'Mulai ...',\r\n    'zh-CN': '开始...',\r\n    'zh-HK': '開始...',\r\n    ja: '開始...',\r\n    ko: '시작 ...',\r\n  },\r\n  RC_viewingBlindSpotCredit: {\r\n    'en-US':\r\n      'We enhanced the blindspot mapping of Li et al. (2020) by adding flicker and manual control.',\r\n    de: 'Wir haben die Blindspot -Zuordnung von Li et al. (2020) Durch Hinzufügen von Flackern und manueller Steuerung.',\r\n    fr: 'Nous avons amélioré la cartographie de Blindspot de Li et al. (2020) en ajoutant du scintillement et du contrôle manuel.',\r\n    es: 'Mejoramos el mapeo de punto ciego de Li et al. (2020) agregando parpadeo y control manual.',\r\n    pt: 'Aprimoramos o mapeamento de Li et al. (2020) Adicionando controle de lisca e manual.',\r\n    it: 'Abbiamo migliorato la mappatura cieca di Li et al. (2020) aggiungendo sfarfallio e controllo manuale.',\r\n    ro: 'Am îmbunătățit cartografierea Blindspot a Li și colab. (2020) prin adăugarea de pâlpâie și control manual.',\r\n    pl: 'Zwiększyliśmy mapowanie Blindspot Li i in. (2020), dodając migotanie i kontrolę ręczną.',\r\n    ru: 'Мы усилили картирование слепых пятен Li et al. (2020) путем добавления мерцания и ручного контроля.',\r\n    hy: 'Մենք բարձրացրեցինք Li et al- ի կույր կետը: (2020) ավելացնելով թարթիչ եւ ձեռքով հսկողություն:',\r\n    fi: 'Parannasimme Li et ai. (2020) lisäämällä välkkymistä ja manuaalista ohjausta.',\r\n    ka: 'ჩვენ გავაუმჯობესეთ Li et al. (2020) ციმციმისა და სახელმძღვანელო კონტროლის დამატებით.',\r\n    he: 'שיפרנו את מיפוי העיוורים של Li et al. (2020) על ידי הוספת הבהוב ושליטה ידנית.',\r\n    ar: 'قمنا بتحسين رسم الخرائط العمياء لـ Li et al. (2020) عن طريق إضافة وميض والسيطرة اليدوية.',\r\n    ur: 'ہم نے لی ایٹ ال کی بلائنڈ اسپاٹ میپنگ میں اضافہ کیا۔ (2020) فلکر اور دستی کنٹرول شامل کرکے۔',\r\n    hi: 'हमने ली एट अल के ब्लाइंडस्पॉट मैपिंग को बढ़ाया। (2020) फ़्लिकर और मैनुअल नियंत्रण जोड़कर।',\r\n    ta: 'லி மற்றும் பலரின் பிளைண்ட்ஸ்பாட் மேப்பிங்கை நாங்கள் மேம்படுத்தினோம். (2020) ஃப்ளிக்கர் மற்றும் கையேடு கட்டுப்பாட்டை சேர்ப்பதன் மூலம்.',\r\n    ml: 'ഞങ്ങൾ li et al al toon the the than thangined വർദ്ധിപ്പിച്ചു. (2020) സ്ലിക്കറും മാനുവൽ നിയന്ത്രണവും ചേർത്തുകൊണ്ട്.',\r\n    te: 'మేము లి మరియు ఇతరుల బ్లైండ్ స్పాట్ మ్యాపింగ్‌ను మెరుగుపరిచాము. (2020) ఫ్లికర్ మరియు మాన్యువల్ నియంత్రణను జోడించడం ద్వారా.',\r\n    kn: 'ನಾವು ಲಿ ಮತ್ತು ಇತರರ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್ ಮ್ಯಾಪಿಂಗ್ ಅನ್ನು ಹೆಚ್ಚಿಸಿದ್ದೇವೆ. (2020) ಫ್ಲಿಕರ್ ಮತ್ತು ಹಸ್ತಚಾಲಿತ ನಿಯಂತ್ರಣವನ್ನು ಸೇರಿಸುವ ಮೂಲಕ.',\r\n    bn: 'আমরা লি এট আল এর ব্লাইন্ডস্পট ম্যাপিং বাড়িয়েছি। (2020) ফ্লিকার এবং ম্যানুয়াল নিয়ন্ত্রণ যুক্ত করে।',\r\n    id: 'Kami meningkatkan pemetaan blindspot Li et al. (2020) dengan menambahkan flicker dan kontrol manual.',\r\n    'zh-CN': '我们增强了Li等人的盲点映射。 （2020）通过添加闪烁和手动控制。',\r\n    'zh-HK': '我們增強了Li等人的盲點映射。 （2020）通過添加閃爍和手動控制。',\r\n    ja: 'Li et alのブラインドスポットマッピングを強化しました。 （2020）フリッカーと手動制御を追加することにより。',\r\n    ko: '우리는 Li et al. (2020) 깜박임 및 수동 제어를 추가함으로써.',\r\n  },\r\n  RC_viewingBlindSpotRejected: {\r\n    'en-US':\r\n      'Sorry, the most recent left and right measurements were inconsistent. Can we try again? Keep one eye closed. Focus on the cross hairs and monitor the flashing dot out of the corner of your eye. Slide the dot left and right until it disappears into your blindspot, and then hit RETURN. Maintain your viewing distance as you test both eyes.',\r\n    de: 'Entschuldigung, die neuesten linken und rechten Messungen waren inkonsistent. Können wir es erneut versuchen? Halten Sie ein Auge geschlossen. Konzentrieren Sie sich auf die Kreuzhaare und überwachen Sie den blinkenden Punkt aus dem Augenwinkel. Schieben Sie den Punkt nach links und rechts, bis er in Ihren Blindspot verschwindet, und drücken Sie dann die Rückkehr. Behalten Sie Ihren Betrachtungsabstand bei, während Sie beide Augen testen.',\r\n    fr: \"Désolé, les mesures les plus récentes gauche et droite étaient incohérentes. Pouvons-nous réessayer? Gardez un œil fermé. Concentrez-vous sur les poils et surveillez le point clignotant du coin de votre œil. Faites glisser le point à gauche et à droite jusqu'à ce qu'il disparaisse dans votre point mort, puis appuyez sur Retour. Maintenez votre distance de visualisation lorsque vous testez les deux yeux.\",\r\n    es: 'Lo sentimos, las mediciones más recientes de izquierda y derecha fueron inconsistentes. ¿Podemos intentarlo de nuevo? Mantenga un ojo cerrado. Concéntrese en la cruz y monitoree el punto intermitente en la esquina del ojo. Deslice el punto hacia la izquierda y hacia la derecha hasta que desaparezca en su punto ciego y luego presione el retorno. Mantenga su distancia de visión mientras prueba ambos ojos.',\r\n    pt: 'Desculpe, as medições mais recentes de esquerda e direita foram inconsistentes. Podemos tentar de novo? Mantenha um olho fechado. Concentre -se nos cabelos cruzados e monitore o ponto piscando pelo canto do olho. Deslize o ponto para a esquerda e para a direita até que ele desapareça no seu ponto cego e depois pressione o retorno. Mantenha sua distância de visualização ao testar os dois olhos.',\r\n    it: \"Mi dispiace, le misurazioni più recenti di sinistra e destra erano incoerenti. Possiamo riprovare? Tieni un occhio chiuso. Concentrati sui peli incrociati e monitora il punto lampeggiante dall'angolo dell'occhio. Fai scorrere il punto a sinistra e a destra fino a quando non scompare nel tuo cieco, quindi premi il ritorno. Mantieni la distanza di visione mentre si verifica entrambi gli occhi.\",\r\n    ro: 'Ne pare rău, cele mai recente măsurători la stânga și la dreapta au fost inconsistente. Putem încerca din nou? Țineți un ochi închis. Concentrați -vă pe părul încrucișat și monitorizați punctul intermitent din colțul ochiului. Glisați punctul la stânga și la dreapta până când dispare în Blindspot, apoi atingeți întoarcerea. Mențineți -vă distanța de vizionare în timp ce testați ambii ochi.',\r\n    pl: 'Przepraszam, najnowsze pomiary lewych i prawych były niespójne. Czy możemy spróbować ponownie? Miej jedno oko zamknięte. Skoncentruj się na włosach krzyżowych i monitoruj migającą kropkę z rogu oka. Wsuń kropkę w lewo i w prawo, aż zniknie w twojej ślepej, a następnie naciśnij powrót. Utrzymuj odległość oglądania podczas testowania obu oczu.',\r\n    ru: 'Извините, самые последние левые и правые измерения были непоследовательными. Можем ли мы попробовать еще раз? Держите один глаз закрытым. Сосредоточьтесь на кросс -волосах и следите за мигающей точкой из -за угла глаза. Сдвиньте точку влево и вправо, пока она не исчезнет в вашей слепой точке, а затем нажмите на возврат. Поддерживайте свое расстояние просмотра, когда вы тестируете оба глаза.',\r\n    hy: 'Ներեցեք, ամենավերջին ձախ եւ աջ չափումները անհամատեղելի էին: Կարող ենք կրկին փորձել: Մի աչքի փակ պահեք: Կենտրոնացեք խաչի մազերի վրա եւ վերահսկեք ձեր աչքի անկյունից ing րամեկուսացման կետը: Սահեցրեք կետը ձախ եւ աջ, մինչեւ այն անհետանա ձեր կույր կետի մեջ, ապա հարվածեք վերադարձին: Պահպանեք ձեր դիտման հեռավորությունը, երբ փորձարկում եք երկու աչքերը:',\r\n    fi: \"Valitettavasti viimeisimmät vasen ja oikea mittaukset olivat epäjohdonmukaisia. Voimmeko yrittää uudelleen? Pidä yksi silmä kiinni. Keskity ristikarvoihin ja tarkkaile vilkkuvaa pistettä silmän nurkasta. Liu'uta piste vasemmalle ja oikealle, kunnes se katoaa Blindspot -sivustoon ja osu sitten paluun. Pidä katseluetäisyys testattaessasi molemmat silmät.\",\r\n    ka: 'უკაცრავად, მარცხენა და მარჯვენა უახლესი გაზომვები არათანმიმდევრული იყო. შეგვიძლია ისევ ვცადოთ? ერთი თვალი დახუჭე. ფოკუსირება მოახდინეთ ჯვრის თმებზე და აკონტროლეთ მოციმციმე წერტილი თქვენი თვალის კუთხიდან. გადაიტანეთ წერტილი მარცხნივ და მარჯვნივ, სანამ ის ქრება თქვენს ჟალუზაში, შემდეგ კი მოხვდით. შეინარჩუნეთ თქვენი სანახავი მანძილი, როდესაც ორივე თვალს შეამოწმებთ.',\r\n    he: 'סליחה, המדידות השמאליות והימניות האחרונות לא היו עקביות. האם נוכל לנסות שוב? שמור עין אחת עצומה. התמקדו בשערות הצלב ועקבו אחר הנקודה המהבהבת מפינת העין. החלק את הנקודה שמאלה וימינה עד שהוא נעלם אל כתב העיוור שלך ואז פגע בחזרה. שמור על מרחק הצפייה שלך כשאתה בודק את שתי העיניים.',\r\n    ar: 'آسف ، كانت القياسات اليمنى واليسرى الأحدث غير متسقة. أيمكننا المحاولة مرة أخرى؟ الحفاظ على عين واحدة مغلقة. ركز على الشعر المتقاطع ومراقبة النقطة الوامضة من زاوية عينيك. حرك النقطة اليسرى واليمين حتى تختفي في النطاق العمياء الخاص بك ، ثم ضرب العودة. حافظ على مسافة المشاهدة الخاصة بك وأنت تختبر كلتا العينين.',\r\n    ur: 'معذرت ، حالیہ بائیں اور دائیں پیمائش متضاد تھیں۔ کیا ہم دوبارہ کوشش کر سکتے ہیں؟ ایک آنکھ بند رکھیں۔ کراس بالوں پر فوکس کریں اور اپنی آنکھ کے کونے سے باہر چمکتے ڈاٹ کی نگرانی کریں۔ ڈاٹ کو بائیں اور دائیں سلائڈ کریں جب تک کہ یہ آپ کے بلائنڈ پوٹ میں غائب نہ ہوجائے ، اور پھر واپسی کو ماریں۔ جب آپ دونوں آنکھوں کی جانچ کرتے ہو تو اپنے دیکھنے کا فاصلہ برقرار رکھیں۔',\r\n    hi: 'क्षमा करें, सबसे हालिया बाएं और दाएं माप असंगत थे। क्या हम फिर से कोशिश कर सकते हैं? एक आंख बंद रखें। क्रॉस हेयर पर ध्यान दें और अपनी आंख के कोने से चमकती डॉट की निगरानी करें। बाईं और दाईं ओर स्लाइड करें जब तक कि यह आपके ब्लाइंडस्पॉट में गायब न हो जाए, और फिर रिटर्न हिट करें। जैसे -जैसे आप दोनों आंखों का परीक्षण करते हैं, अपनी देखने की दूरी बनाए रखें।',\r\n    ta: 'மன்னிக்கவும், மிக சமீபத்திய இடது மற்றும் வலது அளவீடுகள் சீரற்றவை. நாம் மீண்டும் முயற்சிக்கலாமா? ஒரு கண்ணை மூடிக்கொள்ளவும். குறுக்கு முடிகளில் கவனம் செலுத்துங்கள் மற்றும் உங்கள் கண்ணின் மூலையில் இருந்து ஒளிரும் புள்ளியைக் கண்காணிக்கவும். உங்கள் பிளைண்ட்ஸ்பாட்டில் மறைந்துவிடும் வரை இடது மற்றும் வலதுபுறத்தை சறுக்கி, பின்னர் திரும்பவும். நீங்கள் இரு கண்களையும் சோதிக்கும்போது உங்கள் பார்வை தூரத்தை பராமரிக்கவும்.',\r\n    ml: 'ക്ഷമിക്കണം, ഏറ്റവും പുതിയ ഇടത്, വലത് അളവുകൾ പൊരുത്തപ്പെടുന്നില്ല. നമുക്ക് വീണ്ടും ശ്രമിക്കാമോ? ഒരു കണ്ണ് അടച്ച് സൂക്ഷിക്കുക. ക്രോസ് ഹെറിൽസിൽ ശ്രദ്ധ കേന്ദ്രീകരിക്കുക, നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ നിന്ന് മിന്നുന്ന ഡോട്ട് നിരീക്ഷിക്കുക. നിങ്ങളുടെ ബ്ലൈൻഡ്സ്പോട്ടിലേക്ക് അപ്രത്യക്ഷമാകുന്നതുവരെ ഡോട്ട് ഇടത്തോട്ടും വലത്തോട്ടും സ്ലൈഡുചെയ്യുക, തുടർന്ന് മടങ്ങുക. നിങ്ങൾ രണ്ട് കണ്ണുകളും പരീക്ഷിക്കുമ്പോൾ നിങ്ങളുടെ കാണൽ ദൂരം നിലനിർത്തുക.',\r\n    te: 'క్షమించండి, ఇటీవలి ఎడమ మరియు కుడి కొలతలు అస్థిరంగా ఉన్నాయి. మేము మళ్ళీ ప్రయత్నించగలమా? ఒక కన్ను మూసుకుని ఉంచండి. క్రాస్ హెయిర్స్ పై దృష్టి పెట్టండి మరియు మీ కంటి మూలలో నుండి మెరుస్తున్న చుక్కను పర్యవేక్షించండి. మీ బ్లైండ్ స్పాట్‌లోకి అదృశ్యమయ్యే వరకు చుక్కను ఎడమ మరియు కుడి వైపుకు జారండి, ఆపై రిటర్న్ నొక్కండి. మీరు రెండు కళ్ళను పరీక్షిస్తున్నప్పుడు మీ వీక్షణ దూరాన్ని కొనసాగించండి.',\r\n    kn: 'ಕ್ಷಮಿಸಿ, ಇತ್ತೀಚಿನ ಎಡ ಮತ್ತು ಬಲ ಅಳತೆಗಳು ಅಸಮಂಜಸವಾಗಿವೆ. ನಾವು ಮತ್ತೆ ಪ್ರಯತ್ನಿಸಬಹುದೇ? ಒಂದು ಕಣ್ಣು ಮುಚ್ಚಿಡಿ. ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಕೇಂದ್ರೀಕರಿಸಿ ಮತ್ತು ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಿಂದ ಮಿನುಗುವ ಚುಕ್ಕೆ ಮೇಲ್ವಿಚಾರಣೆ ಮಾಡಿ. ನಿಮ್ಮ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್‌ಗೆ ಕಣ್ಮರೆಯಾಗುವವರೆಗೆ ಡಾಟ್ ಅನ್ನು ಎಡ ಮತ್ತು ಬಲಕ್ಕೆ ಸ್ಲೈಡ್ ಮಾಡಿ, ತದನಂತರ ರಿಟರ್ನ್ ಒತ್ತಿರಿ. ನೀವು ಎರಡೂ ಕಣ್ಣುಗಳನ್ನು ಪರೀಕ್ಷಿಸುವಾಗ ನಿಮ್ಮ ವೀಕ್ಷಣೆಯ ದೂರವನ್ನು ಕಾಪಾಡಿಕೊಳ್ಳಿ.',\r\n    bn: 'দুঃখিত, সর্বাধিক সাম্প্রতিক বাম এবং ডান পরিমাপগুলি বেমানান ছিল। আমরা কি আবার চেষ্টা করতে পারি? এক চোখ বন্ধ রাখুন। ক্রস কেশগুলিতে ফোকাস করুন এবং আপনার চোখের কোণ থেকে ফ্ল্যাশিং ডটটি পর্যবেক্ষণ করুন। এটি আপনার ব্লাইন্ডস্পটে অদৃশ্য না হওয়া পর্যন্ত ডটটি বাম এবং ডানদিকে স্লাইড করুন এবং তারপরে রিটার্নটি আঘাত করুন। আপনি উভয় চোখ পরীক্ষা করার সাথে সাথে আপনার দেখার দূরত্ব বজায় রাখুন।',\r\n    id: 'Maaf, pengukuran kiri dan kanan terbaru tidak konsisten. Bisakah kita mencoba lagi? Tutup satu mata. Fokus pada rambut silang dan pantau titik berkedip dari sudut mata Anda. Geser titik ke kiri dan ke kanan sampai menghilang ke dalam blindspot Anda, dan kemudian tekan kembali. Pertahankan jarak menonton Anda saat Anda menguji kedua mata.',\r\n    'zh-CN':\r\n      '抱歉，最新的左和右测量值不一致。我们可以再试一次吗？闭上眼睛。专注于十字头发，并从眼角监视闪烁的点。向左和向右滑动点，直到它消失在盲点中​​，然后击中返回。在测试双眼时，保持观看距离。',\r\n    'zh-HK':\r\n      '抱歉，最新的左和右測量值不一致。我們可以再試一次嗎？閉上眼睛。專注於十字頭髮，並從眼角監視閃爍的點。向左和向右滑動點，直到它消失在盲點中​​，然後擊中返回。在測試雙眼時，保持觀看距離。',\r\n    ja: '申し訳ありませんが、最新の左右の測定値は一貫していませんでした。もう一度やり直してもいいですか？片目を閉じてください。交差毛に焦点を合わせ、目の隅から点滅するドットを監視します。ブラインドスポットに消えてしまうまで、ドットを左右にスライドさせ、リターンを押します。両目をテストするときに、視聴距離を維持します。',\r\n    ko: '죄송합니다. 가장 최근의 왼쪽 및 오른쪽 측정은 일관성이 없었습니다. 다시 시도해도 될까요? 한쪽 눈을 닫으십시오. 십자 머리카락에 초점을 맞추고 눈 구석에서 번쩍이는 점을 모니터링하십시오. 점을 왼쪽과 오른쪽으로 맹목 스팟으로 사라질 때까지 왼쪽과 오른쪽으로 밀어 넣은 다음 리턴을 누르십시오. 양쪽 눈을 테스트 할 때 시청 거리를 유지하십시오.',\r\n  },\r\n  RC_viewingDistance: {\r\n    'en-US': 'Viewing Distance',\r\n    de: 'Betrachtungsabstand',\r\n    fr: 'Distance de visualisation',\r\n    es: 'Distancia de observación',\r\n    pt: 'Distância de visualização',\r\n    it: 'Distanza di visualizzazione',\r\n    ro: 'Distanța de vizualizare',\r\n    pl: 'Odległość oglądania',\r\n    ru: 'Просмотр расстояния',\r\n    hy: 'Դիտողության հեռավորությունը',\r\n    fi: 'Katseluetäisyys',\r\n    ka: 'ხედვის მანძილი',\r\n    he: 'מרחק צפייה',\r\n    ar: 'عرض المسافة',\r\n    ur: 'دیکھنے کا فاصلہ',\r\n    hi: 'देखने की दूरी',\r\n    ta: 'தூரத்தைப் பார்க்கிறது',\r\n    ml: 'ദൂരം കാണുന്നു',\r\n    te: 'దూరం చూస్తున్నారు',\r\n    kn: 'ದೂರವನ್ನು ನೋಡಲಾಗುತ್ತಿದೆ',\r\n    bn: 'দূরত্ব দেখার',\r\n    id: 'Jarak melihat',\r\n    'zh-CN': '观看距离',\r\n    'zh-HK': '觀看距離',\r\n    ja: '距離の表示',\r\n    ko: '보기 거리',\r\n  },\r\n  RC_viewingDistanceIntro: {\r\n    'en-US':\r\n      'To produce accurate sound, the experiment needs to calibrate the loudspeakers. This requires a smartphone connected to the internet. Do you have one handy? \\n',\r\n    de: 'Um einen genauen Klang zu erzeugen, muss das Experiment die Lautsprecher kalibrieren. Dies erfordert ein Smartphone, das mit dem Internet verbunden ist. Hast du eine Handy?\\n',\r\n    fr: \"Pour produire un son précis, l'expérience doit calibrer les haut-parleurs. Cela nécessite un smartphone connecté à Internet. Avez-vous un à portée de main?\\n\",\r\n    es: 'Para producir un sonido preciso, el experimento necesita calibrar los altavoces. Esto requiere un teléfono inteligente conectado a Internet. ¿Tienes uno a mano?\\n',\r\n    pt: 'Para produzir som preciso, o experimento precisa calibrar os alto -falantes. Isso requer um smartphone conectado à Internet. Você tem um útil?\\n',\r\n    it: \"Per produrre un suono accurato, l'esperimento deve calibrare gli altoparlanti. Ciò richiede uno smartphone connesso a Internet. Hai uno a portata di mano?\\n\",\r\n    ro: 'Pentru a produce un sunet precis, experimentul trebuie să calibreze difuzoarele. Acest lucru necesită un smartphone conectat la internet. Ai unul la îndemână?\\n',\r\n    pl: 'Aby uzyskać dokładny dźwięk, eksperyment musi skalibrować głośniki. Wymaga to smartfona podłączonego do Internetu. Czy masz jeden przydatny?\\n',\r\n    ru: 'Чтобы получить точный звук, эксперимент должен калибровать громкоговорители. Это требует смартфона, подключенного к Интернету. У тебя есть одна удобная?\\n',\r\n    hy: 'Acc շգրիտ ձայն տալու համար փորձը պետք է տրամաչափի բարձրախոսները: Սա պահանջում է սմարթֆոն, որը միացված է ինտերնետին: Դուք ունեք մեկ հարմար:\\n',\r\n    fi: 'Tarkan äänen tuottamiseksi kokeen on kalibroida kaiuttimet. Tämä vaatii älypuhelimen, joka on kytketty Internetiin. Onko sinulla yksi kätevä?\\n',\r\n    ka: 'ზუსტი ხმის შესაქმნელად, ექსპერიმენტს სჭირდება დინამიკის დაკალიბრება. ეს მოითხოვს ინტერნეტთან დაკავშირებულ სმარტფონს. ერთი მოსახერხებელი გაქვს?\\n',\r\n    he: 'כדי להפיק צליל מדויק, הניסוי צריך לכייל את הרמקולים. זה דורש סמארטפון המחובר לאינטרנט. יש לך שימושי?\\n',\r\n    ar: 'لإنتاج صوت دقيق ، تحتاج التجربة إلى معايرة مكبرات الصوت. هذا يتطلب هاتفًا ذكيًا متصلاً بالإنترنت. هل لديك واحد في متناول يدي؟\\n',\r\n    ur: 'درست آواز پیدا کرنے کے ل the ، تجربے کو لاؤڈ اسپیکر کو کیلیبریٹ کرنے کی ضرورت ہے۔ اس کے لئے انٹرنیٹ سے منسلک اسمارٹ فون کی ضرورت ہے۔ کیا آپ کے پاس ایک آسان ہے؟\\n',\r\n    hi: 'सटीक ध्वनि का उत्पादन करने के लिए, प्रयोग को लाउडस्पीकरों को जांचने की आवश्यकता है। इसके लिए इंटरनेट से जुड़े एक स्मार्टफोन की आवश्यकता होती है। क्या आपके पास एक काम है?\\n',\r\n    ta: 'துல்லியமான ஒலியை உருவாக்க, சோதனை ஒலிபெருக்கிகளை அளவீடு செய்ய வேண்டும். இதற்கு இணையத்துடன் இணைக்கப்பட்ட ஸ்மார்ட்போன் தேவைப்படுகிறது. உங்களிடம் ஒரு எளிது இருக்கிறதா?\\n',\r\n    ml: 'കൃത്യമായ ശബ്ദം പുറപ്പെടുവിക്കാൻ, ഉച്ചഭാഷിണികളെ കാലിബ്രേറ്റ് ചെയ്യേണ്ടതുണ്ട്. ഇതിന് ഇന്റർനെറ്റിലേക്ക് കണക്റ്റുചെയ്തിരിക്കുന്ന ഒരു സ്മാർട്ട്ഫോൺ ആവശ്യമാണ്. നിങ്ങൾക്ക് ഒരു ഹാൻഡി ഉണ്ടോ?\\n',\r\n    te: 'ఖచ్చితమైన ధ్వనిని ఉత్పత్తి చేయడానికి, ప్రయోగం లౌడ్‌స్పీకర్లను క్రమాంకనం చేయాలి. దీనికి ఇంటర్నెట్‌కు కనెక్ట్ చేయబడిన స్మార్ట్‌ఫోన్ అవసరం. మీకు ఒక సులభ ఉందా?\\n',\r\n    kn: 'ನಿಖರವಾದ ಧ್ವನಿಯನ್ನು ಉತ್ಪಾದಿಸಲು, ಪ್ರಯೋಗವು ಧ್ವನಿವರ್ಧಕಗಳನ್ನು ಮಾಪನಾಂಕ ನಿರ್ಣಯಿಸುವ ಅಗತ್ಯವಿದೆ. ಇದಕ್ಕೆ ಇಂಟರ್ನೆಟ್ಗೆ ಸಂಪರ್ಕ ಹೊಂದಿದ ಸ್ಮಾರ್ಟ್ಫೋನ್ ಅಗತ್ಯವಿದೆ. ನೀವು ಒಂದು ಸೂಕ್ತವಾಗಿದ್ದೀರಾ?\\n',\r\n    bn: 'সঠিক শব্দ উত্পাদন করতে, পরীক্ষাটি লাউডস্পিকারগুলি ক্যালিব্রেট করতে হবে। এর জন্য ইন্টারনেটে সংযুক্ত একটি স্মার্টফোন প্রয়োজন। তোমার কি এক হাত আছে?\\n',\r\n    id: 'Untuk menghasilkan suara yang akurat, percobaan perlu mengkalibrasi pengeras suara. Ini membutuhkan smartphone yang terhubung ke internet. Apakah Anda punya satu berguna?\\n',\r\n    'zh-CN':\r\n      '为了产生准确的声音，实验需要校准扬声器。这需要连接到Internet的智能手机。你有方便吗？\\n',\r\n    'zh-HK':\r\n      '為了產生準確的聲音，實驗需要校準揚聲器。這需要連接到Internet的智能手機。你有方便嗎？\\n',\r\n    ja: '正確なサウンドを生成するには、実験ではスピーカーを調整する必要があります。これには、インターネットに接続されたスマートフォンが必要です。便利ですか？\\n',\r\n    ko: '정확한 사운드를 생성하려면 실험은 라우드 스피커를 교정해야합니다. 인터넷에 연결된 스마트 폰이 필요합니다. 편리한 사람이 있습니까?\\n',\r\n  },\r\n  RC_viewingDistanceIntroTitle: {\r\n    'en-US': 'Explanation',\r\n    de: 'Erläuterung',\r\n    fr: 'Explication',\r\n    es: 'Explicación',\r\n    pt: 'Explicação',\r\n    it: 'Spiegazione',\r\n    ro: 'Explicaţie',\r\n    pl: 'Wyjaśnienie',\r\n    ru: 'Объяснение',\r\n    hy: 'Բացատրություն',\r\n    fi: 'Selitys',\r\n    ka: 'ახსნა',\r\n    he: 'הֶסבֵּר',\r\n    ar: 'توضيح',\r\n    ur: 'وضاحت',\r\n    hi: 'व्याख्या',\r\n    ta: 'விளக்கம்',\r\n    ml: 'വിശദീകരണം',\r\n    te: 'వివరణ',\r\n    kn: 'ವಿವರಣೆ',\r\n    bn: 'ব্যাখ্যা',\r\n    id: 'Penjelasan',\r\n    'zh-CN': '解释',\r\n    'zh-HK': '解釋',\r\n    ja: '説明',\r\n    ko: '설명',\r\n  },\r\n  RC_viewingDistanceIntroLiMethod: {\r\n    'en-US':\r\n      \"EXPLANATION. For this step, come closer, if necessary, so you're no farther than twice the screen width. Every eye has a blindspot. We'll find yours to discover how far your eye is from the screen. You'll be asked to close or cover one eye to isolate the other. While you focus on the cross hairs, watch the flickering dot out of the corner of your eye, and hit RETURN when it disappears into your blindspot. Depending on viewing distance and screen size, the flickering dot typically will reach your blindspot before it gets to the middle of the screen. You'll do this with each eye, alternating, until the last two measurements are consistent. Please maintain your viewing distance as you test both eyes. NOTE. If the dot never disappears, it means that your eye is following the dot, instead of staying on the cross hairs. This test needs you to keep your eye on the cross hairs while monitoring the flickering dot in the corner of your eye. That's hard at first, but becomes easier with practice.\",\r\n    de: 'ERLÄUTERUNG. Bei diesem Schritt kommen Sie bei Bedarf näher, damit Sie nicht weiter als doppelt so hoch wie die Bildschirmbreite sind. Jedes Auge hat einen Blindspot. Wir werden Ihre finden, um herauszufinden, wie weit Ihr Auge vom Bildschirm entfernt ist. Sie werden gebeten, ein Auge zu schließen oder abzudecken, um das andere zu isolieren. Während Sie sich auf die Kreuzhaare konzentrieren, beobachten Sie den flackernden Punkt aus dem Augenwinkel und treffen Sie die Rückkehr, wenn er in Ihrem Blindspot verschwindet. Abhängig von der Betrachtung der Entfernung und der Bildschirmgröße erreicht der flackernde Punkt normalerweise Ihren Blindspot, bevor er in die Mitte des Bildschirms gelangt. Sie werden dies mit jedem Auge wechseln, bis die letzten beiden Messungen konsistent sind. Bitte behalten Sie Ihren Betrachtungsabstand bei, während Sie beide Augen testen. NOTIZ. Wenn der Punkt nie verschwindet, bedeutet dies, dass Ihr Auge dem Punkt folgt, anstatt auf den Kreuzhaaren zu bleiben. In diesem Test müssen Sie die Kreuzhaare im Auge behalten und gleichzeitig den flackernden Punkt in Ihrem Augenwinkel überwachen. Das ist zunächst schwierig, wird aber beim Üben einfacher.',\r\n    fr: \"EXPLICATION. Pour cette étape, rapprochez-vous, si nécessaire, vous n'êtes donc pas plus loin que deux fois la largeur de l'écran. Chaque œil a un point mort. Nous trouverons le vôtre pour découvrir à quel point votre œil est de l'écran. On vous demandera de fermer ou de couvrir un œil pour isoler l'autre. Pendant que vous vous concentrez sur les cheveux, regardez le point scintillant du coin de votre œil et appuyez sur votre retour lorsqu'il disparaît dans votre point mort. Selon la distance de visualisation et la taille de l'écran, le point scintillant atteindra généralement votre point mort avant qu'il n'atteigne au milieu de l'écran. Vous le ferez avec chaque œil, en alternant, jusqu'à ce que les deux dernières mesures soient cohérentes. Veuillez maintenir votre distance de visualisation lorsque vous testez les deux yeux. NOTE. Si le point ne disparaît jamais, cela signifie que votre œil suit le point, au lieu de rester sur les poils. Ce test a besoin de vous pour garder un œil sur les cheveux en surveillant le point vacillant dans le coin de votre œil. C'est difficile au début, mais devient plus facile avec la pratique.\",\r\n    es: 'EXPLICACIÓN. Para este paso, acércate, si es necesario, por lo que no estás más lejos del doble del ancho de la pantalla. Cada ojo tiene un punto ciego. Encontraremos el suyo para descubrir qué tan lejos está su ojo desde la pantalla. Se le pedirá que cierre o cubra un ojo para aislar al otro. Mientras te enfocas en la cruz, mira el punto parpadeante en la esquina del ojo y presione el retorno cuando desaparezca en tu punto ciego. Dependiendo de la distancia de visualización y el tamaño de la pantalla, el punto parpadeante generalmente alcanzará su punto ciego antes de que llegue al centro de la pantalla. Hará esto con cada ojo, alternando, hasta que las dos últimas medidas sean consistentes. Mantenga su distancia de visión mientras prueba ambos ojos. NOTA. Si el punto nunca desaparece, significa que su ojo está siguiendo el punto, en lugar de permanecer en la cruz. Esta prueba necesita que mantenga su ojo en la cruz mientras monitorea el punto parpadeante en la esquina de su ojo. Eso es difícil al principio, pero se vuelve más fácil con la práctica.',\r\n    pt: 'EXPLICAÇÃO. Para esta etapa, chegue mais perto, se necessário, para que você não esteja mais longe do que o dobro da largura da tela. Todo olho tem um ponto cego. Vamos encontrar o seu para descobrir até que ponto seus olhos estão da tela. Você será solicitado a fechar ou cobrir um olho para isolar o outro. Enquanto você se concentra nos cabelos cruzados, observe o ponto tremeluzente pelo canto do olho e acerte o retorno quando ele desaparecer no seu ponto cego. Dependendo da distância de visualização e do tamanho da tela, o ponto de tremeling normalmente atinge seu ponto cego antes de chegar ao meio da tela. Você fará isso a cada olho, alternando, até que as duas últimas medições sejam consistentes. Por favor, mantenha sua distância de visualização enquanto você testa os dois olhos. OBSERVAÇÃO. Se o ponto nunca desaparece, significa que seu olho está seguindo o ponto, em vez de ficar nos cabelos cruzados. Este teste precisa que você fique de olho nos cabelos cruzados enquanto monitorava o ponto tremeluzente no canto do olho. Isso é difícil no começo, mas se torna mais fácil com a prática.',\r\n    it: \"SPIEGAZIONE. Per questo passaggio, avvicinati, se necessario, quindi non sei più lontano del doppio della larghezza dello schermo. Ogni occhio ha un cieco. Troveremo il tuo per scoprire quanto è lontano il tuo occhio dallo schermo. Ti verrà chiesto di chiudere o coprire un occhio per isolare l'altro. Mentre ti concentri sui capelli incrociati, guarda il punto tremolante dall'angolo dell'occhio e colpisci ritorna quando scompare nel tuo cieco. A seconda della distanza di visualizzazione e dello schermo, il punto tremolante in genere raggiungerà il tuo cieco prima che arrivi al centro dello schermo. Lo farai con ogni occhio, alternando, fino a quando le ultime due misurazioni sono coerenti. Si prega di mantenere la distanza di visualizzazione mentre si verificano entrambi gli occhi. NOTA. Se il punto non scompare mai, significa che il tuo occhio sta seguendo il punto, invece di rimanere sui capelli incrociati. Questo test ha bisogno di te per tenere d'occhio i peli incrociati mentre monitori il punto tremolo nell'angolo dell'occhio. All'inizio è difficile, ma diventa più facile con la pratica.\",\r\n    ro: 'EXPLICAŢIE. Pentru acest pas, apropiați -vă, dacă este necesar, deci nu sunteți mai departe de două ori mai mult decât lățimea ecranului. Fiecare ochi are un orb. Vom găsi al tău pentru a descoperi cât de departe este ochiul tău de ecran. Vi se va cere să închideți sau să acoperiți un ochi pentru a -l izola pe celălalt. În timp ce vă concentrați pe firele de păr, urmăriți punctul pâlpâitor din colțul ochiului și lovit -o reveniți când dispare în Blindspot. În funcție de vizualizarea distanței și a dimensiunii ecranului, punctul pâlpâit va ajunge de obicei la Blindspot înainte de a ajunge la mijlocul ecranului. Veți face acest lucru cu fiecare ochi, alternând, până când ultimele două măsurători sunt consecvente. Vă rugăm să vă mențineți distanța de vizionare în timp ce testați ambii ochi. NOTĂ. Dacă punctul nu dispare niciodată, înseamnă că ochiul tău urmărește punctul, în loc să rămâi pe părul încrucișat. Acest test are nevoie de tine pentru a -ți păstra ochii pe firele de încrucișare în timp ce monitorizați punctul pâlpâitor din colțul ochiului. La început este greu, dar devine mai ușor cu practica.',\r\n    pl: 'WYJAŚNIENIE. W tym kroku w razie potrzeby zbliżaj się bliżej, więc nie jesteś dalej niż dwa razy większa niż szerokość ekranu. Każde oko ma ślepy. Znajdziemy twoje, aby dowiedzieć się, jak daleko jest twoje oko od ekranu. Zostaniesz poproszony o zamknięcie lub zakrycie jednego oka, aby odizolować drugie. Podczas gdy skupiasz się na włosach krzyżowych, obserwuj migoczącą kropkę z kącika oka i uderzaj, gdy zniknie w twojej ślepej. W zależności od odległości oglądania i rozmiaru ekranu migocząca kropka zazwyczaj dotrze do Blindspot, zanim dojdzie do środka ekranu. Zrobisz to z każdym okiem, naprzemiennie, aż dwa ostatnie pomiary będą spójne. Proszę zachować odległość oglądania podczas testowania obu oczu. NOTATKA. Jeśli kropka nigdy się nie znika, oznacza to, że twoje oko podąża za kropką, zamiast pozostać na włosach krzyżowych. Ten test wymaga, abyś miał oko na włosy krzyżowe podczas monitorowania migoczącej kropki w rogu oka. Na początku jest to trudne, ale staje się łatwiejsze w praktyce.',\r\n    ru: 'ОБЪЯСНЕНИЕ. Для этого шага, при необходимости приходите ближе, так что вы не дальше, чем вдвое больше ширины экрана. У каждого глаз есть слепое место. Мы найдем ваш, чтобы узнать, как далеко ваш взгляд от экрана. Вас попросят закрыть или прикрыть один глаз, чтобы изолировать другой. Пока вы сосредотачиваетесь на кросс -волосах, наблюдайте за мерцающей точкой из -за угла глаза и ударяйте возвращение, когда он исчезает в вашей слепой точке. В зависимости от расстояния просмотра и размера экрана, мерцающая точка обычно достигает вашей слепой точки, прежде чем добраться до середины экрана. Вы делаете это с каждым глазом, чередующиеся, пока последние два измерения не станут последовательными. Пожалуйста, поддерживайте свое расстояние просмотра, когда вы тестируете оба глаза. ПРИМЕЧАНИЕ. Если точка никогда не исчезает, это означает, что ваш глаз следует точке, вместо того, чтобы оставаться на кросс -волосках. Этот тест нуждается в том, чтобы вы следили за кросс -волосами, следив за мерцающей точкой в ​​углу глаза. Сначала это сложно, но с практикой становится легче.',\r\n    hy: 'Բացատրություն: Այս քայլի համար ավելի մոտենալ, անհրաժեշտության դեպքում, այնպես որ էկրանի երկու անգամ ավելի հեռու եք: Յուրաքանչյուր աչք ունի կույր: Մենք կգտնենք ձերը `հայտնաբերելու համար, թե որքանով է ձեր աչքը էկրանից: Ձեզանից կառաջարկվի փակել կամ ծածկել մեկ աչքը `մյուսին մեկուսացնելու համար: Մինչ դուք կենտրոնանում եք խաչի մազերի վրա, դիտեք ձեր աչքի անկյունից դուրս գալու կետը եւ հարվածել վերադառնալիս, երբ այն վերանում է ձեր կույր: Կախված հեռավորության եւ էկրանի չափի դիտումից, շողոքորթ կետը, որպես կանոն, կհասնվի ձեր կույրին, նախքան էկրանի կեսին հասնելը: Դուք դա կանեք յուրաքանչյուր աչքով, փոխարինելով, մինչեւ վերջին երկու չափումները հետեւողական լինեն: Խնդրում ենք պահպանել ձեր դիտման հեռավորությունը, երբ փորձարկում եք երկու աչքերը: ՆՇՈՒՄ. Եթե ​​կետը երբեք չի վերանում, նշանակում է, որ ձեր աչքը հետեւում է կետին, փոխարենը մնալով խաչմերուկի վրա: Այս թեստին անհրաժեշտ է, որ ձեր աչքը պահեք խաչմերուկի վրա, մինչդեռ ձեր աչքի անկյունում դիտորդական կետը դիտարկելը: Սկզբում դժվար է, բայց դյուրին է դառնում պրակտիկայով:',\r\n    fi: 'SELITYS. Tätä vaihetta varten tule tarvittaessa lähemmäksi, joten et ole kauempana kuin kaksinkertainen näytön leveys. Jokaisessa silmässä on blindspot. Löydämme sinun selvittää, kuinka pitkälle silmäsi on näytöltä. Sinua pyydetään sulkemaan tai peittämään yksi silmä eristääksesi toisen. Kun keskityt ristikarvoihin, tarkkaile vilkkuvaa pistettä silmän nurkasta ja lyö paluuta, kun se katoaa blindspotisi. Katseluetäisyydestä ja näytön koosta riippuen vilkkuva piste saavuttaa tyypillisesti blindspotin ennen kuin se pääsee näytön keskelle. Teet tämän jokaisella silmällä vuorotellen, kunnes kaksi viimeistä mittausta ovat yhdenmukaisia. Pidä katseluetäisyys testattaessa molemmat silmät. HUOMAUTUS. Jos piste ei koskaan katoa, se tarkoittaa, että silmäsi seuraa pistettä sen sijaan, että pysyisit ristikarvoilla. Tämä testi tarvitsee sinun pitää silmäsi ristiinkarvoissa tarkkailemalla silmän nurkassa olevaa vilkkuvaa pistettä. Se on aluksi vaikeaa, mutta siitä tulee helpompaa harjoittelussa.',\r\n    ka: 'ახსნა. ამ ნაბიჯისთვის, საჭიროების შემთხვევაში, მიუახლოვდით, ასე რომ, თქვენ არ ხართ უფრო შორს, ვიდრე ორჯერ ეკრანის სიგანე. ყველა თვალს აქვს ჟალუზი. ჩვენ ვიპოვნებთ თქვენს, რომ გაირკვეს, თუ რამდენად შორს არის თქვენი თვალი ეკრანიდან. თქვენ მოგეთხოვებათ ერთი თვალის დახუჭვა ან დაფარვა, რომ მეორეს იზოლირება მოახდინოთ. მიუხედავად იმისა, რომ თქვენ ყურადღებას ამახვილებთ ჯვრის თმებზე, უყურეთ მბზინავი წერტილს თვალის კუთხიდან და მოხვდით, როდესაც ის თქვენს ჟალუზაში ქრება. დამოკიდებულია მანძილზე და ეკრანის ზომიდან გამომდინარე, მბზინავი წერტილი, როგორც წესი, მიაღწევს თქვენს ჟალუზას, სანამ ეკრანზე შუა პერიოდში მოხვდება. ამას გააკეთებთ თითოეული თვალით, მონაცვლეობით, სანამ ბოლო ორი გაზომვა არ შეესაბამება. გთხოვთ, შეინარჩუნოთ თქვენი სანახავი მანძილი, როდესაც ორივე თვალს შეამოწმებთ. ᲨᲔᲜᲘᲨᲕᲜᲐ. თუ წერტილი არასდროს ქრება, ეს ნიშნავს, რომ თქვენი თვალი მიჰყვება წერტილს, იმის ნაცვლად, რომ ჯვრის თმებზე დარჩით. ამ ტესტს სჭირდება, რომ თვალის დახუჭვა თვალის კუთხეში მბზინავი წერტილის მონიტორინგის დროს. ეს თავიდან რთულია, მაგრამ პრაქტიკაში უფრო ადვილი ხდება.',\r\n    he: 'הֶסבֵּר. לשלב זה, התקרב, במידת הצורך, כך שאתה לא רחוק יותר מרוחב המסך. לכל עין יש כתב עיוור. נמצא את שלך כדי לגלות כמה רחוק העין שלך מהמסך. תתבקש לסגור או לכסות עין אחת כדי לבודד את השנייה. בזמן שאתה מתמקד בשערות הצלב, צפה בנקודה המהבהבת מזווית העין שלך, ופגע בחזרה כשהוא נעלם לתוך העיוור שלך. תלוי במרחק הצפייה ובגודל המסך, הנקודה המהבהבת בדרך כלל תגיע לספוט העיוור שלך לפני שהוא יגיע לאמצע המסך. תעשה זאת עם כל עין, לסירוגין, עד ששתי המדידות האחרונות יהיו עקביות. אנא שמור על מרחק הצפייה שלך כשאתה בודק את שתי העיניים. הערה. אם הנקודה לעולם אינה נעלמת, זה אומר שהעין שלך עוקבת אחר הנקודה, במקום להישאר על שערות הצלב. מבחן זה צריך שתפקח עין על שערות הצלב תוך ניטור הנקודה המהבהבת בפינת העין שלך. זה קשה בהתחלה, אבל הופך להיות קל יותר עם תרגול.',\r\n    ar: 'توضيح. لهذه الخطوة ، اقترب أكثر ، إذا لزم الأمر ، لذلك لا تزيد عن ضعف عرض الشاشة. كل عين لديها أعمى. سنجد لك لاكتشاف إلى أي مدى تبعد عينيك عن الشاشة. سيُطلب منك الإغلاق أو تغطية عين واحدة لعزل الآخر. أثناء التركيز على الشعر المتقاطع ، شاهد النقطة الخفقان من زاوية عينيك ، واضغط على العودة عندما تختفي في لعبة BlindSpot. اعتمادًا على عرض المسافة وحجم الشاشة ، ستصل النقطة الوهمية عادةً إلى النقطة العمياء قبل وصولها إلى منتصف الشاشة. ستقوم بذلك مع كل عين ، بالتناوب ، حتى يتسق القياسين الأخيرين. يرجى الحفاظ على مسافة المشاهدة الخاصة بك أثناء اختبار كلتا العينين. ملحوظة. إذا لم تختفي النقطة أبدًا ، فهذا يعني أن عينك تتبع النقطة ، بدلاً من البقاء على الشعر المتقاطع. يحتاج هذا الاختبار إلى مراقبة الشعر المتقاطع أثناء مراقبة النقطة الوهمية في زاوية عينيك. هذا صعب في البداية ، لكنه يصبح أسهل مع الممارسة.',\r\n    ur: 'وضاحت اس مرحلے کے ل ، ، اگر ضروری ہو تو ، قریب آجائیں ، لہذا آپ اسکرین کی چوڑائی سے دوگنا سے زیادہ دور نہیں ہیں۔ ہر آنکھ میں ایک بلائنڈ اسپاٹ ہوتا ہے۔ ہم آپ کو یہ معلوم کرنے کے ل find آپ کو تلاش کریں گے کہ آپ کی آنکھ اسکرین سے کتنی دور ہے۔ دوسرے کو الگ تھلگ کرنے کے لئے آپ سے ایک آنکھ بند کرنے یا ڈھانپنے کے لئے کہا جائے گا۔ جب آپ کراس بالوں پر توجہ مرکوز کرتے ہیں تو ، اپنی آنکھ کے کونے سے ٹمٹماہٹ ڈاٹ دیکھیں ، اور جب آپ کے اندھے مقام میں غائب ہوجاتے ہیں تو واپسی کو ماریں۔ فاصلے اور اسکرین کے سائز کو دیکھنے پر منحصر ہے ، ٹمٹماہٹ ڈاٹ عام طور پر اسکرین کے وسط تک پہنچنے سے پہلے آپ کے اندھے مقام پر پہنچ جاتا ہے۔ جب تک آخری دو پیمائش مستقل نہ ہوں تب تک آپ ہر آنکھ کے ساتھ یہ کام کریں گے۔ جب آپ دونوں آنکھوں کی جانچ کرتے ہیں تو براہ کرم اپنے دیکھنے کا فاصلہ برقرار رکھیں۔ نوٹ. اگر ڈاٹ کبھی غائب نہیں ہوتا ہے تو ، اس کا مطلب یہ ہے کہ آپ کی آنکھ کراس بالوں پر رہنے کی بجائے ڈاٹ کی پیروی کررہی ہے۔ اس ٹیسٹ کی ضرورت ہے کہ آپ اپنی آنکھ کے کونے میں چمکتے ڈاٹ کی نگرانی کرتے ہوئے کراس بالوں پر نگاہ رکھیں۔ یہ سب سے پہلے مشکل ہے ، لیکن پریکٹس کے ساتھ آسان ہوجاتا ہے۔',\r\n    hi: 'स्पष्टीकरण। इस कदम के लिए, यदि आवश्यक हो, तो करीब आएं, इसलिए आप स्क्रीन की चौड़ाई से दोगुने से दूर नहीं हैं। हर आंख में एक अंधा होता है। हम आपको यह पता लगाने के लिए पाएंगे कि आपकी आंख स्क्रीन से कितनी दूर है। आपको दूसरे को अलग करने के लिए एक आंख को बंद करने या कवर करने के लिए कहा जाएगा। जब आप क्रॉस हेयर पर ध्यान केंद्रित करते हैं, तो अपनी आंख के कोने से टिमटिमाते हुए डॉट को देखें, और जब यह आपके ब्लाइंडस्पॉट में गायब हो जाता है तो रिटर्न हिट करें। दूरी और स्क्रीन आकार देखने के आधार पर, फ़्लिकरिंग डॉट आमतौर पर स्क्रीन के बीच में आने से पहले आपके ब्लाइंडस्पॉट तक पहुंच जाएगा। आप प्रत्येक आंख के साथ ऐसा करेंगे, बारी -बारी से, जब तक कि अंतिम दो माप सुसंगत न हों। कृपया अपनी देखने की दूरी बनाए रखें क्योंकि आप दोनों आंखों का परीक्षण करते हैं। टिप्पणी। यदि डॉट कभी गायब नहीं होता है, तो इसका मतलब है कि आपकी आंख क्रॉस हेयर पर रहने के बजाय डॉट का अनुसरण कर रही है। इस परीक्षण को आपको अपनी आंख के कोने में टिमटिमाती डॉट की निगरानी करते हुए क्रॉस हेयर पर अपनी नज़र रखने की आवश्यकता है। यह पहली बार में कठिन है, लेकिन अभ्यास के साथ आसान हो जाता है।',\r\n    ta: 'விளக்கம். இந்த படிக்கு, தேவைப்பட்டால், நெருக்கமாக வாருங்கள், எனவே நீங்கள் திரை அகலத்தை விட இரண்டு மடங்கு அதிகமாக இல்லை. ஒவ்வொரு கண்ணுக்கும் ஒரு குருட்டு இடம் உள்ளது. திரையில் இருந்து உங்கள் கண் எவ்வளவு தூரம் இருக்கிறது என்பதைக் கண்டறிய உங்களுடையதைக் கண்டுபிடிப்போம். மற்றொன்றை தனிமைப்படுத்த ஒரு கண்ணை மூட அல்லது மறைக்கும்படி கேட்கப்படுவீர்கள். நீங்கள் குறுக்கு முடிகளில் கவனம் செலுத்தும்போது, ​​உங்கள் கண்ணின் மூலையில் இருந்து ஒளிரும் புள்ளியைப் பாருங்கள், மேலும் அது உங்கள் பிளைண்ட்ஸ்பாட்டில் மறைந்து போகும்போது திரும்பவும். பார்க்கும் தூரம் மற்றும் திரை அளவைப் பொறுத்து, ஒளிரும் புள்ளி பொதுவாக திரையின் நடுவில் வருவதற்கு முன்பு உங்கள் பிளைண்ட்ஸ்பாட்டை அடையும். கடைசி இரண்டு அளவீடுகள் சீரானதாக இருக்கும் வரை, ஒவ்வொரு கண்ணிலும் இதைச் செய்வீர்கள். நீங்கள் இரு கண்களையும் சோதிக்கும்போது உங்கள் பார்வை தூரத்தை பராமரிக்கவும். குறிப்பு. புள்ளி ஒருபோதும் மறைந்துவிடாவிட்டால், குறுக்கு முடிகளில் தங்குவதற்கு பதிலாக, உங்கள் கண் புள்ளியைப் பின்பற்றுகிறது என்று அர்த்தம். இந்த சோதனைக்கு உங்கள் கண்ணின் மூலையில் உள்ள ஒளிரும் புள்ளியைக் கண்காணிக்கும் போது குறுக்கு முடிகள் மீது உங்கள் கண் வைத்திருக்க வேண்டும். இது முதலில் கடினம், ஆனால் நடைமுறையில் எளிதாகிறது.',\r\n    ml: 'വിശദീകരണം. ഈ ഘട്ടത്തിനായി, ആവശ്യമെങ്കിൽ, നിങ്ങൾ രണ്ടുതവണ സ്ക്രീൻ വീതിയേക്കാൾ കൂടുതൽ ദൂരെയാണ്. ഓരോ കണ്ണിനും ഒരു കണ്ണടപ്പോണ്ട് ഉണ്ട്. സ്ക്രീനിൽ നിന്ന് നിങ്ങളുടെ കണ്ണ് എത്ര ദൂരെയാണെന്ന് കണ്ടെത്താൻ ഞങ്ങൾ നിങ്ങളുടേത് കണ്ടെത്തും. മറ്റൊന്ന് ഒറ്റപ്പെടുത്താൻ ഒരു കണ്ണ് അടയ്ക്കാനോ മൂടാനോ നിങ്ങളോട് ആവശ്യപ്പെടും. നിങ്ങൾ ക്രോസ് ഹെയറുകളിൽ ശ്രദ്ധ കേന്ദ്രീകരിക്കുമ്പോൾ, നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ നിന്ന് മിന്നുന്ന ഡോട്ട് കാണുക, അത് നിങ്ങളുടെ ബ്ലൈൻഡ്സ്പോട്ടിലേക്ക് അപ്രത്യക്ഷമാകുമ്പോൾ മടങ്ങുക. ദൂരത്തെയും സ്ക്രീൻ വലുപ്പത്തെയും ആശ്രയിച്ച്, ഫ്ലിക്കറിംഗ് ഡോട്ട് സ്ക്രീനിന്റെ മധ്യത്തിൽ ലഭിക്കുന്നതിന് മുമ്പ് സാധാരണയായി നിങ്ങളുടെ അന്ധതകളിൽ എത്തും. ഓരോ കണ്ണിലും നിങ്ങൾ ഇത് ചെയ്യുന്നത്, മാറിമാറി, അവസാന രണ്ട് അളവുകൾ സ്ഥിരീകരിക്കുന്നതുവരെ. നിങ്ങൾ രണ്ട് കണ്ണുകളും പരീക്ഷിക്കുമ്പോൾ നിങ്ങളുടെ കാണൽ ദൂരം നിലനിർത്തുക. കുറിപ്പ്. ഡോട്ട് ഒരിക്കലും അപ്രത്യക്ഷമാകില്ലെങ്കിൽ, ക്രോസ് ഹെയർസിൽ താമസിക്കുന്നതിനുപകരം നിങ്ങളുടെ കണ്ണ് ഡോട്ടിനെ പിന്തുടരുകയാണെന്ന് ഇതിനർത്ഥം. നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ മിന്നുന്ന ഡോട്ട് നിരീക്ഷിക്കുമ്പോൾ ക്രോസ് ഹെയർ ഓഫ് ക്രോസ് ഹെയർസിൽ സൂക്ഷിക്കാൻ ഈ പരിശോധനയ്ക്ക് ആവശ്യമാണ്. അത് ആദ്യം ബുദ്ധിമുട്ടാണ്, പക്ഷേ പരിശീലനത്തിലൂടെ എളുപ്പമാകും.',\r\n    te: 'వివరణ. ఈ దశ కోసం, దగ్గరకు రండి, అవసరమైతే, మీరు స్క్రీన్ వెడల్పు కంటే రెండు రెట్లు ఎక్కువ కాదు. ప్రతి కంటికి బ్లైండ్ స్పాట్ ఉంటుంది. స్క్రీన్ నుండి మీ కన్ను ఎంత దూరంలో ఉందో తెలుసుకోవడానికి మేము మీదిని కనుగొంటాము. మరొకటి వేరుచేయడానికి ఒక కన్ను మూసివేయడానికి లేదా కవర్ చేయమని మిమ్మల్ని అడుగుతారు. మీరు క్రాస్ హెయిర్స్ పై దృష్టి పెడుతున్నప్పుడు, మీ కంటి మూలలో నుండి మినుకుమినుకుమనే చుక్కను చూడండి మరియు అది మీ బ్లైండ్ స్పాట్ లోకి అదృశ్యమైనప్పుడు తిరిగి రాండి. దూరం మరియు స్క్రీన్ పరిమాణాన్ని చూసేటప్పుడు, మినుకుమినుకుమనే చుక్క సాధారణంగా మీ బ్లైండ్‌స్పాట్‌ను స్క్రీన్ మధ్యలో చేరుకోవడానికి ముందే చేరుకుంటుంది. చివరి రెండు కొలతలు స్థిరంగా ఉండే వరకు మీరు ప్రతి కన్నుతో దీన్ని చేస్తారు. మీరు రెండు కళ్ళను పరీక్షించినప్పుడు దయచేసి మీ వీక్షణ దూరాన్ని కొనసాగించండి. గమనిక. చుక్క ఎప్పుడూ కనిపించకపోతే, మీ కన్ను క్రాస్ హెయిర్స్ మీద ఉండటానికి బదులు చుక్కను అనుసరిస్తుందని అర్థం. ఈ పరీక్ష మీ కంటి మూలలో ఉన్న ఆడంబరం చుక్కను పర్యవేక్షించేటప్పుడు క్రాస్ హెయిర్‌లపై మీ కన్ను వేసి ఉండాలి. ఇది మొదట కష్టం, కానీ ప్రాక్టీస్‌తో సులభం అవుతుంది.',\r\n    kn: 'ವಿವರಣೆ. ಈ ಹಂತಕ್ಕಾಗಿ, ಅಗತ್ಯವಿದ್ದರೆ ಹತ್ತಿರ ಬನ್ನಿ, ಆದ್ದರಿಂದ ನೀವು ಪರದೆಯ ಅಗಲಕ್ಕಿಂತ ಎರಡು ಪಟ್ಟು ಹೆಚ್ಚು ದೂರವಿರುವುದಿಲ್ಲ. ಪ್ರತಿ ಕಣ್ಣಿಗೆ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್ ಇದೆ. ನಿಮ್ಮ ಕಣ್ಣು ಪರದೆಯಿಂದ ಎಷ್ಟು ದೂರದಲ್ಲಿದೆ ಎಂಬುದನ್ನು ಕಂಡುಹಿಡಿಯಲು ನಾವು ನಿಮ್ಮದನ್ನು ಕಂಡುಕೊಳ್ಳುತ್ತೇವೆ. ಇನ್ನೊಂದನ್ನು ಪ್ರತ್ಯೇಕಿಸಲು ಒಂದು ಕಣ್ಣನ್ನು ಮುಚ್ಚಲು ಅಥವಾ ಮುಚ್ಚಲು ನಿಮ್ಮನ್ನು ಕೇಳಲಾಗುತ್ತದೆ. ನೀವು ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಕೇಂದ್ರೀಕರಿಸುವಾಗ, ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಿಂದ ಮಿನುಗುವ ಚುಕ್ಕೆ ನೋಡಿ, ಮತ್ತು ಅದು ನಿಮ್ಮ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್‌ಗೆ ಕಣ್ಮರೆಯಾದಾಗ ಹಿಂತಿರುಗಿ. ದೂರ ಮತ್ತು ಪರದೆಯ ಗಾತ್ರವನ್ನು ನೋಡುವುದರ ಆಧಾರದ ಮೇಲೆ, ಮಿನುಗುವ ಚುಕ್ಕೆ ಸಾಮಾನ್ಯವಾಗಿ ಪರದೆಯ ಮಧ್ಯಕ್ಕೆ ಬರುವ ಮೊದಲು ನಿಮ್ಮ ಬ್ಲೈಂಡ್‌ಸ್ಪಾಟ್ ಅನ್ನು ತಲುಪುತ್ತದೆ. ಕೊನೆಯ ಎರಡು ಅಳತೆಗಳು ಸ್ಥಿರವಾಗುವವರೆಗೆ ನೀವು ಇದನ್ನು ಪ್ರತಿ ಕಣ್ಣಿನಿಂದ ಮಾಡುತ್ತೀರಿ. ನೀವು ಎರಡೂ ಕಣ್ಣುಗಳನ್ನು ಪರೀಕ್ಷಿಸುವಾಗ ದಯವಿಟ್ಟು ನಿಮ್ಮ ವೀಕ್ಷಣೆಯ ದೂರವನ್ನು ಕಾಪಾಡಿಕೊಳ್ಳಿ. ಸೂಚನೆ. ಡಾಟ್ ಎಂದಿಗೂ ಕಣ್ಮರೆಯಾಗದಿದ್ದರೆ, ನಿಮ್ಮ ಕಣ್ಣು ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಉಳಿಯುವ ಬದಲು ಚುಕ್ಕೆಯನ್ನು ಅನುಸರಿಸುತ್ತಿದೆ ಎಂದರ್ಥ. ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಲ್ಲಿ ಮಿನುಗುವ ಚುಕ್ಕೆ ಮೇಲ್ವಿಚಾರಣೆ ಮಾಡುವಾಗ ಈ ಪರೀಕ್ಷೆಯು ಅಡ್ಡ ಕೂದಲಿನ ಮೇಲೆ ಕಣ್ಣಿಡಬೇಕು. ಅದು ಮೊದಲಿಗೆ ಕಷ್ಟ, ಆದರೆ ಅಭ್ಯಾಸದೊಂದಿಗೆ ಸುಲಭವಾಗುತ್ತದೆ.',\r\n    bn: \"ব্যাখ্যা। এই পদক্ষেপের জন্য, প্রয়োজনে আরও কাছাকাছি আসুন, সুতরাং আপনি স্ক্রিনের প্রস্থের দ্বিগুণের চেয়ে বেশি দূরে নন। প্রতিটি চোখের একটি অন্ধস্পট আছে। স্ক্রিন থেকে আপনার চোখ কত দূরে তা আবিষ্কার করতে আমরা আপনার সন্ধান করব। অন্যটিকে বিচ্ছিন্ন করতে আপনাকে একটি চোখ বন্ধ করতে বা cover াকতে বলা হবে। আপনি ক্রস কেশগুলিতে ফোকাস করার সময়, আপনার চোখের কোণ থেকে ঝলকানি বিন্দুটি দেখুন এবং এটি আপনার ব্লাইন্ডস্পটে অদৃশ্য হয়ে গেলে ফিরে আঘাত করুন। দূরত্ব এবং পর্দার আকারের দেখার উপর নির্ভর করে, ঝলকানি বিন্দু সাধারণত স্ক্রিনের মাঝখানে পৌঁছানোর আগে আপনার ব্লাইন্ডস্পটে পৌঁছে যায়। শেষ দুটি পরিমাপ সামঞ্জস্যপূর্ণ না হওয়া পর্যন্ত আপনি প্রতিটি চোখ দিয়ে এটি করবেন। আপনি উভয় চোখ পরীক্ষা করার সাথে সাথে আপনার দেখার দূরত্ব বজায় রাখুন। বিঃদ্রঃ. যদি বিন্দুটি কখনই অদৃশ্য না হয় তবে এর অর্থ হ'ল আপনার চোখ ক্রস চুলগুলিতে থাকার পরিবর্তে বিন্দু অনুসরণ করছে। আপনার চোখের কোণে ঝলকানি বিন্দু পর্যবেক্ষণ করার সময় এই পরীক্ষার আপনার ক্রস কেশগুলিতে নজর রাখা দরকার। এটি প্রথমে শক্ত, তবে অনুশীলনের সাথে আরও সহজ হয়ে যায়।\",\r\n    id: 'PENJELASAN. Untuk langkah ini, lebih dekat, jika perlu, jadi Anda tidak lebih dari dua kali lebar layar. Setiap mata memiliki blindspot. Kami akan menemukan milik Anda untuk menemukan seberapa jauh mata Anda dari layar. Anda akan diminta untuk menutup atau menutupi satu mata untuk mengisolasi yang lain. Saat Anda fokus pada rambut salib, saksikan titik -titik yang berkedip -kedip dari sudut mata Anda, dan tekan kembali saat menghilang ke dalam blindspot Anda. Bergantung pada jarak menonton dan ukuran layar, titik -titik yang berkedip -kedip biasanya akan mencapai titik blindspot Anda sebelum sampai di tengah layar. Anda akan melakukan ini dengan masing -masing mata, bergantian, sampai dua pengukuran terakhir konsisten. Harap pertahankan jarak menonton Anda saat Anda menguji kedua mata. CATATAN. Jika titik tidak pernah menghilang, itu berarti mata Anda mengikuti titik, alih -alih tetap di rambut salib. Tes ini membutuhkan Anda untuk mengawasi rambut silang sambil memantau titik -titik yang berkedip -kedip di sudut mata Anda. Itu sulit pada awalnya, tetapi menjadi lebih mudah dengan latihan.',\r\n    'zh-CN':\r\n      '解释。对于此步骤，如有必要，靠近，因此您的宽度不超过屏幕宽度的两倍。每只眼睛都有一个盲点。我们会找到您的，以发现您的眼睛离屏幕有多远。您会被要求闭上或遮住一只眼睛以隔离另一只眼睛。当您专注于十字头发时，请观察眼角闪烁的点，并在盲点消失时击中返回。根据查看距离和屏幕尺寸，闪烁的点通常会在盲点到达屏幕中间之前到达盲点。您将用每只眼睛交替进行此操作，直到最后两个测量一致。测试双眼时，请保持观看距离。笔记。如果点永远不会消失，则意味着您的眼睛正在跟随点，而不是呆在十字头发上。该测试需要您在监视眼角的闪烁点时密切关注叉头发。一开始很难，但是练习变得更加容易。',\r\n    'zh-HK':\r\n      '解釋。對於此步驟，如有必要，靠近，因此您的寬度不超過屏幕寬度的兩倍。每隻眼睛都有一個盲點。我們會找到您的，以發現您的眼睛離屏幕有多遠。您會被要求閉上或遮住一隻眼睛以隔離另一隻眼睛。當您專注於十字頭髮時，請觀察眼角閃爍的點，並在盲點消失時擊中返回。根據查看距離和屏幕尺寸，閃爍的點通常會在盲點到達屏幕中間之前到達盲點。您將用每隻眼睛交替進行此操作，直到最後兩個測量一致。測試雙眼時，請保持觀看距離。筆記。如果點永遠不會消失，則意味著您的眼睛正在跟隨點，而不是呆在十字頭髮上。該測試需要您在監視眼角的閃爍點時密切關注叉頭髮。一開始很難，但是練習變得更加容易。',\r\n    ja: '説明。このステップでは、必要に応じて近づくと、画面幅の2倍よりも遠くないことになります。すべての目には盲点があります。画面からあなたの目がどれだけ離れているかを発見するためにあなたのものを見つけます。片方の目を閉じたり覆ったりするように求められます。交差毛に焦点を合わせている間、目の隅からちらつきのドットを見て、それがあなたの盲点に消えたときに戻ってきてください。距離と画面のサイズの表示に応じて、通常、画面の中央に到達する前に、ちらつきのドットが盲点に到達します。最後の2つの測定が一貫するまで、それぞれの目でこれを交互に行うことになります。両目をテストするときに、視聴距離を維持してください。注記。ドットが消えない場合、それはあなたの目が十字毛にとどまるのではなく、ドットに続いていることを意味します。このテストでは、目の隅にあるちらつきのドットを監視しながら、十字毛に目を向ける必要があります。最初は難しいですが、練習すると簡単になります。',\r\n    ko: '설명. 이 단계에서는 필요한 경우 더 가까워 지므로 화면 너비의 두 배 이상이 아닙니다. 모든 눈에는 사각 지대가 있습니다. 우리는 당신의 눈이 화면에서 얼마나 멀리 떨어져 있는지 알게 될 것입니다. 다른 눈을 닫거나 덮으려면 다른 눈을 분리해야합니다. 십자 머리카락에 집중하는 동안 눈 모퉁이에서 깜박 거리는 점을보고, 사각 지대로 사라질 때 귀환하십시오. 볼거리와 화면 크기에 따라 깜박 거리는 점은 일반적으로 화면 중앙에 도달하기 전에 블라인드 스팟에 도달합니다. 마지막 두 측정이 일관되게 될 때까지 번갈아 가며 각 눈 으로이 작업을 수행합니다. 두 눈을 테스트 할 때 시청 거리를 유지하십시오. 메모. 점이 사라지지 않으면, 십자 머리카락에 머무르는 대신 눈이 점을 따르고 있음을 의미합니다. 이 테스트는 눈 구석에 깜박 거리는 점을 모니터링하면서 십자 머리카락을 주시해야합니다. 처음에는 어렵지만 연습으로 더 쉬워집니다.',\r\n  },\r\n  RC_viewingDistanceRedo: {\r\n    'en-US': 'Redo last response',\r\n    de: 'Letzte Antwort wiederholen',\r\n    fr: 'Refaire la dernière réponse',\r\n    es: 'Rehacer la última respuesta',\r\n    pt: 'Refazer a última resposta',\r\n    it: \"Resta l'ultima risposta\",\r\n    ro: 'Redo ultimul răspuns',\r\n    pl: 'Rówić ostatnią odpowiedź',\r\n    ru: 'Повторить последний ответ',\r\n    hy: 'Redo Վերջին պատասխանը',\r\n    fi: 'Suunnittele viimeinen vastaus',\r\n    ka: 'გადაკეთება ბოლო პასუხი',\r\n    he: 'לבצע מחדש את התגובה האחרונה',\r\n    ar: 'إعادة الاستجابة الأخيرة',\r\n    ur: 'آخری جواب دوبارہ کریں',\r\n    hi: 'पुनर्वितरण अंतिम प्रतिक्रिया',\r\n    ta: 'கடைசி பதிலை மீண்டும் செய்யவும்',\r\n    ml: 'അവസാന പ്രതികരണം വീണ്ടും ചെയ്യുക',\r\n    te: 'చివరి ప్రతిస్పందనను పునరావృతం చేయండి',\r\n    kn: 'ಕೊನೆಯ ಪ್ರತಿಕ್ರಿಯೆಯನ್ನು ಪುನಃ ಮಾಡಿ',\r\n    bn: 'শেষ প্রতিক্রিয়া আবার',\r\n    id: 'Mengulang respons terakhir',\r\n    'zh-CN': '重做上一个',\r\n    'zh-HK': '重做上一個',\r\n    ja: '最後の回答をやり直す',\r\n    ko: '마지막 응답을 다시하십시오',\r\n  },\r\n  RC_viewingDistanceTitle: {\r\n    'en-US': 'Measure Viewing Distance',\r\n    de: 'Messen Sie den Betrachtungsabstand',\r\n    fr: \"Mesurer la distance d'observation\",\r\n    es: 'Medir la distancia de visualización',\r\n    pt: 'Medir a distância de visualização',\r\n    it: 'Misurare la distanza di visione',\r\n    ro: 'Măsurați distanța de vizualizare',\r\n    pl: 'Zmierz odległość oglądania',\r\n    ru: 'Измерить расстояние просмотра',\r\n    hy: 'Չափել դիտման հեռավորությունը',\r\n    fi: 'Mittaa katseluetäisyys',\r\n    ka: 'გაზომეთ სანახავი მანძილი',\r\n    he: 'למדוד את מרחק הצפייה',\r\n    ar: 'قياس مسافة المشاهدة',\r\n    ur: 'دیکھنے کے فاصلے کی پیمائش کریں',\r\n    hi: 'देखने की दूरी को मापें',\r\n    ta: 'பார்க்கும் தூரத்தை அளவிடவும்',\r\n    ml: 'കാണുന്ന ദൂരം അളക്കുക',\r\n    te: 'వీక్షణ దూరాన్ని కొలవండి',\r\n    kn: 'ವೀಕ್ಷಣೆ ದೂರವನ್ನು ಅಳೆಯಿರಿ',\r\n    bn: 'দেখার দূরত্ব পরিমাপ করুন',\r\n    id: 'Ukur jarak tampilan',\r\n    'zh-CN': '测量观看距离',\r\n    'zh-HK': '測量觀看距離',\r\n    ja: '表示距離を測定します',\r\n    ko: '시청 거리를 측정하십시오',\r\n  },\r\n  T_beep: {\r\n    'en-US': 'Beep',\r\n    de: 'Piepton',\r\n    fr: 'Bip',\r\n    es: 'Bip',\r\n    pt: 'Bip',\r\n    it: 'Segnalino',\r\n    ro: 'Bip',\r\n    pl: 'Sygnal dzwiękowy',\r\n    ru: 'гудок',\r\n    hy: 'Ժապավենի',\r\n    fi: 'Piippaus',\r\n    ka: 'BOEP',\r\n    he: 'ביפ',\r\n    ar: 'Beep',\r\n    ur: 'بیپ',\r\n    hi: 'बीप',\r\n    ta: 'பீப்',\r\n    ml: 'ബീപ്പ്',\r\n    te: 'బీప్',\r\n    kn: 'ಬೀಪ್',\r\n    bn: 'বীপ',\r\n    id: 'Berbunyi',\r\n    'zh-CN': '哔',\r\n    'zh-HK': '嗶',\r\n    ja: 'ピー',\r\n    ko: '삑 하는 소리',\r\n  },\r\n  T_cancel: {\r\n    'en-US': 'Cancel',\r\n    de: 'Stornieren',\r\n    fr: 'Annuler',\r\n    es: 'Cancelar',\r\n    pt: 'Cancelar',\r\n    it: 'Annulla',\r\n    ro: 'Anulare',\r\n    pl: 'Anuluj',\r\n    ru: 'Отмена',\r\n    hy: 'Չեղյալ հայտարարում',\r\n    fi: 'Peruuttaa',\r\n    ka: 'გაუქმება',\r\n    he: 'לְבַטֵל',\r\n    ar: 'الغاء',\r\n    ur: 'بند کریں',\r\n    hi: 'बंद करे',\r\n    ta: 'ரத்துசெய்',\r\n    ml: 'റദ്ദാക്കുക',\r\n    te: 'రద్దు చేయండి',\r\n    kn: 'ರದ್ದುಮಾಡು',\r\n    bn: 'বাতিল',\r\n    id: 'Membatalkan',\r\n    'zh-CN': '取消',\r\n    'zh-HK': '取消',\r\n    ja: 'キャンセル',\r\n    ko: '취소',\r\n  },\r\n  T_clickingLetter: {\r\n    'en-US': 'by clicking it in the displayed list of letters.',\r\n    de: 'indem Sie es in der angezeigten Buchstabenliste anklicken.',\r\n    fr: 'En cliquant dessus dans la liste des lettres affichées.',\r\n    es: 'haciendo clic en ella en la lista de letras que se muestra.',\r\n    pt: 'Clicando -o na lista exibida de letras.',\r\n    it: \"facendo clic su di essa nell'elenco di lettere visualizzate.\",\r\n    ro: 'Făcând clic pe lista de litere afișate.',\r\n    pl: 'klikając prawidłową literę na liście liter za pomocą myszki',\r\n    ru: 'щелкнув по нему в отображаемом списке букв.',\r\n    hy: 'Կտտացնելով այն տառերի ցուցադրված ցուցակում:',\r\n    fi: 'napsauttamalla sitä näytetyssä kirjainluettelossa.',\r\n    ka: 'დააჭირეთ მას ასოების ნაჩვენები სიაში.',\r\n    he: 'על ידי לחיצה עליו ברשימת האותיות המוצגת.',\r\n    ar: 'بالضغط عليه في قائمة الحروف المعروضة.',\r\n    ur: 'خطوط کی ڈسپلے لسٹ پر اس پر کلک کرکے۔',\r\n    hi: 'अक्षरों की प्रदर्शित सूची पर इसे क्लिक करके।',\r\n    ta: 'கடிதங்களின் காண்பிக்கப்பட்ட பட்டியலில் அதைக் கிளிக் செய்வதன் மூலம்.',\r\n    ml: 'പ്രദർശിപ്പിച്ച അക്ഷരങ്ങളുടെ പട്ടികയിൽ ക്ലിക്കുചെയ്ത്.',\r\n    te: 'ప్రదర్శించిన అక్షరాల జాబితాలో క్లిక్ చేయడం ద్వారా.',\r\n    kn: 'ಅಕ್ಷರಗಳ ಪ್ರದರ್ಶಿತ ಪಟ್ಟಿಯಲ್ಲಿ ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ.',\r\n    bn: 'অক্ষরের প্রদর্শিত তালিকায় এটি ক্লিক করে।',\r\n    id: 'dengan mengkliknya dalam daftar huruf yang ditampilkan.',\r\n    'zh-CN': '通过点击给出文字中的相应字母。',\r\n    'zh-HK': '通過點擊給出文字中的相應字母。',\r\n    ja: '表示されている文字のリストをクリックすることで',\r\n    ko: '표시된 문자 목록에서 클릭하여.',\r\n  },\r\n  T_clickingLetterRepeatedLetters: {\r\n    'en-US': 'by clicking them in the list of letters.',\r\n    de: 'durch Klicken auf sie in der Liste der Buchstaben.',\r\n    fr: 'en les cliquant dans la liste des lettres.',\r\n    es: 'Al hacer clic en la lista de letras.',\r\n    pt: 'clicando neles na lista de letras.',\r\n    it: \"Facendo clic su di loro nell'elenco delle lettere.\",\r\n    ro: 'făcând clic pe ele în lista de litere.',\r\n    pl: 'Klikając je na liście liter.',\r\n    ru: 'Нажав их в списке букв.',\r\n    hy: 'կտտացնելով դրանք տառերի ցանկում:',\r\n    fi: 'napsauttamalla niitä kirjainluettelossa.',\r\n    ka: 'მათ ასოების სიაში დაჭერით.',\r\n    he: 'על ידי לחיצה עליהם ברשימת המכתבים.',\r\n    ar: 'من خلال النقر عليها في قائمة الرسائل.',\r\n    ur: 'خطوط کی فہرست میں ان پر کلک کرکے۔',\r\n    hi: 'उन्हें पत्रों की सूची में क्लिक करके।',\r\n    ta: 'கடிதங்களின் பட்டியலில் அவற்றைக் கிளிக் செய்வதன் மூலம்.',\r\n    ml: 'അക്ഷരങ്ങളുടെ പട്ടികയിൽ അവ ക്ലിക്കുചെയ്യുന്നതിലൂടെ.',\r\n    te: 'అక్షరాల జాబితాలో వాటిని క్లిక్ చేయడం ద్వారా.',\r\n    kn: 'ಅವುಗಳನ್ನು ಅಕ್ಷರಗಳ ಪಟ್ಟಿಯಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ.',\r\n    bn: 'চিঠির তালিকায় তাদের ক্লিক করে।',\r\n    id: 'dengan mengkliknya dalam daftar huruf.',\r\n    'zh-CN': '通过在字母列表中单击它们。',\r\n    'zh-HK': '通過在字母列表中單擊它們。',\r\n    ja: '文字のリストでそれらをクリックします。',\r\n    ko: '문자 목록에서 클릭하여.',\r\n  },\r\n  T_clickingWordRsvpReading: {\r\n    'en-US': 'by clicking them in a list of words.',\r\n    de: 'durch Klicken auf sie in einer Liste von Wörtern.',\r\n    fr: 'en les cliquant dans une liste de mots.',\r\n    es: 'haciendo clic en ellos en una lista de palabras.',\r\n    pt: 'clicando neles em uma lista de palavras.',\r\n    it: 'Facendo clic su di loro in un elenco di parole.',\r\n    ro: 'făcând clic pe ele într -o listă de cuvinte.',\r\n    pl: 'klikając je na liście słów.',\r\n    ru: 'Нажав их в списке слов.',\r\n    hy: 'Կտտացնելով դրանք բառերի ցանկում:',\r\n    fi: 'napsauttamalla niitä sanaluettelossa.',\r\n    ka: 'მათი სიტყვების ჩამონათვალში დაჭერით.',\r\n    he: 'על ידי לחיצה עליהם ברשימת מילים.',\r\n    ar: 'من خلال النقر عليها في قائمة الكلمات.',\r\n    ur: 'الفاظ کی فہرست میں ان پر کلک کرکے۔',\r\n    hi: 'उन्हें शब्दों की सूची में क्लिक करके।',\r\n    ta: 'சொற்களின் பட்டியலில் அவற்றைக் கிளிக் செய்வதன் மூலம்.',\r\n    ml: 'അവ വാക്കുകളുടെ പട്ടികയിൽ ക്ലിക്കുചെയ്യുന്നതിലൂടെ.',\r\n    te: 'వాటిని పదాల జాబితాలో క్లిక్ చేయడం ద్వారా.',\r\n    kn: 'ಅವುಗಳನ್ನು ಪದಗಳ ಪಟ್ಟಿಯಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ.',\r\n    bn: 'শব্দের তালিকায় তাদের ক্লিক করে।',\r\n    id: 'dengan mengkliknya dalam daftar kata.',\r\n    'zh-CN': '通过在单词列表中单击它们。',\r\n    'zh-HK': '通過在單詞列表中單擊它們。',\r\n    ja: '単語のリストでそれらをクリックします。',\r\n    ko: '단어 목록에서 클릭하여.',\r\n  },\r\n  T_continueClickProceed: {\r\n    'en-US': 'To continue, click PROCEED.',\r\n    de: 'Klicken Sie, um fortzufahren.',\r\n    fr: 'Pour continuer, cliquez sur continuer.',\r\n    es: 'Para continuar, haga clic en continuar.',\r\n    pt: 'Para continuar, clique em prosseguir.',\r\n    it: 'Per continuare, fare clic su Procedi.',\r\n    ro: 'Pentru a continua, faceți clic pe continuați.',\r\n    pl: 'Aby kontynuować, kliknij, kontynuuj.',\r\n    ru: 'Чтобы продолжить, нажмите «Продолжить».',\r\n    hy: 'Շարունակելու համար կտտացրեք Շարունակել:',\r\n    fi: 'Jatka jatka napsauttamalla.',\r\n    ka: 'გასაგრძელებლად, დააჭირეთ ღილაკს გაგრძელება.',\r\n    he: 'להמשך, לחץ על המשך.',\r\n    ar: 'للمتابعة ، انقر فوق متابعة.',\r\n    ur: 'جاری رکھنے کے لئے ، آگے بڑھیں پر کلک کریں۔',\r\n    hi: 'जारी रखने के लिए, आगे बढ़ने पर क्लिक करें।',\r\n    ta: 'தொடர, தொடரவும் என்பதைக் கிளிக் செய்க.',\r\n    ml: 'തുടരാൻ, തുടരുക ക്ലിക്കുചെയ്യുക.',\r\n    te: 'కొనసాగించడానికి, కొనసాగండి క్లిక్ చేయండి.',\r\n    kn: 'ಮುಂದುವರಿಸಲು, ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'চালিয়ে যেতে, এগিয়ে যেতে ক্লিক করুন।',\r\n    id: 'Untuk melanjutkan, klik Lanjutkan.',\r\n    'zh-CN': '点击PROCEED以继续。',\r\n    'zh-HK': '點擊PROCEED以繼續。',\r\n    ja: '続行するには、[続行]をクリックします。',\r\n    ko: '계속하려면 진행을 클릭하십시오.',\r\n  },\r\n  T_continueHitReturn: {\r\n    'en-US': 'To continue, hit RETURN.',\r\n    de: 'Um fortzufahren, drücken Sie bitte RETURN.',\r\n    fr: 'Pour continuer, appuyez sur Retour.',\r\n    es: 'Para continuar, presione el regreso.',\r\n    pt: 'Para continuar, pressione o retorno.',\r\n    it: 'Per continuare, premi INVIO.',\r\n    ro: 'Pentru a continua, apăsați returul.',\r\n    pl: 'Aby kontynuować, naciśnij ENTER.',\r\n    ru: 'Чтобы продолжить, нажмите ВОЗВРАТ.',\r\n    hy: 'Շարունակելու համար սեղմեք վերադարձը:',\r\n    fi: 'Jatkaaksesi paluu.',\r\n    ka: 'გასაგრძელებლად, მოხვდით.',\r\n    he: 'כדי להמשיך, לחץ על RETURN.',\r\n    ar: 'للمتابعة ، يرجى الضغط على زر الرجوع RETURN.',\r\n    ur: 'جاری رکھنے کے لئے ، براہ کرم واپسی دبائیں۔',\r\n    hi: 'जारी रखने के लिए, कृपया रिटर्न दबाएं।',\r\n    ta: 'தொடர, திரும்பவும்.',\r\n    ml: 'തുടരുന്നതിന്, തിരിച്ചുവരവ്.',\r\n    te: 'కొనసాగించడానికి, రాబడిని కొట్టండి.',\r\n    kn: 'ಮುಂದುವರಿಸಲು, ರಿಟರ್ನ್ ಒತ್ತಿರಿ.',\r\n    bn: 'চালিয়ে যেতে, হিট রিটার্ন।',\r\n    id: 'Untuk melanjutkan, tekan kembali.',\r\n    'zh-CN': '按回车键以继续。',\r\n    'zh-HK': '按回車鍵以繼續。',\r\n    ja: '続行するには、Returnキーを押してください。',\r\n    ko: '계속하려면 반환을 누르십시오.',\r\n  },\r\n  T_continueHitReturnOrClickProceed: {\r\n    'en-US': 'To continue, hit RETURN or click PROCEED.',\r\n    de: 'Drücken Sie zum Fortsetzung der Rückgabe oder klicken Sie auf Fahren.',\r\n    fr: 'Pour continuer, appuyez sur Retour ou cliquez sur Procéder.',\r\n    es: 'Para continuar, presione la devolución o haga clic en continuar.',\r\n    pt: 'Para continuar, pressione o retorno ou clique em prosseguir.',\r\n    it: 'Per continuare, premi reso o fai clic su Procedi.',\r\n    ro: 'Pentru a continua, apăsați Return sau faceți clic pe continuați.',\r\n    pl: 'Aby kontynuować, naciśnij zwrot lub kliknij, kontynuuj.',\r\n    ru: 'Чтобы продолжить, нажмите возврат или нажмите, продолжайте.',\r\n    hy: 'Շարունակել, հարվածել վերադարձին կամ կտտացնել:',\r\n    fi: 'Jatka jatka palauta tai napsauta Jatka.',\r\n    ka: 'გასაგრძელებლად, დააჭირეთ დაბრუნებას ან დააჭირეთ გაგრძელება.',\r\n    he: 'להמשך, לחץ על החזרה או לחץ על המשך.',\r\n    ar: 'للمتابعة ، اضغط على الإرجاع أو انقر فوق متابعة.',\r\n    ur: 'جاری رکھنے کے لئے ، واپسی کو ہٹائیں یا آگے بڑھیں پر کلک کریں۔',\r\n    hi: 'जारी रखने के लिए, रिटर्न हिट करें या आगे बढ़ें पर क्लिक करें।',\r\n    ta: 'தொடர, திரும்பவும் அல்லது தொடரவும் என்பதைக் கிளிக் செய்க.',\r\n    ml: 'തുടരുന്നതിന്, മടങ്ങിവരവ് അമർത്തുക അല്ലെങ്കിൽ തുടരുക ക്ലിക്കുചെയ്യുക.',\r\n    te: 'కొనసాగించడానికి, రిటర్న్ నొక్కండి లేదా కొనసాగండి క్లిక్ చేయండి.',\r\n    kn: 'ಮುಂದುವರಿಸಲು, ರಿಟರ್ನ್ ಒತ್ತಿರಿ ಅಥವಾ ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'চালিয়ে যেতে, হিট রিটার্ন বা এগিয়ে ক্লিক করুন।',\r\n    id: 'Untuk melanjutkan, tekan kembali atau klik lanjutkan.',\r\n    'zh-CN': '按回车键或者点击PROCEED以继续。',\r\n    'zh-HK': '按回車鍵或者點擊PROCEED以繼續。',\r\n    ja: '続行するには、Returnを押すか、[続行]をクリックします。',\r\n    ko: '계속하려면 반품을 누르거나 진행을 클릭하십시오.',\r\n  },\r\n  T_continueNeitherClickNorType: {\r\n    'en-US': 'Cannot proceed because responseTypedBool and responseClickedBool are both FALSE.',\r\n    de: 'Kann nicht fortfahren, da ResponTypedBool und ResponsedoclickedBool beide falsch sind.',\r\n    fr: 'Ne peut pas continuer parce que ResponseTypedBool et ResponseClickedBool sont tous deux faux.',\r\n    es: 'No puede proceder porque ResponseTetypedbool y ResponseClickedBool son falsos.',\r\n    pt: 'Não pode prosseguir porque o ResponsetyPedBool e o responseClickedBool são falsos.',\r\n    it: 'Non può procedere perché ResponseTypedBool e RomesClickedBool sono entrambi falsi.',\r\n    ro: 'Nu se poate continua, deoarece RespotyeTypedBool și ResponseClickedBool sunt ambele false.',\r\n    pl: 'Nie można kontynuować, ponieważ zarówno odpowiedzialne, jak i odpowiedzialne są fałszywe.',\r\n    ru: 'Не могу продолжить, потому что ответ Speatpedbool и ApproneClickedbool оба ложны.',\r\n    hy: 'Հնարավոր չէ շարունակել, քանի որ պատասխանատուբուլը եւ պատասխանողներն են, երկուսն էլ կեղծ են:',\r\n    fi: 'Ei voi edetä, koska ResponseTypeDBool ja ResponseClickedBool ovat molemmat vääriä.',\r\n    ka: 'არ შეიძლება გაგრძელდეს, რადგან პასუხებიტიპიდური და საპასუხო პროცესები, ორივე ყალბია.',\r\n    he: 'לא ניתן להמשיך מכיוון ש- RepressEtypedBool ו- ResponseClickedBool שניהם שקריים.',\r\n    ar: 'لا يمكن المتابعة لأن ResponsePedBool و ResponseclickedBool كلاهما خطأ.',\r\n    ur: 'آگے نہیں بڑھ سکتا کیونکہ جوابی ٹائپڈ بول اور جوابی کلیکڈ بول دونوں غلط ہیں۔',\r\n    hi: 'आगे नहीं बढ़ सकते क्योंकि responsetypedBool और responslickedBool दोनों झूठे हैं।',\r\n    ta: 'தொடர முடியாது, ஏனெனில் ரெஸ்பான்டிபெட்பூல் மற்றும் ரெஸ்பான்சிலிக்இட்பூல் இரண்டும் பொய்யானவை.',\r\n    ml: 'പോകാനുള്ള ഉത്തരവാദിത്തങ്ങൾ, റെസ്പോസ്ലിക്ലിക്ഡ്ബൂൾ എന്നിവയും തുടരാൻ കഴിയില്ല.',\r\n    te: 'కొనసాగలేరు ఎందుకంటే రెస్పాన్స్‌టైప్డ్ బూల్ మరియు స్పందన సంక్లిష్ట్‌బూల్ రెండూ అబద్ధం.',\r\n    kn: 'ಮುಂದುವರಿಯಲು ಸಾಧ್ಯವಿಲ್ಲ ಏಕೆಂದರೆ ರೆಸ್ಪಾನ್ಸಿಟೈಪ್ಡ್ಬೂಲ್ ಮತ್ತು ರೆಸ್ಪಾನ್ಸಿಲಿಕ್ಡ್ಬೂಲ್ ಎರಡೂ ಸುಳ್ಳು.',\r\n    bn: 'অগ্রসর হতে পারে না কারণ প্রতিক্রিয়াশীল বুল এবং রেসপন্সক্লিকডবুল উভয়ই মিথ্যা।',\r\n    id: 'Tidak dapat dilanjutkan karena responsetypedbool dan responseClickedBool keduanya salah.',\r\n    'zh-CN': '无法进行，因为ResponseTypedBool和ResponseClickedBool都是错误的。',\r\n    'zh-HK': '無法進行，因為ResponseTypedBool和ResponseClickedBool都是錯誤的。',\r\n    ja: 'ResponseTypedBoolとResponseClickedBoolが両方とも虚偽であるため、続行できません。',\r\n    ko: 'ResponseTypedBool과 ResponseClickedBool은 모두 거짓이므로 진행할 수 없습니다.',\r\n  },\r\n  T_counterBlock: {\r\n    'en-US': 'Block xx1 of xx2.',\r\n    de: 'Block xx1 von xx2.',\r\n    fr: 'Bloc xx1 de xx2.',\r\n    es: 'Bloque xx1 de xx2.',\r\n    pt: 'Bloco xx1 de xx2.',\r\n    it: 'BLOCCO xx1 di xx2.',\r\n    ro: 'Blocul xx1 din xx2.',\r\n    pl: 'Blok xx1 xx2.',\r\n    ru: 'Блок xx1 xx2.',\r\n    hy: 'Արգելափակել xx2- ի xx1- ը:',\r\n    fi: 'xx2: n lohko xx1.',\r\n    ka: 'xx2- ის ბლოკი xx1.',\r\n    he: 'חסום xx1 של xx2.',\r\n    ar: 'كتلة xx1 من xx2.',\r\n    ur: 'xx2 کے xx1 کو مسدود کریں۔',\r\n    hi: 'xx2 के xx1 को ब्लॉक करें।',\r\n    ta: 'xx2 இன் xx1 தொகுதி.',\r\n    ml: 'xx2 ന്റെ xx1 തടയുക.',\r\n    te: 'xx2 యొక్క xx1 ని బ్లాక్ చేయండి.',\r\n    kn: 'xx2 ನ xx1 ಅನ್ನು ನಿರ್ಬಂಧಿಸಿ.',\r\n    bn: 'Xx2 এর xx1 ব্লক করুন।',\r\n    id: 'Blokir xx1 dari xx2.',\r\n    'zh-CN': 'xx2的xx1块。',\r\n    'zh-HK': 'xx2的xx1塊。',\r\n    ja: 'xx2のブロックxx1。',\r\n    ko: 'xx2의 블록 xx1.',\r\n  },\r\n  T_counterCm: {\r\n    'en-US': ' At xxx cm.',\r\n    de: 'Bei xxx cm.',\r\n    fr: 'Bei xxx cm.',\r\n    es: 'A xxx cm.',\r\n    pt: ' Em xxx cm.',\r\n    it: ' A xxx cm.',\r\n    ro: ' La xxx cm.',\r\n    pl: ' W xxx cm.',\r\n    ru: ' На ххх см.',\r\n    hy: ' xxx սմ-ով:',\r\n    fi: ' Xxx cm.',\r\n    ka: ' xxx სმ -ზე.',\r\n    he: ' בגודל xxx ס\"מ.',\r\n    ar: ' في xxx س.م.',\r\n    ur: ' xxx CM لیکن',\r\n    hi: ' xxx सेमी. पर',\r\n    ta: ' Xxx செ.மீ.',\r\n    ml: ' xxx സെന്റിമീറ്ററിൽ.',\r\n    te: ' Xxx cm వద్ద.',\r\n    kn: ' Xxx cm ನಲ್ಲಿ.',\r\n    bn: ' Xxx সেমি এ।',\r\n    id: ' Di xxx cm.',\r\n    'zh-CN': ' xxx 厘米远。',\r\n    'zh-HK': ' xxx 厘米遠。',\r\n    ja: 'xxx cmの距離で。',\r\n    ko: ' xxx cm에서.',\r\n  },\r\n  T_counterReadingPageBlock: {\r\n    'en-US': 'Page xx1 of xx2. Block xx3 of xx4.',\r\n    de: 'Seite xx1 von xx2. Block xx3 von xx4.',\r\n    fr: 'Xx1 page de xx2. Bloc xx3 de xx4.',\r\n    es: 'Pagina xx1 de xx2. Bloque xx3 de xx4.',\r\n    pt: 'Página xx1 de xx2. Bloco xx3 de xx4.',\r\n    it: 'Pagina xx1 di xx2. BLOCCO xx3 di xx4.',\r\n    ro: 'Pagina xx1 din xx2. Blocul xx3 din xx4.',\r\n    pl: 'Strona xx1 z xx2. Blok xx3 xx4.',\r\n    ru: 'Страница xx1 xx2. Блок xx3 xx4.',\r\n    hy: 'Xx2 էջ xx1: Արգելափակել xx4- ի xx3- ը:',\r\n    fi: 'xx2: n sivu xx1. xx4: n lohko xx3.',\r\n    ka: 'xx2 გვერდი xx1. ბლოკი xx3 xx4.',\r\n    he: 'עמוד xx1 של xx2. חסום xx3 של xx4.',\r\n    ar: 'صفحة xx1 من xx2. كتلة xx3 من xx4.',\r\n    ur: 'صفحہ xx1 xx2۔ xx4 کے xx3 کو بلاک کریں۔',\r\n    hi: 'xx2 का पृष्ठ xx1। xx4 के xx3 को ब्लॉक करें।',\r\n    ta: 'xx2 இன் பக்கம் xx1. xx4 இன் xx3 தொகுதி.',\r\n    ml: 'xx2 ന്റെ xx1. xx4- ന്റെ xx3 തടയുക.',\r\n    te: 'xx2 యొక్క పేజీ xx1. xx4 యొక్క xx3 ని బ్లాక్ చేయండి.',\r\n    kn: 'xx2 ನ ಪುಟ xx1. xx4 ನ xx3 ಅನ್ನು ನಿರ್ಬಂಧಿಸಿ.',\r\n    bn: 'Xx2 এর xx1 পৃষ্ঠা। Xx4 এর xx3 ব্লক করুন।',\r\n    id: 'Halaman xx1 dari xx2. Blok xx3 dari xx4.',\r\n    'zh-CN': 'xx2的第xx1页。 xx4的xx3块。',\r\n    'zh-HK': 'xx2的第xx1頁。 xx4的xx3塊。',\r\n    ja: 'xx2のページxx1。 xx4のブロックxx3。',\r\n    ko: 'xx2의 xx1 페이지. xx4의 블록 xx3.',\r\n  },\r\n  T_counterTrialBlock: {\r\n    'en-US': 'Trial xx1 of xx2. Block xx3 of xx4.',\r\n    de: 'Testversion xx1 von xx2. Block xx3 von xx4.',\r\n    fr: 'Essai xx1 de xx2. Bloc xx3 de xx4.',\r\n    es: 'Ensayo xx1 de xx2. Bloque xx3 de xx4.',\r\n    pt: 'xx1 Ensaio de xx2. Bloco xx3 de xx4.',\r\n    it: 'Prova xx1 di xx2. Blocco xx3 di xx4.',\r\n    ro: 'xx1 Eseul xx2. xx3 bloc xx4.',\r\n    pl: 'Próba xx1 z xx2. Blok xx3 z xx4. ',\r\n    ru: 'Испытание xx1 из xx2. Блок xx3 из xx4.',\r\n    hy: 'Test xx1 xx2- ից: xx4- ից արգելափակեք xx3:',\r\n    fi: 'xx2: n kokeilu xx1. xx4: n lohko xx3.',\r\n    ka: 'xx2- ის საცდელი xx1. ბლოკი xx3 xx4.',\r\n    he: 'ניסיון xx1 של xx2. בלוק xx3 של xx4.',\r\n    ar: 'تجربة xx1 من xx2. مجموعة xx3 من xx4.',\r\n    ur: 'xx1 ٹرائل آف ایکس ایکس 2۔ xx4 کا xx3 بلاک۔',\r\n    hi: 'xx2 का xx1 ट्राइअल। xx4 का xx3 ब्लॉक।',\r\n    ta: 'xx2 இன் சோதனை xx1. xx4 இன் xx3 தொகுதி.',\r\n    ml: 'xx2 ലെ ട്രയൽ xx1. xx4- ന്റെ xx3 തടയുക.',\r\n    te: 'Xx2 యొక్క ట్రయల్ xx1. xx4 యొక్క xx3 ని బ్లాక్ చేయండి.',\r\n    kn: 'xx2 ನ ಪ್ರಯೋಗ xx1. xx4 ನ xx3 ಅನ್ನು ನಿರ್ಬಂಧಿಸಿ.',\r\n    bn: 'xx2 এর xx1 ট্রায়াল। Xx4 এর xx3 ব্লক করুন।',\r\n    id: 'Trial xx1 dari xx2. Blok xx3 dari xx4.',\r\n    'zh-CN': '试验xx1，共xx2次试验。 区组xx3，共xx4个区组。',\r\n    'zh-HK': '試驗xx1，共xx2次試驗。區組xx3，共xx4個區組。',\r\n    ja: 'xx2のテストxx1。 xx4のブロックxx3。',\r\n    ko: 'xx2의 시험 xx1. xx4의 블록 xx3.',\r\n  },\r\n  T_escapeToQuit: {\r\n    'en-US': '(Quit anytime by pressing ESCAPE.)',\r\n    de: '(Beenden Sie jederzeit mit ESCAPE.)',\r\n    fr: '(Arrêtez à tout moment en appuyant sur Escape.)',\r\n    es: '(Deja en cualquier momento presionando Escape).',\r\n    pt: '(Saia a qualquer momento pressionando Escape.)',\r\n    it: '(Smettila in qualsiasi momento premendo la fuga.)',\r\n    ro: '(Renunță oricând apăsând Escape.)',\r\n    pl: '(Rzuć w dowolnym momencie, naciskając Escape.)',\r\n    ru: '(Выйти в любое время, нажимая побег.)',\r\n    hy: '(Հանգստացեք ցանկացած պահի `սեղմելով փախուստը):',\r\n    fi: '(Lopeta milloin tahansa painamalla Escape.)',\r\n    ka: '(დატოვეთ ნებისმიერ დროს გაქცევის დაჭერით.)',\r\n    he: '(צא מכל זמן על ידי לחיצה על בריחה.)',\r\n    ar: '(استقال في أي وقت عن طريق الضغط على الهروب.)',\r\n    ur: '(فرار کو دبانے سے کسی بھی وقت چھوڑ دیں۔)',\r\n    hi: '(पलायन दबाकर कभी भी छोड़ दें।)',\r\n    ta: '(தப்பிப்பதை அழுத்துவதன் மூலம் எப்போது வேண்டுமானாலும் வெளியேறவும்.)',\r\n    ml: '(എസ്കേപ്പ് അമർത്തിക്കൊണ്ട് എപ്പോൾ വേണമെങ്കിലും ഉപേക്ഷിക്കുക.)',\r\n    te: '(ఎస్కేప్ నొక్కడం ద్వారా ఎప్పుడైనా నిష్క్రమించండి.)',\r\n    kn: '(ತಪ್ಪಿಸಿಕೊಳ್ಳುವಿಕೆಯನ್ನು ಒತ್ತುವ ಮೂಲಕ ಯಾವಾಗ ಬೇಕಾದರೂ ತ್ಯಜಿಸಿ.)',\r\n    bn: '(পালাতে চাপ দিয়ে যে কোনও সময় প্রস্থান করুন))',\r\n    id: '(Berhenti kapan saja dengan menekan Escape.)',\r\n    'zh-CN': '（在任何时候按Esc键以退出。）',\r\n    'zh-HK': '（在任何時候按Esc鍵以退出。）',\r\n    ja: '（エスケープを押すことでいつでも辞めます。）',\r\n    ko: '(탈출을 눌러 언제든지 종료하십시오.)',\r\n  },\r\n  T_generatingMovie: {\r\n    'en-US': 'Making movie.',\r\n    de: 'Film machen.',\r\n    fr: 'Faire du film.',\r\n    es: 'Haciendo una película.',\r\n    pt: 'Fazendo filme.',\r\n    it: 'Fare film.',\r\n    ro: 'Realizarea filmului.',\r\n    pl: 'Tworzenie filmu.',\r\n    ru: 'Сделать фильм.',\r\n    hy: 'Ֆիլմ պատրաստելը:',\r\n    fi: 'Elokuvan tekeminen.',\r\n    ka: 'ფილმის გადაღება.',\r\n    he: 'עושה סרט.',\r\n    ar: 'صنع الفيلم.',\r\n    ur: 'مووی بنانا۔',\r\n    hi: 'फिल्म बनाना।',\r\n    ta: 'திரைப்படம் தயாரித்தல்.',\r\n    ml: 'സിനിമ നിർമ്മിക്കുന്നു.',\r\n    te: 'సినిమా తయారు చేయడం.',\r\n    kn: 'ಚಲನಚಿತ್ರ ಮಾಡುವುದು.',\r\n    bn: 'সিনেমা করা।',\r\n    id: 'Membuat film.',\r\n    'zh-CN': '制作电影。',\r\n    'zh-HK': '製作電影。',\r\n    ja: '映画を作る。',\r\n    ko: '영화 제작.',\r\n  },\r\n  T_guessingGame: {\r\n    'en-US':\r\n      \"The letter size and spacing vary from big and easy down to tiny and hard or impossible. You can't get much more than two-thirds right, so relax. Think of it as a guessing game, and just get as many as you can. You'll hear a beep whenever you're right.\",\r\n    de: 'Die Buchstabengröße und der Buchstaben variieren von groß und einfach bis zu winzig und hart oder unmöglich. Sie können nicht viel mehr als zwei Drittel richtig bekommen, also entspannen Sie sich. Betrachten Sie es als ein Ratenspiel und holen Sie sich so viele wie möglich. Sie werden einen Piepton hören, wenn Sie Recht haben.',\r\n    fr: \"La taille de la lettre et l'espacement varient de grand et facile à minuscule et difficile ou impossible. Vous ne pouvez pas obtenir beaucoup plus des deux tiers à droite, alors détendez-vous. Considérez-le comme un jeu de supposition et obtenez-en autant que vous le pouvez. Vous entendrez un bip quand vous avez raison.\",\r\n    es: 'El tamaño y el espacio de la letra varían de grande y fácil hasta pequeño y duro o imposible. No puedes tener mucho más de dos tercios, así que relájate. Piense en ello como un juego de adivinanzas, y simplemente obtenga tantos como pueda. Escucharás un pitido siempre que tengas razón.',\r\n    pt: 'O tamanho da letra e o espaçamento variam de grande e fácil para baixo a minúsculo e duro ou impossível. Você não pode acertar muito mais do que dois terços, então relaxe. Pense nisso como um jogo de adivinhação e obtenha o máximo possível. Você ouvirá um sinal sonoro sempre que estiver certo.',\r\n    it: 'Le dimensioni e lo spazio della lettera variano grandi e facili fino a quando non sono piccoli e difficili o impossibili. Non puoi avere molto più di due terzi, quindi rilassati. Pensaci come un gioco di indovinello e ottieni semplicemente il maggior numero possibile. Sentirai un segnale acustico ogni volta che hai ragione.',\r\n    ro: 'Mărimea și spațiul literei variază mari și ușoare până la mici și dure sau imposibile. Nu poți avea mult mai mult de două treimi, așa că relaxează -te. Gândiți -vă la asta ca la un joc de ghicitoare și pur și simplu obțineți cât pot. Vei auzi un bip ori de câte ori ai dreptate.',\r\n    pl: 'Czasami litera będzie łatwa do zidentyfikowania. Czasami będzie to prawie niemożliwe. Nie odpowiesz poprawnie na więcej niż połowę prób, więc zrelaksuj się. Pomyśl o tym jak o grze do zgadywania i po prostu odpowiedz poprawnie na tyle ile możesz. (Przerwij w dowolnym momencie, naciskając Escape.)\\n ',\r\n    ru: 'Размер букв и расстояние между буквами изменяется между большими и легкими до крошечного и тяжелого или невозможного. Вы не можете получить гораздо более двух третей, так что расслабьтесь. Подумайте об этом как об угадывании и просто получите столько, сколько сможете. Вы услышите звуковой сигнал, когда вы правы.',\r\n    hy: 'Նամակների չափը եւ տառերի միջեւ եղած հեռավորությունը տատանվում է մեծ եւ թոքերի միջեւ դեպի մանր եւ ծանր կամ անհնար: Դուք չեք կարող շատ ավելին ստանալ, քան երկուսը, այնպես էլ հանգստացեք: Մտածեք դրա մասին, որպես կռահում եւ պարզապես հնարավորինս ստացեք: Դուք կլսեք ձայնային ազդանշան, երբ ճիշտ եք:',\r\n    fi: 'Kirjeen koko ja etäisyys vaihtelevat suuresta ja helposta alas pieneen ja kovaan tai mahdottomaan. Et voi saada paljon enemmän kuin kaksi kolmasosaa oikein, joten rentoudu. Ajattele sitä arvauspelinä ja saat vain niin monta kuin pystyt. Kuulet piippauksen aina kun olet oikeassa.',\r\n    ka: 'ასოების ზომა და ინტერვალი განსხვავდება დიდი და მარტივად, პატარა და მძიმე და შეუძლებელი. თქვენ ვერ მიიღებთ ბევრად მეტს ორ მესამედზე, ასე რომ დაისვენეთ. იფიქრეთ, როგორც გამოცნობის თამაში, და უბრალოდ მიიღეთ რაც შეიძლება მეტი. თქვენ მოისმენთ beep, როდესაც მართალი ხართ.',\r\n    he: 'גודל המכתב והמרווח משתנים מגדול וקל למטה לזעיר וקשה או בלתי אפשרי. אתה לא יכול להשיג הרבה יותר משני שלישים נכון, אז תירגע. חשוב על זה כמשחק ניחוש, ופשוט קבל כמה שיותר. תשמע צפצוף בכל פעם שאתה צודק.',\r\n    ar: 'يختلف حجم الحرف وتباعده من كبيرة وسهلة إلى صغيرة وصعبة أو مستحيلة. لا يمكنك الحصول على أكثر من ثلثي بشكل صحيح ، لذا استرخ. فكر في الأمر على أنه لعبة تخمين ، واحصل على أكبر عدد ممكن من الأشياء. ستسمع صوتًا كلما كنت على حق.',\r\n    ur: 'خط کا سائز اور خالی جگہ بڑے اور آسان سے چھوٹے اور سخت یا ناممکن سے مختلف ہے۔ آپ کو دو تہائی سے زیادہ نہیں مل سکتے ہیں ، لہذا آرام کریں۔ اس کو تخمینہ کھیل کے طور پر سوچیں ، اور زیادہ سے زیادہ حاصل کریں۔ جب بھی آپ ٹھیک کہتے ہیں ، آپ کو بیپ سنی جائے گی۔',\r\n    hi: 'पत्र का आकार और रिक्ति बड़े और आसान से छोटे और कठोर या असंभव से भिन्न होती है। आप दो-तिहाई से अधिक सही नहीं पा सकते हैं, इसलिए आराम करें। इसे एक अनुमान लगाने के खेल के रूप में सोचें, और बस जितने भी हो सके उतने प्राप्त करें। जब भी आप सही हों तो आप एक बीप सुनेंगे।',\r\n    ta: 'கடித அளவு மற்றும் இடைவெளி பெரிய மற்றும் எளிதான முதல் சிறிய மற்றும் கடினமான அல்லது சாத்தியமற்றது வரை மாறுபடும். மூன்றில் இரண்டு பங்கிற்கு மேல் நீங்கள் பெற முடியாது, எனவே ஓய்வெடுங்கள். இதை ஒரு யூகிக்கும் விளையாட்டாக நினைத்துப் பாருங்கள், உங்களால் முடிந்தவரை பலவற்றைப் பெறுங்கள். நீங்கள் சரியாக இருக்கும்போதெல்லாம் ஒரு பீப்பைக் கேட்பீர்கள்.',\r\n    ml: 'കത്ത് വലുപ്പവും അകലവും വലുതും എളുപ്പത്തിൽ ചെറിയതും കഠിനവുമായ അല്ലെങ്കിൽ അസാധ്യമാണ്. നിങ്ങൾക്ക് മൂന്നിൽ രണ്ട് വലതുവശത്ത് കൂടുതൽ നേടാൻ കഴിയില്ല, അതിനാൽ വിശ്രമിക്കുക. ഇത് ഒരു ess ഹിക്കുന്ന ഗെയിമായി കരുതുക, നിങ്ങൾക്ക് കഴിയുന്നത്രയും നേടുക. നിങ്ങൾ ശരിയാകുമ്പോഴെല്ലാം നിങ്ങൾ ഒരു ബീപ്പ് കേൾക്കും.',\r\n    te: 'అక్షరాల పరిమాణం మరియు అంతరం పెద్ద మరియు తేలికైన నుండి చిన్న మరియు కఠినమైన లేదా అసాధ్యం వరకు మారుతూ ఉంటాయి. మీరు మూడింట రెండు వంతుల కంటే ఎక్కువ పొందలేరు, కాబట్టి విశ్రాంతి తీసుకోండి. దీన్ని game హించే ఆటగా భావించండి మరియు మీకు వీలైనన్ని ఎక్కువ పొందండి. మీరు సరైనప్పుడల్లా బీప్ వింటారు.',\r\n    kn: 'ಅಕ್ಷರ ಗಾತ್ರ ಮತ್ತು ಅಂತರವು ದೊಡ್ಡ ಮತ್ತು ಸುಲಭದಿಂದ ಸಣ್ಣ ಮತ್ತು ಕಠಿಣ ಅಥವಾ ಅಸಾಧ್ಯಕ್ಕೆ ಬದಲಾಗುತ್ತದೆ. ನೀವು ಮೂರನೇ ಎರಡರಷ್ಟು ಸರಿಯಾಗಿ ಪಡೆಯಲು ಸಾಧ್ಯವಿಲ್ಲ, ಆದ್ದರಿಂದ ವಿಶ್ರಾಂತಿ ಪಡೆಯಿರಿ. ಇದನ್ನು ess ಹಿಸುವ ಆಟವೆಂದು ಯೋಚಿಸಿ, ಮತ್ತು ನಿಮಗೆ ಸಾಧ್ಯವಾದಷ್ಟು ಪಡೆಯಿರಿ. ನೀವು ಸರಿಯಾಗಿದ್ದಾಗಲೆಲ್ಲಾ ನೀವು ಬೀಪ್ ಕೇಳುತ್ತೀರಿ.',\r\n    bn: 'অক্ষরের আকার এবং ব্যবধান বড় এবং সহজ থেকে ছোট এবং শক্ত বা অসম্ভব থেকে পৃথক। আপনি দুই-তৃতীয়াংশের চেয়ে বেশি কিছু পেতে পারেন না, তাই শিথিল করুন। এটিকে একটি অনুমানের খেলা হিসাবে ভাবেন এবং যতটা পারেন আপনি পান। আপনি যখনই ঠিক আছেন তখন আপনি একটি বীপ শুনতে পাবেন।',\r\n    id: 'Ukuran dan jarak huruf bervariasi dari besar dan mudah hingga kecil dan keras atau tidak mungkin. Anda tidak bisa mendapatkan lebih dari dua pertiga, jadi santai. Anggap saja sebagai permainan menebak, dan dapatkan sebanyak yang Anda bisa. Anda akan mendengar bunyi bip kapan pun Anda benar.',\r\n    'zh-CN':\r\n      '字母的大小和间隔是多种多样的，从大而简单到小而困难或不可能。您的正确率不会比三分之二高太多，所以请不要担心。请把这个实验看作一个猜谜游戏，尽您所能即可。当您提供了正确答案时，您将听到“哔”的提示音。',\r\n    'zh-HK':\r\n      '字母的大小和間隔是多種多樣的，從大而簡單到小而困難或不可能。您的正確率不會比三分之二高太多，所以請不要擔心。請把這個實驗看作一個猜謎遊戲，盡您所能即可。當您提供了正確答案時，您將聽到“嗶”的提示音。',\r\n    ja: '文字の識別が容易な時も、不可能な時もあります。半分以上も識別することはできないでしょう。ですから、リラックスしてください。推測ゲームのような感覚で、できる限り多く正解してください。（ESCAPEキーでいつでも中止できます。）',\r\n    ko: '문자 크기와 간격은 크고 쉽게 다르고 작고 단단하거나 불가능합니다. 3 분의 2 이상을 얻을 수 없으므로 긴장을 풀어주십시오. 그것을 추측 게임으로 생각하고 가능한 한 많은 것을 얻으십시오. 당신이 옳을 때마다 경고음이 들립니다.',\r\n  },\r\n  T_identifyClickIt: {\r\n    'en-US': 'Please identify the middle letter by clicking it below.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie unten darauf klicken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en cliquant dessus ci-dessous.',\r\n    es: 'Identifica la letra del medio haciendo clic en ella abajo.',\r\n    pt: 'Identifique a carta do meio clicando nela abaixo.',\r\n    it: \"Si prega di identificare la lettera centrale, facendo clic sull'alternativa in basso.\",\r\n    ro: 'Identificați versurile din mijloc făcând clic pe ea.',\r\n    pl: 'Zidentyfikuj środkową literę, klikając ją na liście poniżej. ',\r\n    ru: 'Укажите среднюю букву, щелкнув по ней ниже.',\r\n    hy: 'Նշեք միջին նամակը `կտտացնելով ներքեւում:',\r\n    fi: 'Tunnista keskimmäinen kirjain napsauttamalla sitä alla.',\r\n    ka: 'გთხოვთ, დაასახელოთ შუა წერილი, დააჭირეთ მას ქვემოთ.',\r\n    he: 'אנא זיהוי האות האמצעית על ידי לחיצה עליה למטה.',\r\n    ar: 'رجاءً حدّد الحرف الأوسط بالضغط عليه أدناه.',\r\n    ur: 'براہ کرم نیچے کلک کرکے درمیانی خط کی شناخت کریں۔',\r\n    hi: 'कृपया मध्य अक्षर को नीचे क्लिक करके पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് മധ്യ കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి మధ్య లేఖను క్రింద క్లిక్ చేయడం ద్వారా గుర్తించండి.',\r\n    kn: 'ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಗುರುತಿಸಿ.',\r\n    bn: 'নীচে ক্লিক করে মাঝারি অক্ষরটি সনাক্ত করুন।',\r\n    id: 'Harap identifikasi surat tengah dengan mengkliknya di bawah ini.',\r\n    'zh-CN': '请点击下方的字母来报告您认出的中间字母。',\r\n    'zh-HK': '請點擊下方的字母來報告您認出的中間字母。',\r\n    ja: '下をクリックして、認識した真ん中の文字を報告してください。',\r\n    ko: '아래를 클릭하여 중간 편지를 식별하십시오.',\r\n  },\r\n  T_identifyClickItRepeatedLetters: {\r\n    'en-US': 'Please identify the two middle letters by clicking them below.',\r\n    de: 'Bitte identifizieren Sie die beiden mittleren Buchstaben, indem Sie unten auf sie klicken.',\r\n    fr: 'Veuillez identifier les deux lettres du milieu en les cliquant ci-dessous.',\r\n    es: 'Identifique las dos letras intermedias haciendo clic a continuación.',\r\n    pt: 'Identifique as duas letras do meio clicando nelas abaixo.',\r\n    it: 'Si prega di identificare le due lettere centrali facendo clic di seguito.',\r\n    ro: 'Vă rugăm să identificați cele două litere de mijloc făcând clic mai jos.',\r\n    pl: 'Zidentyfikuj dwie środkowe litery, klikając je poniżej.',\r\n    ru: 'Пожалуйста, определите две средние буквы, нажав на них ниже.',\r\n    hy: 'Խնդրում ենք նույնականացնել երկու միջին տառերը `կտտացնելով դրանք ստորեւ:',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: 'يرجى تحديد الحرفين الأوسط من خلال النقر عليها أدناه.',\r\n    ur: 'براہ کرم ذیل میں دو درمیانی خطوط پر کلک کرکے ان کی شناخت کریں۔',\r\n    hi: 'कृपया उन्हें नीचे क्लिक करके दो मध्य अक्षरों को पहचानें।',\r\n    ta: 'இரண்டு நடுத்தர எழுத்துக்களையும் கீழே கிளிக் செய்வதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് രണ്ട് മധ്യ അക്ഷരങ്ങൾ തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి రెండు మధ్య అక్షరాలను క్రింద క్లిక్ చేయడం ద్వారా గుర్తించండి.',\r\n    kn: 'ದಯವಿಟ್ಟು ಎರಡು ಮಧ್ಯದ ಅಕ್ಷರಗಳನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ಗುರುತಿಸಿ.',\r\n    bn: 'দুটি মিডল অক্ষর নীচে ক্লিক করে দয়া করে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi dua huruf tengah dengan mengkliknya di bawah ini.',\r\n    'zh-CN': '请单击下面的两个中间字母。',\r\n    'zh-HK': '請單擊下面的兩個中間字母。',\r\n    ja: '以下をクリックして、2つの中間文字を特定してください。',\r\n    ko: '아래를 클릭하여 두 개의 중간 문자를 식별하십시오.',\r\n  },\r\n  T_identifyClickItSentence: {\r\n    'en-US':\r\n      'All the possible sentences are displayed. Click the one you heard or your best guess.',\r\n    de: 'Alle möglichen Sätze werden angezeigt. Klicken Sie auf den, den Sie gehört haben, oder Ihre beste Vermutung.',\r\n    fr: 'Toutes les phrases possibles sont affichées. Cliquez sur celui que vous avez entendu ou votre meilleure supposition.',\r\n    es: 'Se muestran todas las oraciones posibles. Haga clic en el que escuchó o su mejor suposición.',\r\n    pt: 'Todas as frases possíveis são exibidas. Clique no que você ouviu ou seu melhor palpite.',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: 'يتم عرض جميع الجمل الممكنة. انقر فوق الشخص الذي سمعته أو أفضل تخمين.',\r\n    ur: 'تمام ممکنہ جملے آویزاں ہیں۔ جس کو آپ نے سنا ہے یا آپ کا بہترین اندازہ لگائیں۔',\r\n    hi: 'सभी संभावित वाक्य प्रदर्शित किए जाते हैं। जो आपने सुना है या अपना सबसे अच्छा अनुमान लगाया है।',\r\n    ta: 'சாத்தியமான அனைத்து வாக்கியங்களும் காட்டப்படும். நீங்கள் கேட்ட ஒன்றையோ அல்லது உங்கள் சிறந்த யூகத்தையோ கிளிக் செய்க.',\r\n    ml: 'സാധ്യമായ എല്ലാ വാക്യങ്ങളും പ്രദർശിപ്പിക്കും. നിങ്ങൾ കേട്ട അല്ലെങ്കിൽ നിങ്ങളുടെ മികച്ച ess ഹം ക്ലിക്കുചെയ്യുക.',\r\n    te: 'సాధ్యమయ్యే అన్ని వాక్యాలు ప్రదర్శించబడతాయి. మీరు విన్నదాన్ని లేదా మీ ఉత్తమ అంచనాను క్లిక్ చేయండి.',\r\n    kn: 'ಸಾಧ್ಯವಿರುವ ಎಲ್ಲಾ ವಾಕ್ಯಗಳನ್ನು ಪ್ರದರ್ಶಿಸಲಾಗುತ್ತದೆ. ನೀವು ಕೇಳಿದ ಒಂದು ಅಥವಾ ನಿಮ್ಮ ಅತ್ಯುತ್ತಮ .ಹೆಯನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'সমস্ত সম্ভাব্য বাক্য প্রদর্শিত হয়। আপনি শুনেছেন বা আপনার সেরা অনুমানটি ক্লিক করুন।',\r\n    id: 'Semua kalimat yang mungkin ditampilkan. Klik yang Anda dengar atau tebakan terbaik Anda.',\r\n    'zh-CN': '显示所有可能的句子。单击您听到的或最好的猜测。',\r\n    'zh-HK': '顯示所有可能的句子。單擊您聽到的或最好的猜測。',\r\n    ja: '考えられるすべての文が表示されます。聞いたものまたは最善の推測をクリックしてください。',\r\n    ko: '가능한 모든 문장이 표시됩니다. 듣거나 가장 좋은 추측을 클릭하십시오.',\r\n  },\r\n  T_identifyMiddleLetterClickIt: {\r\n    'en-US': 'Please identify the middle letter by clicking it below.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie unten auf ihn klicken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en cliquant dessus ci-dessous.',\r\n    es: 'Identifique la letra central haciendo clic a continuación.',\r\n    pt: 'Identifique a carta do meio clicando nela abaixo.',\r\n    it: 'Identifica la lettera centrale facendo clic di seguito.',\r\n    ro: 'Vă rugăm să identificați scrisoarea de mijloc făcând clic mai jos.',\r\n    pl: 'Zidentyfikuj środkową literę, klikając ją poniżej.',\r\n    ru: 'Пожалуйста, определите среднюю букву, нажав на нее ниже.',\r\n    hy: 'Խնդրում ենք նույնականացնել միջին նամակը `կտտացնելով այն ստորեւ:',\r\n    fi: 'Tunnista keskimmäinen kirjain napsauttamalla sitä alla.',\r\n    ka: 'გთხოვთ, დაასახელოთ შუა წერილი, დააჭირეთ მას ქვემოთ.',\r\n    he: 'אנא זהה את האות האמצעית על ידי לחיצה עליו למטה.',\r\n    ar: 'يرجى تحديد الحرف الأوسط بالنقر فوقه أدناه.',\r\n    ur: 'براہ کرم ذیل میں کلک کرکے درمیانی خط کی شناخت کریں۔',\r\n    hi: 'कृपया नीचे क्लिक करके मध्य पत्र को पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് മധ്യ കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి మధ్య లేఖను క్రింద క్లిక్ చేయడం ద్వారా గుర్తించండి.',\r\n    kn: 'ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಗುರುತಿಸಿ.',\r\n    bn: 'নীচে ক্লিক করে মাঝারি অক্ষরটি সনাক্ত করুন।',\r\n    id: 'Harap identifikasi surat tengah dengan mengkliknya di bawah ini.',\r\n    'zh-CN': '请通过在下面单击它来确定中间字母。',\r\n    'zh-HK': '請通過在下面單擊它來確定中間字母。',\r\n    ja: '下をクリックして、中央の文字を特定してください。',\r\n    ko: '아래를 클릭하여 중간 편지를 식별하십시오.',\r\n  },\r\n  T_identifyMiddleLetterPressIt: {\r\n    'en-US': 'Please identify the middle letter by pressing its keyboard key.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie die Tastaturtaste drücken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en appuyant sur sa touche de clavier.',\r\n    es: 'Identifique la letra central presionando su tecla de teclado.',\r\n    pt: 'Identifique a carta do meio pressionando sua tecla do teclado.',\r\n    it: 'Si prega di identificare la lettera centrale premendo il tasto tastiera.',\r\n    ro: 'Vă rugăm să identificați litera de mijloc apăsând tasta tastatură.',\r\n    pl: 'Zidentyfikuj środkową literę, naciskając klawisz klawiatury.',\r\n    ru: 'Пожалуйста, определите среднюю букву, нажав клавишу клавиши.',\r\n    hy: 'Խնդրում ենք նույնականացնել միջին տառը `սեղմելով դրա ստեղնաշարի ստեղնը:',\r\n    fi: 'Tunnista keskimmäinen kirjain painamalla näppäimistön näppäintä.',\r\n    ka: 'გთხოვთ, დაადგინოთ შუა ასო მისი კლავიშის ღილაკის დაჭერით.',\r\n    he: 'אנא זהה את האות האמצעית על ידי לחיצה על מקש המקלדת שלו.',\r\n    ar: 'يرجى تحديد الحرف الأوسط عن طريق الضغط على مفتاح لوحة المفاتيح.',\r\n    ur: 'براہ کرم درمیانی خط کو کی بورڈ کی کلید دباکر شناخت کریں۔',\r\n    hi: 'कृपया इसकी कीबोर्ड कुंजी दबाकर मध्य पत्र को पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை அதன் விசைப்பலகை விசையை அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'അതിന്റെ കീബോർഡ് കീ അമർത്തിക്കൊണ്ട് മധ്യ കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి దాని కీబోర్డ్ కీని నొక్కడం ద్వారా మధ్య లేఖను గుర్తించండి.',\r\n    kn: 'ಕೀಬೋರ್ಡ್ ಕೀಲಿಯನ್ನು ಒತ್ತುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಗುರುತಿಸಿ.',\r\n    bn: 'মাঝারি অক্ষরটি কীবোর্ড কী টিপে দয়া করে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi huruf tengah dengan menekan tombol keyboard -nya.',\r\n    'zh-CN': '请按键盘键来确定中间字母。',\r\n    'zh-HK': '請按鍵盤鍵來確定中間字母。',\r\n    ja: 'キーボードキーを押して、中央の文字を特定してください。',\r\n    ko: '키보드 키를 눌러 중간 편지를 식별하십시오.',\r\n  },\r\n  T_identifyMiddleLetterPressItOrClickIt: {\r\n    'en-US':\r\n      'Please identify the middle letter by clicking it below or pressing it in the keyboard.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie darauf klicken oder auf die Tastatur drücken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en cliquant dessus ci-dessous ou en appuyant sur le clavier.',\r\n    es: 'Identifique la letra central haciendo clic a continuación o presionándola en el teclado.',\r\n    pt: 'Identifique a carta do meio clicando nela abaixo ou pressionando -a no teclado.',\r\n    it: 'Identifica la lettera centrale facendo clic di seguito o premendola nella tastiera.',\r\n    ro: 'Vă rugăm să identificați scrisoarea de mijloc făcând clic mai jos sau apăsându -l pe tastatură.',\r\n    pl: 'Zidentyfikuj środkową literę, klikając ją poniżej lub naciskając na klawiaturę.',\r\n    ru: 'Пожалуйста, определите среднюю букву, нажав на нее ниже или нажав ее на клавиатуре.',\r\n    hy: 'Խնդրում ենք նույնականացնել միջին նամակը `կտտացնելով այն ներքեւում կամ սեղմելով այն ստեղնաշարի մեջ:',\r\n    fi: 'Tunnista keskimmäinen kirjain napsauttamalla sitä alla tai painamalla sitä näppäimistössä.',\r\n    ka: 'გთხოვთ, დაადგინოთ შუა ასო, დააჭირეთ მას ქვემოთ ან დააჭირეთ კლავიატურაზე.',\r\n    he: 'אנא זהה את האות האמצעית על ידי לחיצה עליו למטה או לחיצה עליו במקלדת.',\r\n    ar: 'يرجى تحديد الحرف الأوسط بالنقر فوقه أدناه أو الضغط عليه في لوحة المفاتيح.',\r\n    ur: 'براہ کرم درمیانی خط کو نیچے کلک کرکے یا کی بورڈ میں دبانے سے شناخت کریں۔',\r\n    hi: 'कृपया इसे नीचे क्लिक करके या कीबोर्ड में दबाकर मध्य पत्र को पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அல்லது விசைப்பலகையில் அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് അല്ലെങ്കിൽ കീബോർഡിൽ അമർത്തിക്കൊണ്ട് മധ്യ അക്ഷരം തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి మధ్య లేఖను క్రింద క్లిక్ చేయడం ద్వారా లేదా కీబోర్డ్‌లో నొక్కడం ద్వారా గుర్తించండి.',\r\n    kn: 'ದಯವಿಟ್ಟು ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ಅಥವಾ ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ ಗುರುತಿಸಿ.',\r\n    bn: 'মাঝারি অক্ষরটি নীচে ক্লিক করে বা কীবোর্ডে টিপে দয়া করে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi huruf tengah dengan mengkliknya di bawah ini atau tekan di keyboard.',\r\n    'zh-CN': '请通过在下面单击它或在键盘中按下中间字母。',\r\n    'zh-HK': '請通過在下面單擊它或在鍵盤中按下中間字母。',\r\n    ja: '下の文字を下にクリックするか、キーボードに押して、中央の文字を識別してください。',\r\n    ko: '아래를 클릭하거나 키보드에 누르면 중간 문자를 식별하십시오.',\r\n  },\r\n  T_identifyLetterClickIt: {\r\n    'en-US': 'Please identify the letter by clicking it below.',\r\n    de: 'Bitte identifizieren Sie den Brief, indem Sie unten auf ihn klicken.',\r\n    fr: 'Veuillez identifier la lettre en cliquant dessus ci-dessous.',\r\n    es: 'Identifique la carta haciendo clic a continuación.',\r\n    pt: 'Identifique a carta clicando abaixo.',\r\n    it: 'Si prega di identificare la lettera facendo clic di seguito.',\r\n    ro: 'Vă rugăm să identificați scrisoarea făcând clic mai jos.',\r\n    pl: 'Zidentyfikuj list, klikając go poniżej.',\r\n    ru: 'Пожалуйста, определите букву, нажав ее ниже.',\r\n    hy: 'Խնդրում ենք նույնականացնել նամակը `կտտացնելով ներքեւում:',\r\n    fi: 'Tunnista kirjain napsauttamalla sitä alla.',\r\n    ka: 'გთხოვთ, დაასახელოთ წერილი ქვემოთ, დააჭირეთ მას ქვემოთ.',\r\n    he: 'אנא זהה את המכתב על ידי לחיצה עליו למטה.',\r\n    ar: 'يرجى تحديد الرسالة بالنقر فوقه أدناه.',\r\n    ur: 'براہ کرم اس خط کو نیچے کلک کرکے شناخت کریں۔',\r\n    hi: 'कृपया नीचे क्लिक करके पत्र को पहचानें।',\r\n    ta: 'கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి అక్షరాన్ని క్రింద క్లిక్ చేయడం ద్వారా గుర్తించండి.',\r\n    kn: 'ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಗುರುತಿಸಿ.',\r\n    bn: 'নীচে এটি ক্লিক করে চিঠিটি সনাক্ত করুন।',\r\n    id: 'Harap identifikasi surat itu dengan mengkliknya di bawah ini.',\r\n    'zh-CN': '请通过在下面单击它来确定该信。',\r\n    'zh-HK': '請通過在下面單擊它來確定該信。',\r\n    ja: '以下をクリックして、文字を特定してください。',\r\n    ko: '아래를 클릭하여 문자를 식별하십시오.',\r\n  },\r\n  T_identifyLetterPressIt: {\r\n    'en-US': 'Please identify the letter by pressing its keyboard key.',\r\n    de: 'Bitte identifizieren Sie den Brief, indem Sie die Tastaturtaste drücken.',\r\n    fr: 'Veuillez identifier la lettre en appuyant sur sa touche de clavier.',\r\n    es: 'Identifique la carta presionando su tecla de teclado.',\r\n    pt: 'Identifique a carta pressionando sua tecla do teclado.',\r\n    it: 'Si prega di identificare la lettera premendo il tasto tastiera.',\r\n    ro: 'Vă rugăm să identificați scrisoarea apăsând tasta tastatură.',\r\n    pl: 'Zidentyfikuj list, naciskając klawisz klawiatury.',\r\n    ru: 'Пожалуйста, определите букву, нажав клавишу клавиши.',\r\n    hy: 'Խնդրում ենք նույնականացնել նամակը `սեղմելով դրա ստեղնաշարի ստեղնը:',\r\n    fi: 'Tunnista kirje painamalla sen näppäimistönäppäintä.',\r\n    ka: 'გთხოვთ, დაასახელოთ წერილი მისი კლავიშის ღილაკის დაჭერით.',\r\n    he: 'אנא זהה את המכתב על ידי לחיצה על מקש המקלדת שלו.',\r\n    ar: 'يرجى تحديد الرسالة عن طريق الضغط على مفتاح لوحة المفاتيح.',\r\n    ur: 'براہ کرم اس کے کی بورڈ کی کلید کو دباکر خط کی شناخت کریں۔',\r\n    hi: 'कृपया इसकी कीबोर्ड कुंजी दबाकर पत्र को पहचानें।',\r\n    ta: 'கடிதத்தை அதன் விசைப்பலகை விசையை அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'അതിന്റെ കീബോർഡ് കീ അമർത്തി കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి లేఖను దాని కీబోర్డ్ కీని నొక్కడం ద్వారా గుర్తించండి.',\r\n    kn: 'ದಯವಿಟ್ಟು ಅದರ ಕೀಬೋರ್ಡ್ ಕೀಲಿಯನ್ನು ಒತ್ತುವ ಮೂಲಕ ಪತ್ರವನ್ನು ಗುರುತಿಸಿ.',\r\n    bn: 'দয়া করে চিঠিটি তার কীবোর্ড কী টিপে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi surat itu dengan menekan tombol keyboard -nya.',\r\n    'zh-CN': '请按键盘键来确定该信。',\r\n    'zh-HK': '請按鍵盤鍵來確定該信。',\r\n    ja: 'キーボードキーを押して手紙を特定してください。',\r\n    ko: '키보드 키를 눌러 편지를 식별하십시오.',\r\n  },\r\n  T_identifyLetterPressItOrClickIt: {\r\n    'en-US': 'Please identify the letter by clicking it below or pressing it in the keyboard.',\r\n    de: 'Bitte identifizieren Sie den Brief, indem Sie unten auf ihn klicken oder in der Tastatur drücken.',\r\n    fr: 'Veuillez identifier la lettre en cliquant dessus ci-dessous ou en appuyant sur lui dans le clavier.',\r\n    es: 'Identifique la letra haciendo clic a continuación o presionándola en el teclado.',\r\n    pt: 'Identifique a carta clicando abaixo ou pressionando -a no teclado.',\r\n    it: 'Si prega di identificare la lettera facendo clic di seguito o premendola nella tastiera.',\r\n    ro: 'Vă rugăm să identificați scrisoarea făcând clic mai jos sau apăsându -l pe tastatură.',\r\n    pl: 'Zidentyfikuj list, klikając ją poniżej lub naciskając na klawiaturę.',\r\n    ru: 'Пожалуйста, определите букву, нажав ее ниже или нажав ее на клавиатуре.',\r\n    hy: 'Խնդրում ենք նույնականացնել նամակը `կտտացնելով այն ստորեւ կամ սեղմելով ստեղնաշարի մեջ:',\r\n    fi: 'Tunnista kirjain napsauttamalla sitä alla tai painamalla sitä näppäimistössä.',\r\n    ka: 'გთხოვთ, დაასახელოთ წერილი ქვემოთ, დააჭირეთ მას ქვემოთ ან დააჭირეთ მას კლავიატურაზე.',\r\n    he: 'אנא זהה את המכתב על ידי לחיצה עליו למטה או לחיצה עליו במקלדת.',\r\n    ar: 'يرجى تحديد الحرف بالنقر فوقه أدناه أو الضغط عليه في لوحة المفاتيح.',\r\n    ur: 'براہ کرم اس خط کو نیچے کلک کرکے یا کی بورڈ میں دبانے سے شناخت کریں۔',\r\n    hi: 'कृपया इसे नीचे क्लिक करके या कीबोर्ड में दबाकर पत्र को पहचानें।',\r\n    ta: 'கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அல்லது விசைப்பலகையில் அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് അല്ലെങ്കിൽ കീബോർഡിൽ അമർത്തിക്കൊണ്ട് കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి అక్షరాన్ని క్రింద క్లిక్ చేయడం ద్వారా లేదా కీబోర్డ్‌లో నొక్కడం ద్వారా గుర్తించండి.',\r\n    kn: 'ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ಅಥವಾ ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಗುರುತಿಸಿ.',\r\n    bn: 'নীচে ক্লিক করে বা কীবোর্ডে টিপে চিঠিটি সনাক্ত করুন।',\r\n    id: 'Harap identifikasi surat itu dengan mengkliknya di bawah ini atau menekannya di keyboard.',\r\n    'zh-CN': '请通过在下面单击它或在键盘中按下字母。',\r\n    'zh-HK': '請通過在下面單擊它或在鍵盤中按下字母。',\r\n    ja: '下をクリックするか、キーボードに押して文字を識別してください。',\r\n    ko: '아래를 클릭하거나 키보드에 누르면 문자를 식별하십시오.',\r\n  },\r\n  T_identifyClickItRsvpReading: {\r\n    'en-US':\r\n      'Please identify the words that were shown by clicking one word from each column below.',\r\n    de: 'Bitte identifizieren Sie die Wörter, die angezeigt wurden, indem Sie auf ein Wort aus jeder Spalte unten klicken.',\r\n    fr: 'Veuillez identifier les mots affichés en cliquant sur un mot de chaque colonne ci-dessous.',\r\n    es: 'Identifique las palabras que se muestran haciendo clic en una palabra de cada columna a continuación.',\r\n    pt: 'Identifique as palavras que foram mostradas clicando em uma palavra de cada coluna abaixo.',\r\n    it: 'Si prega di identificare le parole che sono state mostrate facendo clic su una parola da ciascuna colonna in basso.',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: 'يرجى تحديد الكلمات التي تم عرضها بالنقر فوق كلمة واحدة من كل عمود أدناه.',\r\n    ur: 'براہ کرم ان الفاظ کی نشاندہی کریں جو ذیل میں ہر کالم سے ایک لفظ پر کلک کرکے دکھائے گئے تھے۔',\r\n    hi: 'कृपया उन शब्दों को पहचानें जो नीचे प्रत्येक कॉलम से एक शब्द पर क्लिक करके दिखाए गए थे।',\r\n    ta: 'கீழே உள்ள ஒவ்வொரு நெடுவரிசையிலிருந்தும் ஒரு வார்த்தையை கிளிக் செய்வதன் மூலம் காட்டப்பட்ட சொற்களை அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെയുള്ള ഓരോ നിരയിൽ നിന്നും ഒരു വാക്ക് ക്ലിക്കുചെയ്ത് കാണിച്ച വാക്കുകൾ ദയവായി തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి దిగువ ప్రతి కాలమ్ నుండి ఒక పదాన్ని క్లిక్ చేయడం ద్వారా చూపిన పదాలను గుర్తించండి.',\r\n    kn: 'ಕೆಳಗಿನ ಪ್ರತಿಯೊಂದು ಕಾಲಮ್‌ನಿಂದ ಒಂದು ಪದವನ್ನು ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ತೋರಿಸಿರುವ ಪದಗಳನ್ನು ದಯವಿಟ್ಟು ಗುರುತಿಸಿ.',\r\n    bn: 'দয়া করে নীচের প্রতিটি কলাম থেকে একটি শব্দ ক্লিক করে প্রদর্শিত শব্দগুলি সনাক্ত করুন।',\r\n    id: 'Harap identifikasi kata -kata yang ditunjukkan dengan mengklik satu kata dari setiap kolom di bawah ini.',\r\n    'zh-CN': '请通过单击下面的每一列单击一个单词来识别显示的单词。',\r\n    'zh-HK': '請通過單擊下面的每一列單擊一個單詞來識別顯示的單詞。',\r\n    ja: '以下の各列から1つの単語をクリックして表示された単語を特定してください。',\r\n    ko: '아래 각 열에서 한 단어를 클릭하여 표시된 단어를 식별하십시오.',\r\n  },\r\n  T_identifyPressIt: {\r\n    'en-US': 'Please identify the middle letter by pressing its keyboard key.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie ihn in der Tastatur drücken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en appuyant sur sa touche de clavier.',\r\n    es: 'Identifica la letra del medio presionándola en el teclado.',\r\n    pt: 'Identifique a carta do meio pressionando sua tecla do teclado.',\r\n    it: 'Si prega di identificare la lettera centrale premendo il tasto  corrispondente sulla tastiera.',\r\n    ro: 'Identificați litera mediului apăsând -o pe tastatură.',\r\n    pl: 'Zidentyfikuj środkową literę, naciskając ją na klawiaturze. ',\r\n    ru: 'Определите среднюю букву, нажав ее на клавиатуре.',\r\n    hy: 'Որոշեք միջին նամակը `սեղմելով այն ստեղնաշարի վրա:',\r\n    fi: 'Tunnista keskimmäinen kirjain painamalla näppäimistön näppäintä.',\r\n    ka: 'გთხოვთ, დაადგინოთ შუა ასო მისი კლავიშის ღილაკის დაჭერით.',\r\n    he: 'אנא זיהוי האות האמצעית על ידי לחיצה עליה במקלדת.',\r\n    ar: 'رجاءً حدّد الحرف الأوسط بالضغط عليه في لوحة المفاتيح.',\r\n    ur: 'براہ کرم درمیانی خط کو کی بورڈ میں دبانے سے شناخت کریں۔',\r\n    hi: 'कृपया मध्य अक्षर को कीबोर्ड में दबाकर पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை அதன் விசைப்பலகை விசையை அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'അതിന്റെ കീബോർഡ് കീ അമർത്തിക്കൊണ്ട് മധ്യ കത്ത് തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి దాని కీబోర్డ్ కీని నొక్కడం ద్వారా మధ్య లేఖను గుర్తించండి.',\r\n    kn: 'ಕೀಬೋರ್ಡ್ ಕೀಲಿಯನ್ನು ಒತ್ತುವ ಮೂಲಕ ದಯವಿಟ್ಟು ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಗುರುತಿಸಿ.',\r\n    bn: 'মাঝারি অক্ষরটি কীবোর্ড কী টিপে দয়া করে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi huruf tengah dengan menekan tombol keyboard -nya.',\r\n    'zh-CN': '请按下键盘上的对应按键来报告您认出的中间字母。',\r\n    'zh-HK': '請按下鍵盤上的對應按鍵來報告您認出的中間字母。',\r\n    ja: 'キーボードで対応するキーを押して、認識した真ん中の文字を報告してください。',\r\n    ko: '키보드 키를 눌러 중간 편지를 식별하십시오.',\r\n  },\r\n  T_identifyPressItRsvpReading: {\r\n    'en-US': 'Please identify the words that were shown by speaking them aloud.',\r\n    de: 'Bitte identifizieren Sie die Wörter, die gezeigt wurden, indem sie laut sprechen.',\r\n    fr: 'Veuillez identifier les mots qui ont été montrés en les parlant à haute voix.',\r\n    es: 'Identifique las palabras que se mostraron al hablarlas en voz alta.',\r\n    pt: 'Identifique as palavras que foram mostradas ao falar em voz alta.',\r\n    it: 'Identifica le parole che sono state mostrate quando le parlano ad alta voce.',\r\n    ro: 'Identificați cuvintele care au fost arătate atunci când le vorbiți cu voce tare.',\r\n    pl: 'Zidentyfikuj słowa, które zostały pokazane podczas mówienia na głos.',\r\n    ru: 'Определите слова, которые были показаны, когда говорили о них вслух.',\r\n    hy: 'Որոշեք այն բառերը, որոնք ցույց են տրվել, երբ բարձրաձայն խոսում են:',\r\n    fi: 'Tunnista sanat, jotka näytettiin, kun puhutaan ne ääneen.',\r\n    ka: 'დაადგინეთ სიტყვები, რომლებიც ნაჩვენებია ხმამაღლა საუბრისას.',\r\n    he: 'זהה את המילים שהוצגו כשמדברים אותן בקול רם.',\r\n    ar: 'حدد الكلمات التي تم عرضها عند التحدث بها بصوت عالٍ.',\r\n    ur: 'ان الفاظ کی نشاندہی کریں جو ان کو اونچی آواز میں بولتے وقت دکھائے گئے تھے۔',\r\n    hi: 'उन शब्दों को पहचानें जो उन्हें ज़ोर से बोलते समय दिखाए गए थे।',\r\n    ta: 'சத்தமாக பேசும்போது காட்டப்பட்ட சொற்களை அடையாளம் காணவும்.',\r\n    ml: 'ഉച്ചത്തിൽ സംസാരിക്കുമ്പോൾ കാണിച്ചിരിക്കുന്ന വാക്കുകൾ തിരിച്ചറിയുക.',\r\n    te: 'వాటిని బిగ్గరగా మాట్లాడేటప్పుడు చూపిన పదాలను గుర్తించండి.',\r\n    kn: 'ಅವುಗಳನ್ನು ಜೋರಾಗಿ ಮಾತನಾಡುವಾಗ ತೋರಿಸಿದ ಪದಗಳನ್ನು ಗುರುತಿಸಿ.',\r\n    bn: 'উচ্চস্বরে কথা বলার সময় প্রদর্শিত শব্দগুলি সনাক্ত করুন।',\r\n    id: 'Identifikasi kata -kata yang ditunjukkan saat berbicara dengan keras.',\r\n    'zh-CN': '确定大声说出来时显示的单词。',\r\n    'zh-HK': '確定大聲說出來時顯示的單詞。',\r\n    ja: '大声で話すときに示された単語を特定します。',\r\n    ko: '큰 소리로 말할 때 표시된 단어를 식별하십시오.',\r\n  },\r\n  T_identifyPressItOrClickIt: {\r\n    'en-US':\r\n      'Please identify the middle letter by clicking it below or pressing it in the keyboard.',\r\n    de: 'Bitte identifizieren Sie den mittleren Buchstaben, indem Sie ihn in der Tastatur drücken oder unten darauf klicken.',\r\n    fr: 'Veuillez identifier la lettre du milieu en cliquant dessus ci-dessous ou en appuyant sur le clavier.',\r\n    es: 'Identifica la letra del medio presionándola en el teclado o haciendo clic en ella abajo.',\r\n    pt: 'Identifique a carta do meio clicando nela abaixo ou pressionando -a no teclado.',\r\n    it: 'Si prega di identificare la lettera centrale, premendola sulla tastiera o facendo clic su di essa in basso.',\r\n    ro: 'Identificați litera mediului apăsând -o pe tastatură sau făcând clic pe ea.',\r\n    pl: 'Zidentyfikuj środkową literę, naciskając ją na klawiaturze lub klikając ją na liście poniżej. ',\r\n    ru: 'Определите среднюю букву, нажав ее на клавиатуре или щелкнув по ней ниже.',\r\n    hy: 'Որոշեք միջին նամակը `սեղմելով այն ստեղնաշարի վրա կամ կտտացնելով այն ստորեւ:',\r\n    fi: 'Tunnista keskimmäinen kirjain napsauttamalla sitä alla tai painamalla sitä näppäimistössä.',\r\n    ka: 'გთხოვთ, დაადგინოთ შუა ასო, დააჭირეთ მას ქვემოთ ან დააჭირეთ კლავიატურაზე.',\r\n    he: 'אנא זיהוי האות האמצעית, על ידי לחיצה עליה במקלדת או לחיצה עליה למטה.',\r\n    ar: 'رجاءً حدّد الحرف الأوسط بالضغط عليه في لوحة المفاتيح أو الضغط عليه أدناه.',\r\n    ur: 'براہ کرم درمیانی خط کو کی بورڈ میں دبانے یا نیچے کلک کرکے شناخت کریں۔',\r\n    hi: 'कृपया मध्य अक्षर को कीबोर्ड में दबाकर या नीचे क्लिक करके पहचानें।',\r\n    ta: 'நடுத்தர கடிதத்தை கீழே கிளிக் செய்வதன் மூலம் அல்லது விசைப்பலகையில் அழுத்துவதன் மூலம் அடையாளம் காணவும்.',\r\n    ml: 'ചുവടെ ക്ലിക്കുചെയ്ത് അല്ലെങ്കിൽ കീബോർഡിൽ അമർത്തിക്കൊണ്ട് മധ്യ അക്ഷരം തിരിച്ചറിയുക.',\r\n    te: 'దయచేసి మధ్య లేఖను క్రింద క్లిక్ చేయడం ద్వారా లేదా కీబోర్డ్‌లో నొక్కడం ద్వారా గుర్తించండి.',\r\n    kn: 'ದಯವಿಟ್ಟು ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಕೆಳಗೆ ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ಅಥವಾ ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ ಗುರುತಿಸಿ.',\r\n    bn: 'মাঝারি অক্ষরটি নীচে ক্লিক করে বা কীবোর্ডে টিপে দয়া করে সনাক্ত করুন।',\r\n    id: 'Harap identifikasi huruf tengah dengan mengkliknya di bawah ini atau tekan di keyboard.',\r\n    'zh-CN': '请按下键盘上的对应按键或者点击下方的字母来报告您认出的中间字母。',\r\n    'zh-HK': '請按下鍵盤上的對應按鍵或者點擊下方的字母來報告您認出的中間字母。',\r\n    ja: 'キーボードで対応するキーを押すか、下をクリックして、認識した真ん中の文字を報告してください。',\r\n    ko: '아래를 클릭하거나 키보드에 누르면 중간 문자를 식별하십시오.',\r\n  },\r\n  T_identifyPressItOrClickItRepeatedLetters: {\r\n    'en-US':\r\n      'Please identify the two middle letters by clicking them below or pressing them on the keyboard.',\r\n    de: 'Bitte identifizieren Sie die beiden mittleren Buchstaben, indem Sie sie unten klicken oder sie auf der Tastatur drücken.',\r\n    fr: 'Veuillez identifier les deux lettres du milieu en les cliquant ci-dessous ou en les appuyant sur le clavier.',\r\n    es: 'Identifique las dos letras intermedias haciendo clic a continuación o presionándolas en el teclado.',\r\n    pt: 'Identifique as duas letras intermediárias clicando ou pressionando -as no teclado.',\r\n    it: 'Identifica le due lettere intermedie facendo clic o premendole sulla tastiera.',\r\n    ro: 'Identificați cele două litere intermediare făcând clic sau apăsându -le pe tastatură.',\r\n    pl: 'Zidentyfikuj dwie pośrednie litery, klikając lub naciskając je na klawiaturze.',\r\n    ru: 'Определите две промежуточные буквы, нажав или нажав их на клавиатуре.',\r\n    hy: 'Նշեք երկու միջանկյալ տառերը `սեղմելով կամ սեղմելով դրանք ստեղնաշարի վրա:',\r\n    fi: 'Tunnista kaksi välikirjainta napsauttamalla tai painamalla niitä näppäimistöllä.',\r\n    ka: 'დაასახელეთ ორი შუალედური ასო კლავიატურაზე დაჭერით ან დაჭერით.',\r\n    he: 'זהה את שתי האותיות הביניים על ידי לחיצה או לחיצה על המקלדת.',\r\n    ar: 'حدد الحرفين الوسيطين من خلال النقر أو الضغط عليهما على لوحة المفاتيح.',\r\n    ur: 'کی بورڈ پر کلک کرکے یا دبانے سے دو انٹرمیڈیٹ خطوط کی شناخت کریں۔',\r\n    hi: 'कीबोर्ड पर उन्हें क्लिक या दबाकर दो मध्यवर्ती अक्षरों को पहचानें।',\r\n    ta: 'விசைப்பலகையில் கிளிக் செய்வதன் மூலம் அல்லது அழுத்துவதன் மூலம் இரண்டு இடைநிலை கடிதங்களை அடையாளம் காணவும்.',\r\n    ml: 'കീബോർഡിൽ ക്ലിക്കുചെയ്ത് അല്ലെങ്കിൽ അമർത്തിക്കൊണ്ട് രണ്ട് ഇന്റർമീഡിയറ്റ് അക്ഷരങ്ങൾ തിരിച്ചറിയുക.',\r\n    te: 'కీబోర్డుపై క్లిక్ చేయడం లేదా నొక్కడం ద్వారా రెండు ఇంటర్మీడియట్ అక్షరాలను గుర్తించండి.',\r\n    kn: 'ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ಅಥವಾ ಒತ್ತುವ ಮೂಲಕ ಎರಡು ಮಧ್ಯಂತರ ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಿ.',\r\n    bn: 'কীবোর্ডে ক্লিক করে বা টিপে দুটি মধ্যবর্তী অক্ষর সনাক্ত করুন।',\r\n    id: 'Identifikasi dua huruf perantara dengan mengklik atau menekannya di keyboard.',\r\n    'zh-CN': '通过单击或在键盘上按下两个中间字母。',\r\n    'zh-HK': '通過單擊或在鍵盤上按下兩個中間字母。',\r\n    ja: 'キーボードでそれらをクリックまたは押すことにより、2つの中間文字を識別します。',\r\n    ko: '키보드에서 클릭하거나 눌러 두 개의 중간 문자를 식별하십시오.',\r\n  },\r\n  T_identifyPressItRepeatedLetters: {\r\n    'en-US': 'Please identify the two middle letters, by pressing them on the keyboard.',\r\n    de: 'Bitte identifizieren Sie die beiden mittleren Buchstaben, indem Sie sie auf die Tastatur drücken.',\r\n    fr: 'Veuillez identifier les deux lettres du milieu, en les appuyant sur le clavier.',\r\n    es: 'Identifique las dos letras intermedias, presionándolas en el teclado.',\r\n    pt: 'Identifique as duas letras intermediárias, pressionando -as no teclado.',\r\n    it: 'Identifica le due lettere intermedie, premendole sulla tastiera.',\r\n    ro: 'Identificați cele două litere intermediare, apăsându -le pe tastatură.',\r\n    pl: 'Zidentyfikuj dwie pośrednie litery, naciskając je na klawiaturze.',\r\n    ru: 'Определите две промежуточные буквы, нажимая их на клавиатуре.',\r\n    hy: 'Նշեք երկու միջանկյալ տառերը, սեղմելով դրանք ստեղնաշարի վրա:',\r\n    fi: 'Tunnista kaksi välikirjainta painamalla niitä näppäimistöllä.',\r\n    ka: 'დაადგინეთ ორი შუალედური ასო, დააჭირეთ მათ კლავიატურაზე.',\r\n    he: 'זהה את שתי האותיות הביניים, ולחץ עליהן על המקלדת.',\r\n    ar: 'حدد الحرفين المتوسطين ، والضغط عليهما على لوحة المفاتيح.',\r\n    ur: 'ان دو انٹرمیڈیٹ خطوط کی شناخت کریں ، انہیں کی بورڈ پر دبائیں۔',\r\n    hi: 'दो मध्यवर्ती अक्षरों को पहचानें, उन्हें कीबोर्ड पर दबाएं।',\r\n    ta: 'இரண்டு இடைநிலை கடிதங்களை அடையாளம் கண்டு, அவற்றை விசைப்பலகையில் அழுத்தவும்.',\r\n    ml: 'രണ്ട് ഇന്റർമീഡിയറ്റ് അക്ഷരങ്ങൾ തിരിച്ചറിയുക, അവ കീബോർഡിൽ അമർത്തുന്നു.',\r\n    te: 'రెండు ఇంటర్మీడియట్ అక్షరాలను గుర్తించండి, వాటిని కీబోర్డ్‌లో నొక్కండి.',\r\n    kn: 'ಎರಡು ಮಧ್ಯಂತರ ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಿ, ಅವುಗಳನ್ನು ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತಿ.',\r\n    bn: 'দুটি মধ্যবর্তী অক্ষর সনাক্ত করুন, কীবোর্ডে টিপুন।',\r\n    id: 'Identifikasi dua huruf perantara, tekan di keyboard.',\r\n    'zh-CN': '识别两个中间字母，将它们按在键盘上。',\r\n    'zh-HK': '識別兩個中間字母，將它們按在鍵盤上。',\r\n    ja: '2つの中間文字を識別し、キーボードに押し付けます。',\r\n    ko: '두 개의 중간 문자를 식별하여 키보드에 누릅니다.',\r\n  },\r\n  T_keypadContinueExperiment: {\r\n    'en-US': 'Continue the experiment as instructed.',\r\n    de: 'Setzen Sie das Experiment wie angewiesen fort.',\r\n    fr: \"Continuez l'expérience comme indiqué.\",\r\n    es: 'Continúe con el experimento según las instrucciones.',\r\n    pt: 'Continue o experimento conforme instruído.',\r\n    it: \"Continua l'esperimento come istruito.\",\r\n    ro: 'Continuați experimentul conform instrucțiunilor.',\r\n    pl: 'Kontynuuj eksperyment zgodnie z instrukcją.',\r\n    ru: 'Продолжить эксперимент, как указано.',\r\n    hy: 'Շարունակեք փորձը, ինչպես հրահանգված է:',\r\n    fi: 'Jatka koetta ohjeiden mukaan.',\r\n    ka: 'გააგრძელეთ ექსპერიმენტი, როგორც ინსტრუქციით.',\r\n    he: 'המשך בניסוי כפי שהונחה.',\r\n    ar: 'استمر في التجربة حسب التعليمات.',\r\n    ur: 'ہدایت کے مطابق تجربہ جاری رکھیں۔',\r\n    hi: 'निर्देश के अनुसार प्रयोग जारी रखें।',\r\n    ta: 'அறிவுறுத்தப்பட்டபடி பரிசோதனையைத் தொடரவும்.',\r\n    ml: 'നിർദ്ദേശിച്ചതുപോലെ പരീക്ഷണം തുടരുക.',\r\n    te: 'సూచించిన విధంగా ప్రయోగాన్ని కొనసాగించండి.',\r\n    kn: 'ಸೂಚನೆಯಂತೆ ಪ್ರಯೋಗವನ್ನು ಮುಂದುವರಿಸಿ.',\r\n    bn: 'নির্দেশ হিসাবে পরীক্ষা চালিয়ে যান।',\r\n    id: 'Lanjutkan percobaan seperti yang diperintahkan.',\r\n    'zh-CN': '按照指示继续实验。',\r\n    'zh-HK': '按照指示繼續實驗。',\r\n    ja: '指示に従って実験を続けます。',\r\n    ko: '지시에 따라 실험을 계속하십시오.',\r\n  },\r\n  T_keypadReadyForResponse: {\r\n    'en-US': 'Respond now.',\r\n    de: 'Antworten Sie jetzt.',\r\n    fr: 'Répond maintenant.',\r\n    es: 'Responde ahora.',\r\n    pt: 'Responda agora.',\r\n    it: 'Rispondere ora.',\r\n    ro: 'Răspunde acum.',\r\n    pl: 'Odpowiedz teraz.',\r\n    ru: 'Ответь сейчас.',\r\n    hy: 'Պատասխանեք հիմա:',\r\n    fi: 'Vastaa nyt.',\r\n    ka: 'Ახლავე უპასუხე.',\r\n    he: 'הגב עכשיו.',\r\n    ar: 'أجيبي الأن.',\r\n    ur: 'ابھی جواب دیں.',\r\n    hi: 'अभी जवाब दीजिये।',\r\n    ta: 'உடனே பதிலளி.',\r\n    ml: 'ഇപ്പോള്ത്തന്നെ മറുപടി നല്കുക.',\r\n    te: 'ఇప్పుడు స్పందించు.',\r\n    kn: 'ಈಗ ಉತ್ತರ ನೀಡು.',\r\n    bn: 'এখনই জানাও.',\r\n    id: 'Menanggapi sekarang.',\r\n    'zh-CN': '立刻回复。',\r\n    'zh-HK': '立刻回复。',\r\n    ja: '今すぐ応答します。',\r\n    ko: '지금 응답하십시오.',\r\n  },\r\n  T_keypadConnectedAndKeepReady: {\r\n    'en-US':\r\n      'Keypad connected. Please keep this page open, until the experiment prompts you to use it.',\r\n    de: 'Tastatur angeschlossen. Bitte halten Sie diese Seite offen, bis das Experiment Sie auffordert, sie zu verwenden.',\r\n    fr: \"Clavier connecté. Veuillez garder cette page ouverte jusqu'à ce que l'expérience vous invite à l'utiliser.\",\r\n    es: 'Keypad conectado. Mantenga esta página abierta, hasta que el experimento le solicite que la use.',\r\n    pt: 'Teclado conectado. Por favor, mantenha esta página aberta, até que o experimento o solicite a usá -lo.',\r\n    it: \"Tastiera connessa. Tieni aperta questa pagina, fino a quando l'esperimento non ti spinge a usarla.\",\r\n    ro: 'Tastatură conectată. Vă rugăm să păstrați această pagină deschisă, până când experimentul vă solicită să o utilizați.',\r\n    pl: 'Połączony klawiatura. Zachowaj otwartą stronę tej strony, dopóki eksperyment nie wywoła jej użycia.',\r\n    ru: 'Клавиатура подключена. Пожалуйста, оставьте эту страницу открытой, пока эксперимент не побудит вас использовать ее.',\r\n    hy: 'Ստեղնաշարը միացված է: Խնդրում ենք պահել այս էջը բաց, մինչեւ փորձը ձեզ հուշում է օգտագործել այն:',\r\n    fi: 'Näppäimistö on kytketty. Pidä tämä sivu auki, kunnes kokeilu kehottaa sinua käyttämään sitä.',\r\n    ka: 'კლავიატურა უკავშირდება. გთხოვთ, შეინახოთ ეს გვერდი, სანამ ექსპერიმენტი არ მოგიწოდებთ გამოიყენოთ იგი.',\r\n    he: 'לוח מקשים מחובר. אנא שמור על דף זה פתוח, עד שהניסוי יבקש ממך להשתמש בו.',\r\n    ar: 'لوحة مفاتيح متصلة. يرجى الحفاظ على هذه الصفحة مفتوحة ، حتى تطالبك التجربة لاستخدامها.',\r\n    ur: 'کیپیڈ منسلک براہ کرم اس صفحے کو کھلا رکھیں ، جب تک کہ تجربہ آپ کو استعمال کرنے کا اشارہ نہ کرے۔',\r\n    hi: 'कीपैड जुड़ा हुआ है। कृपया इस पृष्ठ को खुला रखें, जब तक कि प्रयोग आपको इसका उपयोग करने के लिए प्रेरित नहीं करता है।',\r\n    ta: 'கீபேட் இணைக்கப்பட்டுள்ளது. தயவுசெய்து இந்தப் பக்கத்தைத் திறந்து வைத்திருங்கள், அதைப் பயன்படுத்த சோதனை உங்களைத் தூண்டும் வரை.',\r\n    ml: 'കീപാഡ് കണക്റ്റുചെയ്തു. ഈ പേജ് തുറക്കുക, പരീക്ഷണം ഉപയോഗിക്കാൻ നിങ്ങൾ ആവശ്യപ്പെടുന്നതുവരെ അത് തുറക്കുക.',\r\n    te: 'కీప్యాడ్ కనెక్ట్ చేయబడింది. దయచేసి ఈ పేజీని తెరిచి ఉంచండి, ప్రయోగం దీనిని ఉపయోగించమని మిమ్మల్ని అడుగుతుంది.',\r\n    kn: 'ಕೀಪ್ಯಾಡ್ ಸಂಪರ್ಕಗೊಂಡಿದೆ. ಪ್ರಯೋಗವು ಅದನ್ನು ಬಳಸಲು ಪ್ರೇರೇಪಿಸುವವರೆಗೆ ದಯವಿಟ್ಟು ಈ ಪುಟವನ್ನು ಮುಕ್ತವಾಗಿಡಿ.',\r\n    bn: 'কীপ্যাড সংযুক্ত। পরীক্ষাটি আপনাকে এটি ব্যবহার করতে অনুরোধ না করা পর্যন্ত দয়া করে এই পৃষ্ঠাটি খোলা রাখুন।',\r\n    id: 'Keypad terhubung. Harap buka halaman ini, sampai percobaan meminta Anda untuk menggunakannya.',\r\n    'zh-CN': '键盘连接。请保持此页面打开，直到实验提示您使用它。',\r\n    'zh-HK': '鍵盤連接。請保持此頁面打開，直到實驗提示您使用它。',\r\n    ja: 'キーパッド接続。実験が使用するように促すまで、このページを開いたままにしてください。',\r\n    ko: '키패드 연결. 실험에서 사용하라는 메시지가 표시 될 때 까지이 페이지를 열어 두십시오.',\r\n  },\r\n  T_keypadScanQRCode: {\r\n    'en-US':\r\n      'To allow a long viewing distance, please recruit your smartphone to act as a wireless keypad. Point your smartphone camera at this QR code. Then use your finger to click the link that appears on your smartphone screen.',\r\n    de: 'Um eine lange Betrachtungsentfernung zu ermöglichen, rekrutieren Sie bitte Ihr Smartphone, um als drahtlose Tastatur zu fungieren. Zeigen Sie Ihre Smartphone -Kamera auf diesen QR -Code. Klicken Sie dann mit Ihrem Finger auf den Link, der auf Ihrem Smartphone -Bildschirm angezeigt wird.',\r\n    fr: \"Pour permettre une longue distance de visualisation, veuillez recruter votre smartphone pour agir comme un clavier sans fil. Pointez votre appareil photo pour smartphone sur ce code QR. Utilisez ensuite votre doigt pour cliquer sur le lien qui apparaît sur l'écran de votre smartphone.\",\r\n    es: 'Para permitir una larga distancia de visualización, reclute su teléfono inteligente para actuar como un teclado inalámbrico. Apunte la cámara de su teléfono inteligente en este código QR. Luego use su dedo para hacer clic en el enlace que aparece en la pantalla de su teléfono inteligente.',\r\n    pt: 'Para permitir uma distância de visualização longa, recrute seu smartphone para atuar como um teclado sem fio. Aponte sua câmera de smartphone para este código QR. Em seguida, use o dedo para clicar no link que aparece na tela do smartphone.',\r\n    it: 'Per consentire una lunga distanza di visualizzazione, assumi lo smartphone per fungere da tastiera wireless. Punta la fotocamera per smartphone su questo codice QR. Quindi usa il dito per fare clic sul collegamento che appare sullo schermo dello smartphone.',\r\n    ro: 'Pentru a permite o distanță lungă de vizualizare, vă rugăm să recrutați smartphone -ul pentru a acționa ca o tastatură wireless. Indicați camera smartphone -ului către acest cod QR. Apoi folosiți degetul pentru a face clic pe linkul care apare pe ecranul smartphone -ului.',\r\n    pl: 'Aby umożliwić długą odległość oglądania, rekrutuj swój smartfon, aby działał jako klawiatura bezprzewodowa. Skieruj aparat smartfona na ten kod QR. Następnie użyj palca, aby kliknąć link, który pojawi się na ekranie smartfona.',\r\n    ru: 'Чтобы разрешить длительное расстояние просмотра, пожалуйста, наберите свой смартфон, чтобы выступать в качестве беспроводной клавиатуры. Укажите камеру смартфона на этом QR -коде. Затем используйте свой палец, чтобы нажать на ссылку, которая появляется на экране вашего смартфона.',\r\n    hy: 'Երկար դիտման հեռավորություն թույլ տալու համար խնդրում ենք հավաքագրել ձեր սմարթֆոնը `որպես անլար ստեղնաշարի հանդես գալու համար: Նշեք ձեր սմարթֆոնների ֆոտոխցիկը QR այս կոդով: Այնուհետեւ օգտագործեք ձեր մատը `կտտացնելու հղումը, որը հայտնվում է ձեր սմարթֆոնի էկրանին:',\r\n    fi: 'Rekrytoi älypuhelimesi pitkän katseluetäisyyden sallimiseksi toimimaan langattomana näppäimistönä. Osoita älypuhelinkamera tässä QR -koodissa. Napsauta sitten sormella älypuhelimen näytöllä näkyvää linkkiä.',\r\n    ka: 'გრძელი სანახავი მანძილის დასაშვებად, გთხოვთ, შეაგროვოთ თქვენი სმარტფონი, რომ იმოქმედოთ როგორც უკაბელო კლავიატურა. მიუთითეთ თქვენი სმარტფონის კამერა ამ QR კოდზე. შემდეგ გამოიყენეთ თითი, რომ დააჭირეთ ბმულს, რომელიც გამოჩნდება თქვენს სმარტფონის ეკრანზე.',\r\n    he: 'כדי לאפשר מרחק צפייה ארוך, אנא גייס את הסמארטפון שלך כדי לשמש כל לוח מקשים אלחוטי. כוון את מצלמת הסמארטפון שלך בקוד QR זה. לאחר מכן השתמש באצבע שלך כדי ללחוץ על הקישור שמופיע במסך הסמארטפון שלך.',\r\n    ar: 'للسماح بمسافة عرض طويلة ، يرجى توظيف هاتفك الذكي بالعمل كرسية مفاتيح لاسلكية. أشر كاميرا الهاتف الذكي على رمز الاستجابة السريعة هذا. ثم استخدم إصبعك للنقر على الرابط الذي يظهر على شاشة هاتفك الذكي.',\r\n    ur: 'دیکھنے کے طویل فاصلے کی اجازت دینے کے لئے ، براہ کرم اپنے اسمارٹ فون کو وائرلیس کیپیڈ کے طور پر کام کرنے کے لئے بھرتی کریں۔ اس QR کوڈ پر اپنے اسمارٹ فون کیمرا کی نشاندہی کریں۔ اس کے بعد آپ کے اسمارٹ فون اسکرین پر ظاہر ہونے والے لنک پر کلک کرنے کے لئے اپنی انگلی کا استعمال کریں۔',\r\n    hi: 'एक लंबी देखने की दूरी की अनुमति देने के लिए, कृपया अपने स्मार्टफोन को वायरलेस कीपैड के रूप में कार्य करने के लिए भर्ती करें। इस QR कोड पर अपना स्मार्टफोन कैमरा इंगित करें। फिर अपने स्मार्टफोन स्क्रीन पर दिखाई देने वाले लिंक पर क्लिक करने के लिए अपनी उंगली का उपयोग करें।',\r\n    ta: 'நீண்ட பார்க்கும் தூரத்தை அனுமதிக்க, வயர்லெஸ் விசைப்பலகையாக செயல்பட உங்கள் ஸ்மார்ட்போனை நியமிக்கவும். இந்த QR குறியீட்டில் உங்கள் ஸ்மார்ட்போன் கேமராவை சுட்டிக்காட்டவும். உங்கள் ஸ்மார்ட்போன் திரையில் தோன்றும் இணைப்பைக் கிளிக் செய்ய உங்கள் விரலைப் பயன்படுத்தவும்.',\r\n    ml: 'ഒരു നീണ്ട കാഴ്ചപ്പാടുകൾ അനുവദിക്കുന്നതിന്, വയർലെസ് കമാനമായി പ്രവർത്തിക്കാൻ ദയവായി നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ റിക്രൂട്ട് ചെയ്യുക. ഈ QR കോഡിൽ നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ ക്യാമറ പോയിന്റുചെയ്യുക. നിങ്ങളുടെ സ്മാർട്ട്ഫോൺ സ്ക്രീനിൽ ദൃശ്യമാകുന്ന ലിങ്കിൽ ക്ലിക്കുചെയ്യുന്നതിന് നിങ്ങളുടെ വിരൽ ഉപയോഗിക്കുക.',\r\n    te: 'సుదీర్ఘ వీక్షణ దూరాన్ని అనుమతించడానికి, దయచేసి మీ స్మార్ట్‌ఫోన్‌ను వైర్‌లెస్ కీప్యాడ్‌గా పనిచేయడానికి నియమించండి. ఈ QR కోడ్ వద్ద మీ స్మార్ట్‌ఫోన్ కెమెరాను సూచించండి. మీ స్మార్ట్‌ఫోన్ స్క్రీన్‌లో కనిపించే లింక్‌ను క్లిక్ చేయడానికి మీ వేలిని ఉపయోగించండి.',\r\n    kn: 'ದೀರ್ಘ ವೀಕ್ಷಣೆ ದೂರವನ್ನು ಅನುಮತಿಸಲು, ದಯವಿಟ್ಟು ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಅನ್ನು ವೈರ್‌ಲೆಸ್ ಕೀಪ್ಯಾಡ್ ಆಗಿ ಕಾರ್ಯನಿರ್ವಹಿಸಲು ನೇಮಕ ಮಾಡಿ. ಈ ಕ್ಯೂಆರ್ ಕೋಡ್‌ನಲ್ಲಿ ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಕ್ಯಾಮೆರಾವನ್ನು ಸೂಚಿಸಿ. ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಪರದೆಯಲ್ಲಿ ಗೋಚರಿಸುವ ಲಿಂಕ್ ಅನ್ನು ಕ್ಲಿಕ್ ಮಾಡಲು ನಿಮ್ಮ ಬೆರಳನ್ನು ಬಳಸಿ.',\r\n    bn: 'দীর্ঘ দেখার দূরত্বের অনুমতি দেওয়ার জন্য, দয়া করে আপনার স্মার্টফোনটিকে ওয়্যারলেস কীপ্যাড হিসাবে কাজ করার জন্য নিয়োগ করুন। এই কিউআর কোডটিতে আপনার স্মার্টফোন ক্যামেরাটি নির্দেশ করুন। তারপরে আপনার স্মার্টফোনের স্ক্রিনে প্রদর্শিত লিঙ্কটি ক্লিক করতে আপনার আঙুলটি ব্যবহার করুন।',\r\n    id: 'Untuk mengizinkan jarak menonton yang panjang, silakan merekrut ponsel cerdas Anda untuk bertindak sebagai keypad nirkabel. Arahkan kamera ponsel cerdas Anda ke kode QR ini. Kemudian gunakan jari Anda untuk mengklik tautan yang muncul di layar ponsel cerdas Anda.',\r\n    'zh-CN':\r\n      '为了延长观看距离，请招募您的智能手机充当无线键盘。将您的智能手机相机指向此QR码。然后用手指单击智能手机屏幕上出现的链接。',\r\n    'zh-HK':\r\n      '為了延長觀看距離，請招募您的智能手機充當無線鍵盤。將您的智能手機相機指向此QR碼。然後用手指單擊智能手機屏幕上出現的鏈接。',\r\n    ja: '視聴距離が長くなるようにするには、スマートフォンを募集してワイヤレスキーパッドとして機能してください。このQRコードでスマートフォンカメラをポイントします。次に、指を使用して、スマートフォン画面に表示されるリンクをクリックします。',\r\n    ko: '시청 거리가 길어 지려면 스마트 폰을 모집하여 무선 키패드 역할을하십시오. 이 QR 코드에서 스마트 폰 카메라를 가리 키십시오. 그런 다음 손가락을 사용하여 스마트 폰 화면에 나타나는 링크를 클릭하십시오.',\r\n  },\r\n  T_keypadScanQRCodeSubtitle: {\r\n    'en-US': 'This will allow you to respond using your phone as a keypad at any viewing distance.',\r\n    de: 'Auf diese Weise können Sie mit Ihrem Telefon als Tastatur in einer beliebigen Anzeigenentfernung antworten.',\r\n    fr: \"Cela vous permettra de répondre en utilisant votre téléphone comme clavier à n'importe quelle distance de visualisation.\",\r\n    es: 'Esto le permitirá responder usando su teléfono como teclado a cualquier distancia de visualización.',\r\n    pt: 'Isso permitirá que você responda usando o telefone como teclado a qualquer distância de visualização.',\r\n    it: 'Ciò ti consentirà di rispondere usando il telefono come tastiera a qualsiasi distanza di visualizzazione.',\r\n    ro: 'Acest lucru vă va permite să răspundeți folosind telefonul ca tastatură la orice distanță de vizualizare.',\r\n    pl: 'Pozwoli to odpowiedzieć za pomocą telefonu jako klawiatury w dowolnej odległości oglądania.',\r\n    ru: 'Это позволит вам ответить, используя свой телефон в качестве клавиатуры на любом расстоянии просмотра.',\r\n    hy: 'Սա թույլ կտա ձեզ պատասխանել ձեր հեռախոսը որպես ստեղնաշարի ցանկացած դիտման հեռավորության վրա:',\r\n    fi: 'Tämän avulla voit vastata puhelimesi käyttämällä näppäimistönä millä tahansa katseluetäisyydellä.',\r\n    ka: 'ეს საშუალებას მოგცემთ უპასუხოთ თქვენი ტელეფონის, როგორც კლავიშის გამოყენებით, ნებისმიერ სანახავად.',\r\n    he: 'זה יאפשר לך להגיב באמצעות הטלפון שלך כלוח מקשים בכל מרחק צפייה.',\r\n    ar: 'سيسمح لك ذلك بالرد باستخدام هاتفك كطريقة مفاتيح على أي مسافة عرض.',\r\n    ur: 'اس سے آپ کسی بھی فاصلے پر اپنے فون کو کیپیڈ کے طور پر استعمال کرتے ہوئے جواب دے سکیں گے۔',\r\n    hi: 'यह आपको किसी भी देखने की दूरी पर कीपैड के रूप में अपने फोन का उपयोग करने की अनुमति देगा।',\r\n    ta: 'எந்தவொரு பார்க்கும் தூரத்திலும் உங்கள் தொலைபேசியைப் பயன்படுத்தி பதிலளிக்க இது உங்களை அனுமதிக்கும்.',\r\n    ml: 'ഏത് കാഴ്ചക്കാഴ്ചയിലും നിങ്ങളുടെ ഫോൺ ഒരു കീപാഡായി പ്രതികരിക്കാൻ ഇത് നിങ്ങളെ അനുവദിക്കും.',\r\n    te: 'ఇది ఏ వీక్షణ దూరంలోనైనా మీ ఫోన్‌ను కీప్యాడ్‌గా ఉపయోగించి స్పందించడానికి మిమ్మల్ని అనుమతిస్తుంది.',\r\n    kn: 'ಯಾವುದೇ ವೀಕ್ಷಣೆ ದೂರದಲ್ಲಿ ನಿಮ್ಮ ಫೋನ್ ಅನ್ನು ಕೀಪ್ಯಾಡ್ ಆಗಿ ಬಳಸಲು ಪ್ರತಿಕ್ರಿಯಿಸಲು ಇದು ನಿಮ್ಮನ್ನು ಅನುಮತಿಸುತ್ತದೆ.',\r\n    bn: 'এটি আপনাকে যে কোনও দেখার দূরত্বে কীপ্যাড হিসাবে আপনার ফোনটি ব্যবহার করে প্রতিক্রিয়া জানাতে অনুমতি দেবে।',\r\n    id: 'Ini akan memungkinkan Anda untuk merespons menggunakan ponsel Anda sebagai keypad pada jarak menonton.',\r\n    'zh-CN': '这将使您可以在任何观看距离处使用手机作为键盘响应。',\r\n    'zh-HK': '這將使您可以在任何觀看距離處使用手機作為鍵盤響應。',\r\n    ja: 'これにより、視聴距離で携帯電話をキーパッドとして使用して応答することができます。',\r\n    ko: '이렇게하면 시청 거리에서 전화기를 키패드로 사용하여 응답 할 수 있습니다.',\r\n  },\r\n  T_letterPopularDemandFeatures: {\r\n    'en-US': '❌ T_letterPopularDemandFeatures is obsolete.',\r\n    de: '  ',\r\n    fr: '  ',\r\n    es: '  ',\r\n    pt: '  ',\r\n    it: '  ',\r\n    ro: '  ',\r\n    pl: '  ',\r\n    ru: '  ',\r\n    hy: '  ',\r\n    fi: '  ',\r\n    ka: '  ',\r\n    he: '  ',\r\n    ar: '  ',\r\n    ur: '  ',\r\n    hi: '  ',\r\n    ta: '  ',\r\n    ml: '  ',\r\n    te: '  ',\r\n    kn: '  ',\r\n    bn: '  ',\r\n    id: '  ',\r\n    'zh-CN': '  ',\r\n    'zh-HK': '  ',\r\n    ja: '  ',\r\n    ko: '  ',\r\n  },\r\n  T_loadingSounds: {\r\n    'en-US': 'Loading sounds ...',\r\n    de: 'Ladegeräusche ...',\r\n    fr: 'Chargement des sons ...',\r\n    es: 'Cargando sonidos ...',\r\n    pt: 'Sons de carregamento ...',\r\n    it: 'Caricamento dei suoni ...',\r\n    ro: 'Încărcarea sunetelor ...',\r\n    pl: 'Ładowanie dźwięków ...',\r\n    ru: 'Звуки загрузки ...',\r\n    hy: 'Ձայնի բեռնումը ...',\r\n    fi: 'Äänien lataaminen ...',\r\n    ka: 'ჩატვირთვა ხმები ...',\r\n    he: 'טוען צלילי ...',\r\n    ar: 'تحميل الأصوات ...',\r\n    ur: 'یہ لوڈ ہو رہا ہے ...',\r\n    hi: 'लोड हो रहा है ...',\r\n    ta: 'ஒலிகளை ஏற்றுகிறது ...',\r\n    ml: 'ലോഡുചെയ്യുന്നു ...',\r\n    te: 'శబ్దాలు లోడ్ అవుతోంది ...',\r\n    kn: 'ಶಬ್ದಗಳನ್ನು ಲೋಡ್ ಮಾಡಲಾಗುತ್ತಿದೆ ...',\r\n    bn: 'লোডিং শব্দ ...',\r\n    id: 'Memuat suara ...',\r\n    'zh-CN': '我们会定期暂停让您休息，以防您过于疲劳。休息时间会出现在区组之间和区组之中。',\r\n    'zh-HK': '我們會定期暫停讓您休息，以防您過於疲勞。休息時間會出現在區組之間和區組之中。',\r\n    ja: 'こんにちは。ピーボタンをクリックしてこのコンピュータの音が機能していることを確認してください。ちなみに、テストでは正解する度にこの音が鳴ります。',\r\n    ko: '소리로드 ...',\r\n  },\r\n  T_middleLetterBrief: {\r\n    'en-US':\r\n      \"It’s an R. This display is static, so it would be easy to move your eyes to the letter and identify it. But, in a real trial, the letters are FLASHED, so there's no time to move your eyes. It's important to look at the cross hairs as you initiate the trial. The letters will flash immediately. It doesn't matter where your eyes go after the flash. The first block of testing is just a few trials of practice, before we start in earnest. \",\r\n    de: 'Es ist ein R. Diese Anzeige ist statisch, daher wäre es einfach, Ihre Augen in den Buchstaben zu bewegen und zu identifizieren. Aber in einem echten Versuch werden die Buchstaben geblitzt, so dass es keine Zeit gibt, Ihre Augen zu bewegen. Es ist wichtig, die Kreuzhaare zu betrachten, während Sie den Versuch einleiten. Die Buchstaben blinken sofort. Es spielt keine Rolle, wohin Ihre Augen nach dem Blitz gehen. Der erste Testblock ist nur ein paar Versuche der Praxis, bevor wir ernsthaft anfangen.',\r\n    fr: \"C'est un R. Cet affichage est statique, il serait donc facile de déplacer vos yeux vers la lettre et de l'identifier. Mais, dans un véritable procès, les lettres sont flashées, donc il n'y a pas de temps pour bouger les yeux. Il est important de regarder les poils en vigueur lorsque vous lancez l'essai. Les lettres clignoteront immédiatement. Peu importe où vos yeux vont après le flash. Le premier bloc de tests n'est que quelques essais de pratique, avant de commencer sérieusement.\",\r\n    es: 'Es un R. Esta pantalla es estática, por lo que sería fácil mover los ojos a la letra e identificarla. Pero, en una prueba real, las letras se muestran, por lo que no hay tiempo para mover los ojos. Es importante mirar los pelos transversales al iniciar el juicio. Las letras parpadearán de inmediato. No importa a dónde van tus ojos después del flash. El primer bloque de pruebas es solo unas pocas pruebas de práctica, antes de comenzar en serio.',\r\n    pt: 'É uma R. Essa tela é estática, por isso seria fácil mover os olhos para a letra e identificá -la. Mas, em um teste real, as letras são mostradas, então não há tempo para mover os olhos. É importante olhar para os cabelos transversais quando você inicia o teste. As letras piscarão imediatamente. Não importa onde seus olhos vão depois do flash. O primeiro bloco de teste são apenas alguns testes de prática, antes de começar seriamente.',\r\n    it: \"È un R. Questo display è statico, quindi sarebbe facile spostare gli occhi sulla lettera e identificarla. Ma, in una vera prova, le lettere vengono lampeggiate, quindi non c'è tempo per muovere gli occhi. È importante guardare i capelli incrociati mentre inizi la prova. Le lettere lamperanno immediatamente. Non importa dove vanno gli occhi dopo il flash. Il primo blocco di test è solo alcune prove di pratica, prima di iniziare sul serio.\",\r\n    ro: 'Este un R. Acest ecran este static, așa că ar fi ușor să mutați ochii în scrisoare și să -l identificați. Dar, într -un test real, versurile sunt afișate, așa că nu există timp să vă mișcați ochii. Este important să priviți părul transversal atunci când începeți procesul. Literele vor clipi imediat. Nu contează unde îți dau ochii după flash. Primul bloc de testare este doar câteva teste de practică, înainte de a începe serios.',\r\n    pl: 'Prawidłowa odpowiedz to R. Ta próba jest duga, więc łatwo byłoby przenieść twoje oko do liter i zidentyfikować środkową. W prawdziwym teście litery będą prezentowanie przez krótki okres czasu, więc nie będziesz miał czasu, aby przenieść wzrok.\\n \\n\\n',\r\n    ru: 'Это R. Этот дисплей статичен, поэтому было бы легко переместить ваши глаза на букву и идентифицировать ее. Но, в реальном исследовании, буквы вспыхнут, поэтому не будет времени перемещать глаза. Важно посмотреть на прицел, когда вы нажимаете на нее. Буквы будут мигать немедленно. Неважно, где ваши глаза идут после вспышки. Первый блок тестирования - это всего лишь несколько тренировочных испытаний, прежде чем начать всерьез.',\r\n    hy: 'Այս R. Այս ցուցադրումը վիճակագրական է, ուստի հեշտ կլինի ձեր աչքերը տառին տեղափոխել եւ նույնացնել: Բայց, իրական ուսումնասիրության մեջ, տառերը բռնկվում են, ուստի ժամանակ չի լինի աչքերը տեղափոխելու համար: Կարեւոր է նայել այն տեսողությանը, երբ կտտացրեք այն: Նամակները անմիջապես կթողնեն: Անկախ նրանից, թե որտեղ են ձեր աչքերը անցնում Flash- ից հետո: Առաջին փորձարկման միավորը ընդամենը մի քանի ուսումնական թեստ է, նախքան լրջորեն սկսելը:',\r\n    fi: 'Se on R. Tämä näyttö on staattinen, joten olisi helppo siirtää silmäsi kirjaimeen ja tunnistaa se. Mutta todellisessa oikeudenkäynnissä kirjeet vilkkuvat, joten silmiäsi ei ole aikaa liikuttaa. On tärkeää tarkastella ristikarvoja aloittaessasi kokeilua. Kirjeet vilkkuvat heti. Ei ole väliä missä silmäsi menevät salaman jälkeen. Ensimmäinen testauslohko on vain muutama harjoittelukoe, ennen kuin aloitamme tosissaan.',\r\n    ka: 'ეს არის R. ეს ეკრანი სტატიკურია, ამიტომ ადვილი იქნება თქვენი თვალების გადატანა წერილზე და იდენტიფიცირება. მაგრამ, რეალურ განსაცდელში, წერილები ააფეთქეს, ასე რომ, თვალების გადაადგილების დრო არ არის. მნიშვნელოვანია, რომ გადახედოთ ჯვრის თმას, როდესაც დაიწყებთ სასამართლო პროცესს. ასოები დაუყოვნებლივ გაისვრის. არ აქვს მნიშვნელობა სად მიდის თქვენი თვალები flash- ის შემდეგ. ტესტირების პირველი ბლოკი მხოლოდ რამდენიმე პრაქტიკის გამოცდაა, სანამ სერიოზულად დავიწყებთ.',\r\n    he: 'זה R. תצוגה זו היא סטטית, כך שיהיה קל להעביר את העיניים למכתב ולזהות אותו. אבל, במשפט אמיתי, המכתבים מבהיקים, כך שאין זמן להזיז את העיניים. חשוב להסתכל על שערות הצלב כשאתה יוזם את המשפט. האותיות יבהבו מייד. לא משנה לאן העיניים שלך הולכות אחרי ההבזק. גוש הבדיקה הראשון הוא רק כמה ניסויים של תרגול, לפני שנתחיל ברצינות.',\r\n    ar: 'إنه R. هذا العرض ثابت ، لذلك سيكون من السهل نقل عينيك إلى الرسالة وتحديدها. ولكن ، في تجربة حقيقية ، تومض الحروف ، لذلك لا يوجد وقت لتحريك عينيك. من المهم أن ننظر إلى الشعر المتقاطع أثناء بدء التجربة. سوف تومض الحروف على الفور. لا يهم أين تذهب عينيك بعد الفلاش. المجموعة الأولى من الاختبار هي مجرد تجارب قليلة من الممارسة ، قبل أن نبدأ بجدية.',\r\n    ur: 'یہ ایک آر ہے۔ یہ کارکردگی مستحکم ہے ، لہذا آپ کی آنکھوں کو خط میں منتقل کرنا اور اس کی نشاندہی کرنا آسان ہوگا۔ لیکن ، ایک حقیقی امتحان میں ، خطوط چمکتے ہیں ، لہذا آپ کی آنکھیں منتقل کرنے کا وقت نہیں ہے۔ مقدمے کی سماعت کے دوران کراس بالوں کو دیکھنا ضروری ہے۔ خطوط فوری طور پر فلیش ہوجائیں گے۔ اس سے کوئی فرق نہیں پڑتا ہے کہ آپ کی آنکھیں فلیش کے بعد کہاں جاتی ہیں۔ بیانا میں شروع ہونے سے پہلے ، ٹیسٹ کا پہلا بلاک ورزش کے کچھ ٹیسٹ ہیں۔',\r\n    hi: 'यह एक आर है। यह प्रदर्शन स्थिर है, इसलिए आपकी आंखों को पत्र में ले जाना और इसे पहचानना आसान होगा। लेकिन, एक वास्तविक परीक्षण में, पत्र चमकते हैं, इसलिए आपकी आँखों को स्थानांतरित करने का समय नहीं है। ट्रायल की शुरुआत करते हुए क्रॉस हेयर को देखना महत्वपूर्ण है। पत्र तुरंत फ्लैश हो जाएंगे। इससे कोई फर्क नहीं पड़ता कि आपकी आँखें फ्लैश के बाद कहां जाती हैं। परीक्षण का पहला ब्लॉक अभ्यास के कुछ परीक्षण हैं, इससे पहले कि हम बयाना में शुरू करें।',\r\n    ta: 'இது ஒரு ஆர். இந்த காட்சி நிலையானது, எனவே உங்கள் கண்களை கடிதத்திற்கு நகர்த்தி அதை அடையாளம் காண்பது எளிது. ஆனால், ஒரு உண்மையான சோதனையில், கடிதங்கள் பறக்கப்படுகின்றன, எனவே உங்கள் கண்களை நகர்த்த நேரமில்லை. நீங்கள் சோதனையைத் தொடங்கும்போது குறுக்கு முடிகளைப் பார்ப்பது முக்கியம். கடிதங்கள் உடனடியாக ஒளிரும். ஃபிளாஷ் பின் உங்கள் கண்கள் எங்கு செல்கின்றன என்பது முக்கியமல்ல. சோதனையின் முதல் தொகுதி, நாங்கள் ஆர்வத்துடன் தொடங்குவதற்கு முன்பு, நடைமுறையின் சில சோதனைகள் மட்டுமே.',\r\n    ml: 'ഇത് ഒരു r. ഈ ഡിസ്പ്ലേ സ്റ്റാറ്റിക് ആണ്, അതിനാൽ നിങ്ങളുടെ കണ്ണുകൾ കത്തിച്ച് തിരിച്ചറിയുകയും അത് തിരിച്ചറിയുകയും ചെയ്യും. പക്ഷേ, ഒരു യഥാർത്ഥ ട്രയലിൽ, അക്ഷരങ്ങൾ മിന്നുന്നു, അതിനാൽ നിങ്ങളുടെ കണ്ണുകൾ നീക്കാൻ സമയമില്ല. നിങ്ങൾ ട്രയൽ ആരംഭിക്കുമ്പോൾ ക്രോസ് രോമങ്ങൾ നോക്കേണ്ടത് പ്രധാനമാണ്. അക്ഷരങ്ങൾ ഉടനടി ഫ്ലാഷ് ചെയ്യും. നിങ്ങളുടെ കണ്ണുകൾ ഫ്ലാഷിനുശേഷം പോകുന്നത് പ്രശ്നമല്ല. പരിശോധനയുടെ ആദ്യ ബ്ലോക്ക് പരിശീലനത്തിന്റെ ഏതാനും പരീക്ഷണങ്ങൾ മാത്രമാണ്, ഞങ്ങൾ ആത്മാർത്ഥതയോടെ ആരംഭിക്കുന്നതിന് മുമ്പ്.',\r\n    te: 'ఇది R. ఈ ప్రదర్శన స్థిరంగా ఉంది, కాబట్టి మీ కళ్ళను లేఖకు తరలించి గుర్తించడం సులభం. కానీ, నిజమైన విచారణలో, అక్షరాలు వెలిగిపోతాయి, కాబట్టి మీ కళ్ళను కదిలించడానికి సమయం లేదు. మీరు ట్రయల్ ప్రారంభించినప్పుడు క్రాస్ హెయిర్స్ చూడటం చాలా ముఖ్యం. అక్షరాలు వెంటనే ఫ్లాష్ అవుతాయి. ఫ్లాష్ తర్వాత మీ కళ్ళు ఎక్కడికి వెళ్తాడనేది పట్టింపు లేదు. పరీక్ష యొక్క మొదటి బ్లాక్ మేము ఆసక్తిగా ప్రారంభించడానికి ముందు, కొన్ని ప్రయత్నాలు సాధన.',\r\n    kn: 'ಇದು ಆರ್. ಈ ಪ್ರದರ್ಶನವು ಸ್ಥಿರವಾಗಿದೆ, ಆದ್ದರಿಂದ ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಪತ್ರಕ್ಕೆ ಸರಿಸಿ ಅದನ್ನು ಗುರುತಿಸುವುದು ಸುಲಭ. ಆದರೆ, ನಿಜವಾದ ಪ್ರಯೋಗದಲ್ಲಿ, ಅಕ್ಷರಗಳು ಮಿನುಗುತ್ತವೆ, ಆದ್ದರಿಂದ ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಸರಿಸಲು ಸಮಯವಿಲ್ಲ. ನೀವು ಪ್ರಯೋಗವನ್ನು ಪ್ರಾರಂಭಿಸುವಾಗ ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವುದು ಮುಖ್ಯ. ಅಕ್ಷರಗಳು ತಕ್ಷಣ ಮಿಂಚುತ್ತವೆ. ನಿಮ್ಮ ಕಣ್ಣುಗಳು ಫ್ಲ್ಯಾಷ್ ನಂತರ ಎಲ್ಲಿಗೆ ಹೋಗುತ್ತವೆ ಎಂಬುದು ಮುಖ್ಯವಲ್ಲ. ನಾವು ಶ್ರದ್ಧೆಯಿಂದ ಪ್ರಾರಂಭಿಸುವ ಮೊದಲು ಪರೀಕ್ಷೆಯ ಮೊದಲ ಬ್ಲಾಕ್ ಅಭ್ಯಾಸದ ಕೆಲವು ಪ್ರಯೋಗಗಳು.',\r\n    bn: 'এটি একটি আর। এই প্রদর্শনটি স্থির, সুতরাং আপনার চোখটি চিঠির দিকে নিয়ে যাওয়া এবং এটি সনাক্ত করা সহজ হবে। তবে, সত্যিকারের পরীক্ষায়, চিঠিগুলি ঝলকানো হয়, তাই আপনার চোখ সরানোর কোনও সময় নেই। আপনি যখন ট্রায়ালটি শুরু করেন তখন ক্রস কেশগুলি দেখার বিষয়টি গুরুত্বপূর্ণ। চিঠিগুলি তাত্ক্ষণিকভাবে ফ্ল্যাশ হবে। আপনার চোখ ফ্ল্যাশের পরে কোথায় যায় তা বিবেচ্য নয়। পরীক্ষার প্রথম ব্লকটি আমরা আন্তরিকভাবে শুরু করার আগে অনুশীলনের কয়েকটি পরীক্ষা।',\r\n    id: 'Ini adalah R. Tampilan ini statis, jadi akan mudah untuk memindahkan mata Anda ke surat dan mengidentifikasinya. Tapi, dalam uji coba nyata, surat -surat itu muncul, jadi tidak ada waktu untuk menggerakkan mata Anda. Penting untuk melihat rambut silang saat Anda memulai persidangan. Surat akan segera berkedip. Tidak masalah ke mana mata Anda mengejar kilat. Blok pengujian pertama hanyalah beberapa percobaan latihan, sebelum kita mulai dengan sungguh -sungguh.',\r\n    'zh-CN':\r\n      '这是一个 R。因为字母一直显示在屏幕上，所以您只需移动一下视线就能轻松认出它。在接下来的试验中，字母都将一闪而过，所以您不会有时间来调整您的视线。',\r\n    'zh-HK':\r\n      '這是一個 R。因為字母一直顯示在屏幕上，所以您只需移動一下視線就能輕鬆認出它。在接下來的試驗中，字母都將一閃而過，所以您不會有時間來調整您的視線。',\r\n    ja: 'これはRです。この画面は動いていないため、目を文字の位置に動かして確認するのは容易でしょう。本番のテストでは、文字は一瞬しか映されないので、目を動かす時間はないでしょう。',\r\n    ko: '이 디스플레이는 정적이므로 눈을 편지로 이동하여 식별하기가 쉽습니다. 그러나 실제 시험에서는 편지가 번쩍이므로 눈을 움직일 시간이 없습니다. 시험을 시작할 때 십자 머리카락을 보는 것이 중요합니다. 편지는 즉시 플래시됩니다. 플래시 후 눈이 어디로 가는지는 중요하지 않습니다. 테스트의 첫 번째 블록은 우리가 본격적으로 시작하기 전에 몇 가지 실무 시험입니다.',\r\n  },\r\n  T_middleLetterDemo: {\r\n    'en-US':\r\n      'On each trial, while you look at the cross hairs, a triplet of three random letters will FLASH in the corner of your eye. Just a flash. To learn the task, let’s try it first with a STATIC display. While looking at the cross hairs, below, without moving your eyes, try to identify the middle letter. ',\r\n    de: 'Während Sie bei jedem Versuch die Kreuzhaare betrachten, blinkt ein Drilltelaus mit drei zufälligen Buchstaben in Ihrem Augenwinkel. Nur ein Blitz. Um die Aufgabe zu lernen, versuchen wir es zuerst mit einer statischen Anzeige. Versuchen Sie beim Betrachten der Kreuzhaare unten, ohne Ihre Augen zu bewegen, den mittleren Buchstaben.',\r\n    fr: \"À chaque essai, pendant que vous regardez les poils, un triplet de trois lettres aléatoires clignotera dans le coin de votre œil. Juste un flash. Pour apprendre la tâche, essayons d'abord avec un écran statique. Tout en regardant les poils, ci-dessous, sans bouger les yeux, essayez d'identifier la lettre du milieu.\",\r\n    es: 'En cada prueba, mientras mira la cruz, un triplete de tres letras aleatorias parpadeará en la esquina de su ojo. Solo un destello. Para aprender la tarea, intentémosla primero con una pantalla estática. Mientras mira los pelos de la cruz, a continuación, sin mover los ojos, intente identificar la letra central.',\r\n    pt: 'Em cada teste, enquanto olha para a cruz, três letras de letras aleatórias piscam no canto do olho. Apenas um instante. Para aprender a tarefa, vamos tentar primeiro com uma tela estática. Enquanto olha para os cabelos da cruz, sem mover os olhos, tente identificar a letra central.',\r\n    it: \"Ad ogni prova, mentre guardi i capelli incrociati, una tripletta di tre lettere casuali lampeggerà nell'angolo dell'occhio. Solo un lampo. Per imparare l'attività, proviamo prima con un display statico. Mentre guardi i capelli incrociati, sotto, senza muovere gli occhi, prova a identificare la lettera di mezzo.\",\r\n    ro: 'În fiecare test, în timp ce privești crucea, un trei -ștergători de litere aleatorii vor clipi la colțul ochiului său. Doar un bliț. Pentru a învăța sarcina, să încercăm mai întâi cu un ecran static. În timp ce privești părul crucii, apoi fără să -ți mișci ochii, încearcă să identifici litera centrală.',\r\n    pl: 'Podczas każdej proby gdy patrzysz na krzyżyk pojawią się trzy losowe litery w kącie pola widzenia. Podczas gdy patrzysz na krzyżyk, bez przenoszenia wzroku na inne części ekranu, spróbuj zidentyfikować środkową literę.\\n \\n\\n',\r\n    ru: 'На каждом испытании, пока вы смотрите на прицел, триплет из трех случайных букв будет мигать в углу глаза. Просто вспышка. Чтобы узнать задачу, давайте сначала попробуем ее со статическим дисплеем. Пока вы смотрите на прицел, ниже, не двигая глазами, попробуйте определить среднюю букву.',\r\n    hy: 'Յուրաքանչյուր թեստում, մինչ դուք նայում եք հայացքից, երեք պատահական տառերի եռյակը կթողնի աչքի անկյունում: Պարզապես ֆլեշ: Առաջադրանքը պարզելու համար եկեք առաջին հերթին փորձենք ստատիկ էկրանով: Մինչ դուք նայում եք տեսողությանը, ներքեւում, առանց ձեր աչքերը տեղափոխելու, փորձեք որոշել միջին նամակը:',\r\n    fi: 'Jokaisessa kokeessa, kun tarkastellaan ristikarvoja, kolmen satunnaisen kirjaimen kolminkertainen vilkkuu silmäsi nurkassa. Vain salama. Kokeilemme sitä ensin staattisella näytöllä. Kun tarkastellaan ristikarvoja, yritä tunnistaa keskimmäistä kirjainta liikuttamatta silmiäsi.',\r\n    ka: 'თითოეულ განსაცდელზე, სანამ ჯვრის თმას უყურებთ, სამი შემთხვევითი ასოების ტრიპლეტი თქვენს თვალის კუთხეში გაისვრის. უბრალოდ ფლეშ. დავალების შესასწავლად, პირველ რიგში, ვცადოთ სტატიკური ჩვენებით. ჯვრის თმას გადახედვისას, ქვემოთ, თვალების გადაადგილების გარეშე, შეეცადეთ დაადგინოთ შუა წერილი.',\r\n    he: 'בכל ניסיון, בזמן שאתה מסתכל על שערות הצלב, שלישייה של שלוש אותיות אקראיות תבהב בפינת העין שלך. רק פלאש. כדי ללמוד את המשימה, בואו ננסה אותה תחילה עם תצוגה סטטית. תוך כדי התבוננות בשערות הצלב, למטה, מבלי להזיז את העיניים, נסו לזהות את האות האמצעית.',\r\n    ar: 'في كل تجربة ، بينما تنظر إلى الشعر المتقاطع ، ستوضيب ثلاثة أحرف عشوائية في زاوية عينيك. مجرد ومضة. لمعرفة المهمة ، دعنا نجربها أولاً بعرض ثابت. أثناء النظر إلى الشعر المتقاطع ، أدناه ، دون تحريك عينيك ، حاول تحديد الحرف الأوسط.',\r\n    ur: 'ہر ٹیسٹ پر ، جب آپ کراس کے بالوں کو دیکھیں تو ، آپ کی آنکھ کے کونے میں تین بے ترتیب حرفوں کا ایک ٹرپل چمک اٹھے گا۔ صرف ایک جھلک کام کو جاننے کے ل first ، پہلے اسے مستحکم کارکردگی کے ساتھ آزمائیں۔ نیچے کے بالوں کو دیکھتے ہوئے آنکھیں ہلائے بغیر درمیانی خط کی شناخت کرنے کی کوشش کریں۔',\r\n    hi: 'प्रत्येक परीक्षण पर, जब आप क्रॉस हेयर को देखते हैं, तो तीन यादृच्छिक अक्षरों का एक ट्रिपल आपकी आंख के कोने में चमक जाएगा। बस एक झलक। कार्य को जानने के लिए, इसे पहले एक स्थिर प्रदर्शन के साथ आज़माएं। अपनी आँखों को हिलाने के बिना, नीचे, नीचे के बालों को देखते हुए, मध्य पत्र की पहचान करने का प्रयास करें।',\r\n    ta: 'ஒவ்வொரு சோதனையிலும், நீங்கள் குறுக்கு முடிகளைப் பார்க்கும்போது, ​​மூன்று சீரற்ற எழுத்துக்களின் மும்மடங்கு உங்கள் கண்ணின் மூலையில் ஒளிரும். ஒரு ஃபிளாஷ். பணியைக் கற்றுக்கொள்ள, நிலையான காட்சியுடன் முதலில் முயற்சிப்போம். குறுக்கு முடிகளைப் பார்க்கும்போது, ​​கீழே, கண்களை நகர்த்தாமல், நடுத்தர கடிதத்தை அடையாளம் காண முயற்சிக்கவும்.',\r\n    ml: 'ഓരോ വിചാരണയിലും, നിങ്ങൾ ക്രോസ് ഹെയർ നോക്കുമ്പോൾ, ക്രമരഹിതമായ മൂന്ന് അക്ഷരങ്ങളുടെ ഒരു മൂന്നിരട്ടി നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ മിന്നുമാകും. ഒരു ഫ്ലാഷ് മാത്രം. ടാസ്ക് പഠിക്കാൻ, ഒരു സ്റ്റാറ്റിക് ഡിസ്പ്ലേ ഉപയോഗിച്ച് ആദ്യം ഇത് പരീക്ഷിക്കാം. നിങ്ങളുടെ കണ്ണുകൾ നീക്കാതെ, ചുവടെയുള്ള രോമങ്ങൾ നോക്കുമ്പോൾ, മധ്യ അക്ഷരം തിരിച്ചറിയാൻ ശ്രമിക്കുക.',\r\n    te: 'ప్రతి ట్రయల్‌లో, మీరు క్రాస్ హెయిర్స్ వైపు చూస్తున్నప్పుడు, మూడు యాదృచ్ఛిక అక్షరాల త్రిపాది మీ కంటి మూలలో మెరుస్తుంది. కేవలం ఒక ఫ్లాష్. పనిని తెలుసుకోవడానికి, మొదట స్టాటిక్ డిస్ప్లేతో దీన్ని ప్రయత్నిద్దాం. కళ్ళు కదిలించకుండా, క్రింద, క్రింద ఉన్న క్రాస్ హెయిర్స్ వైపు చూస్తున్నప్పుడు, మధ్య అక్షరాన్ని గుర్తించడానికి ప్రయత్నించండి.',\r\n    kn: 'ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ, ನೀವು ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವಾಗ, ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಲ್ಲಿ ಮೂರು ಯಾದೃಚ್ leters ಿಕ ಅಕ್ಷರಗಳ ತ್ರಿವಳಿಗಳು ಮಿಂಚುತ್ತವೆ. ಕೇವಲ ಒಂದು ಫ್ಲ್ಯಾಷ್. ಕಾರ್ಯವನ್ನು ಕಲಿಯಲು, ಸ್ಥಿರ ಪ್ರದರ್ಶನದೊಂದಿಗೆ ಮೊದಲು ಇದನ್ನು ಪ್ರಯತ್ನಿಸೋಣ. ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವಾಗ, ಕೆಳಗೆ, ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಚಲಿಸದೆ, ಮಧ್ಯದ ಅಕ್ಷರವನ್ನು ಗುರುತಿಸಲು ಪ್ರಯತ್ನಿಸಿ.',\r\n    bn: 'প্রতিটি পরীক্ষায়, আপনি ক্রস চুলের দিকে তাকানোর সময়, তিনটি এলোমেলো অক্ষরের একটি ট্রিপলেট আপনার চোখের কোণে ফ্ল্যাশ হয়ে যাবে। শুধু একটা ঝলকানি. টাস্কটি শিখতে, আসুন প্রথমে এটি একটি স্থির প্রদর্শন দিয়ে চেষ্টা করি। আপনার চোখ না সরিয়ে নীচে ক্রস চুলের দিকে তাকানোর সময়, মাঝের অক্ষরটি সনাক্ত করার চেষ্টা করুন।',\r\n    id: 'Pada setiap percobaan, saat Anda melihat rambut silang, kembar tiga dari tiga huruf acak akan berkedip di sudut mata Anda. Hanya sekejap. Untuk mempelajari tugas ini, mari kita coba terlebih dahulu dengan tampilan statis. Saat melihat rambut salib, di bawah, tanpa menggerakkan mata Anda, cobalah untuk mengidentifikasi huruf tengah.',\r\n    'zh-CN':\r\n      '每次试验中，在您注视十字准线的某个时刻，三个随机字母将短暂地出现在您的视野边缘。让我们来试一试。请注视十字准线，保持视线不动并试着认出中间的字母。',\r\n    'zh-HK':\r\n      '每次試驗中，在您注視十字準線的某個時刻，三個隨機字母將短暫地出現在您的視野邊緣。讓我們來試一試。請注視十字準線，保持視線不動並試著認出中間的字母。',\r\n    ja: '各テストでは、あなたが十字線を見ている間に3つのランダムな文字があなたの目の端に短く表示されます。この場で試してみましょう。\\n目を動かさずに十字線を見なが、真ん中の文字を識別してみてください。',\r\n    ko: '각 시험에서 십자형 머리카락을 보면서 3 개의 임의의 문자가 눈의 모퉁이에서 번쩍입니다. 단지 플래시. 작업을 배우려면 먼저 정적 디스플레이를 사용하여 시도해 봅시다. 눈을 움직이지 않고 아래의 십자 머리카락을 보면서 중간 문자를 식별하십시오.',\r\n  },\r\n  T_letterBrief: {\r\n    'en-US':\r\n      \"It’s an R. This display is static, so it would be easy to move your eyes to the letter and identify it. But, in a real trial, the letter is FLASHED, so there's no time to move your eyes. It's important to look at the cross hairs as you initiate the trial. The letter will flash immediately. It doesn't matter where your eyes go after the flash. The first block of testing is just a few trials of practice, before we start in earnest. \",\r\n    de: 'Es ist ein R. Diese Anzeige ist statisch, daher wäre es einfach, Ihre Augen in den Buchstaben zu bewegen und zu identifizieren. Aber in einem echten Versuch wird der Brief geblitzt, so dass es keine Zeit gibt, Ihre Augen zu bewegen. Es ist wichtig, die Kreuzhaare zu betrachten, während Sie den Versuch einleiten. Der Brief blinkt sofort. Es spielt keine Rolle, wohin Ihre Augen nach dem Blitz gehen. Der erste Testblock ist nur ein paar Versuche der Praxis, bevor wir ernsthaft anfangen.',\r\n    fr: \"C'est un R. Cet affichage est statique, il serait donc facile de déplacer vos yeux vers la lettre et de l'identifier. Mais, dans un vrai procès, la lettre est flasée, il n'y a donc pas de temps pour bouger les yeux. Il est important de regarder les poils en vigueur lorsque vous lancez l'essai. La lettre clignote immédiatement. Peu importe où vos yeux vont après le flash. Le premier bloc de tests n'est que quelques essais de pratique, avant de commencer sérieusement.\",\r\n    es: 'Es un R. Esta pantalla es estática, por lo que sería fácil mover los ojos a la letra e identificarla. Pero, en una prueba real, la carta se muestra, por lo que no hay tiempo para mover los ojos. Es importante mirar los pelos transversales al iniciar el juicio. La carta parpadeará de inmediato. No importa a dónde van tus ojos después del flash. El primer bloque de pruebas es solo unas pocas pruebas de práctica, antes de comenzar en serio.',\r\n    pt: 'É uma R. Esta tela é estática, por isso seria fácil mover os olhos para a letra e identificá -la. Mas, em um julgamento real, a carta é exibida, então não há tempo para mover os olhos. É importante olhar para os cabelos cruzados ao iniciar o julgamento. A carta piscará imediatamente. Não importa onde seus olhos vão atrás do flash. O primeiro bloco de testes é apenas algumas tentativas de prática, antes de começarmos a sério.',\r\n    it: \"È un R. Questo display è statico, quindi sarebbe facile spostare gli occhi sulla lettera e identificarla. Ma, in una vera prova, la lettera è lampeggiata, quindi non c'è tempo per muovere gli occhi. È importante guardare i capelli incrociati mentre inizi la prova. La lettera lampeggerà immediatamente. Non importa dove vanno gli occhi dopo il flash. Il primo blocco di test è solo alcune prove di pratica, prima di iniziare sul serio.\",\r\n    ro: 'Este un R. Acest afișaj este static, așa că ar fi ușor să vă mutați ochii către scrisoare și să o identificați. Dar, într -un proces real, scrisoarea este aprinsă, așa că nu există timp să vă mutați ochii. Este important să priviți părul încrucișat în timp ce inițiați procesul. Scrisoarea va clipi imediat. Nu contează unde merg ochii după flash. Primul bloc de testare este doar câteva încercări de practică, înainte de a începe cu seriozitate.',\r\n    pl: 'Jest to R. Ten wyświetlacz jest statyczny, więc łatwo byłoby przesunąć oczy do litery i zidentyfikować ją. Ale w prawdziwym procesie litera jest migra, więc nie ma czasu, aby poruszyć oczami. Ważne jest, aby spojrzeć na włosy krzyżowe podczas inicjowania próby. Litera natychmiast mignie. Nie ma znaczenia, dokąd idą twoje oczy po lampie. Pierwszy blok testowania to tylko kilka prób praktyk, zanim zaczniemy na poważnie.',\r\n    ru: 'Это R. Этот дисплей статичен, поэтому было бы легко переместить глаза на букву и определить его. Но в реальном испытании письмо вспыхнуло, поэтому нет времени, чтобы переместить ваши глаза. Важно смотреть на кросс -волосы, когда вы инициируете испытание. Письмо будет немедленно мигать. Неважно, куда твои глаза идут за вспышкой. Первый блок тестирования - это лишь несколько испытаний практики, прежде чем мы начнем всерьез.',\r\n    hy: 'Դա R. Այս ցուցակը ստատիկ է, ուստի հեշտ կլինի ձեր աչքերը դեպի նամակ տեղափոխել եւ նույնականացնել: Բայց, իրական փորձության մեջ, նամակը բռնկված է, ուստի ձեր աչքերը տեղափոխելու ժամանակ չկա: Կարեւոր է նայելը, երբ նախաձեռնում եք խաչմերուկը: Նամակը անմիջապես կփախչի: Կարեւոր չէ, թե որտեղ են ձեր աչքերը անցնում Flash- ից հետո: Թեստավորման առաջին բլոկը պրակտիկայի ընդամենը մի քանի փորձություն է, նախքան սկսենք լրջորեն:',\r\n    fi: 'Se on R. Tämä näyttö on staattinen, joten olisi helppo siirtää silmäsi kirjaimeen ja tunnistaa se. Mutta todellisessa oikeudenkäynnissä kirje vilkkuu, joten silmiäsi ei ole aikaa liikuttaa. On tärkeää tarkastella ristikarvoja aloittaessasi kokeilua. Kirje vilkkuu heti. Ei ole väliä missä silmäsi menevät salaman jälkeen. Ensimmäinen testauslohko on vain muutama harjoittelukoe, ennen kuin aloitamme tosissaan.',\r\n    ka: 'ეს არის R. ეს ეკრანი სტატიკურია, ამიტომ ადვილი იქნება თქვენი თვალების გადატანა წერილზე და იდენტიფიცირება. მაგრამ, რეალურ განსაცდელში, წერილი ააფეთქეს, ასე რომ, თვალების გადაადგილების დრო აღარ არის. მნიშვნელოვანია, რომ გადახედოთ ჯვრის თმას, როდესაც დაიწყებთ სასამართლო პროცესს. წერილი დაუყოვნებლივ შეირყება. არ აქვს მნიშვნელობა სად მიდის თქვენი თვალები flash- ის შემდეგ. ტესტირების პირველი ბლოკი მხოლოდ რამდენიმე პრაქტიკის გამოცდაა, სანამ სერიოზულად დავიწყებთ.',\r\n    he: 'זה R. תצוגה זו היא סטטית, כך שיהיה קל להעביר את העיניים למכתב ולזהות אותו. אבל, במשפט אמיתי, המכתב הבזיק, כך שאין זמן להזיז את העיניים. חשוב להסתכל על שערות הצלב כשאתה יוזם את המשפט. המכתב יבהב מייד. לא משנה לאן העיניים שלך הולכות אחרי ההבזק. גוש הבדיקה הראשון הוא רק כמה ניסויים של תרגול, לפני שנתחיל ברצינות.',\r\n    ar: 'إنه R. هذا العرض ثابت ، لذلك سيكون من السهل نقل عينيك إلى الرسالة وتحديدها. ولكن ، في تجربة حقيقية ، يتم تمييز الرسالة ، لذلك لا يوجد وقت لتحريك عينيك. من المهم أن ننظر إلى الشعر المتقاطع أثناء بدء التجربة. سوف تومض الرسالة على الفور. لا يهم أين تذهب عينيك بعد الفلاش. المجموعة الأولى من الاختبار هي مجرد تجارب قليلة من الممارسة ، قبل أن نبدأ بجدية.',\r\n    ur: 'یہ ایک آر ہے۔ یہ ڈسپلے مستحکم ہے ، لہذا آپ کی آنکھوں کو خط میں منتقل کرنا اور اس کی شناخت کرنا آسان ہوگا۔ لیکن ، ایک حقیقی آزمائش میں ، خط چمکتا ہے ، لہذا آپ کی آنکھیں منتقل کرنے کا وقت نہیں ہے۔ جب آپ مقدمے کی سماعت شروع کرتے ہیں تو کراس بالوں کو دیکھنا ضروری ہے۔ خط فوری طور پر فلیش ہوجائے گا۔ اس سے کوئی فرق نہیں پڑتا ہے کہ آپ کی آنکھیں فلیش کے بعد کہاں جاتی ہیں۔ جانچ کا پہلا بلاک مشق کے صرف چند آزمائشوں میں ہے ، اس سے پہلے کہ ہم پوری شدت سے شروعات کریں۔',\r\n    hi: 'यह एक आर है। यह प्रदर्शन स्थिर है, इसलिए आपकी आंखों को पत्र में ले जाना और इसे पहचानना आसान होगा। लेकिन, एक वास्तविक परीक्षण में, पत्र फ्लैश किया जाता है, इसलिए आपकी आँखों को स्थानांतरित करने का समय नहीं है। ट्रायल की शुरुआत करते हुए क्रॉस हेयर को देखना महत्वपूर्ण है। पत्र तुरंत फ्लैश होगा। इससे कोई फर्क नहीं पड़ता कि आपकी आँखें फ्लैश के बाद कहां जाती हैं। परीक्षण का पहला ब्लॉक अभ्यास के कुछ परीक्षण हैं, इससे पहले कि हम बयाना में शुरू करें।',\r\n    ta: 'இது ஒரு ஆர். இந்த காட்சி நிலையானது, எனவே உங்கள் கண்களை கடிதத்திற்கு நகர்த்தி அதை அடையாளம் காண்பது எளிது. ஆனால், ஒரு உண்மையான சோதனையில், கடிதம் ஒளிரும், எனவே உங்கள் கண்களை நகர்த்த நேரமில்லை. நீங்கள் சோதனையைத் தொடங்கும்போது குறுக்கு முடிகளைப் பார்ப்பது முக்கியம். கடிதம் உடனடியாக ஒளிரும். ஃபிளாஷ் பின் உங்கள் கண்கள் எங்கு செல்கின்றன என்பது முக்கியமல்ல. சோதனையின் முதல் தொகுதி, நாங்கள் ஆர்வத்துடன் தொடங்குவதற்கு முன்பு, நடைமுறையின் சில சோதனைகள் மட்டுமே.',\r\n    ml: 'ഇത് ഒരു r. ഈ ഡിസ്പ്ലേ സ്റ്റാറ്റിക് ആണ്, അതിനാൽ നിങ്ങളുടെ കണ്ണുകൾ കത്തിച്ച് തിരിച്ചറിയുകയും അത് തിരിച്ചറിയുകയും ചെയ്യും. പക്ഷേ, ഒരു യഥാർത്ഥ ട്രയലിൽ, കത്ത് മിന്നുന്നു, അതിനാൽ നിങ്ങളുടെ കണ്ണുകൾ ചലിപ്പിക്കാൻ സമയമില്ല. നിങ്ങൾ ട്രയൽ ആരംഭിക്കുമ്പോൾ ക്രോസ് രോമങ്ങൾ നോക്കേണ്ടത് പ്രധാനമാണ്. കത്ത് ഉടനടി ഫ്ലാഷ് ചെയ്യും. നിങ്ങളുടെ കണ്ണുകൾ ഫ്ലാഷിനുശേഷം പോകുന്നത് പ്രശ്നമല്ല. പരിശോധനയുടെ ആദ്യ ബ്ലോക്ക് പരിശീലനത്തിന്റെ ഏതാനും പരീക്ഷണങ്ങൾ മാത്രമാണ്, ഞങ്ങൾ ആത്മാർത്ഥതയോടെ ആരംഭിക്കുന്നതിന് മുമ്പ്.',\r\n    te: 'ఇది R. ఈ ప్రదర్శన స్థిరంగా ఉంది, కాబట్టి మీ కళ్ళను లేఖకు తరలించి గుర్తించడం సులభం. కానీ, నిజమైన విచారణలో, లేఖ వెలిగింది, కాబట్టి మీ కళ్ళను కదిలించడానికి సమయం లేదు. మీరు ట్రయల్ ప్రారంభించినప్పుడు క్రాస్ హెయిర్స్ చూడటం చాలా ముఖ్యం. లేఖ వెంటనే ఫ్లాష్ అవుతుంది. ఫ్లాష్ తర్వాత మీ కళ్ళు ఎక్కడికి వెళ్తాడనేది పట్టింపు లేదు. పరీక్ష యొక్క మొదటి బ్లాక్ మేము ఆసక్తిగా ప్రారంభించడానికి ముందు, కొన్ని ప్రయత్నాలు సాధన.',\r\n    kn: 'ಇದು ಆರ್. ಈ ಪ್ರದರ್ಶನವು ಸ್ಥಿರವಾಗಿದೆ, ಆದ್ದರಿಂದ ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಪತ್ರಕ್ಕೆ ಸರಿಸಿ ಅದನ್ನು ಗುರುತಿಸುವುದು ಸುಲಭ. ಆದರೆ, ನಿಜವಾದ ಪ್ರಯೋಗದಲ್ಲಿ, ಪತ್ರವು ಹರಿಯುತ್ತದೆ, ಆದ್ದರಿಂದ ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಸರಿಸಲು ಸಮಯವಿಲ್ಲ. ನೀವು ಪ್ರಯೋಗವನ್ನು ಪ್ರಾರಂಭಿಸುವಾಗ ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವುದು ಮುಖ್ಯ. ಪತ್ರವು ತಕ್ಷಣವೇ ಮಿಂಚಾಗುತ್ತದೆ. ನಿಮ್ಮ ಕಣ್ಣುಗಳು ಫ್ಲ್ಯಾಷ್ ನಂತರ ಎಲ್ಲಿಗೆ ಹೋಗುತ್ತವೆ ಎಂಬುದು ಮುಖ್ಯವಲ್ಲ. ನಾವು ಶ್ರದ್ಧೆಯಿಂದ ಪ್ರಾರಂಭಿಸುವ ಮೊದಲು ಪರೀಕ್ಷೆಯ ಮೊದಲ ಬ್ಲಾಕ್ ಅಭ್ಯಾಸದ ಕೆಲವು ಪ್ರಯೋಗಗಳು.',\r\n    bn: 'এটি একটি আর। এই প্রদর্শনটি স্থির, সুতরাং আপনার চোখটি চিঠির দিকে নিয়ে যাওয়া এবং এটি সনাক্ত করা সহজ হবে। তবে, একটি বাস্তব পরীক্ষায়, চিঠিটি জ্বলজ্বল করা হয়েছে, তাই আপনার চোখ সরানোর কোনও সময় নেই। আপনি যখন ট্রায়ালটি শুরু করেন তখন ক্রস কেশগুলি দেখার বিষয়টি গুরুত্বপূর্ণ। চিঠিটি তাত্ক্ষণিকভাবে ফ্ল্যাশ হবে। আপনার চোখ ফ্ল্যাশের পরে কোথায় যায় তা বিবেচ্য নয়। পরীক্ষার প্রথম ব্লকটি আমরা আন্তরিকভাবে শুরু করার আগে অনুশীলনের কয়েকটি পরীক্ষা।',\r\n    id: 'Ini adalah R. Tampilan ini statis, jadi akan mudah untuk memindahkan mata Anda ke surat dan mengidentifikasinya. Tapi, dalam persidangan nyata, surat itu terlintas, jadi tidak ada waktu untuk menggerakkan mata Anda. Penting untuk melihat rambut silang saat Anda memulai persidangan. Surat itu akan segera muncul. Tidak masalah ke mana mata Anda mengejar kilat. Blok pengujian pertama hanyalah beberapa percobaan latihan, sebelum kita mulai dengan sungguh -sungguh.',\r\n    'zh-CN':\r\n      '这是一个R。这个显示器是静态的，因此将您的眼睛移到字母上并识别它很容易。但是，在一个真正的审判中，这封信闪烁了，所以没有时间动眼睛。当您启动试验时，看一下十字头发很重要。这封信将立即闪烁。在闪光之后，您的眼睛走到哪里都没关系。在认真开始之前，第一个测试只是进行几次实践试验。',\r\n    'zh-HK':\r\n      '這是一個R。這個顯示器是靜態的，因此將您的眼睛移到字母上並識別它很容易。但是，在一個真正的審判中，這封信閃爍了，所以沒有時間動眼睛。當您啟動試驗時，看一下十字頭髮很重要。這封信將立即閃爍。在閃光之後，您的眼睛走到哪裡都沒關係。在認真開始之前，第一個測試只是進行幾次實踐試驗。',\r\n    ja: 'RはRです。このディスプレイは静的なので、目を文字に移動して識別するのは簡単です。しかし、実際の裁判では、手紙が点滅するので、目を動かす時間はありません。試練を開始するときに、十字毛を見ることが重要です。手紙はすぐに点滅します。フラッシュの後に目がどこに行くかは関係ありません。テストの最初のブロックは、本格的に始める前のほんの数回の実践試験です。',\r\n    ko: '이 디스플레이는 정적이므로 눈을 편지로 이동하여 식별하기가 쉽습니다. 그러나 실제 시험에서는 편지가 번쩍이므로 눈을 움직일 시간이 없습니다. 시험을 시작할 때 십자 머리카락을 보는 것이 중요합니다. 편지는 즉시 플래시됩니다. 플래시 후 눈이 어디로 가는지는 중요하지 않습니다. 테스트의 첫 번째 블록은 우리가 본격적으로 시작하기 전에 몇 가지 실무 시험입니다.',\r\n  },\r\n  T_letterDemo: {\r\n    'en-US':\r\n      'On each trial, a random letter will FLASH in the corner of your eye. Just a flash. To learn the task, let’s try it first with a STATIC display. While looking at the cross hairs, below, without moving your eyes, try to identify the letter. ',\r\n    de: 'Bei jedem Versuch blinkt ein zufälliger Brief in den Augenwinkel. Nur ein Blitz. Um die Aufgabe zu lernen, versuchen wir es zuerst mit einer statischen Anzeige. Versuchen Sie beim Betrachten der Kreuzhaare unten, ohne Ihre Augen zu bewegen, den Brief zu identifizieren.',\r\n    fr: \"À chaque essai, une lettre aléatoire clignote dans le coin de votre œil. Juste un flash. Pour apprendre la tâche, essayons d'abord avec un écran statique. Tout en regardant les poils, ci-dessous, sans bouger les yeux, essayez d'identifier la lettre.\",\r\n    es: 'En cada prueba, una letra aleatoria parpadeará en la esquina de su ojo. Solo un destello. Para aprender la tarea, intentémosla primero con una pantalla estática. Mientras mira los pelos de la cruz, a continuación, sin mover los ojos, intente identificar la letra.',\r\n    pt: 'Em cada teste, uma carta aleatória piscará no canto do olho. Apenas um instante. Para aprender a tarefa, vamos tentar primeiro com uma tela estática. Enquanto olha para os cabelos cruzados, abaixo, sem mover os olhos, tente identificar a letra.',\r\n    it: \"Ad ogni prova, una lettera casuale lampeggerà nell'angolo dell'occhio. Solo un lampo. Per imparare l'attività, proviamo prima con un display statico. Mentre guardi i peli incrociati, sotto, senza muovere gli occhi, prova a identificare la lettera.\",\r\n    ro: 'La fiecare proces, o scrisoare aleatorie se va clipi în colțul ochiului. Doar un bliț. Pentru a învăța sarcina, să o încercăm mai întâi cu un afișaj static. În timp ce privești părul încrucișat, mai jos, fără a -ți mișca ochii, încearcă să identifici scrisoarea.',\r\n    pl: 'Podczas każdej próby losowa litera błyszczy w rogu oka. Tylko błysk. Aby nauczyć się tego zadania, spróbujmy najpierw z wyświetlaczem statycznym. Patrząc na krzyżowe włosy poniżej, bez poruszania oczu, spróbuj zidentyfikować list.',\r\n    ru: 'На каждом испытании случайная буква будет мигать в углу вашего глаза. Просто вспышка. Чтобы узнать задачу, давайте сначала попробуем ее со статическим дисплеем. Глядя на кросс -волосы, ниже, не двигая глазами, попробуйте определить букву.',\r\n    hy: 'Յուրաքանչյուր փորձության վրա պատահական նամակ կփչանա ձեր աչքի անկյունում: Պարզապես ֆլեշ: Առաջադրանքը սովորելու համար, եկեք նախ փորձենք ստատիկ էկրանով: Նայելով խաչի մազերը, ներքեւում, առանց ձեր աչքերը տեղափոխելու, փորձեք նույնականացնել նամակը:',\r\n    fi: 'Jokaisessa kokeessa satunnainen kirje vilkkuu silmän nurkassa. Vain salama. Kokeilemme sitä ensin staattisella näytöllä. Kun tarkastellaan ristikarvoja, yritä tunnistaa kirje.',\r\n    ka: 'თითოეულ საცდელზე, შემთხვევითი წერილი თვალის კუთხეში გაისვრის. უბრალოდ ფლეშ. დავალების შესასწავლად, პირველ რიგში, ვცადოთ სტატიკური ჩვენებით. ჯვრის თმას გადახედვისას, ქვემოთ, თვალების გადაადგილების გარეშე, შეეცადეთ დაადგინოთ წერილი.',\r\n    he: 'בכל ניסיון, מכתב אקראי יבהב בפינת העין שלך. רק פלאש. כדי ללמוד את המשימה, בואו ננסה אותה תחילה עם תצוגה סטטית. תוך כדי התבוננות בשערות הצלב, למטה, מבלי להזיז את העיניים, נסה לזהות את המכתב.',\r\n    ar: 'في كل تجربة ، سوف تومض رسالة عشوائية في زاوية عينيك. مجرد ومضة. لمعرفة المهمة ، دعنا نجربها أولاً بعرض ثابت. أثناء النظر إلى الشعر المتقاطع ، أدناه ، دون تحريك عينيك ، حاول تحديد الحرف.',\r\n    ur: 'ہر آزمائش پر ، ایک بے ترتیب خط آپ کی آنکھ کے کونے میں چمکتا ہے۔ صرف ایک فلیش۔ کام کو سیکھنے کے ل let ، آئیے پہلے جامد ڈسپلے کے ساتھ اسے آزمائیں۔ کراس بالوں کو دیکھتے ہوئے ، نیچے ، آنکھیں منتقل کیے بغیر ، خط کی شناخت کرنے کی کوشش کریں۔',\r\n    hi: 'प्रत्येक परीक्षण पर, एक यादृच्छिक पत्र आपकी आंख के कोने में चमक जाएगा। बस एक झलक। कार्य को जानने के लिए, इसे पहले एक स्थिर प्रदर्शन के साथ आज़माएं। अपनी आँखों को स्थानांतरित किए बिना, नीचे, नीचे के बालों को देखते हुए, पत्र को पहचानने का प्रयास करें।',\r\n    ta: 'ஒவ்வொரு சோதனையிலும், ஒரு சீரற்ற கடிதம் உங்கள் கண்ணின் மூலையில் ஒளிரும். ஒரு ஃபிளாஷ். பணியைக் கற்றுக்கொள்ள, நிலையான காட்சியுடன் முதலில் முயற்சிப்போம். குறுக்கு முடிகளைப் பார்க்கும்போது, ​​கீழே, கண்களை நகர்த்தாமல், கடிதத்தை அடையாளம் காண முயற்சிக்கவும்.',\r\n    ml: 'ഓരോ വിചാരണയിലും, ക്രമരഹിതമായ ഒരു കത്ത് നിങ്ങളുടെ കണ്ണിന്റെ മൂലയിൽ ഫ്ലാഷ് ചെയ്യും. ഒരു ഫ്ലാഷ് മാത്രം. ടാസ്ക് പഠിക്കാൻ, ഒരു സ്റ്റാറ്റിക് ഡിസ്പ്ലേ ഉപയോഗിച്ച് ആദ്യം ഇത് പരീക്ഷിക്കാം. നിങ്ങളുടെ കണ്ണുകൾ നീക്കാതെ, ചുവടെയുള്ള രോമങ്ങൾ നോക്കുമ്പോൾ കത്ത് തിരിച്ചറിയാൻ ശ്രമിക്കുക.',\r\n    te: 'ప్రతి విచారణలో, యాదృచ్ఛిక అక్షరం మీ కంటి మూలలో మెరుస్తుంది. కేవలం ఒక ఫ్లాష్. పనిని తెలుసుకోవడానికి, మొదట స్టాటిక్ డిస్ప్లేతో దీన్ని ప్రయత్నిద్దాం. కళ్ళు కదిలించకుండా, క్రింద, క్రింద ఉన్న క్రాస్ హెయిర్స్ వైపు చూస్తున్నప్పుడు, లేఖను గుర్తించడానికి ప్రయత్నించండి.',\r\n    kn: 'ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ, ನಿಮ್ಮ ಕಣ್ಣಿನ ಮೂಲೆಯಲ್ಲಿ ಯಾದೃಚ್ leter ವಾದ ಅಕ್ಷರವು ಮಿನುಗುತ್ತದೆ. ಕೇವಲ ಒಂದು ಫ್ಲ್ಯಾಷ್. ಕಾರ್ಯವನ್ನು ಕಲಿಯಲು, ಸ್ಥಿರ ಪ್ರದರ್ಶನದೊಂದಿಗೆ ಮೊದಲು ಇದನ್ನು ಪ್ರಯತ್ನಿಸೋಣ. ಅಡ್ಡ ಕೂದಲನ್ನು ನೋಡುವಾಗ, ಕೆಳಗೆ, ನಿಮ್ಮ ಕಣ್ಣುಗಳನ್ನು ಚಲಿಸದೆ, ಪತ್ರವನ್ನು ಗುರುತಿಸಲು ಪ್ರಯತ್ನಿಸಿ.',\r\n    bn: 'প্রতিটি পরীক্ষায়, একটি এলোমেলো চিঠি আপনার চোখের কোণে ফ্ল্যাশ হবে। শুধু একটা ঝলকানি. টাস্কটি শিখতে, আসুন প্রথমে এটি একটি স্থির প্রদর্শন দিয়ে চেষ্টা করি। আপনার চোখ না সরিয়ে নীচে ক্রস চুলের দিকে তাকানোর সময় চিঠিটি সনাক্ত করার চেষ্টা করুন।',\r\n    id: 'Pada setiap percobaan, surat acak akan berkedip di sudut mata Anda. Hanya sekejap. Untuk mempelajari tugas ini, mari kita coba terlebih dahulu dengan tampilan statis. Saat melihat rambut salib, di bawah, tanpa menggerakkan mata Anda, cobalah untuk mengidentifikasi surat itu.',\r\n    'zh-CN':\r\n      '在每个试验中，随机字母将在您的眼角闪烁。只是一个闪光。要学习任务，让我们先尝试使用静态显示器。在看下面的十字头发时，没有动眼睛，请尝试识别这封信。',\r\n    'zh-HK':\r\n      '在每個試驗中，隨機字母將在您的眼角閃爍。只是一個閃光。要學習任務，讓我們先嘗試使用靜態顯示器。在看下面的十字頭髮時，沒有動眼睛，請嘗試識別這封信。',\r\n    ja: '各トライアルでは、ランダムな文字が目の隅に点滅します。ちょっとしたフラッシュ。タスクを学ぶには、静的ディスプレイで最初に試してみましょう。下の毛を見ながら、目を動かすことなく、手紙を特定してみてください。',\r\n    ko: '각 시험에서, 임의의 편지는 당신의 눈의 모퉁이에서 번쩍입니다. 단지 플래시. 작업을 배우려면 먼저 정적 디스플레이를 사용하여 시도해 봅시다. 눈을 움직이지 않고 아래의 십자 머리카락을 보면서 편지를 식별하십시오.',\r\n  },\r\n  T_ok: {\r\n    'en-US': 'OK',\r\n    de: 'OK',\r\n    fr: 'OK',\r\n    es: 'DE ACUERDO',\r\n    pt: 'DE ACORDO',\r\n    it: 'OK',\r\n    ro: 'Bine',\r\n    pl: 'Ok',\r\n    ru: 'ХОРОШО',\r\n    hy: 'Տուգանք',\r\n    fi: 'Hyvä',\r\n    ka: 'კარგი',\r\n    he: 'בסדר',\r\n    ar: 'نعم',\r\n    ur: 'ٹھیک ہے',\r\n    hi: 'ठीक है',\r\n    ta: 'சரி',\r\n    ml: 'ശരി',\r\n    te: 'అలాగే',\r\n    kn: 'ಸರಿ',\r\n    bn: 'ঠিক আছে',\r\n    id: 'OKE',\r\n    'zh-CN': '确认',\r\n    'zh-HK': '確認',\r\n    ja: '確認',\r\n    ko: '좋아요',\r\n  },\r\n  T_participant: {\r\n    'en-US': 'Participant',\r\n    de: 'Teilnehmer',\r\n    fr: 'Participant',\r\n    es: 'Partícipante',\r\n    pt: 'Concorrente',\r\n    it: 'Partecipante',\r\n    ro: 'Concurent',\r\n    pl: 'Uczestnik',\r\n    ru: 'Участник',\r\n    hy: 'Մասնակից',\r\n    fi: 'Osallistuja',\r\n    ka: 'Მონაწილე',\r\n    he: 'מִשׁתַתֵף',\r\n    ar: 'مشارك',\r\n    ur: 'شریک',\r\n    hi: 'प्रतिभागी',\r\n    ta: 'பங்கேற்பாளராக',\r\n    ml: 'പങ്കാളി',\r\n    te: 'పాల్గొనేవారు',\r\n    kn: 'ಭಾಗವಹಿಸುವವನು',\r\n    bn: 'অংশগ্রহণকারী',\r\n    id: 'Peserta',\r\n    'zh-CN': '被试',\r\n    'zh-HK': '被試',\r\n    ja: '参加者',\r\n    ko: '참가자',\r\n  },\r\n  T_pressingKey: {\r\n    'en-US': 'by pressing it in the keyboard.',\r\n    de: 'indem Sie es in der Tastatur drücken.',\r\n    fr: 'Appuyez sur celui-ci sur le clavier.',\r\n    es: 'presionándola en el teclado.',\r\n    pt: 'pressionando -o no teclado.',\r\n    it: 'premendolo nella tastiera.',\r\n    ro: 'apăsând -o pe tastatură.',\r\n    pl: 'naciskając literę na klawiaturze. ',\r\n    ru: 'нажав его на клавиатуре.',\r\n    hy: 'Սեղմելով այն ստեղնաշարի վրա:',\r\n    fi: 'painamalla sitä näppäimistöön.',\r\n    ka: 'კლავიატურაზე დაჭერით.',\r\n    he: 'על ידי לחיצה עליו במקלדת.',\r\n    ar: 'بالضغط عليه في لوحة المفاتيح.',\r\n    ur: 'کی بورڈ پر دبانے سے۔',\r\n    hi: 'इसे कीबोर्ड पर दबाकर।',\r\n    ta: 'விசைப்பலகையில் அதை அழுத்துவதன் மூலம்.',\r\n    ml: 'കീബോർഡിൽ അമർത്തിക്കൊണ്ട്.',\r\n    te: 'కీబోర్డ్‌లో నొక్కడం ద్వారా.',\r\n    kn: 'ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ.',\r\n    bn: 'এটি কীবোর্ডে টিপে।',\r\n    id: 'dengan menekannya di keyboard.',\r\n    'zh-CN': '通过按下键盘上的对应按键',\r\n    'zh-HK': '通過按下鍵盤上的對應按鍵',\r\n    ja: 'キーボードで対応するキーを押すことで',\r\n    ko: '키보드에 눌러.',\r\n  },\r\n  T_pressingKeyOrClickingLetter: {\r\n    'en-US': 'by clicking it in the displayed list of letters or pressing it in the keyboard.',\r\n    de: 'indem Sie es in der Tastatur drücken oder in der angezeigten Buchstabenliste anklicken.',\r\n    fr: 'Appuyez sur celui-ci sur le clavier ou en cliquant sur la liste des lettres affichées.',\r\n    es: 'presionándola en el teclado o haciendo clic en ella en la lista de letras que se muestra.',\r\n    pt: 'pressionando -o no teclado ou clicando na lista de letras mostradas.',\r\n    it: \"premendolo sulla tastiera o facendo clic su di esse nell'elenco di lettere visualizzate.\",\r\n    ro: 'apăsând -o pe tastatură sau făcând clic pe lista de litere afișate.',\r\n    pl: 'Naciśnij na klawiaturze lub kliknij na liście liter. ',\r\n    ru: 'нажав его на клавиатуре или щелкнув в отображаемом списке букв.',\r\n    hy: 'Սեղմելով այն ստեղնաշարի վրա կամ կտտացնելով տառերի ցուցադրված ցուցակում:',\r\n    fi: 'Napsauttamalla sitä näytetyssä kirjainluettelossa tai painamalla sitä näppäimistössä.',\r\n    ka: 'დააჭირეთ მას ასოების ნაჩვენები სიაში ან კლავიატურაზე დაჭერით.',\r\n    he: 'על ידי לחיצה עליו במקלדת או לחיצה עליו ברשימת האותיות המוצגת.',\r\n    ar: 'بالضغط عليه في لوحة المفاتيح أو الضغط عليه في قائمة الأحرف المعروضة على الشاشة.',\r\n    ur: 'اسے کی بورڈ پر دبانے یا خطوط کی ڈسپلے لسٹ پر کلک کرکے۔',\r\n    hi: 'इसे कीबोर्ड पर दबाकर या अक्षरों की प्रदर्शित सूची पर इसे क्लिक करके।',\r\n    ta: 'காட்டப்படும் எழுத்துக்களின் பட்டியலில் அதைக் கிளிக் செய்வதன் மூலம் அல்லது விசைப்பலகையில் அழுத்துவதன் மூலம்.',\r\n    ml: 'പ്രദർശിപ്പിച്ച അക്ഷരങ്ങളുടെ പട്ടികയിൽ ക്ലിക്കുചെയ്യുന്നതിലൂടെ അല്ലെങ്കിൽ കീബോർഡിൽ അമർത്തുക.',\r\n    te: 'ప్రదర్శించిన అక్షరాల జాబితాలో క్లిక్ చేయడం ద్వారా లేదా కీబోర్డ్‌లో నొక్కడం ద్వారా.',\r\n    kn: 'ಅದನ್ನು ಪ್ರದರ್ಶಿಸಿದ ಅಕ್ಷರಗಳ ಪಟ್ಟಿಯಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ಅಥವಾ ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ.',\r\n    bn: 'অক্ষরগুলির প্রদর্শিত তালিকায় এটি ক্লিক করে বা কীবোর্ডে টিপুন।',\r\n    id: 'Dengan mengkliknya dalam daftar huruf yang ditampilkan atau menekannya di keyboard.',\r\n    'zh-CN': '通过按下键盘上的对应按键或者点击给出文字中的相应字母。',\r\n    'zh-HK': '通過按下鍵盤上的對應按鍵或者點擊給出文字中的相應字母。',\r\n    ja: 'キーボードで対応するキーを押すか、表示されている文字のリストをクリックすることで',\r\n    ko: '표시된 문자 목록에서 클릭하거나 키보드에 누르면됩니다.',\r\n  },\r\n  T_pressingKeyOrClickingLetterRepeatedLetters: {\r\n    'en-US': 'by clicking them on the displayed list of letters, or pressing them on the keyboard.',\r\n    de: 'Durch Klicken auf die angezeigte Liste der Buchstaben oder das Drücken auf der Tastatur.',\r\n    fr: 'En les cliquant sur la liste affichée des lettres ou en les appuyant sur le clavier.',\r\n    es: 'Al hacer clic en la lista mostrada de letras, o presionándolas en el teclado.',\r\n    pt: 'Ao clicar neles na lista exibida de letras ou pressioná -las no teclado.',\r\n    it: \"Facendo clic su di loro nell'elenco visualizzato delle lettere o premendole sulla tastiera.\",\r\n    ro: 'Făcând clic pe ele pe lista afișată de litere sau apăsându -le pe tastatură.',\r\n    pl: 'Klikając je na wyświetlonej listy liter lub naciskając je na klawiaturze.',\r\n    ru: 'Нажав их в отображаемом списке букв или нажав их на клавиатуре.',\r\n    hy: 'Կտտացնելով դրանք տառերի ցուցադրված ցուցակում կամ սեղմելով դրանք ստեղնաշարի վրա:',\r\n    fi: 'Napsauttamalla niitä näytetyssä kirjainluettelossa tai painamalla niitä näppäimistöllä.',\r\n    ka: 'დაჭერით მათ ასოების ნაჩვენები სიაში, ან კლავიატურაზე დაჭერით.',\r\n    he: 'על ידי לחיצה עליהם ברשימת האותיות המוצגת, או לחיצה על המקלדת.',\r\n    ar: 'بالنقر فوقها على قائمة الرسائل المعروضة ، أو الضغط عليها على لوحة المفاتيح.',\r\n    ur: 'خطوط کی ظاہر کردہ فہرست پر ان پر کلک کرکے ، یا کی بورڈ پر دبانے سے۔',\r\n    hi: 'उन्हें पत्रों की प्रदर्शित सूची में क्लिक करके, या उन्हें कीबोर्ड पर दबाकर।',\r\n    ta: 'காண்பிக்கப்படும் எழுத்துக்களின் பட்டியலில் அவற்றைக் கிளிக் செய்வதன் மூலம் அல்லது விசைப்பலகையில் அழுத்துவதன் மூலம்.',\r\n    ml: 'പ്രദർശിപ്പിച്ച അക്ഷരങ്ങളുടെ പട്ടികയിൽ അവ ക്ലിക്കുചെയ്യുന്നതിലൂടെ, അല്ലെങ്കിൽ കീബോർഡിൽ അമർത്തുക.',\r\n    te: 'ప్రదర్శించిన అక్షరాల జాబితాలో వాటిని క్లిక్ చేయడం ద్వారా లేదా వాటిని కీబోర్డ్‌లో నొక్కడం ద్వారా.',\r\n    kn: 'ಅವುಗಳನ್ನು ಪ್ರದರ್ಶಿಸಿದ ಅಕ್ಷರಗಳ ಪಟ್ಟಿಯಲ್ಲಿ ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ಅಥವಾ ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಒತ್ತುವ ಮೂಲಕ.',\r\n    bn: 'চিঠির প্রদর্শিত তালিকায় এগুলি ক্লিক করে বা কীবোর্ডে টিপুন।',\r\n    id: 'Dengan mengkliknya pada daftar huruf yang ditampilkan, atau menekannya pada keyboard.',\r\n    'zh-CN': '通过在显示的字母列表中单击它们，或在键盘上按下它们。',\r\n    'zh-HK': '通過在顯示的字母列表中單擊它們，或在鍵盤上按下它們。',\r\n    ja: '表示された文字のリストでそれらをクリックするか、キーボードで押します。',\r\n    ko: '표시된 문자 목록에서 클릭하거나 키보드에 누르면됩니다.',\r\n  },\r\n  T_pressingKeyRepeatedLetters: {\r\n    'en-US': 'by pressing them on the keyboard.',\r\n    de: 'durch Drücken Sie sie auf die Tastatur.',\r\n    fr: 'en les appuyant sur le clavier.',\r\n    es: 'presionándolos en el teclado.',\r\n    pt: 'pressionando -os no teclado.',\r\n    it: 'premendoli sulla tastiera.',\r\n    ro: 'apăsându -le pe tastatură.',\r\n    pl: 'naciskając je na klawiaturze.',\r\n    ru: 'Нажав их на клавиатуре.',\r\n    hy: 'սեղմելով դրանք ստեղնաշարի վրա:',\r\n    fi: 'painamalla niitä näppäimistölle.',\r\n    ka: 'კლავიატურაზე დაჭერით.',\r\n    he: 'על ידי לחיצה עליהם על המקלדת.',\r\n    ar: 'عن طريق الضغط عليهم على لوحة المفاتيح.',\r\n    ur: 'کی بورڈ پر دبانے سے۔',\r\n    hi: 'उन्हें कीबोर्ड पर दबाकर।',\r\n    ta: 'விசைப்பலகையில் அவற்றை அழுத்துவதன் மூலம்.',\r\n    ml: 'കീബോർഡിൽ അമർത്തിക്കൊണ്ട്.',\r\n    te: 'కీబోర్డ్‌లో వాటిని నొక్కడం ద్వారా.',\r\n    kn: 'ಕೀಬೋರ್ಡ್‌ನಲ್ಲಿ ಅವುಗಳನ್ನು ಒತ್ತುವ ಮೂಲಕ.',\r\n    bn: 'তাদের কীবোর্ডে টিপে।',\r\n    id: 'Dengan menekannya di keyboard.',\r\n    'zh-CN': '通过在键盘上按下它们。',\r\n    'zh-HK': '通過在鍵盤上按下它們。',\r\n    ja: 'キーボードでそれらを押すことにより。',\r\n    ko: '키보드에 눌러서.',\r\n  },\r\n  T_pressingKeyRsvpReading: {\r\n    'en-US': 'by saying the words aloud.',\r\n    de: 'indem Sie die Worte laut sagen.',\r\n    fr: 'en disant les mots à haute voix.',\r\n    es: 'diciendo las palabras en voz alta.',\r\n    pt: 'dizendo as palavras em voz alta.',\r\n    it: 'dicendo le parole ad alta voce.',\r\n    ro: 'spunând cuvintele cu voce tare.',\r\n    pl: 'Mówiąc na głos.',\r\n    ru: 'Сказав слова вслух.',\r\n    hy: 'Բառերը բարձրաձայն ասելով:',\r\n    fi: 'sanomalla sanat ääneen.',\r\n    ka: 'სიტყვების ხმამაღლა თქმით.',\r\n    he: 'באמירת המילים בקול רם.',\r\n    ar: 'بقول الكلمات بصوت عال.',\r\n    ur: 'الفاظ بلند آواز سے کہہ کر۔',\r\n    hi: 'शब्दों को जोर से कहकर।',\r\n    ta: 'வார்த்தைகளை சத்தமாகச் சொல்வதன் மூலம்.',\r\n    ml: 'വാക്കുകൾ ഉറക്കെ പറഞ്ഞുകൊണ്ട്.',\r\n    te: 'మాటలు బిగ్గరగా చెప్పడం ద్వారా.',\r\n    kn: 'ಪದಗಳನ್ನು ಗಟ್ಟಿಯಾಗಿ ಹೇಳುವ ಮೂಲಕ.',\r\n    bn: 'উচ্চস্বরে কথা বলে।',\r\n    id: 'dengan mengucapkan kata -kata itu dengan keras.',\r\n    'zh-CN': '大声说出这些字。',\r\n    'zh-HK': '大聲說出這些字。',\r\n    ja: '言葉を声に出して言うことによって。',\r\n    ko: '말을 큰 소리로 말함으로써.',\r\n  },\r\n  T_PROCEED: {\r\n    'en-US': 'PROCEED',\r\n    de: 'FORTFAHREN',\r\n    fr: 'PROCÉDER',\r\n    es: 'PROCEDER',\r\n    pt: 'CONTINUAR',\r\n    it: 'PROCEDERE',\r\n    ro: 'CONTINUA',\r\n    pl: 'PRZYSTĘPOWAĆ',\r\n    ru: 'ПРОДОЛЖИТЬ',\r\n    hy: 'ՎԱՐԵԼ',\r\n    fi: 'EDETÄ',\r\n    ka: 'ᲒᲐᲜᲒᲠᲫᲝᲑᲐ',\r\n    he: 'להמשיך',\r\n    ar: 'يتابع',\r\n    ur: 'آگے بڑھو',\r\n    hi: 'आगे बढ़ना',\r\n    ta: 'தொடரவும்',\r\n    ml: 'മുന്നോട്ടുനീങ്ങുക',\r\n    te: 'కొనసాగండి',\r\n    kn: 'ಮುಂದುವರೆಯಲು',\r\n    bn: 'অগ্রসর',\r\n    id: 'MELANJUTKAN',\r\n    'zh-CN': '继续',\r\n    'zh-HK': '繼續',\r\n    ja: '続行',\r\n    ko: '진행하다',\r\n  },\r\n  T_proceed: {\r\n    'en-US': 'Proceed',\r\n    de: 'Fortfahren',\r\n    fr: 'Procéder',\r\n    es: 'Proceder',\r\n    pt: 'Continuar',\r\n    it: 'Procedere',\r\n    ro: 'Continua',\r\n    pl: 'Przystępować',\r\n    ru: 'Продолжить',\r\n    hy: 'Վարել',\r\n    fi: 'Edetä',\r\n    ka: 'განგრძობა',\r\n    he: 'להמשיך',\r\n    ar: 'يتابع',\r\n    ur: 'آگے بڑھو',\r\n    hi: 'आगे बढ़ना',\r\n    ta: 'தொடரவும்',\r\n    ml: 'മുന്നോട്ടുനീങ്ങുക',\r\n    te: 'కొనసాగండి',\r\n    kn: 'ಮುಂದುವರೆಯಲು',\r\n    bn: 'অগ্রসর',\r\n    id: 'Melanjutkan',\r\n    'zh-CN': '继续',\r\n    'zh-HK': '繼續',\r\n    ja: '続行',\r\n    ko: '진행하다',\r\n  },\r\n  T_proportionCorrectPopup: {\r\n    'en-US': 'Nice work! You got xxx% right.',\r\n    de: 'Gute Arbeit! Sie haben xxx% richtig.',\r\n    fr: 'Bon travail! Vous avez bien xxx%.',\r\n    es: '¡Buen trabajo! Tienes xxx% correcto.',\r\n    pt: 'Bom trabalho! Você tem xxx% correto.',\r\n    it: 'Bel lavoro! Hai il xxx% giusto.',\r\n    ro: 'Buna treaba! Ai xxx% corect.',\r\n    pl: 'Dobra robota! Masz xxx% racji.',\r\n    ru: 'Хорошая работа! Вы получили xxx% верно.',\r\n    hy: 'Լավ աշխատանք! Դուք ստացել եք xxx% True:',\r\n    fi: 'Hyvää työtä! Sinulla on xxx% oikeassa.',\r\n    ka: 'Კარგი მუშაობა! თქვენ მიიღეთ xxx% მართალი.',\r\n    he: 'עבודה נחמדה! יש לך xxx% נכון.',\r\n    ar: 'عمل جيد! لقد حصلت على xxx ٪ بشكل صحيح.',\r\n    ur: 'اچھا کام! آپ کو xxx ٪ درست ملا۔',\r\n    hi: 'अच्छा काम! आपको xxx% सही मिला।',\r\n    ta: 'நன்றாக செய்தாய்! உங்களுக்கு xxx% சரியானது.',\r\n    ml: 'നല്ല ജോലി! നിങ്ങൾക്ക് xxx% ശരിയാണ്.',\r\n    te: 'మంచి పని! మీకు xxx% సరైనది.',\r\n    kn: 'ಉತ್ತಮವಾದ ಕೆಲಸ! ನಿಮಗೆ xxx% ಸರಿ ಸಿಕ್ಕಿದೆ.',\r\n    bn: 'চমৎকার কাজ! আপনি xxx% ঠিক পেয়েছেন।',\r\n    id: 'Kerja bagus! Anda mendapat xxx% benar.',\r\n    'zh-CN': '做得好！您的xxx％正确。',\r\n    'zh-HK': '做得好！您的xxx％正確。',\r\n    ja: 'よくやった！ xxx％が正しくなりました。',\r\n    ko: '잘 하셨어요! 당신은 xxx%가 맞습니다.',\r\n  },\r\n  T_readingNextPage: {\r\n    'en-US': 'Press SPACE for next page.',\r\n    de: 'Drücken Sie Platz für die nächste Seite.',\r\n    fr: \"Appuyez sur l'espace pour la page suivante.\",\r\n    es: 'Presione el espacio para la página siguiente.',\r\n    pt: 'Pressione espaço para a próxima página.',\r\n    it: 'Premere Space per la pagina successiva.',\r\n    ro: 'Apăsați spațiul pentru pagina următoare.',\r\n    pl: 'Naciśnij miejsce na następną stronę.',\r\n    ru: 'Нажмите пространство для следующей страницы.',\r\n    hy: 'Մամուլի տարածություն հաջորդ էջի համար:',\r\n    fi: 'Paina seuraavaa sivua.',\r\n    ka: 'დააჭირეთ ადგილს შემდეგი გვერდისთვის.',\r\n    he: 'לחץ על שטח לעמוד הבא.',\r\n    ar: 'اضغط على مساحة للصفحة التالية.',\r\n    ur: 'اگلے صفحے کے لئے جگہ دبائیں۔',\r\n    hi: 'अगले पृष्ठ के लिए स्थान दबाएं।',\r\n    ta: 'அடுத்த பக்கத்திற்கான இடத்தை அழுத்தவும்.',\r\n    ml: 'അടുത്ത പേജിനായി സ്പേസ് അമർത്തുക.',\r\n    te: 'తదుపరి పేజీ కోసం స్థలాన్ని నొక్కండి.',\r\n    kn: 'ಮುಂದಿನ ಪುಟಕ್ಕಾಗಿ ಸ್ಥಳವನ್ನು ಒತ್ತಿರಿ.',\r\n    bn: 'পরবর্তী পৃষ্ঠার জন্য স্পেস টিপুন।',\r\n    id: 'Tekan ruang untuk halaman berikutnya.',\r\n    'zh-CN': '按下下一页的空间。',\r\n    'zh-HK': '按下下一頁的空間。',\r\n    ja: '次のページのスペースを押します。',\r\n    ko: '다음 페이지를 위해 공간을 누릅니다.',\r\n  },\r\n  T_rsvpReadingTaskBrief: {\r\n    'en-US':\r\n      \"Now you'll read 111 words quickly. The words will appear, one after another, in the same spot.\",\r\n    de: 'Jetzt werden Sie schnell 111 Wörter lesen. Die Wörter werden nacheinander an derselben Stelle erscheinen.',\r\n    fr: \"Maintenant, vous lirez 111 mots rapidement. Les mots apparaîtront, l'un après l'autre, au même endroit.\",\r\n    es: 'Ahora leerás 111 palabras rápidamente. Las palabras aparecerán, una tras otra, en el mismo lugar.',\r\n    pt: 'Agora você lerá 111 palavras rapidamente. As palavras aparecerão, uma após a outra, no mesmo local.',\r\n    it: \"Ora leggerai 111 parole rapidamente. Le parole appariranno, una dopo l'altra, nello stesso punto.\",\r\n    ro: 'Acum veți citi rapid 111 cuvinte. Cuvintele vor apărea, unul după altul, în același loc.',\r\n    pl: 'Teraz szybko przeczytasz 111 słów. Słowa pojawią się jeden po drugim, w tym samym miejscu.',\r\n    ru: 'Теперь вы быстро прочитаете 111 слова. Слова появятся, один за другим, в том же месте.',\r\n    hy: 'Այժմ արագ կարդաք 111 բառ: Բառերը կհայտնվեն, մեկը մյուսի հետեւից, նույն տեղում:',\r\n    fi: 'Nyt luet 111 sanaa nopeasti. Sanat ilmestyvät peräkkäin samassa paikassa.',\r\n    ka: 'ახლა სწრაფად წაიკითხავთ 111 სიტყვას. სიტყვები გამოჩნდება, ერთმანეთის მიყოლებით, იმავე ადგილზე.',\r\n    he: 'עכשיו תקראו 111 מילים במהירות. המילים יופיעו בזה אחר זה, באותה נקודה.',\r\n    ar: 'الآن سوف تقرأ 111 كلمة بسرعة. سوف تظهر الكلمات ، واحدة تلو الأخرى ، في نفس المكان.',\r\n    ur: 'اب آپ 111 الفاظ جلدی سے پڑھیں گے۔ ایک ہی جگہ پر ، ایک کے بعد ایک ، الفاظ ظاہر ہوں گے۔',\r\n    hi: 'अब आप जल्दी से 111 शब्द पढ़ेंगे। शब्द दिखाई देंगे, एक के बाद एक, उसी स्थान पर।',\r\n    ta: 'இப்போது நீங்கள் 111 சொற்களை விரைவாகப் படிப்பீர்கள். வார்த்தைகள் ஒரே இடத்தில் ஒன்றன் பின் ஒன்றாக தோன்றும்.',\r\n    ml: 'ഇപ്പോൾ നിങ്ങൾ 111 വാക്കുകൾ വേഗത്തിൽ വായിക്കും. വാക്കുകൾ ഒന്നിനു പുറകെ ഒന്നായി അതേ സ്ഥലത്ത് ദൃശ്യമാകും.',\r\n    te: 'ఇప్పుడు మీరు 111 పదాలను త్వరగా చదువుతారు. పదాలు ఒకదాని తరువాత ఒకటి, అదే ప్రదేశంలో కనిపిస్తాయి.',\r\n    kn: 'ಈಗ ನೀವು 111 ಪದಗಳನ್ನು ತ್ವರಿತವಾಗಿ ಓದುತ್ತೀರಿ. ಪದಗಳು ಒಂದರ ನಂತರ ಒಂದರಂತೆ ಒಂದೇ ಸ್ಥಳದಲ್ಲಿ ಕಾಣಿಸುತ್ತದೆ.',\r\n    bn: 'এখন আপনি 111 শব্দ দ্রুত পড়বেন। শব্দগুলি একই জায়গায় একের পর এক উপস্থিত হবে।',\r\n    id: 'Sekarang Anda akan membaca 111 kata dengan cepat. Kata -kata itu akan muncul, satu demi satu, di tempat yang sama.',\r\n    'zh-CN': '现在，您将迅速阅读111个单词。单词将在同一地点出现。',\r\n    'zh-HK': '現在，您將迅速閱讀111個單詞。單詞將在同一地點出現。',\r\n    ja: 'これで、111語をすばやく読みます。単語は次々と同じ場所に表示されます。',\r\n    ko: '이제 111 단어를 빨리 읽을 수 있습니다. 같은 지점에 단어가 나타납니다.',\r\n  },\r\n  T_rsvpReadingTask: {\r\n    'en-US':\r\n      \"You are about to start a block of xxx trials. You'll be reading a story, a few words at a time. Each trial will quickly show you about a sentence-worth of words, one after the other, and then ask you to remember the words you read.\",\r\n    de: 'Sie sind kurz davor, einen Block von xxx -Versuchen zu starten. Sie werden eine Geschichte lesen, ein paar Worte gleichzeitig. Jeder Versuch zeigt Ihnen schnell über ein Satz von Wörtern nacheinander und bittet Sie dann, sich an die Wörter zu erinnern, die Sie gelesen haben.',\r\n    fr: \"Vous êtes sur le point de démarrer un bloc d'essais xxx. Vous lirez une histoire, quelques mots à la fois. Chaque essai vous montrera rapidement une phrase de mots, l'une après l'autre, puis vous demandera de vous souvenir des mots que vous lisez.\",\r\n    es: 'Estás a punto de comenzar un bloque de pruebas xxx. Estarás leyendo una historia, algunas palabras a la vez. Cada juicio le mostrará rápidamente sobre un valor de las palabras, una tras otra, y luego le pedirá que recuerde las palabras que lee.',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Você estará lendo uma história, algumas palavras de cada vez. Cada teste mostrará rapidamente sobre uma frase de palavras, uma após a outra, e depois pedirá que você se lembre das palavras que lê.',\r\n    it: \"Stai per avviare un blocco di prove xxx. Leggerai una storia, alcune parole alla volta. Ogni prova ti mostrerà rapidamente una pena di parole, una dopo l'altra, e poi ti chiederà di ricordare le parole che leggi.\",\r\n    ro: 'Sunteți pe cale să începeți un bloc de încercări xxx. Vei citi o poveste, câteva cuvinte la un moment dat. Fiecare proces vă va arăta rapid despre o propoziție de cuvinte, una după alta, apoi vă va cere să vă amintiți cuvintele pe care le citiți.',\r\n    pl: 'Zaraz rozpoczniesz blok prób xxx. Będziesz czytać historię, kilka słów na raz. Każda próba szybko pokaże ci o wartości zdania, jeden po drugim, a następnie poprosi o zapamiętanie słów, które przeczytałeś.',\r\n    ru: 'Вы собираетесь начать блок xxx испытаний. Вы будете читать историю, несколько слов за раз. Каждое испытание быстро покажет вам о поставленной предложении слов, один за другим, а затем попросит вас запомнить слова, которые вы читали.',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx փորձարկումների բլոկ: Դուք կստիպեք մի պատմություն, միանգամից մի քանի բառ: Յուրաքանչյուր փորձություն արագորեն ցույց կտա ձեզ մի նախադասության մասին բառերի մասին, մեկը մյուսի հետեւից, եւ հետո խնդրեք հիշել ձեր կարդացած բառերը:',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Luet tarinan, muutaman sanan kerrallaan. Jokainen kokeilu näyttää nopeasti sanan lauseen arvosta peräkkäin ja pyydä sitten muistamaan lukemasi sanat.',\r\n    ka: 'თქვენ აპირებთ xxx კვლევების ბლოკის დაწყებას. თქვენ კითხულობთ მოთხრობას, ერთდროულად რამდენიმე სიტყვას. თითოეული სასამართლო პროცესი სწრაფად გაჩვენებთ სიტყვების წინადადებას, ერთი მეორის მიყოლებით, შემდეგ კი მოგთხოვთ გახსოვდეთ თქვენი წაკითხული სიტყვები.',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויים ב- xxx. אתה תקרא סיפור, כמה מילים בכל פעם. כל משפט יראה לך במהירות על שווי משפט של מילים, בזה אחר זה, ואז יבקש מכם לזכור את המילים שקראתם.',\r\n    ar: 'أنت على وشك بدء كتلة من تجارب xxx. سوف تقرأ قصة ، بضع كلمات في وقت واحد. ستعرضك كل تجربة بسرعة حول قيمة الجملة من الكلمات ، واحدة تلو الأخرى ، ثم تطلب منك أن تتذكر الكلمات التي تقرأها.',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ آپ ایک وقت میں ایک کہانی ، کچھ الفاظ پڑھ رہے ہوں گے۔ ہر مقدمے کی سماعت آپ کو ایک جملے کے قابل الفاظ کے بارے میں جلدی سے دکھائے گی ، ایک کے بعد ایک ، اور پھر آپ سے جو الفاظ پڑھتے ہیں اسے یاد رکھنے کے لئے کہیں گے۔',\r\n    hi: 'आप xxx परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। आप एक समय में एक कहानी, कुछ शब्द पढ़ेंगे। प्रत्येक परीक्षण आपको जल्दी से शब्दों के एक वाक्य-मूल्य के बारे में दिखाएगा, एक के बाद एक, और फिर आपको उन शब्दों को याद करने के लिए कहेगा जो आप पढ़ते हैं।',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். நீங்கள் ஒரு கதையை, ஒரு நேரத்தில் சில சொற்களைப் படிப்பீர்கள். ஒவ்வொரு சோதனையும் ஒரு வாக்கிய மதிப்புள்ள சொற்களைப் பற்றி விரைவாக உங்களுக்குக் காண்பிக்கும், ஒன்றன் பின் ஒன்றாக, பின்னர் நீங்கள் படித்த சொற்களை நினைவில் கொள்ளும்படி கேட்கும்.',\r\n    ml: 'നിങ്ങൾ xxx ട്രയലുകളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. നിങ്ങൾ ഒരു കഥ വായിക്കും, ഒരു സമയം കുറച്ച് വാക്കുകൾ. ഓരോ വിചാരണയും ഒരു വാക്യ വാക്കുകളെക്കുറിച്ച് വേഗത്തിൽ കാണിക്കും, തുടർന്ന് നിങ്ങൾ വായിക്കുന്ന വാക്കുകൾ ഓർമ്മിക്കാൻ നിങ്ങളോട് ആവശ്യപ്പെടും.',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. మీరు ఒక కథను, ఒకేసారి కొన్ని పదాలు చదువుతారు. ప్రతి ట్రయల్ పదాల వాక్య-విలువ గురించి, ఒకదాని తరువాత ఒకటి త్వరగా మీకు చూపుతుంది, ఆపై మీరు చదివిన పదాలను గుర్తుంచుకోమని అడుగుతుంది.',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ನೀವು ಒಂದು ಸಮಯದಲ್ಲಿ ಕೆಲವು ಪದಗಳನ್ನು ಓದುತ್ತೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗವು ಒಂದರ ನಂತರ ಒಂದರಂತೆ ಒಂದು ವಾಕ್ಯ-ಮೌಲ್ಯದ ಪದಗಳ ಬಗ್ಗೆ ತ್ವರಿತವಾಗಿ ನಿಮಗೆ ತೋರಿಸುತ್ತದೆ, ತದನಂತರ ನೀವು ಓದಿದ ಪದಗಳನ್ನು ನೆನಪಿಟ್ಟುಕೊಳ್ಳಲು ಕೇಳುತ್ತದೆ.',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। আপনি একটি গল্প পড়বেন, একবারে কয়েকটি শব্দ। প্রতিটি ট্রায়াল আপনাকে একের পর এক একের পর এক বাক্য-মূল্যবান শব্দ সম্পর্কে দ্রুত প্রদর্শন করবে এবং তারপরে আপনি যে শব্দগুলি পড়েছেন তা মনে রাখতে আপনাকে বলবেন।',\r\n    id: 'Anda akan memulai blok uji coba xxx. Anda akan membaca sebuah cerita, beberapa kata sekaligus. Setiap uji coba akan dengan cepat menunjukkan kepada Anda tentang kata-kata yang sangat berharga, satu demi satu, dan kemudian meminta Anda untuk mengingat kata-kata yang Anda baca.',\r\n    'zh-CN':\r\n      '您即将开始一个xxx试验。您将一次阅读一个故事，一次单词。每个审判都会迅速向您展示一个值得一句话的句子，然后要求您记住您阅读的单词。',\r\n    'zh-HK':\r\n      '您即將開始一個xxx試驗。您將一次閱讀一個故事，一次單詞。每個審判都會迅速向您展示一個值得一句話的句子，然後要求您記住您閱讀的單詞。',\r\n    ja: 'xxxトライアルのブロックを開始しようとしています。あなたは一度にいくつかの言葉を読むでしょう。各トライアルは、次々と文章の文章についてすぐに表示され、読んだ単語を覚えておくように頼みます。',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 한 번에 몇 마디 씩 이야기를 읽을 것입니다. 각 시험은 다른 사람의 문장 가치에 대해 빠르게 보여준 다음 읽은 단어를 기억하도록 요청합니다.',\r\n  },\r\n  T_readingTask: {\r\n    'en-US':\r\n      \"Story time! You'll read 111 pages from a book. Once you start, please silently read all the pages as fast as you can, while maintaining full comprehension, until you reach the end. Then we'll ask you a few questions about the story. On each page, press the SPACE bar for the next page. When you're ready, press SPACE.\",\r\n    de: 'Märchenstunde! Sie werden 111 Seiten aus einem Buch lesen. Sobald Sie angefangen haben, lesen Sie bitte alle Seiten schweigend so schnell wie möglich, während Sie das volle Verständnis beibehalten, bis Sie das Ende erreichen. Dann stellen wir Ihnen ein paar Fragen zur Geschichte. Drücken Sie auf jeder Seite die Space -Leiste für die nächste Seite. Wenn Sie bereit sind, drücken Sie Platz.',\r\n    fr: \"L'heure du conte! Vous lirez 111 pages d'un livre. Onzes vous commencez, veuillez lire silencieusement toutes les pages aussi vite que possible, tout en maintenant la pleine compréhension, jusqu'à ce que vous atteigniez la fin. Nous vous poserons quelques questions sur l'histoire. Sur chaque page, appuyez sur la barre d'espace pour la page suivante. Lorsque vous êtes prêt, appuyez sur l'espace.\",\r\n    es: '¡Tiempo de cuentos! Leerás 111 páginas de un libro. Una vez que comience, lea en silencio todas las páginas lo más rápido que pueda, mientras mantiene la comprensión completa, hasta llegar al final. Luego le haremos algunas preguntas sobre la historia. En cada página, presione la barra espacial para la página siguiente. Cuando esté listo, presione el espacio.',\r\n    pt: 'Hora da história! Você lerá 111 páginas de um livro. Depois de começar, leia silenciosamente todas as páginas o mais rápido possível, mantendo a compreensão total, até chegar ao fim. Em seguida, vamos fazer algumas perguntas sobre a história. Em cada página, pressione a barra de espaço para a próxima página. Quando estiver pronto, pressione o espaço.',\r\n    it: 'Ora della favola! Leggerai 111 pagine da un libro. Una volta iniziato, leggi silenziosamente tutte le pagine il più velocemente possibile, mantenendo la piena comprensione, fino a raggiungere la fine. Quindi ti faremo alcune domande sulla storia. Su ogni pagina, premere la barra dello spazio per la pagina successiva. Quando sei pronto, premere lo spazio.',\r\n    ro: 'Timpul pentru o poveste! Veți citi 111 pagini dintr -o carte. După ce începeți, vă rugăm să citiți în tăcere toate paginile cât de repede puteți, menținând în același timp o înțelegere completă, până când ajungeți la sfârșit. Apoi vă vom pune câteva întrebări despre poveste. Pe fiecare pagină, apăsați bara de spațiu pentru pagina următoare. Când sunteți gata, apăsați spațiu.',\r\n    pl: 'Czas opowieści! Przeczytasz 111 stron z książki. Kiedy zaczniesz, po cichu przeczytaj wszystkie strony tak szybko, jak to możliwe, przy jednoczesnym zachowaniu pełnego zrozumienia, dopóki nie osiągniesz końca. Następnie zadamy kilka pytań na temat historii. Na każdej stronie naciśnij pasek przestrzeni dla następnej strony. Kiedy będziesz gotowy, naciśnij przestrzeń.',\r\n    ru: 'Время историй! Вы прочитаете 111 страницы из книги. После того, как вы начнете, пожалуйста, молча прочитайте все страницы как можно быстрее, сохраняя при этом полное понимание, пока вы не достигнете конца. Тогда мы зададим вам несколько вопросов об истории. На каждой странице нажмите на панель пространства для следующей страницы. Когда вы будете готовы, нажмите пространство.',\r\n    hy: 'Պատմության ժամանակը Դուք կարդում եք 111 էջ գրքից: Սկսելուց հետո լուռ կարդացեք բոլոր էջերը հնարավորինս արագ, միաժամանակ պահպանելով ամբողջական հասկացողություն, մինչեւ հասնեք ավարտին: Այնուհետեւ մենք ձեզ մի քանի հարց կտանք պատմության վերաբերյալ: Յուրաքանչյուր էջում սեղմեք տիեզերական սանդղակը հաջորդ էջի համար: Երբ պատրաստ եք, սեղմեք տարածքը:',\r\n    fi: 'Satuhetki! Luet 111 sivua kirjasta. Kun olet aloittanut, lue kaikki sivut hiljaa niin nopeasti kuin pystyt pitäen samalla ymmärrystä, kunnes saavut loppuun. Sitten kysymme sinulle muutamia kysymyksiä tarinasta. Paina jokaisella sivulla seuraavan sivun välilyöntiä. Kun olet valmis, paina tilaa.',\r\n    ka: 'Მოთხრობის დროა! თქვენ წაიკითხავთ 111 გვერდს წიგნიდან. დაწყებისთანავე, გთხოვთ, ჩუმად წაიკითხოთ ყველა გვერდი რაც შეიძლება სწრაფად, სრულად გააზრების შენარჩუნებისას, სანამ არ მიაღწევთ ბოლომდე. შემდეგ მოგვმართავთ რამდენიმე კითხვას ამბის შესახებ. თითოეულ გვერდზე დააჭირეთ Space Bar– ს შემდეგი გვერდისთვის. როდესაც მზად ხართ, დააჭირეთ ადგილს.',\r\n    he: 'זמן סיפור! תקראו 111 עמודים מתוך ספר. לאחר שתתחיל, אנא קרא בשקט את כל הדפים הכי מהר שאתה יכול, תוך שמירה על הבנה מלאה, עד שתגיע לסוף. ואז נשאל אותך כמה שאלות על הסיפור. בכל עמוד, לחץ על סרגל החלל לדף הבא. כשאתה מוכן, לחץ על שטח.',\r\n    ar: 'وقت القصة! ستقرأ 111 صفحة من كتاب. بمجرد أن تبدأ ، يرجى قراءة جميع الصفحات بصمت بأسرع ما يمكن ، مع الحفاظ على الفهم الكامل ، حتى تصل إلى النهاية. ثم سنطرح عليك بعض الأسئلة حول القصة. في كل صفحة ، اضغط على شريط الفضاء للصفحة التالية. عندما تكون جاهزًا ، اضغط على الفضاء.',\r\n    ur: 'کہانی کا وقت! آپ کسی کتاب سے 111 صفحات پڑھیں گے۔ ایک بار جب آپ شروع کریں تو ، براہ کرم خاموشی سے تمام صفحات کو جتنی جلدی ہو سکے پڑھیں ، جبکہ مکمل فہم کو برقرار رکھتے ہوئے ، جب تک کہ آپ اختتام تک نہ پہنچیں۔ تب ہم آپ سے کہانی کے بارے میں کچھ سوالات پوچھیں گے۔ ہر صفحے پر ، اگلے صفحے کے لئے اسپیس بار دبائیں۔ جب آپ تیار ہوں تو ، جگہ دبائیں۔',\r\n    hi: 'कहानी की समय! आप एक पुस्तक से 111 पृष्ठ पढ़ेंगे। एक बार जब आप शुरू कर देते हैं, तो कृपया चुपचाप सभी पृष्ठों को जितनी तेजी से पढ़ें, पूरी समझ बनाए रखते हुए, जब तक आप अंत तक नहीं पहुंचते। फिर हम आपसे कहानी के बारे में कुछ सवाल पूछेंगे। प्रत्येक पृष्ठ पर, अगले पृष्ठ के लिए स्पेस बार दबाएं। जब आप तैयार हों, तो स्थान दबाएं।',\r\n    ta: 'கதை நேரம்! ஒரு புத்தகத்திலிருந்து 111 பக்கங்களைப் படிப்பீர்கள். நீங்கள் தொடங்கியதும், தயவுசெய்து எல்லா பக்கங்களையும் உங்களால் முடிந்தவரை விரைவாகப் படியுங்கள், முழு புரிதலையும் பராமரிக்கும் போது, ​​நீங்கள் முடிவை அடையும் வரை. கதையைப் பற்றி சில கேள்விகளை நாங்கள் உங்களிடம் கேட்போம். ஒவ்வொரு பக்கத்திலும், அடுத்த பக்கத்திற்கான விண்வெளி பட்டியை அழுத்தவும். நீங்கள் தயாராக இருக்கும்போது, ​​இடத்தை அழுத்தவும்.',\r\n    ml: 'സ്റ്റോറി സമയം! ഒരു പുസ്തകത്തിൽ നിന്ന് നിങ്ങൾ 111 പേജുകൾ വായിക്കും. നിങ്ങൾ ആരംഭിച്ചുകഴിഞ്ഞാൽ, ദയവായി എല്ലാ പേജുകളും നിങ്ങൾക്ക് കഴിയുന്നത്ര വേഗത്തിൽ വായിക്കുക, നിങ്ങൾ അവസാനം എത്തുന്നതുവരെ പൂർണ്ണസംഖ്യ നിലനിർത്തുമ്പോൾ. കഥയെക്കുറിച്ച് ഞങ്ങൾ നിങ്ങളോട് കുറച്ച് ചോദ്യങ്ങൾ ചോദിക്കും. ഓരോ പേജിലും, അടുത്ത പേജിനായി സ്പേസ് ബാർ അമർത്തുക. നിങ്ങൾ തയ്യാറാകുമ്പോൾ, സ്പേസ് അമർത്തുക.',\r\n    te: 'కథ సమయం! మీరు పుస్తకం నుండి 111 పేజీలు చదువుతారు. మీరు ప్రారంభించిన తర్వాత, దయచేసి మీరు చివరికి చేరే వరకు పూర్తి గ్రహణశక్తిని కొనసాగిస్తూ, అన్ని పేజీలను నిశ్శబ్దంగా మీకు వీలైనంత వేగంగా చదవండి. అప్పుడు మేము మీకు కథ గురించి కొన్ని ప్రశ్నలు అడుగుతాము. ప్రతి పేజీలో, తదుపరి పేజీ కోసం స్పేస్ బార్‌ను నొక్కండి. మీరు సిద్ధంగా ఉన్నప్పుడు, స్థలాన్ని నొక్కండి.',\r\n    kn: 'ಕಥೆಯ ಸಮಯ! ನೀವು ಪುಸ್ತಕದಿಂದ 111 ಪುಟಗಳನ್ನು ಓದುತ್ತೀರಿ. ನೀವು ಪ್ರಾರಂಭಿಸಿದ ನಂತರ, ದಯವಿಟ್ಟು ಎಲ್ಲಾ ಪುಟಗಳನ್ನು ನಿಮಗೆ ಸಾಧ್ಯವಾದಷ್ಟು ವೇಗವಾಗಿ ಓದಿ, ಪೂರ್ಣ ಗ್ರಹಿಕೆಯನ್ನು ಕಾಪಾಡಿಕೊಳ್ಳುವಾಗ, ನೀವು ಅಂತ್ಯವನ್ನು ತಲುಪುವವರೆಗೆ. ನಂತರ ನಾವು ಕಥೆಯ ಬಗ್ಗೆ ಕೆಲವು ಪ್ರಶ್ನೆಗಳನ್ನು ಕೇಳುತ್ತೇವೆ. ಪ್ರತಿ ಪುಟದಲ್ಲಿ, ಮುಂದಿನ ಪುಟಕ್ಕಾಗಿ ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ. ನೀವು ಸಿದ್ಧರಾದಾಗ, ಸ್ಥಳವನ್ನು ಒತ್ತಿರಿ.',\r\n    bn: 'গল্পের সময়! আপনি একটি বই থেকে 111 পৃষ্ঠাগুলি পড়বেন। একবার আপনি শুরু করার পরে, আপনি শেষের দিকে না পৌঁছানো পর্যন্ত সম্পূর্ণ বোধগম্যতা বজায় রেখে দয়া করে সমস্ত পৃষ্ঠাগুলি যত দ্রুত সম্ভব তা নিঃশব্দে পড়ুন। তারপরে আমরা আপনাকে গল্পটি সম্পর্কে কয়েকটি প্রশ্ন জিজ্ঞাসা করব। প্রতিটি পৃষ্ঠায়, পরবর্তী পৃষ্ঠার জন্য স্পেস বার টিপুন। আপনি প্রস্তুত থাকলে জায়গা টিপুন।',\r\n    id: 'Waktu cerita! Anda akan membaca 111 halaman dari buku. Setelah Anda mulai, silahkan membaca semua halaman secepat mungkin, sambil mempertahankan pemahaman penuh, sampai Anda mencapai akhir. Kemudian kami akan mengajukan beberapa pertanyaan tentang cerita tersebut. Pada setiap halaman, tekan bilah ruang untuk halaman berikutnya. Saat Anda siap, tekan ruang.',\r\n    'zh-CN':\r\n      '讲故事的时间！您会从一本书中阅读111页。一旦开始，请尽可能快地静静地阅读所有页面，同时保持完全理解，直到到达末尾。然后，我们会问您有关这个故事的几个问题。在每个页面上，按下下一页的空格栏。准备就绪时，请按空格。',\r\n    'zh-HK':\r\n      '講故事的時間！您會從一本書中閱讀111頁。一旦開始，請盡可能快地靜靜地閱讀所有頁面，同時保持完全理解，直到到達末尾。然後，我們會問您有關這個故事的幾個問題。在每個頁面上，按下下一頁的空格欄。準備就緒時，請按空格。',\r\n    ja: 'ストーリータイム！本から111ページを読みます。開始したら、最後に到達するまで、完全な理解を維持しながら、できるだけ早くすべてのページを静かに読んでください。次に、ストーリーについていくつか質問します。各ページで、次のページのスペースバーを押します。準備ができたら、スペースを押します。',\r\n    ko: '이야기 시간! 책에서 111 페이지를 읽을 것입니다. 일단 시작되면 끝까지 도달 할 때까지 모든 이해를 유지하면서 최대한 빨리 모든 페이지를 조용히 읽으십시오. 그런 다음 이야기에 대해 몇 가지 질문을 할 것입니다. 각 페이지에서 다음 페이지의 공간 표시 줄을 누릅니다. 준비가되면 공간을 누릅니다.',\r\n  },\r\n  T_readingTaskQuestionPrompt: {\r\n    'en-US': 'Which of the following words appeared in the passage that you just read?',\r\n    de: 'Welche der folgenden Wörter erschienen in der Passage, die Sie gerade gelesen haben?',\r\n    fr: 'Lequel des mots suivants est apparu dans le passage que vous venez de lire?',\r\n    es: '¿Cuál de las siguientes palabras apareció en el pasaje que acabas de leer?',\r\n    pt: 'Qual das seguintes palavras apareceu na passagem que você acabou de ler?',\r\n    it: 'Quale delle seguenti parole è apparsa nel passaggio che hai appena letto?',\r\n    ro: 'Care dintre următoarele cuvinte au apărut în pasajul pe care tocmai l -ați citit?',\r\n    pl: 'Które z poniższych słów pojawiły się w fragmencie, które właśnie przeczytałeś?',\r\n    ru: 'Какое из следующих слов появилось в отрывке, который вы только что прочитали?',\r\n    hy: 'Հետեւյալ բառերից որ մեկն է հայտնվում այն ​​հատվածում, որը դուք պարզապես կարդացել եք:',\r\n    fi: 'Mikä seuraavista sanoista ilmestyi juuri lukemasi kohtaan?',\r\n    ka: 'ქვემოთ ჩამოთვლილი სიტყვებიდან რომელი გამოჩნდა იმ პასაჟში, რომელიც ახლახან წაიკითხეთ?',\r\n    he: 'אילו מהמילים הבאות הופיעו בקטע שרק קראת?',\r\n    ar: 'أي من الكلمات التالية ظهرت في المقطع الذي قرأته للتو؟',\r\n    ur: 'مندرجہ ذیل میں سے کون سا لفظ جس کے گزرنے میں آپ نے ابھی پڑھا ہے؟',\r\n    hi: 'निम्नलिखित में से कौन सा शब्द उस मार्ग में दिखाई दिया जिसे आप अभी पढ़ते हैं?',\r\n    ta: 'நீங்கள் இப்போது படித்த பத்தியில் பின்வரும் வார்த்தைகளில் எது தோன்றியது?',\r\n    ml: 'നിങ്ങൾ ഇപ്പോൾ വായിച്ച ഭാഗത്തിൽ ഏത് വാക്കുകളിൽ ഏതാണ്?',\r\n    te: 'మీరు ఇప్పుడే చదివిన ప్రకరణంలో ఈ క్రింది పదాలలో ఏది కనిపించింది?',\r\n    kn: 'ನೀವು ಈಗ ಓದಿದ ಅಂಗೀಕಾರದಲ್ಲಿ ಈ ಕೆಳಗಿನ ಯಾವ ಪದಗಳು ಕಾಣಿಸಿಕೊಂಡಿವೆ?',\r\n    bn: 'আপনি সবেমাত্র পড়েছেন এমন প্যাসেজে নিম্নলিখিত শব্দগুলির মধ্যে কোনটি উপস্থিত হয়েছিল?',\r\n    id: 'Manakah dari kata -kata berikut yang muncul di bagian yang baru saja Anda baca?',\r\n    'zh-CN': '您刚刚阅读的段落中出现了以下哪个单词？',\r\n    'zh-HK': '您剛剛閱讀的段落中出現了以下哪個單詞？',\r\n    ja: '次の単語のうち、あなたが読んだばかりのパッセージに登場したのはどれですか？',\r\n    ko: '방금 읽은 구절에 다음 중 어떤 단어가 나타 났습니까?',\r\n  },\r\n  T_readingTheEnd: {\r\n    'en-US': 'THE END',\r\n    de: 'DAS ENDE',\r\n    fr: 'LA FIN',\r\n    es: 'EL FIN',\r\n    pt: 'O FIM',\r\n    it: 'FINE',\r\n    ro: 'SFÂRȘITUL',\r\n    pl: 'KONIEC',\r\n    ru: 'КОНЕЦ',\r\n    hy: 'ՎԵՐՋ',\r\n    fi: 'LOPPU',\r\n    ka: 'ᲓᲐᲡᲐᲡᲠᲣᲚᲘ',\r\n    he: 'הסוף',\r\n    ar: 'النهاية',\r\n    ur: 'ختم شد',\r\n    hi: 'समाप्त',\r\n    ta: 'முற்றும்',\r\n    ml: 'അവസാനം',\r\n    te: 'ముగింపు',\r\n    kn: 'ಅಂತ್ಯ',\r\n    bn: 'শেষ',\r\n    id: 'TAMAT',\r\n    'zh-CN': '结束',\r\n    'zh-HK': '結束',\r\n    ja: '終わり',\r\n    ko: '끝',\r\n  },\r\n  T_readyClickCrosshair: {\r\n    'en-US': 'Ready? Click the center of the cross hairs to make the letter(s) appear.',\r\n    de: 'Bereit? Während Sie direkt auf das Fadenkreuz schauen, klicken Sie bitte auf das Fadenkreuz.',\r\n    fr: 'Prêt? Cliquez sur le centre de la croix.',\r\n    es: '¿Listo? Haz clic en el centro de la cruz.',\r\n    pt: 'Preparar? Clique no centro da cruz.',\r\n    it: 'Pronto? Guardando direttamente il mirino, fare clic sul mirino.',\r\n    ro: 'Gata? Faceți clic pe centrul crucii.',\r\n    pl: 'Gotowy? Patrząc bezpośrednio na krzyżyk, kliknij na krzyżyk. \\n\\n',\r\n    ru: 'Готовый? Глядя прямо на перекрестие, нажмите на него.',\r\n    hy: 'Պատրաստ? Նայելով ճիշտ խաչմերուկին, կտտացրեք այն:',\r\n    fi: 'Valmis? Napsauta ristikarvojen keskustaa saadaksesi kirjaimet näkyviin.',\r\n    ka: 'მზად? დააჭირეთ ჯვრის თმას ცენტრს, რომ ასო (ებ) ი გამოჩნდეს.',\r\n    he: 'מוּכָן? תוך התבוננות ישירה על השיער, אנא לחץ על הכוונת.',\r\n    ar: 'مستعد؟ أثناء النظر مباشرةً إلى علامة التقاطع ، يرجى الضغط على علامة التقاطع.',\r\n    ur: 'تیار؟ براہ راست کراس ہیر کو دیکھ کر ، براہ کرم کراس ہیر پر کلک کریں۔',\r\n    hi: 'तैयार? सीधे क्रॉसहेयर को देखते हुए, कृपया क्रॉसहेयर पर क्लिक करें।',\r\n    ta: 'தயாரா? கடிதம் (கள்) தோன்றும் வகையில் குறுக்கு முடிகளின் மையத்தைக் கிளிக் செய்க.',\r\n    ml: 'തയ്യാറാണ്? കത്ത് (കൾ) ദൃശ്യമാക്കുന്നതിന് ക്രോസ് ഹെർക്കുകളുടെ മധ്യഭാഗത്ത് ക്ലിക്കുചെയ്യുക.',\r\n    te: 'సిద్ధంగా ఉన్నారా? అక్షరం (లు) కనిపించేలా క్రాస్ హెయిర్స్ మధ్యలో క్లిక్ చేయండి.',\r\n    kn: 'ಸಿದ್ಧ? ಅಕ್ಷರ (ಗಳು) ಕಾಣಿಸಿಕೊಳ್ಳಲು ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'প্রস্তুত? চিঠিটি (গুলি) প্রদর্শিত করতে ক্রস হেয়ারগুলির কেন্দ্রে ক্লিক করুন।',\r\n    id: 'Siap? Klik tengah rambut silang untuk membuat huruf muncul.',\r\n    'zh-CN': '准备好了吗？保持注视十字准线，并点击十字准线。',\r\n    'zh-HK': '準備好了嗎？保持注視十字準線，並點擊十字準線。',\r\n    ja: '準備はできましたか？十字線を直視しながら、十字線をクリックしてください。',\r\n    ko: '준비가 된? 크로스 털의 중앙을 클릭하여 문자를 나타냅니다.',\r\n  },\r\n  T_readyTrackCrosshair: {\r\n    'en-US':\r\n      'Ready? Use the cursor to track the center of the cross hair until the letter(s) appear.',\r\n    de: 'Bereit? Verwenden Sie den Cursor, um die Mitte des Kreuzhaars zu verfolgen, bis der Buchstaben (en) angezeigt wird.',\r\n    fr: \"Prêt? Utilisez le curseur pour suivre le centre des cheveux de la transmission jusqu'à ce que la ou les lettres apparaissent.\",\r\n    es: '¿Listo? Use el cursor para rastrear el centro de la cruz hasta que aparezcan las letras.',\r\n    pt: 'Preparar? Use o cursor para rastrear o centro do cabelo cruzado até que as cartas apareçam.',\r\n    it: 'Pronto? Usa il cursore per tenere traccia del centro dei capelli incrociati fino a quando non compaiono le lettere.',\r\n    ro: 'Gata? Folosiți cursorul pentru a urmări centrul părului încrucișat până la apariția literelor (literele).',\r\n    pl: 'Gotowy? Użyj kursora, aby śledzić środek włosów krzyżowych, aż pojawią się litera.',\r\n    ru: 'Готовый? Используйте курсор, чтобы отслеживать центр кросс -волос, пока не появятся буквы.',\r\n    hy: 'Պատրաստ? Օգտագործեք կուրսորը `խաչմերուկի կենտրոնը հետեւելու համար, մինչեւ որ հայտնվի տառը (ներ) ը:',\r\n    fi: 'Valmis? Seuraa kohdistimen avulla ristikohdan keskipistettä, kunnes kirjain (t) ilmestyvät.',\r\n    ka: 'მზად? გამოიყენეთ კურსორი, რომ თვალყური ადევნოთ ჯვრის თმის ცენტრს, სანამ ასო (ებ) ი გამოჩნდება.',\r\n    he: 'מוּכָן? השתמש בסמן כדי לעקוב אחר מרכז שיער הצלב עד להופעת האות (ים).',\r\n    ar: 'مستعد؟ استخدم المؤشر لتتبع مركز الصليب حتى يظهر الحرف (الحرف).',\r\n    ur: 'تیار؟ خط (زبانیں) ظاہر ہونے تک کراس بالوں کے مرکز کو ٹریک کرنے کے لئے کرسر کا استعمال کریں۔',\r\n    hi: 'तैयार? जब तक पत्र दिखाई देता है, तब तक क्रॉस बालों के केंद्र को ट्रैक करने के लिए कर्सर का उपयोग करें।',\r\n    ta: 'தயாரா? கடிதம் (கள்) தோன்றும் வரை குறுக்கு முடியின் மையத்தைக் கண்காணிக்க கர்சரைப் பயன்படுத்தவும்.',\r\n    ml: 'തയ്യാറാണ്? കത്ത് (കൾ) ദൃശ്യമാകുന്നതുവരെ ക്രോസ് ഹെയർ സെന്ററെ ട്രാക്കുചെയ്യുന്നതിന് കഴ്സർ ഉപയോഗിക്കുക.',\r\n    te: 'సిద్ధంగా ఉన్నారా? అక్షరం (లు) కనిపించే వరకు క్రాస్ హెయిర్ మధ్యలో ట్రాక్ చేయడానికి కర్సర్‌ను ఉపయోగించండి.',\r\n    kn: 'ಸಿದ್ಧ? ಅಕ್ಷರ (ಗಳು) ಕಾಣಿಸಿಕೊಳ್ಳುವವರೆಗೆ ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ಪತ್ತೆಹಚ್ಚಲು ಕರ್ಸರ್ ಬಳಸಿ.',\r\n    bn: 'প্রস্তুত? চিঠিটি (গুলি) উপস্থিত না হওয়া পর্যন্ত ক্রস চুলের কেন্দ্রটি ট্র্যাক করতে কার্সারটি ব্যবহার করুন।',\r\n    id: 'Siap? Gunakan kursor untuk melacak tengah rambut silang sampai huruf muncul.',\r\n    'zh-CN': '准备好？使用光标跟踪十字头发的中心，直到字母出现为止。',\r\n    'zh-HK': '準備好？使用光標跟踪十字頭髮的中心，直到字母出現為止。',\r\n    ja: '準備？カーソルを使用して、文字が表示されるまで交差髪の中心を追跡します。',\r\n    ko: '준비가 된? 커서를 사용하여 문자가 나타날 때까지 십자 머리의 중심을 추적하십시오.',\r\n  },\r\n  T_readyClickCrosshairRepeatedLetters: {\r\n    'en-US': 'Ready to identify the letters? Click the center of the cross hairs.',\r\n    de: 'Bereit, die Buchstaben zu identifizieren? Klicken Sie auf die Mitte der Kreuzhaare.',\r\n    fr: 'Prêt à identifier les lettres? Cliquez sur le centre des poils.',\r\n    es: '¿Listo para identificar las letras? Haga clic en el centro de la cruz.',\r\n    pt: 'Pronto para identificar as letras? Clique no centro dos cabelos cruzados.',\r\n    it: 'Pronto a identificare le lettere? Fai clic sul centro dei capelli incrociati.',\r\n    ro: 'Sunteți gata să identificați scrisorile? Faceți clic pe centrul părului încrucișat.',\r\n    pl: 'Gotowy do zidentyfikowania liter? Kliknij środek włosów krzyżowych.',\r\n    ru: 'Готовы идентифицировать буквы? Нажмите на центр кросс -волосков.',\r\n    hy: 'Պատրաստ եք նույնականացնել տառերը: Կտտացրեք խաչի մազերի կենտրոնը:',\r\n    fi: 'Oletko valmis tunnistamaan kirjaimet? Napsauta ristikästen keskustaa.',\r\n    ka: 'მზად ხართ ასოების იდენტიფიცირებისთვის? დააჭირეთ ჯვრის თმას ცენტრს.',\r\n    he: 'מוכנים לזהות את האותיות? לחץ על מרכז שערות הצלב.',\r\n    ar: 'هل أنت مستعد لتحديد الحروف؟ انقر فوق وسط الشعر عبر.',\r\n    ur: 'خطوط کی شناخت کے لئے تیار ہیں؟ کراس بالوں کے مرکز پر کلک کریں۔',\r\n    hi: 'पत्रों की पहचान करने के लिए तैयार हैं? क्रॉस हेयर के केंद्र पर क्लिक करें।',\r\n    ta: 'கடிதங்களை அடையாளம் காண தயாரா? குறுக்கு முடிகளின் மையத்தைக் கிளிக் செய்க.',\r\n    ml: 'അക്ഷരങ്ങൾ തിരിച്ചറിയാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ സെന്ററിൽ ക്ലിക്കുചെയ്യുക.',\r\n    te: 'అక్షరాలను గుర్తించడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో క్లిక్ చేయండి.',\r\n    kn: 'ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'চিঠিগুলি সনাক্ত করতে প্রস্তুত? ক্রস হেয়ারগুলির কেন্দ্রে ক্লিক করুন।',\r\n    id: 'Siap mengidentifikasi surat -surat itu? Klik tengah rambut silang.',\r\n    'zh-CN': '准备识别字母了吗？单击十字头发的中心。',\r\n    'zh-HK': '準備識別字母了嗎？單擊十字頭髮的中心。',\r\n    ja: '手紙を識別する準備はできましたか？クロスヘアの中心をクリックします。',\r\n    ko: '글자를 식별 할 준비가 되셨습니까? 십자 머리카락의 중앙을 클릭하십시오.',\r\n  },\r\n  T_readyTrackCrosshairRepeatedLetters: {\r\n    'en-US':\r\n      'Ready to identify the letters? Track the center of the cross hairs until the letters appear.',\r\n    de: 'Bereit, die Buchstaben zu identifizieren? Verfolgen Sie die Mitte der Kreuzhaare, bis die Buchstaben erscheinen.',\r\n    fr: \"Prêt à identifier les lettres? Suivez le centre des poils jusqu'à ce que les lettres apparaissent.\",\r\n    es: '¿Listo para identificar las letras? Rastree el centro de la cruz hasta que aparezcan las letras.',\r\n    pt: 'Pronto para identificar as letras? Rastreie o centro dos cabelos cruzados até que as letras apareçam.',\r\n    it: 'Pronto a identificare le lettere? Traccia il centro dei peli incrociati fino a quando non compaiono le lettere.',\r\n    ro: 'Sunteți gata să identificați scrisorile? Urmăriți centrul părului încrucișat până când apar literele.',\r\n    pl: 'Gotowy do zidentyfikowania liter? Śledź środek włosów krzyżowych, aż pojawią się litery.',\r\n    ru: 'Готовы идентифицировать буквы? Отслеживайте центр кросс -волосков, пока не появятся буквы.',\r\n    hy: 'Պատրաստ եք նույնականացնել տառերը: Հետեւեք խաչի մազերի կենտրոնին, մինչեւ տառերը հայտնվեն:',\r\n    fi: 'Oletko valmis tunnistamaan kirjaimet? Seuraa ristikarvojen keskustaa, kunnes kirjaimet ilmestyvät.',\r\n    ka: 'მზად ხართ ასოების იდენტიფიცირებისთვის? თვალყური ადევნეთ ჯვრის თმას ცენტრს, სანამ ასოები გამოჩნდება.',\r\n    he: 'מוכנים לזהות את האותיות? עקוב אחר מרכז שערות הצלב עד להופעת האותיות.',\r\n    ar: 'هل أنت مستعد لتحديد الحروف؟ تتبع مركز الشعر الصليب حتى تظهر الحروف.',\r\n    ur: 'خطوط کی شناخت کے لئے تیار ہیں؟ خطوط ظاہر ہونے تک کراس بالوں کے مرکز کو ٹریک کریں۔',\r\n    hi: 'पत्रों की पहचान करने के लिए तैयार हैं? जब तक अक्षर दिखाई देते हैं, तब तक क्रॉस हेयर के केंद्र को ट्रैक करें।',\r\n    ta: 'கடிதங்களை அடையாளம் காண தயாரா? கடிதங்கள் தோன்றும் வரை குறுக்கு முடிகளின் மையத்தைக் கண்காணிக்கவும்.',\r\n    ml: 'അക്ഷരങ്ങൾ തിരിച്ചറിയാൻ തയ്യാറാണോ? അക്ഷരങ്ങൾ ദൃശ്യമാകുന്നതുവരെ ക്രോസ് ഹെയർ സെന്റർ ട്രാക്കുചെയ്യുക.',\r\n    te: 'అక్షరాలను గుర్తించడానికి సిద్ధంగా ఉన్నారా? అక్షరాలు కనిపించే వరకు క్రాస్ హెయిర్స్ మధ్యలో ట్రాక్ చేయండి.',\r\n    kn: 'ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಕ್ಷರಗಳು ಕಾಣಿಸಿಕೊಳ್ಳುವವರೆಗೆ ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ಟ್ರ್ಯಾಕ್ ಮಾಡಿ.',\r\n    bn: 'চিঠিগুলি সনাক্ত করতে প্রস্তুত? অক্ষরগুলি প্রদর্শিত না হওয়া পর্যন্ত ক্রস হেয়ারগুলির কেন্দ্রটি ট্র্যাক করুন।',\r\n    id: 'Siap mengidentifikasi surat -surat itu? Lacak tengah rambut silang sampai huruf muncul.',\r\n    'zh-CN': '准备识别字母了吗？跟踪十字头发的中心，直到字母出现为止。',\r\n    'zh-HK': '準備識別字母了嗎？跟踪十字頭髮的中心，直到字母出現為止。',\r\n    ja: '手紙を識別する準備はできましたか？文字が表示されるまで、交差毛の中心を追跡します。',\r\n    ko: '글자를 식별 할 준비가 되셨습니까? 문자가 나타날 때까지 십자 머리카락의 중심을 추적하십시오.',\r\n  },\r\n  T_readyClickCrosshairRsvpReading: {\r\n    'en-US': 'Ready to read some words? Click the center of the cross hairs.',\r\n    de: 'Bereit, ein paar Wörter zu lesen? Klicken Sie auf die Mitte der Kreuzhaare.',\r\n    fr: 'Prêt à lire quelques mots? Cliquez sur le centre des poils.',\r\n    es: '¿Listo para leer algunas palabras? Haga clic en el centro de la cruz.',\r\n    pt: 'Pronto para ler algumas palavras? Clique no centro dos cabelos cruzados.',\r\n    it: 'Pronto a leggere alcune parole? Fai clic sul centro dei capelli incrociati.',\r\n    ro: 'Sunteți gata să citiți câteva cuvinte? Faceți clic pe centrul părului încrucișat.',\r\n    pl: 'Gotowy do przeczytania niektórych słów? Kliknij środek włosów krzyżowych.',\r\n    ru: 'Готовы прочитать несколько слов? Нажмите на центр кросс -волосков.',\r\n    hy: 'Պատրաստ եք կարդալ որոշ բառեր: Կտտացրեք խաչի մազերի կենտրոնը:',\r\n    fi: 'Oletko valmis lukemaan joitain sanoja? Napsauta ristikästen keskustaa.',\r\n    ka: 'მზად ხართ რამდენიმე სიტყვის წასაკითხად? დააჭირეთ ჯვრის თმას ცენტრს.',\r\n    he: 'מוכנים לקרוא כמה מילים? לחץ על מרכז שערות הצלב.',\r\n    ar: 'هل أنت مستعد لقراءة بعض الكلمات؟ انقر فوق وسط الشعر عبر.',\r\n    ur: 'کچھ الفاظ پڑھنے کے لئے تیار ہیں؟ کراس بالوں کے مرکز پر کلک کریں۔',\r\n    hi: 'कुछ शब्द पढ़ने के लिए तैयार हैं? क्रॉस हेयर के केंद्र पर क्लिक करें।',\r\n    ta: 'சில வார்த்தைகளைப் படிக்கத் தயாரா? குறுக்கு முடிகளின் மையத்தைக் கிளிக் செய்க.',\r\n    ml: 'ചില വാക്കുകൾ വായിക്കാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ സെന്ററിൽ ക്ലിക്കുചെയ്യുക.',\r\n    te: 'కొన్ని పదాలు చదవడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో క్లిక్ చేయండి.',\r\n    kn: 'ಕೆಲವು ಪದಗಳನ್ನು ಓದಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ.',\r\n    bn: 'কিছু শব্দ পড়তে প্রস্তুত? ক্রস হেয়ারগুলির কেন্দ্রে ক্লিক করুন।',\r\n    id: 'Siap membaca beberapa kata? Klik tengah rambut silang.',\r\n    'zh-CN': '准备阅读一些单词了吗？单击十字头发的中心。',\r\n    'zh-HK': '準備閱讀一些單詞了嗎？單擊十字頭髮的中心。',\r\n    ja: 'いくつかの言葉を読む準備はできましたか？クロスヘアの中心をクリックします。',\r\n    ko: '단어를 읽을 준비가 되셨습니까? 십자 머리카락의 중앙을 클릭하십시오.',\r\n  },\r\n  T_readyTrackCrosshairRsvpReading: {\r\n    'en-US':\r\n      'Ready to read some words? Track the center of the cross hairs until the words appear.',\r\n    de: '',\r\n    fr: '',\r\n    es: '',\r\n    pt: '',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: '',\r\n    ur: '',\r\n    hi: '',\r\n    ta: '',\r\n    ml: '',\r\n    te: '',\r\n    kn: '',\r\n    bn: '',\r\n    id: '',\r\n    'zh-CN': '',\r\n    'zh-HK': '',\r\n    ja: '',\r\n    ko: '',\r\n  },\r\n  T_readyPressSpace: {\r\n    'en-US':\r\n      'Ready to identify a letter? While looking directly at the center of the cross hairs, please press the SPACE bar.',\r\n    de: 'Bereit? Während Sie direkt auf das Fadenkreuz schauen, drücken Sie bitte die Leertaste.',\r\n    fr: \"Prêt? Pendant que vous regardez directement le centre de la croix, appuyez sur l'espace.\",\r\n    es: '¿Listo? Mientras miras directamente al centro de la cruz, presiona ESPACIO.',\r\n    pt: 'Preparar? Enquanto você olha diretamente para o centro da cruz, pressione o espaço.',\r\n    it: 'Pronto? Mentre guardi direttamente il mirino, premi la barra spaziatrice.',\r\n    ro: 'Gata? În timp ce priviți direct în centrul crucii, apăsați spațiul.',\r\n    pl: 'Gotowy? Patrząc bezpośrednio na krzyżyk, naciśnij spację. ',\r\n    ru: 'Готовый? Глядя прямо на перекрестие, нажмите пробел.',\r\n    hy: 'Պատրաստ? Նայելով անմիջապես խաչմերուկին, կտտացրեք բացը:',\r\n    fi: 'Oletko valmis tunnistamaan kirjeen? Kun katsot suoraan ristikäsien keskellä, paina avaruuspalkki.',\r\n    ka: 'მზად ხართ წერილის იდენტიფიცირებისთვის? ჯვრის თმების ცენტრში პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוּכָן? תוך התבוננות ישירה על השיער, לחץ על מקש הרווח.',\r\n    ar: 'مستعد؟ أثناء النظر مباشرة إلى علامة التقاطع ، يرجى الضغط على زر المسافة.',\r\n    ur: 'تیار؟ براہ راست کراس ہیر کو دیکھ کر ، براہ کرم اسپیس بار دبائیں۔',\r\n    hi: 'तैयार? सीधे क्रॉसहेयर को देखते हुए, कृपया SPACE बार दबाएं।',\r\n    ta: 'ஒரு கடிதத்தை அடையாளம் காண தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து விண்வெளி பட்டியை அழுத்தவும்.',\r\n    ml: 'ഒരു കത്ത് തിരിച്ചറിയാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'ఒక లేఖను గుర్తించడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಪತ್ರವನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'একটি চিঠি সনাক্ত করতে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে স্পেস বারটি টিপুন।',\r\n    id: 'Siap mengidentifikasi surat? Sambil melihat langsung di tengah rambut silang, silakan tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备好了吗？保持注视十字准线，并按下空格键。',\r\n    'zh-HK': '準備好了嗎？保持注視十字準線，並按下空格鍵。',\r\n    ja: '準備はできましたか？十字線を直視しながら、スペースキーを押してください。',\r\n    ko: '편지를 식별 할 준비가 되셨습니까? 크로스 털의 중앙을 직접 보면서 우주 막대를 누릅니다.',\r\n  },\r\n  T_readyPressSpaceRepeatedLetters: {\r\n    'en-US':\r\n      'Ready to identify the letters? While looking directly at the center of the cross hairs, please press the SPACE bar.',\r\n    de: 'Bereit, die Buchstaben zu identifizieren? Während Sie direkt in die Mitte der Cross -Haare schauen, drücken Sie bitte die Raumleiste.',\r\n    fr: \"Prêt à identifier les lettres? Tout en regardant directement le centre des poils, veuillez appuyer sur la barre d'espace.\",\r\n    es: '¿Listo para identificar las letras? Mientras mira directamente al centro de la cruz, presione la barra espacial.',\r\n    pt: 'Pronto para identificar as letras? Enquanto olha diretamente para o centro dos cabelos cruzados, pressione a barra de espaço.',\r\n    it: 'Pronto a identificare le lettere? Mentre guardi direttamente al centro dei capelli incrociati, premi la barra spaziale.',\r\n    ro: 'Sunteți gata să identificați scrisorile? În timp ce privești direct în centrul firelor de păr, vă rugăm să apăsați bara spațială.',\r\n    pl: 'Gotowy do zidentyfikowania liter? Patrząc bezpośrednio na środek włosów krzyżowych, naciśnij pasek kosmiczny.',\r\n    ru: 'Готовы идентифицировать буквы? Глядя прямо на центр кросс -волос, пожалуйста, нажмите на космическую полосу.',\r\n    hy: 'Պատրաստ եք նույնականացնել տառերը: Խաչի մազերի կենտրոնում ուղղակիորեն նայելիս խնդրում ենք սեղմել տիեզերական սանդղակը:',\r\n    fi: 'Oletko valmis tunnistamaan kirjaimet? Kun katsot suoraan ristikäsien keskellä, paina avaruuspalkki.',\r\n    ka: 'მზად ხართ ასოების იდენტიფიცირებისთვის? ჯვრის თმების ცენტრში პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוכנים לזהות את האותיות? תוך כדי התבוננות ישירות במרכז שערות הצלב, אנא לחץ על מוט החלל.',\r\n    ar: 'هل أنت مستعد لتحديد الحروف؟ أثناء النظر مباشرة إلى وسط الشعر المتقاطع ، يرجى الضغط على شريط الفضاء.',\r\n    ur: 'خطوط کی شناخت کے لئے تیار ہیں؟ کراس بالوں کے مرکز کو براہ راست دیکھتے ہوئے ، براہ کرم اسپیس بار دبائیں۔',\r\n    hi: 'पत्रों की पहचान करने के लिए तैयार हैं? क्रॉस हेयर के केंद्र में सीधे देखते हुए, कृपया स्पेस बार दबाएं।',\r\n    ta: 'கடிதங்களை அடையாளம் காண தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து விண்வெளி பட்டியை அழுத்தவும்.',\r\n    ml: 'അക്ഷരങ്ങൾ തിരിച്ചറിയാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'అక్షరాలను గుర్తించడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'চিঠিগুলি সনাক্ত করতে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে স্পেস বারটি টিপুন।',\r\n    id: 'Siap mengidentifikasi surat -surat itu? Sambil melihat langsung di tengah rambut silang, silakan tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备识别字母了吗？直接看着十字头发的中心时，请按太空棒。',\r\n    'zh-HK': '準備識別字母了嗎？直接看著十字頭髮的中心時，請按太空棒。',\r\n    ja: '手紙を識別する準備はできましたか？交差毛の中心を直接見ながら、スペースバーを押してください。',\r\n    ko: '글자를 식별 할 준비가 되셨습니까? 크로스 털의 중앙을 직접 보면서 우주 막대를 누릅니다.',\r\n  },\r\n  T_readyPressSpaceRsvpReading: {\r\n    'en-US':\r\n      'Ready to read some words? While looking directly at the center of the cross hairs, please press the SPACE bar.',\r\n    de: 'Bereit, ein paar Wörter zu lesen? Während Sie direkt in die Mitte der Cross -Haare schauen, drücken Sie bitte die Raumleiste.',\r\n    fr: \"Prêt à lire quelques mots? Tout en regardant directement le centre des poils, veuillez appuyer sur la barre d'espace.\",\r\n    es: '¿Listo para leer algunas palabras? Mientras mira directamente al centro de la cruz, presione la barra espacial.',\r\n    pt: 'Pronto para ler algumas palavras? Enquanto olha diretamente para o centro dos cabelos cruzados, pressione a barra de espaço.',\r\n    it: 'Pronto a leggere alcune parole? Mentre guardi direttamente al centro dei capelli incrociati, premi la barra spaziale.',\r\n    ro: 'Sunteți gata să citiți câteva cuvinte? În timp ce privești direct în centrul firelor de păr, vă rugăm să apăsați bara spațială.',\r\n    pl: 'Gotowy do przeczytania niektórych słów? Patrząc bezpośrednio na środek włosów krzyżowych, naciśnij pasek kosmiczny.',\r\n    ru: 'Готовы прочитать несколько слов? Глядя прямо на центр кросс -волос, пожалуйста, нажмите на космическую полосу.',\r\n    hy: 'Պատրաստ եք կարդալ որոշ բառեր: Խաչի մազերի կենտրոնում ուղղակիորեն նայելիս խնդրում ենք սեղմել տիեզերական սանդղակը:',\r\n    fi: 'Oletko valmis lukemaan joitain sanoja? Kun katsot suoraan ristikäsien keskellä, paina avaruuspalkki.',\r\n    ka: 'მზად ხართ რამდენიმე სიტყვის წასაკითხად? ჯვრის თმების ცენტრში პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוכנים לקרוא כמה מילים? תוך כדי התבוננות ישירות במרכז שערות הצלב, אנא לחץ על מוט החלל.',\r\n    ar: 'هل أنت مستعد لقراءة بعض الكلمات؟ أثناء النظر مباشرة إلى وسط الشعر المتقاطع ، يرجى الضغط على شريط الفضاء.',\r\n    ur: 'کچھ الفاظ پڑھنے کے لئے تیار ہیں؟ کراس بالوں کے مرکز کو براہ راست دیکھتے ہوئے ، براہ کرم اسپیس بار دبائیں۔',\r\n    hi: 'कुछ शब्द पढ़ने के लिए तैयार हैं? क्रॉस हेयर के केंद्र में सीधे देखते हुए, कृपया स्पेस बार दबाएं।',\r\n    ta: 'சில வார்த்தைகளைப் படிக்கத் தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து விண்வெளி பட்டியை அழுத்தவும்.',\r\n    ml: 'ചില വാക്കുകൾ വായിക്കാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'కొన్ని పదాలు చదవడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಕೆಲವು ಪದಗಳನ್ನು ಓದಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'কিছু শব্দ পড়তে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে স্পেস বারটি টিপুন।',\r\n    id: 'Siap membaca beberapa kata? Sambil melihat langsung di tengah rambut silang, silakan tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备阅读一些单词了吗？直接看着十字头发的中心时，请按太空棒。',\r\n    'zh-HK': '準備閱讀一些單詞了嗎？直接看著十字頭髮的中心時，請按太空棒。',\r\n    ja: 'いくつかの言葉を読む準備はできましたか？交差毛の中心を直接見ながら、スペースバーを押してください。',\r\n    ko: '단어를 읽을 준비가 되셨습니까? 크로스 털의 중앙을 직접 보면서 우주 막대를 누릅니다.',\r\n  },\r\n  T_readyPressSpaceOrClickCrosshair: {\r\n    'en-US':\r\n      'Ready to identify a letter? While looking directly at the center of the cross hairs, please click it, or press the SPACE bar.',\r\n    de: 'Bereit? Während Sie direkt auf das Fadenkreuz schauen, drücken Sie bitte die Leertaste oder klicken Sie auf das Fadenkreuz.',\r\n    fr: \"Prêt? Tout en regardant directement le centre de la croix, cliquez sur le centre ou appuyez sur l'espace.\",\r\n    es: '¿Listo? Mientras miras directamente al centro de la cruz, haz clic en el centro o presiona ESPACIO.',\r\n    pt: 'Preparar? Enquanto olha diretamente para o centro da cruz, clique no centro ou pressione o espaço.',\r\n    it: 'Pronto? Guardando direttamente il mirino, fare clic sul mirino.',\r\n    ro: 'Gata? În timp ce priviți direct în centrul crucii, faceți clic pe centru sau apăsați spațiul.',\r\n    pl: 'Gotowy? Patrząc bezpośrednio na krzyżyk, naciśnij spację albo kliknij na krzyżyk',\r\n    ru: 'Готовый? Глядя прямо на перекрестие, нажмите пробел или щелкните на перекрестии.',\r\n    hy: 'Պատրաստ? Նայելով ճիշտ խաչմերուկին, կտտացրեք բացը կամ կտտացրեք խաչմերուկում:',\r\n    fi: 'Oletko valmis tunnistamaan kirjeen? Kun tarkastellaan suoraan ristikäsien keskustaa, napsauta sitä tai paina avaruuspalkkia.',\r\n    ka: 'მზად ხართ წერილის იდენტიფიცირებისთვის? ჯვრის თმას ცენტრის პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ მას, ან დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוּכָן? תוך התבוננות ישירה על הכוונת, לחץ על מקש הרווח או לחץ על הכוונת.',\r\n    ar: 'مستعد؟ أثناء النظر مباشرة إلى علامة التقاطع ، يرجى الضغط على زر المسافة أو الضغط على علامة التقاطع.',\r\n    ur: 'تیار؟ براہ راست کراس ہیر کو دیکھ کر ، براہ کرم اسپیس بار دبائیں یا کراس ہیر پر کلک کریں۔',\r\n    hi: 'तैयार? सीधे क्रॉसहेयर को देखते हुए, कृपया SPACE बार दबाएं या क्रॉसहेयर पर क्लिक करें।',\r\n    ta: 'ஒரு கடிதத்தை அடையாளம் காண தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து அதைக் கிளிக் செய்க அல்லது ஸ்பேஸ் பட்டியை அழுத்தவும்.',\r\n    ml: 'ഒരു കത്ത് തിരിച്ചറിയാൻ തയ്യാറാണോ? ക്രോസ് ഹെയറുകളുടെ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി അതിൽ ക്ലിക്കുചെയ്യുക, അല്ലെങ്കിൽ സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'ఒక లేఖను గుర్తించడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి దాన్ని క్లిక్ చేయండి లేదా స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಪತ್ರವನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ, ಅಥವಾ ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'একটি চিঠি সনাক্ত করতে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে এটি ক্লিক করুন, বা স্পেস বার টিপুন।',\r\n    id: 'Siap mengidentifikasi surat? Sambil melihat langsung di tengah rambut silang, silakan klik, atau tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备好了吗？保持注视十字准线，并按下空格键或者点击十字准线。',\r\n    'zh-HK': '準備好了嗎？保持注視十字準線，並按下空格鍵或者點擊十字準線。',\r\n    ja: '準備はできましたか？十字線を直視しながら、スペースキーを押すか、十字線をクリックしてください。',\r\n    ko: '편지를 식별 할 준비가 되셨습니까? 십자 머리카락의 중앙을 직접 보면서 클릭하거나 우주 막대를 누릅니다.',\r\n  },\r\n  T_readyPressSpaceOrClickCrosshairRepeatedLetters: {\r\n    'en-US':\r\n      'Ready to identify the letters? While looking directly at the center of the cross hairs, please click it or press the SPACE bar.',\r\n    de: 'Bereit, die Buchstaben zu identifizieren? Wenn Sie direkt in die Mitte der Kreuzhaare schauen, klicken Sie bitte darauf oder drücken Sie die Space -Leiste.',\r\n    fr: \"Prêt à identifier les lettres? Tout en regardant directement le centre des poils, veuillez cliquer dessus ou appuyer sur la barre d'espace.\",\r\n    es: '¿Listo para identificar las letras? Mientras mira directamente al centro de la cruz, haga clic en él o presione la barra espacial.',\r\n    pt: 'Pronto para identificar as letras? Enquanto olha diretamente para o centro dos cabelos cruzados, clique nele ou pressione a barra de espaço.',\r\n    it: 'Pronto a identificare le lettere? Mentre guardi direttamente al centro dei capelli incrociati, fai clic o premi la barra spaziale.',\r\n    ro: 'Sunteți gata să identificați scrisorile? În timp ce priviți direct în centrul firelor de păr încrucișat, vă rugăm să faceți clic pe acesta sau să apăsați bara spațială.',\r\n    pl: 'Gotowy do zidentyfikowania liter? Patrząc bezpośrednio na środek włosów krzyżowych, kliknij je lub naciśnij pasek przestrzeni.',\r\n    ru: 'Готовы идентифицировать буквы? Глядя прямо на центр кросс -волос, нажмите на него или нажмите на космическую панель.',\r\n    hy: 'Պատրաստ եք նույնականացնել տառերը: Խաչի մազերի կենտրոնում ուղղակիորեն նայելիս կտտացրեք այն կամ սեղմեք տիեզերական սանդղակը:',\r\n    fi: 'Oletko valmis tunnistamaan kirjaimet? Kun tarkastellaan suoraan ristikäsien keskustaa, napsauta sitä tai paina välilyöntiä.',\r\n    ka: 'მზად ხართ ასოების იდენტიფიცირებისთვის? ჯვრის თმას ცენტრის პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ მას ან დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוכנים לזהות את האותיות? תוך כדי התבוננות ישירות במרכז שערות הצלב, אנא לחץ עליו או לחץ על סרגל החלל.',\r\n    ar: 'هل أنت مستعد لتحديد الحروف؟ أثناء النظر مباشرة إلى وسط الشعر المتقاطع ، يرجى النقر فوقه أو الضغط على شريط الفضاء.',\r\n    ur: 'خطوط کی شناخت کے لئے تیار ہیں؟ کراس بالوں کے مرکز کو براہ راست دیکھتے ہوئے ، براہ کرم اس پر کلک کریں یا اسپیس بار کو دبائیں۔',\r\n    hi: 'पत्रों की पहचान करने के लिए तैयार हैं? क्रॉस हेयर के केंद्र में सीधे देखते हुए, कृपया इसे क्लिक करें या स्पेस बार दबाएं।',\r\n    ta: 'கடிதங்களை அடையாளம் காண தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து அதைக் கிளிக் செய்க அல்லது ஸ்பேஸ் பட்டியை அழுத்தவும்.',\r\n    ml: 'അക്ഷരങ്ങൾ തിരിച്ചറിയാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി അതിൽ ക്ലിക്കുചെയ്യുക അല്ലെങ്കിൽ സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'అక్షరాలను గుర్తించడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి దాన్ని క్లిక్ చేయండి లేదా స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಅಕ್ಷರಗಳನ್ನು ಗುರುತಿಸಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಅದನ್ನು ಕ್ಲಿಕ್ ಮಾಡಿ ಅಥವಾ ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'চিঠিগুলি সনাক্ত করতে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে এটি ক্লিক করুন বা স্পেস বার টিপুন।',\r\n    id: 'Siap mengidentifikasi surat -surat itu? Sambil melihat langsung di tengah rambut silang, silakan klik atau tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备识别字母了吗？直接看着十字头发的中心时，请单击或按太空栏。',\r\n    'zh-HK': '準備識別字母了嗎？直接看著十字頭髮的中心時，請單擊或按太空欄。',\r\n    ja: '手紙を識別する準備はできましたか？交差毛の中心を直接見ながら、クリックするか、スペースバーを押してください。',\r\n    ko: '글자를 식별 할 준비가 되셨습니까? 십자 머리카락의 중앙을 직접 보면서 클릭하거나 우주 막대를 누릅니다.',\r\n  },\r\n  T_readyPressSpaceOrClickCrosshairRsvpReading: {\r\n    'en-US':\r\n      'Ready to read some words? While looking directly at the center of the cross hairs, please press the SPACE bar.',\r\n    de: 'Bereit, ein paar Wörter zu lesen? Während Sie direkt in die Mitte der Cross -Haare schauen, drücken Sie bitte die Raumleiste.',\r\n    fr: \"Prêt à lire quelques mots? Tout en regardant directement le centre des poils, veuillez appuyer sur la barre d'espace.\",\r\n    es: '¿Listo para leer algunas palabras? Mientras mira directamente al centro de la cruz, presione la barra espacial.',\r\n    pt: 'Pronto para ler algumas palavras? Enquanto olha diretamente para o centro dos cabelos cruzados, pressione a barra de espaço.',\r\n    it: 'Pronto a leggere alcune parole? Mentre guardi direttamente al centro dei capelli incrociati, premi la barra spaziale.',\r\n    ro: 'Sunteți gata să citiți câteva cuvinte? În timp ce privești direct în centrul firelor de păr, vă rugăm să apăsați bara spațială.',\r\n    pl: 'Gotowy do przeczytania niektórych słów? Patrząc bezpośrednio na środek włosów krzyżowych, naciśnij pasek kosmiczny.',\r\n    ru: 'Готовы прочитать несколько слов? Глядя прямо на центр кросс -волос, пожалуйста, нажмите на космическую полосу.',\r\n    hy: 'Պատրաստ եք կարդալ որոշ բառեր: Խաչի մազերի կենտրոնում ուղղակիորեն նայելիս խնդրում ենք սեղմել տիեզերական սանդղակը:',\r\n    fi: 'Oletko valmis lukemaan joitain sanoja? Kun katsot suoraan ristikäsien keskellä, paina avaruuspalkki.',\r\n    ka: 'მზად ხართ რამდენიმე სიტყვის წასაკითხად? ჯვრის თმების ცენტრში პირდაპირ დათვალიერებისას, გთხოვთ, დააჭირეთ კოსმოსურ ზოლს.',\r\n    he: 'מוכנים לקרוא כמה מילים? תוך כדי התבוננות ישירות במרכז שערות הצלב, אנא לחץ על מוט החלל.',\r\n    ar: 'هل أنت مستعد لقراءة بعض الكلمات؟ أثناء النظر مباشرة إلى وسط الشعر المتقاطع ، يرجى الضغط على شريط الفضاء.',\r\n    ur: 'کچھ الفاظ پڑھنے کے لئے تیار ہیں؟ کراس بالوں کے مرکز کو براہ راست دیکھتے ہوئے ، براہ کرم اسپیس بار دبائیں۔',\r\n    hi: 'कुछ शब्द पढ़ने के लिए तैयार हैं? क्रॉस हेयर के केंद्र में सीधे देखते हुए, कृपया स्पेस बार दबाएं।',\r\n    ta: 'சில வார்த்தைகளைப் படிக்கத் தயாரா? குறுக்கு முடிகளின் மையத்தை நேரடியாகப் பார்க்கும்போது, ​​தயவுசெய்து விண்வெளி பட்டியை அழுத்தவும்.',\r\n    ml: 'ചില വാക്കുകൾ വായിക്കാൻ തയ്യാറാണോ? ക്രോസ് ഹെയർ മധ്യഭാഗത്ത് നേരിട്ട് നോക്കുമ്പോൾ, ദയവായി സ്പേസ് ബാർ അമർത്തുക.',\r\n    te: 'కొన్ని పదాలు చదవడానికి సిద్ధంగా ఉన్నారా? క్రాస్ హెయిర్స్ మధ్యలో నేరుగా చూస్తున్నప్పుడు, దయచేసి స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಕೆಲವು ಪದಗಳನ್ನು ಓದಲು ಸಿದ್ಧರಿದ್ದೀರಾ? ಅಡ್ಡ ಕೂದಲಿನ ಮಧ್ಯಭಾಗವನ್ನು ನೇರವಾಗಿ ನೋಡುವಾಗ, ದಯವಿಟ್ಟು ಸ್ಪೇಸ್ ಬಾರ್ ಒತ್ತಿರಿ.',\r\n    bn: 'কিছু শব্দ পড়তে প্রস্তুত? ক্রস চুলের কেন্দ্রে সরাসরি দেখার সময়, দয়া করে স্পেস বারটি টিপুন।',\r\n    id: 'Siap membaca beberapa kata? Sambil melihat langsung di tengah rambut silang, silakan tekan bilah ruang angkasa.',\r\n    'zh-CN': '准备阅读一些单词了吗？直接看着十字头发的中心时，请按太空棒。',\r\n    'zh-HK': '準備閱讀一些單詞了嗎？直接看著十字頭髮的中心時，請按太空棒。',\r\n    ja: 'いくつかの言葉を読む準備はできましたか？交差毛の中心を直接見ながら、スペースバーを押してください。',\r\n    ko: '단어를 읽을 준비가 되셨습니까? 크로스 털의 중앙을 직접 보면서 우주 막대를 누릅니다.',\r\n  },\r\n  T_sentenceGuessingGame: {\r\n    'en-US':\r\n      \"The intelligibility of the sentence will vary from easy down to hard or impossible. You can't get much more than two-thirds right, so relax. Think of it as a guessing game, and just get as many as you can. You'll hear a beep whenever you're right.\",\r\n    de: 'Die Verständlichkeit des Satzes variiert von einfach bis schwer oder unmöglich. Sie können nicht viel mehr als zwei Drittel richtig bekommen, also entspannen Sie sich. Betrachten Sie es als ein Ratenspiel und holen Sie sich so viele wie möglich. Sie werden einen Piepton hören, wenn Sie Recht haben.',\r\n    fr: \"L'intelligibilité de la phrase variera de la dure ou impossible de la dure ou l'impossible. Vous ne pouvez pas obtenir beaucoup plus des deux tiers à droite, alors détendez-vous. Considérez-le comme un jeu de supposition et obtenez-en autant que vous le pouvez. Vous entendrez un bip quand vous avez raison.\",\r\n    es: 'La inteligibilidad de la oración variará desde fácil hasta difícil o imposible. No puedes tener mucho más de dos tercios, así que relájate. Piense en ello como un juego de adivinanzas, y simplemente obtenga tantos como pueda. Escucharás un pitido siempre que tengas razón.',\r\n    pt: 'A inteligibilidade da frase variará de fácil para difícil ou impossível. Você não pode acertar muito mais do que dois terços, então relaxe. Pense nisso como um jogo de adivinhação e obtenha o máximo possível. Você ouvirá um sinal sonoro sempre que estiver certo.',\r\n    it: \"L'intelligibilità della frase varierà da facile fino a difficile o impossibile. Non puoi ottenere molto più di due terzi, quindi rilassati. Pensalo come un gioco di ipotesi e ottieni il maggior numero possibile. Sentirai un segnale acustico ogni volta che hai ragione.\",\r\n    ro: 'Intelibilitatea propoziției va varia de la ușor până la greu sau imposibil. Nu puteți obține mult mai mult de două treimi corect, așa că relaxați-vă. Gândiți -vă la el ca la un joc de ghicire și obțineți doar cât puteți. Veți auzi un bip ori de câte ori ai dreptate.',\r\n    pl: 'Zrozumiałość zdania będzie się różnić od łatwego do trudnego lub niemożliwego. Nie możesz uzyskać znacznie więcej niż dwie trzecie, więc zrelaksuj się. Pomyśl o tym jak o zgadywaniu i po prostu zdobądź tyle, ile możesz. Usłyszysz sygnał dźwiękowy, gdy masz rację.',\r\n    ru: 'Разборчивость предложения будет варьироваться от легкого до жесткого или невозможного. Вы не можете получить гораздо более двух третей правильно, так что расслабьтесь. Думайте об этом как об игре догадков, и просто получите как можно больше. Вы услышите звуковой сигнал, когда вы правы.',\r\n    hy: 'Պատժի խելամտությունը կտարբերվի հեշտից մինչեւ ծանր կամ անհնար: Դուք չեք կարող ստանալ շատ ավելին, քան երկու երրորդը ճիշտ, այնպես որ հանգստացեք: Մտածեք դրա մասին որպես գուշակության խաղ եւ պարզապես հնարավորինս շատ ստացեք: Դուք կօգտագործեք փղուկը, երբ ճիշտ եք:',\r\n    fi: 'Lauseen ymmärrettävyys vaihtelee helposti alas tai mahdotonta. Et voi saada paljon enemmän kuin kaksi kolmasosaa oikein, joten rentoudu. Ajattele sitä arvauspelinä ja saat vain niin monta kuin pystyt. Kuulet piippauksen aina kun olet oikeassa.',\r\n    ka: 'სასჯელის გააზრება განსხვავდება მარტივად ქვემოთ ან შეუძლებლად. თქვენ ვერ მიიღებთ ბევრად მეტს ორ მესამედზე, ასე რომ დაისვენეთ. იფიქრეთ, როგორც გამოცნობის თამაში, და უბრალოდ მიიღეთ რაც შეიძლება მეტი. თქვენ მოისმენთ beep, როდესაც მართალი ხართ.',\r\n    he: 'הבנת המשפט תשתנה מקלות למטה לקשה או בלתי אפשרית. אתה לא יכול להשיג הרבה יותר משני שלישים נכון, אז תירגע. חשוב על זה כמשחק ניחוש, ופשוט קבל כמה שיותר. תשמע צפצוף בכל פעם שאתה צודק.',\r\n    ar: 'سوف تختلف وضوح الجملة من السهل إلى الصلبة أو المستحيلة. لا يمكنك الحصول على أكثر من ثلثي بشكل صحيح ، لذا استرخ. فكر في الأمر على أنه لعبة تخمين ، واحصل على أكبر عدد ممكن من الأشياء. ستسمع صوتًا كلما كنت على حق.',\r\n    ur: 'جملہ کی سمجھداری آسانی سے مشکل سے مختلف ہوگی یا ناممکن تک۔ آپ کو دو تہائی سے زیادہ ٹھیک نہیں مل سکتا ، لہذا آرام کریں۔ اس کو ایک اندازہ لگانے والا کھیل سمجھیں ، اور جتنا ہو سکے حاصل کریں۔ جب بھی آپ ٹھیک ہوں گے آپ کو بیپ سنیں گے۔',\r\n    hi: 'वाक्य की समझदारी आसान से कठिन या असंभव से भिन्न होगी। आप दो-तिहाई से अधिक सही नहीं पा सकते हैं, इसलिए आराम करें। इसे एक अनुमान लगाने के खेल के रूप में सोचें, और बस जितने भी हो सके उतने प्राप्त करें। जब भी आप सही हों तो आप एक बीप सुनेंगे।',\r\n    ta: 'வாக்கியத்தின் புத்திசாலித்தனம் எளிதானது முதல் கடினமான அல்லது சாத்தியமற்றது வரை மாறுபடும். மூன்றில் இரண்டு பங்கிற்கு மேல் நீங்கள் பெற முடியாது, எனவே ஓய்வெடுங்கள். இதை ஒரு யூகிக்கும் விளையாட்டாக நினைத்துப் பாருங்கள், உங்களால் முடிந்தவரை பலவற்றைப் பெறுங்கள். நீங்கள் சரியாக இருக்கும்போதெல்லாம் ஒரு பீப்பைக் கேட்பீர்கள்.',\r\n    ml: 'വാക്യത്തിന്റെ ബുദ്ധിശക്തി എളുപ്പത്തിൽ കഠിനമോ അസാധ്യമോ ആയി മാറും. നിങ്ങൾക്ക് മൂന്നിൽ രണ്ട് വലതുവശത്ത് കൂടുതൽ നേടാൻ കഴിയില്ല, അതിനാൽ വിശ്രമിക്കുക. ഇത് ഒരു ess ഹിക്കുന്ന ഗെയിമായി കരുതുക, നിങ്ങൾക്ക് കഴിയുന്നത്രയും നേടുക. നിങ്ങൾ ശരിയാകുമ്പോഴെല്ലാം നിങ്ങൾ ഒരു ബീപ്പ് കേൾക്കും.',\r\n    te: 'వాక్యం యొక్క తెలివితేటలు సులభంగా నుండి కఠినమైన లేదా అసాధ్యం వరకు మారుతూ ఉంటాయి. మీరు మూడింట రెండు వంతుల కంటే ఎక్కువ పొందలేరు, కాబట్టి విశ్రాంతి తీసుకోండి. దీన్ని game హించే ఆటగా భావించండి మరియు మీకు వీలైనన్ని ఎక్కువ పొందండి. మీరు సరైనప్పుడల్లా బీప్ వింటారు.',\r\n    kn: 'ವಾಕ್ಯದ ಬುದ್ಧಿವಂತಿಕೆಯು ಸುಲಭದಿಂದ ಕಠಿಣ ಅಥವಾ ಅಸಾಧ್ಯಕ್ಕೆ ಬದಲಾಗುತ್ತದೆ. ನೀವು ಮೂರನೇ ಎರಡರಷ್ಟು ಸರಿಯಾಗಿ ಪಡೆಯಲು ಸಾಧ್ಯವಿಲ್ಲ, ಆದ್ದರಿಂದ ವಿಶ್ರಾಂತಿ ಪಡೆಯಿರಿ. ಇದನ್ನು ess ಹಿಸುವ ಆಟವೆಂದು ಯೋಚಿಸಿ, ಮತ್ತು ನಿಮಗೆ ಸಾಧ್ಯವಾದಷ್ಟು ಪಡೆಯಿರಿ. ನೀವು ಸರಿಯಾಗಿದ್ದಾಗಲೆಲ್ಲಾ ನೀವು ಬೀಪ್ ಕೇಳುತ್ತೀರಿ.',\r\n    bn: 'বাক্যটির বোধগম্যতা সহজ থেকে শক্ত বা অসম্ভব হয়ে যায়। আপনি দুই-তৃতীয়াংশের চেয়ে বেশি কিছু পেতে পারেন না, তাই শিথিল করুন। এটিকে একটি অনুমানের খেলা হিসাবে ভাবেন এবং যতটা পারেন আপনি পান। আপনি যখনই ঠিক আছেন তখন আপনি একটি বীপ শুনতে পাবেন।',\r\n    id: 'Kejadian kalimat akan bervariasi dari mudah hingga keras atau tidak mungkin. Anda tidak bisa mendapatkan lebih dari dua pertiga, jadi santai. Anggap saja sebagai permainan menebak, dan dapatkan sebanyak yang Anda bisa. Anda akan mendengar bunyi bip kapan pun Anda benar.',\r\n    'zh-CN':\r\n      '该句子的可理解性将从轻松到硬或不可能不等。您不能获得超过三分之二的正确，所以放松。将其视为一个猜测游戏，只需获得尽可能多的游戏。每当您正确时，您都会听到蜂鸣声。',\r\n    'zh-HK':\r\n      '該句子的可理解性將從輕鬆到硬或不可能不等。您不能獲得超過三分之二的正確，所以放鬆。將其視為一個猜測遊戲，只需獲得盡可能多的遊戲。每當您正確時，您都會聽到蜂鳴聲。',\r\n    ja: '文の明瞭度は、簡単なダウンからハードまたは不可能までさまざまです。 3分の2を超えることはできないので、リラックスしてください。それを推測ゲームと考えて、できるだけ多くのことを手に入れてください。あなたが正しいときはいつでもビープ音が聞こえます。',\r\n    ko: '문장의 명료성은 쉬운 곳에서 단단하거나 불가능한 곳에 달라집니다. 3 분의 2 이상을 얻을 수 없으므로 긴장을 풀어주십시오. 그것을 추측 게임으로 생각하고 가능한 한 많은 것을 얻으십시오. 당신이 옳을 때마다 경고음이 들립니다.',\r\n  },\r\n  T_sentenceIdentifyClick: {\r\n    'en-US':\r\n      'The lists below show all the possibilities for each word in the sentence. Report the sentence, or your best guess, by clicking the words you heard. ',\r\n    de: 'Die folgenden Listen zeigen alle Möglichkeiten für jedes Wort im Satz. Melden Sie den Satz oder Ihre beste Vermutung, indem Sie auf die Wörter klicken, die Sie gehört haben.',\r\n    fr: 'Les listes ci-dessous affichent toutes les possibilités de chaque mot de la phrase. Signalez la phrase, ou votre meilleure supposition, en cliquant sur les mots que vous avez entendus.',\r\n    es: 'Las listas a continuación muestran todas las posibilidades para cada palabra en la oración. Informe la oración, o su mejor suposición, haciendo clic en las palabras que escuchó.',\r\n    pt: 'As listas abaixo mostram todas as possibilidades para cada palavra na frase. Relate a frase, ou seu melhor palpite, clicando nas palavras que você ouviu.',\r\n    it: 'Gli elenchi seguenti mostrano tutte le possibilità per ogni parola nella frase. Segnala la frase o la tua ipotesi migliore, facendo clic sulle parole che hai sentito.',\r\n    ro: 'Listele de mai jos arată toate posibilitățile pentru fiecare cuvânt din propoziție. Raportați propoziția sau cea mai bună ghicire, făcând clic pe cuvintele pe care le -ați auzit.',\r\n    pl: 'Poniższe listy pokazują wszystkie możliwości każdego słowa w zdaniu. Zgłoś zdanie lub swoje najlepsze przypuszczenie, klikając słowa, które słyszałeś.',\r\n    ru: 'Списки ниже показывают все возможности для каждого слова в предложении. Сообщите о предложении или о вашем лучшем предположении, щелкнув слова, которые вы слышали.',\r\n    hy: 'Ստորեւ նշված ցուցակները ցույց են տալիս նախադասության յուրաքանչյուր բառի բոլոր հնարավորությունները: Հաղորդեք նախադասության մասին, կամ ձեր լավագույն գուշակությունը `կտտացնելով ձեր լսած բառերը:',\r\n    fi: 'Alla olevat luettelot osoittavat kaikki lauseen jokaisen sanan mahdollisuudet. Ilmoita lause tai paras arvaus napsauttamalla kuulemasi sanat.',\r\n    ka: 'ქვემოთ მოყვანილი სიები გვიჩვენებს წინადადებაში თითოეული სიტყვის ყველა შესაძლებლობას. შეატყობინეთ წინადადებას, ან თქვენს საუკეთესო გამოცნობას, დაჭერით თქვენს მიერ მოსმენილი სიტყვებით.',\r\n    he: 'הרשימות שלהלן מציגות את כל האפשרויות לכל מילה במשפט. דווח על המשפט, או על הניחוש הטוב ביותר שלך, על ידי לחיצה על המילים ששמעת.',\r\n    ar: 'توضح القوائم أدناه جميع الاحتمالات لكل كلمة في الجملة. أبلغ عن الجملة ، أو أفضل تخمين ، من خلال النقر على الكلمات التي سمعتها.',\r\n    ur: 'نیچے دی گئی فہرستیں جملے میں ہر لفظ کے تمام امکانات دکھاتی ہیں۔ آپ نے سنا ہوا الفاظ پر کلک کرکے ، جملے ، یا اپنے بہترین اندازہ کی اطلاع دیں۔',\r\n    hi: 'नीचे दी गई सूची वाक्य में प्रत्येक शब्द के लिए सभी संभावनाएं दिखाती है। आपके द्वारा सुने गए शब्दों पर क्लिक करके वाक्य, या अपने सबसे अच्छे अनुमान की रिपोर्ट करें।',\r\n    ta: 'கீழேயுள்ள பட்டியல்கள் வாக்கியத்தில் உள்ள ஒவ்வொரு வார்த்தைக்கும் அனைத்து சாத்தியக்கூறுகளையும் காட்டுகின்றன. நீங்கள் கேட்ட சொற்களைக் கிளிக் செய்வதன் மூலம் வாக்கியத்தை அல்லது உங்கள் சிறந்த யூகத்தைப் புகாரளிக்கவும்.',\r\n    ml: 'ചുവടെയുള്ള ഓരോ വാക്കിനും വാക്യത്തിലെ എല്ലാ സാധ്യതകളും കാണിക്കുന്ന ലിസ്റ്റുകൾ. നിങ്ങൾ കേട്ട വാക്കുകൾ ക്ലിക്കുചെയ്ത് വാക്യം അല്ലെങ്കിൽ നിങ്ങളുടെ മികച്ച ess ഹം റിപ്പോർട്ടുചെയ്യുക.',\r\n    te: 'దిగువ జాబితాలు వాక్యంలోని ప్రతి పదానికి అన్ని అవకాశాలను చూపుతాయి. మీరు విన్న పదాలను క్లిక్ చేయడం ద్వారా వాక్యాన్ని లేదా మీ ఉత్తమ అంచనాను నివేదించండి.',\r\n    kn: 'ಕೆಳಗಿನ ಪಟ್ಟಿಗಳು ವಾಕ್ಯದಲ್ಲಿನ ಪ್ರತಿಯೊಂದು ಪದದ ಎಲ್ಲಾ ಸಾಧ್ಯತೆಗಳನ್ನು ತೋರಿಸುತ್ತವೆ. ನೀವು ಕೇಳಿದ ಪದಗಳನ್ನು ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ವಾಕ್ಯವನ್ನು ಅಥವಾ ನಿಮ್ಮ ಅತ್ಯುತ್ತಮ ess ಹೆಯನ್ನು ವರದಿ ಮಾಡಿ.',\r\n    bn: 'নীচের তালিকাগুলি বাক্যটিতে প্রতিটি শব্দের জন্য সমস্ত সম্ভাবনা দেখায়। আপনি শুনেছেন এমন শব্দগুলিতে ক্লিক করে বাক্যটি বা আপনার সেরা অনুমানের প্রতিবেদন করুন।',\r\n    id: 'Daftar di bawah ini menunjukkan semua kemungkinan untuk setiap kata dalam kalimat. Laporkan kalimat, atau tebakan terbaik Anda, dengan mengklik kata -kata yang Anda dengar.',\r\n    'zh-CN':\r\n      '下面的列表显示了句子中每个单词的所有可能性。通过单击您听到的单词来报告句子或最好的猜测。',\r\n    'zh-HK':\r\n      '下面的列表顯示了句子中每個單詞的所有可能性。通過單擊您聽到的單詞來報告句子或最好的猜測。',\r\n    ja: '以下のリストは、文の各単語のすべての可能性を示しています。聞いた言葉をクリックして、文または最善の推測を報告してください。',\r\n    ko: '아래 목록은 문장의 각 단어에 대한 모든 가능성을 보여줍니다. 들었던 단어를 클릭하여 문장이나 최선의 추측을보고하십시오.',\r\n  },\r\n  T_sentenceProcedure: {\r\n    'en-US':\r\n      \"On each trial, you'll hear a sentence, usually in noise. Then you'll see a list of all the possibilities for each word in the sentence. Report the sentence, or your best guess, by clicking the words you heard. \",\r\n    de: 'Bei jedem Versuch hören Sie einen Satz, normalerweise in Lärm. Dann sehen Sie eine Liste aller Möglichkeiten für jedes Wort im Satz. Melden Sie den Satz oder Ihre beste Vermutung, indem Sie auf die Wörter klicken, die Sie gehört haben.',\r\n    fr: 'À chaque essai, vous entendrez une phrase, généralement en bruit. Ensuite, vous verrez une liste de toutes les possibilités pour chaque mot de la phrase. Signalez la phrase, ou votre meilleure supposition, en cliquant sur les mots que vous avez entendus.',\r\n    es: 'En cada prueba, escuchará una oración, generalmente en ruido. Entonces verá una lista de todas las posibilidades para cada palabra en la oración. Informe la oración, o su mejor suposición, haciendo clic en las palabras que escuchó.',\r\n    pt: 'Em cada teste, você ouvirá uma frase, geralmente em ruído. Em seguida, você verá uma lista de todas as possibilidades para cada palavra na frase. Relate a frase, ou seu melhor palpite, clicando nas palavras que você ouviu.',\r\n    it: 'Ad ogni prova, sentirai una frase, di solito con rumore. Quindi vedrai un elenco di tutte le possibilità per ogni parola nella frase. Segnala la frase o la tua ipotesi migliore, facendo clic sulle parole che hai sentito.',\r\n    ro: 'La fiecare proces, veți auzi o propoziție, de obicei în zgomot. Apoi veți vedea o listă cu toate posibilitățile pentru fiecare cuvânt din propoziție. Raportați propoziția sau cea mai bună ghicire, făcând clic pe cuvintele pe care le -ați auzit.',\r\n    pl: 'Podczas każdej próby usłyszysz zdanie, zwykle w hałasie. Następnie zobaczysz listę wszystkich możliwości każdego słowa w zdaniu. Zgłoś zdanie lub swoje najlepsze przypuszczenie, klikając słowa, które słyszałeś.',\r\n    ru: 'На каждом испытании вы услышите предложение, обычно в шуме. Затем вы увидите список всех возможностей для каждого слова в предложении. Сообщите о предложении или о вашем лучшем предположении, щелкнув слова, которые вы слышали.',\r\n    hy: 'Յուրաքանչյուր փորձության ընթացքում դուք կօգտագործեք նախադասություն, սովորաբար աղմուկով: Այնուհետեւ կտեսնեք նախադասության յուրաքանչյուր բառի բոլոր հնարավորությունների ցուցակը: Հաղորդեք նախադասության մասին, կամ ձեր լավագույն գուշակությունը `կտտացնելով ձեր լսած բառերը:',\r\n    fi: 'Jokaisessa kokeessa kuulet lauseen, yleensä melu. Sitten näet luettelon kaikista lauseen sanan mahdollisuuksista. Ilmoita lause tai paras arvaus napsauttamalla kuulemasi sanat.',\r\n    ka: 'თითოეულ სასამართლო პროცესზე, თქვენ მოისმენთ წინადადებას, ჩვეულებრივ, ხმაურით. შემდეგ ნახავთ წინადადებათა თითოეული სიტყვის ყველა შესაძლებლობის ჩამონათვალს. შეატყობინეთ წინადადებას, ან თქვენს საუკეთესო გამოცნობას, დაჭერით თქვენს მიერ მოსმენილი სიტყვებით.',\r\n    he: 'בכל משפט תשמעו משפט, בדרך כלל ברעש. אז תראה רשימה של כל האפשרויות לכל מילה במשפט. דווח על המשפט, או על הניחוש הטוב ביותר שלך, על ידי לחיצה על המילים ששמעת.',\r\n    ar: 'في كل تجربة ، ستسمع جملة ، عادة في ضوضاء. ثم سترى قائمة بجميع الاحتمالات لكل كلمة في الجملة. أبلغ عن الجملة ، أو أفضل تخمين ، من خلال النقر على الكلمات التي سمعتها.',\r\n    ur: 'ہر آزمائش پر ، آپ کو ایک جملہ سنا جائے گا ، عام طور پر شور میں۔ تب آپ جملے میں ہر لفظ کے تمام امکانات کی ایک فہرست دیکھیں گے۔ آپ نے سنا ہوا الفاظ پر کلک کرکے ، جملے ، یا اپنے بہترین اندازہ کی اطلاع دیں۔',\r\n    hi: 'प्रत्येक परीक्षण पर, आप एक वाक्य सुनेंगे, आमतौर पर शोर में। फिर आप वाक्य में प्रत्येक शब्द के लिए सभी संभावनाओं की एक सूची देखेंगे। आपके द्वारा सुने गए शब्दों पर क्लिक करके वाक्य, या अपने सबसे अच्छे अनुमान की रिपोर्ट करें।',\r\n    ta: 'ஒவ்வொரு சோதனையிலும், நீங்கள் ஒரு வாக்கியத்தைக் கேட்பீர்கள், பொதுவாக சத்தம். வாக்கியத்தில் உள்ள ஒவ்வொரு வார்த்தைக்கும் அனைத்து சாத்தியக்கூறுகளின் பட்டியலையும் நீங்கள் காண்பீர்கள். நீங்கள் கேட்ட சொற்களைக் கிளிக் செய்வதன் மூலம் வாக்கியத்தை அல்லது உங்கள் சிறந்த யூகத்தைப் புகாரளிக்கவும்.',\r\n    ml: 'ഓരോ വിചാരണയിലും, സാധാരണയായി ശബ്ദത്തിൽ നിങ്ങൾ ഒരു വാചകം കേൾക്കും. വാക്യത്തിലെ ഓരോ വാക്കിനും എല്ലാ സാധ്യതകളുടെയും ഒരു ലിസ്റ്റ് നിങ്ങൾ കാണും. നിങ്ങൾ കേട്ട വാക്കുകൾ ക്ലിക്കുചെയ്ത് വാക്യം അല്ലെങ്കിൽ നിങ്ങളുടെ മികച്ച ess ഹം റിപ്പോർട്ടുചെയ്യുക.',\r\n    te: 'ప్రతి విచారణలో, మీరు సాధారణంగా శబ్దంలో ఒక వాక్యాన్ని వింటారు. అప్పుడు మీరు వాక్యంలోని ప్రతి పదానికి అన్ని అవకాశాల జాబితాను చూస్తారు. మీరు విన్న పదాలను క్లిక్ చేయడం ద్వారా వాక్యాన్ని లేదా మీ ఉత్తమ అంచనాను నివేదించండి.',\r\n    kn: 'ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ, ನೀವು ಸಾಮಾನ್ಯವಾಗಿ ಶಬ್ದದಲ್ಲಿ ಒಂದು ವಾಕ್ಯವನ್ನು ಕೇಳುತ್ತೀರಿ. ನಂತರ ನೀವು ವಾಕ್ಯದಲ್ಲಿನ ಪ್ರತಿಯೊಂದು ಪದದ ಎಲ್ಲಾ ಸಾಧ್ಯತೆಗಳ ಪಟ್ಟಿಯನ್ನು ನೋಡುತ್ತೀರಿ. ನೀವು ಕೇಳಿದ ಪದಗಳನ್ನು ಕ್ಲಿಕ್ ಮಾಡುವುದರ ಮೂಲಕ ವಾಕ್ಯವನ್ನು ಅಥವಾ ನಿಮ್ಮ ಅತ್ಯುತ್ತಮ ess ಹೆಯನ್ನು ವರದಿ ಮಾಡಿ.',\r\n    bn: 'প্রতিটি পরীক্ষায়, আপনি একটি বাক্য শুনতে পাবেন, সাধারণত শব্দে। তারপরে আপনি বাক্যটিতে প্রতিটি শব্দের জন্য সমস্ত সম্ভাবনার একটি তালিকা দেখতে পাবেন। আপনি শুনেছেন এমন শব্দগুলিতে ক্লিক করে বাক্যটি বা আপনার সেরা অনুমানের প্রতিবেদন করুন।',\r\n    id: 'Pada setiap percobaan, Anda akan mendengar kalimat, biasanya dalam kebisingan. Kemudian Anda akan melihat daftar semua kemungkinan untuk setiap kata dalam kalimat. Laporkan kalimat, atau tebakan terbaik Anda, dengan mengklik kata -kata yang Anda dengar.',\r\n    'zh-CN':\r\n      '在每个审判中，通常会在噪音中听到一个句子。然后，您将看到句子中每个单词的所有可能性列表。通过单击您听到的单词来报告句子或最好的猜测。',\r\n    'zh-HK':\r\n      '在每個審判中，通常會在噪音中聽到一個句子。然後，您將看到句子中每個單詞的所有可能性列表。通過單擊您聽到的單詞來報告句子或最好的猜測。',\r\n    ja: '各トライアルでは、通常はノイズで文が聞こえます。次に、文の各単語のすべての可能性のリストが表示されます。聞いた言葉をクリックして、文または最善の推測を報告してください。',\r\n    ko: '각 시험에서는 일반적으로 소음으로 문장이 들립니다. 그런 다음 문장의 각 단어에 대한 모든 가능성 목록이 표시됩니다. 들었던 단어를 클릭하여 문장이나 최선의 추측을보고하십시오.',\r\n  },\r\n  T_session: {\r\n    'en-US': '❌',\r\n    de: '',\r\n    fr: '',\r\n    es: '',\r\n    pt: '',\r\n    it: '',\r\n    ro: '',\r\n    pl: '',\r\n    ru: '',\r\n    hy: '',\r\n    fi: '',\r\n    ka: '',\r\n    he: '',\r\n    ar: '',\r\n    ur: '',\r\n    hi: '',\r\n    ta: '',\r\n    ml: '',\r\n    te: '',\r\n    kn: '',\r\n    bn: '',\r\n    id: '',\r\n    'zh-CN': '',\r\n    'zh-HK': '',\r\n    ja: '',\r\n    ko: '',\r\n  },\r\n  T_soundPhraseBlock: {\r\n    'en-US':\r\n      \"On each trial you'll hear a sentence, and then you'll be asked to remember two of the words. The sound is distorted and may be hard to recognize, so you can't get them all right. Don't worry. Just treat it as a game and do your best. Good luck. Hit RETURN or click PROCEED to continue.\\n\\nThe PROCEED button will disappear immediately, and the experiment will begin once the sounds are loaded, which takes 40 seconds or longer, depending on the speed of the internet connection. We are working to shorten this delay in a future release.\\n\\nLoading sounds ...\",\r\n    de: 'Bei jedem Versuch hören Sie einen Satz und dann werden Sie gebeten, sich an zwei der Wörter zu erinnern. Der Klang ist verzerrt und kann schwer zu erkennen sein, sodass Sie sie nicht in Ordnung bringen können. Mach dir keine Sorge. Behandle es einfach als Spiel und gib dein Bestes. Viel Glück. Klicken Sie auf die Rückgabe oder klicken Sie auf fort, um fortzufahren.\\n\\nDie Taste für die Ausführung verschwindet sofort und das Experiment beginnt, sobald die Geräusche geladen sind, was je nach Geschwindigkeit der Internetverbindung 40 Sekunden oder länger dauert. Wir arbeiten daran, diese Verzögerung in einer zukünftigen Veröffentlichung zu verkürzen.\\n\\nLadegeräusche ...',\r\n    fr: \"À chaque procès, vous entendrez une phrase, puis vous vous demandez de vous souvenir de deux des mots. Le son est déformé et peut être difficile à reconnaître, vous ne pouvez donc pas les bien faire. Ne t'inquiète pas. Traitez-le simplement comme un jeu et faites de votre mieux. Bonne chance. Appuyez sur Retour ou cliquez sur Continuer pour continuer.\\n\\nLe bouton Procéder disparaîtra immédiatement et l'expérience commencera une fois les sons chargés, ce qui prend 40 secondes ou plus, selon la vitesse de la connexion Internet. Nous travaillons à raccourcir ce retard dans une version future.\\n\\nChargement des sons ...\",\r\n    es: 'En cada prueba, escuchará una oración, y luego se le pedirá que recuerde dos de las palabras. El sonido está distorsionado y puede ser difícil de reconocer, por lo que no puede hacerlos todo bien. No te preocupes. Solo trátelo como un juego y haz tu mejor esfuerzo. Buena suerte. Presione la devolución o haga clic en continuar para continuar.\\n\\nEl botón proceder desaparecerá inmediatamente, y el experimento comenzará una vez que se carguen los sonidos, que tarda 40 segundos o más, dependiendo de la velocidad de la conexión a Internet. Estamos trabajando para acortar este retraso en un lanzamiento futuro.\\n\\nCargando sonidos ...',\r\n    pt: 'Em cada tentativa, você ouvirá uma frase e, em seguida, será solicitado a se lembrar de duas das palavras. O som é distorcido e pode ser difícil de reconhecer, para que você não possa acertar tudo. Não se preocupe. Apenas trate -o como um jogo e faça o seu melhor. Boa sorte. Pressione o retorno ou clique em prosseguir para continuar.\\n\\nO botão Procena desaparecerá imediatamente e o experimento começará assim que os sons forem carregados, o que leva 40 segundos ou mais, dependendo da velocidade da conexão com a Internet. Estamos trabalhando para reduzir esse atraso em um lançamento futuro.\\n\\nSons de carregamento ...',\r\n    it: \"Ad ogni prova sentirai una frase e poi ti verrà chiesto di ricordare due delle parole. Il suono è distorto e potrebbe essere difficile da riconoscere, quindi non puoi farlo bene. Non preoccuparti. Trattalo come un gioco e fai del tuo meglio. Buona fortuna. Premi reso o fai clic su procedi per continuare.\\n\\nIl pulsante di procedimento scomparirà immediatamente e l'esperimento inizierà una volta caricati i suoni, il che richiede 40 secondi o più, a seconda della velocità della connessione Internet. Stiamo lavorando per abbreviare questo ritardo in una versione futura.\\n\\nCaricamento dei suoni ...\",\r\n    ro: 'La fiecare proces veți auzi o propoziție și atunci vi se va cere să vă amintiți două dintre cuvinte. Sunetul este distorsionat și poate fi greu de recunoscut, astfel încât nu le puteți obține bine. Nu vă faceți griji. Tratează -l doar ca un joc și fă tot posibilul. Noroc. Apăsați Return sau faceți clic pe Continuă pentru a continua.\\n\\nButonul continuu va dispărea imediat, iar experimentul va începe odată ce sunetele vor fi încărcate, ceea ce durează 40 de secunde sau mai mult, în funcție de viteza conexiunii la internet. Lucrăm pentru a reduce această întârziere într -o versiune viitoare.\\n\\nÎncărcarea sunetelor ...',\r\n    pl: 'Podczas każdej próby usłyszysz zdanie, a następnie zostaniesz poproszony o zapamiętanie dwóch słów. Dźwięk jest zniekształcony i może być trudny do rozpoznania, więc nie możesz ich poprawić. Nie martw się. Po prostu traktuj to jako grę i daj z siebie wszystko. Powodzenia. Naciśnij zwrot lub kliknij, kontynuuj.\\n\\nPrzycisk Przestrzeń zniknie natychmiast, a eksperyment rozpocznie się po załadowaniu dźwięków, co zajmuje 40 sekund lub dłużej, w zależności od prędkości połączenia internetowego. Pracujemy nad skróceniem tego opóźnienia w przyszłym wydaniu.\\n\\nŁadowanie dźwięków ...',\r\n    ru: 'На каждом испытании вы услышите предложение, а затем вас попросят вспомнить два слова. Звук искажен и может быть трудно узнать, поэтому вы не можете получить их в порядке. Не волнуйся. Просто относитесь к этому как к игре и сделайте все возможное. Удачи. Нажмите возврат или нажмите, продолжайте, чтобы продолжить.\\n\\nКнопка продолжения сразу исчезнет, ​​и эксперимент начнется после загрузки звуков, что займет 40 или дольше, в зависимости от скорости подключения к Интернету. Мы работаем, чтобы сократить эту задержку в будущем.\\n\\nЗвуки загрузки ...',\r\n    hy: 'Յուրաքանչյուր դատաքննության ընթացքում դուք կիմանաք մի նախադասություն, եւ այդ ժամանակ ձեզանից կառաջարկվի հիշել բառերից երկուսը: Ձայնը աղավաղվում է եւ կարող է դժվար լինել ճանաչել, այնպես որ դուք չեք կարող դրանք ճիշտ ստանալ: Մի անհանգստացեք: Պարզապես վերաբերվեք դրան որպես խաղ եւ արեք հնարավորը: Հաջողություն. Հիթ վերադարձը կամ կտտացրեք Շարունակել շարունակելու համար:\\n\\nՇարունակվող կոճակը անմիջապես կվերանա, եւ փորձը կսկսվի այն ժամանակ, երբ հնչյունները բեռնվեն, ինչը տեւում է 40 վայրկյան կամ ավելի երկար, կախված ինտերնետային կապի արագությունից: Մենք աշխատում ենք կարճացնել այս ձգձգումը հետագա թողարկումում:\\n\\nՁայնի բեռնումը ...',\r\n    fi: 'Jokaisessa kokeessa kuulet lauseen, ja sitten sinua pyydetään muistamaan kaksi sanaa. Ääni on vääristynyt ja se voi olla vaikea tunnistaa, joten et voi saada niitä kaikki hyvin. Älä huoli. Käsittele sitä vain pelinä ja tee parhaasi. Onnea. Paina palauta tai napsauta Jatka.\\n\\nJatka -painike katoaa heti, ja koe alkaa, kun äänet on ladattu, mikä vie 40 sekuntia tai pidempään Internet -yhteyden nopeudesta riippuen. Pyrimme lyhentämään tätä viivettä tulevassa julkaisussa.\\n\\nÄänien lataaminen ...',\r\n    ka: 'თითოეულ სასამართლო პროცესზე მოისმენთ წინადადებას, შემდეგ კი მოგეთხოვებათ ორი სიტყვის დამახსოვრება. ხმა დამახინჯებულია და შეიძლება ძნელად აღიაროთ, ასე რომ თქვენ ვერ მიიღებთ მათ. არ ინერვიულო. უბრალოდ მოექეცი მას როგორც თამაშს და გააკეთე ყველაფერი. Წარმატებები. დააჭირეთ დაბრუნებას ან დააჭირეთ გააგრძელეთ გასაგრძელებლად.\\n\\nგაშვების ღილაკი დაუყოვნებლივ გაქრება და ექსპერიმენტი დაიწყება ბგერების დატვირთვის შემდეგ, რაც 40 წამს ან მეტხანს სჭირდება, რაც დამოკიდებულია ინტერნეტ კავშირის სიჩქარეზე. ჩვენ ვმუშაობთ ამ შეფერხების შემცირებისთვის მომავალში.\\n\\nჩატვირთვა ხმები ...',\r\n    he: 'בכל משפט תשמע משפט ואז תתבקש לזכור שתיים מהמילים. הצליל מעוות ועשוי להיות קשה לזהות, כך שלא תוכלו להשיג אותם בסדר. אל תדאג. פשוט התייחסו אליו כאל משחק ועשו כמיטב יכולתכם. בהצלחה. לחץ על החזרה או לחץ על המשך כדי להמשיך.\\n\\nכפתור ההמשך ייעלם מייד והניסוי יתחיל ברגע שהצלילים יועברו, שנמשך 40 שניות ומעלה, תלוי במהירות החיבור לאינטרנט. אנו פועלים לקצר את העיכוב הזה במהדורה עתידית.\\n\\nטוען צלילי ...',\r\n    ar: 'في كل تجربة ، ستسمع جملة ، وبعد ذلك يُطلب منك تذكر اثنين من الكلمتين. الصوت مشوه وقد يكون من الصعب التعرف عليه ، لذلك لا يمكنك الحصول عليها على ما يرام. لا تقلق. فقط تعامل معها على أنها لعبة وأبذل قصارى جهدك. حظ سعيد. اضغط على الإرجاع أو انقر فوق متابعة للمتابعة.\\n\\nسيختفي زر المتابعة على الفور ، وستبدأ التجربة بمجرد تحميل الأصوات ، والتي تستغرق 40 ثانية أو أكثر ، اعتمادًا على سرعة اتصال الإنترنت. نحن نعمل على تقصير هذا التأخير في إصدار مستقبلي.\\n\\nتحميل الأصوات ...',\r\n    ur: 'ہر آزمائش پر آپ کو ایک جملہ سنیں گے ، اور پھر آپ سے دو الفاظ کو یاد رکھنے کے لئے کہا جائے گا۔ آواز کو مسخ کردیا گیا ہے اور اسے پہچاننا مشکل ہوسکتا ہے ، لہذا آپ ان سب کو ٹھیک نہیں کرسکتے ہیں۔ فکر نہ کرو۔ بس اسے ایک کھیل کی طرح سلوک کریں اور اپنی پوری کوشش کریں۔ اچھی قسمت. ریٹرن کو دبائیں یا جاری رکھنے کے لئے آگے بڑھنے پر کلک کریں۔\\n\\nایڈوانس بٹن فوری طور پر ختم ہوجائے گا ، اور انٹرنیٹ کنکشن کی رفتار پر منحصر ہے ، آواز بھری ہوئی ایک بار جب 40 سیکنڈ یا اس سے زیادہ وقت لگتا ہے تو تجربہ شروع ہوجائے گا۔ ہم آئندہ کی رہائی میں اس تاخیر کو مختصر کرنے کے لئے کام کر رہے ہیں۔\\n\\nآوازیں لوڈ ہو رہی ہیں ...',\r\n    hi: 'प्रत्येक परीक्षण पर आप एक वाक्य सुनेंगे, और फिर आपको दो शब्दों को याद रखने के लिए कहा जाएगा। ध्वनि विकृत है और पहचानना मुश्किल हो सकता है, इसलिए आप उन्हें ठीक नहीं कर सकते। चिंता मत करो। बस इसे एक खेल के रूप में मानें और अपना सर्वश्रेष्ठ करें। आपको कामयाबी मिले। रिटर्न हिट करें या जारी रखने के लिए आगे बढ़ें पर क्लिक करें।\\n\\nआगे बटन तुरंत गायब हो जाएगा, और ध्वनि लोड होने के बाद प्रयोग शुरू हो जाएगा, जिसमें इंटरनेट कनेक्शन की गति के आधार पर 40 सेकंड या उससे अधिक समय लगता है। हम भविष्य की रिलीज में इस देरी को कम करने के लिए काम कर रहे हैं।\\n\\nलोड हो रहा है ...',\r\n    ta: 'ஒவ்வொரு சோதனையிலும் நீங்கள் ஒரு வாக்கியத்தைக் கேட்பீர்கள், பின்னர் இரண்டு சொற்களை நினைவில் கொள்ளும்படி கேட்கப்படுவீர்கள். ஒலி சிதைந்துவிட்டது மற்றும் அடையாளம் காண கடினமாக இருக்கலாம், எனவே நீங்கள் அவற்றை சரியாகப் பெற முடியாது. கவலைப்பட வேண்டாம். அதை ஒரு விளையாட்டாகக் கருதி, உங்கள் சிறந்ததைச் செய்யுங்கள். நல்ல அதிர்ஷ்டம். திரும்பவும் அல்லது தொடர தொடரவும் என்பதைக் கிளிக் செய்க.\\n\\nதொடர பொத்தானை உடனடியாக மறைந்துவிடும், மேலும் ஒலிகள் ஏற்றப்பட்டவுடன் சோதனை தொடங்கும், இது இணைய இணைப்பின் வேகத்தைப் பொறுத்து 40 வினாடிகள் அல்லது அதற்கு மேற்பட்ட நேரம் ஆகும். எதிர்கால வெளியீட்டில் இந்த தாமதத்தை குறைக்க நாங்கள் பணியாற்றி வருகிறோம்.\\n\\nஒலிகளை ஏற்றுகிறது ...',\r\n    ml: 'ഓരോ ട്രിപ്പിലും നിങ്ങൾ ഒരു വാചകം കേൾക്കും, എന്നിട്ട് നിങ്ങൾ രണ്ടു വാക്കുകൾ ഓർക്കാൻ നിങ്ങളോട് ആവശ്യപ്പെടും. ശബ്ദം വികലമാണ്, തിരിച്ചറിയാൻ പ്രയാസമാണ്, അതിനാൽ നിങ്ങൾക്ക് അവ ശരിയാക്കാൻ കഴിയില്ല. വിഷമിക്കേണ്ട. ഇത് ഒരു ഗെയിമായി പരിഗണിച്ച് നിങ്ങളുടെ പരമാവധി ചെയ്യുക. നല്ലതുവരട്ടെ. മടങ്ങിവരവ് അമർത്തുക അല്ലെങ്കിൽ തുടരാൻ തുടരുക ക്ലിക്കുചെയ്യുക.\\n\\nആംവർ ബട്ടൺ ഉടനടി അപ്രത്യക്ഷമാകും, മാത്രമല്ല ഇത് ഇന്റർനെറ്റ് കണക്ഷന്റെ വേഗതയെ ആശ്രയിച്ച് 40 സെക്കൻഡോ അതിൽ കൂടുതലോ എടുക്കും. ഭാവിയിലെ ഒരു റിലീസിൽ ഈ കാലതാമസം ചുരുക്കുന്നതിന് ഞങ്ങൾ പ്രവർത്തിക്കുന്നു.\\n\\nലോഡുചെയ്യുന്നു ...',\r\n    te: 'ప్రతి ట్రయల్‌లో మీరు ఒక వాక్యాన్ని వింటారు, ఆపై మీరు రెండు పదాలను గుర్తుంచుకోవాలని అడుగుతారు. ధ్వని వక్రీకరించబడింది మరియు గుర్తించడం కష్టం, కాబట్టి మీరు అవన్నీ సరిగ్గా పొందలేరు. చింతించకండి. దీన్ని ఆటగా పరిగణించండి మరియు మీ వంతు కృషి చేయండి. అదృష్టం. రిటర్న్ నొక్కండి లేదా కొనసాగించడానికి కొనసాగండి క్లిక్ చేయండి.\\n\\nఇంటర్నెట్ కనెక్షన్ యొక్క వేగాన్ని బట్టి శబ్దాలు లోడ్ అయిన తర్వాత ప్రయోగం వెంటనే అదృశ్యమవుతుంది మరియు శబ్దాలు లోడ్ అయిన తర్వాత ప్రయోగం ప్రారంభమవుతుంది. భవిష్యత్ విడుదలలో ఈ ఆలస్యాన్ని తగ్గించడానికి మేము కృషి చేస్తున్నాము.\\n\\nశబ్దాలు లోడ్ అవుతోంది ...',\r\n    kn: 'ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ ನೀವು ಒಂದು ವಾಕ್ಯವನ್ನು ಕೇಳುತ್ತೀರಿ, ಮತ್ತು ನಂತರ ಎರಡು ಪದಗಳನ್ನು ನೆನಪಿಟ್ಟುಕೊಳ್ಳಲು ನಿಮ್ಮನ್ನು ಕೇಳಲಾಗುತ್ತದೆ. ಶಬ್ದವು ವಿರೂಪಗೊಂಡಿದೆ ಮತ್ತು ಗುರುತಿಸಲು ಕಷ್ಟವಾಗಬಹುದು, ಆದ್ದರಿಂದ ನೀವು ಎಲ್ಲವನ್ನೂ ಸರಿಯಾಗಿ ಪಡೆಯಲು ಸಾಧ್ಯವಿಲ್ಲ. ಚಿಂತಿಸಬೇಡಿ. ಅದನ್ನು ಆಟವಾಗಿ ಪರಿಗಣಿಸಿ ಮತ್ತು ನಿಮ್ಮ ಕೈಲಾದಷ್ಟು ಮಾಡಿ. ಒಳ್ಳೆಯದಾಗಲಿ. ರಿಟರ್ನ್ ಒತ್ತಿರಿ ಅಥವಾ ಮುಂದುವರಿಯಲು ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ.\\n\\nಮುಂದುವರಿಯುವ ಬಟನ್ ತಕ್ಷಣವೇ ಕಣ್ಮರೆಯಾಗುತ್ತದೆ, ಮತ್ತು ಶಬ್ದಗಳನ್ನು ಲೋಡ್ ಮಾಡಿದ ನಂತರ ಪ್ರಯೋಗವು ಪ್ರಾರಂಭವಾಗುತ್ತದೆ, ಇದು ಇಂಟರ್ನೆಟ್ ಸಂಪರ್ಕದ ವೇಗವನ್ನು ಅವಲಂಬಿಸಿ 40 ಸೆಕೆಂಡುಗಳು ಅಥವಾ ಅದಕ್ಕಿಂತ ಹೆಚ್ಚು ಸಮಯ ತೆಗೆದುಕೊಳ್ಳುತ್ತದೆ. ಭವಿಷ್ಯದ ಬಿಡುಗಡೆಯಲ್ಲಿ ಈ ವಿಳಂಬವನ್ನು ಕಡಿಮೆ ಮಾಡಲು ನಾವು ಕೆಲಸ ಮಾಡುತ್ತಿದ್ದೇವೆ.\\n\\nಶಬ್ದಗಳನ್ನು ಲೋಡ್ ಮಾಡಲಾಗುತ್ತಿದೆ ...',\r\n    bn: 'প্রতিটি পরীক্ষায় আপনি একটি বাক্য শুনতে পাবেন এবং তারপরে আপনাকে দুটি শব্দ মনে রাখতে বলা হবে। শব্দটি বিকৃত এবং এটি সনাক্ত করা শক্ত হতে পারে, তাই আপনি এগুলি সব ঠিকঠাক পেতে পারেন না। চিন্তা করবেন না। এটি কেবল একটি গেম হিসাবে বিবেচনা করুন এবং আপনার সেরাটি করুন। শুভকামনা। হিট রিটার্ন বা চালিয়ে যেতে ক্লিক করুন।\\n\\nপ্রসেস বোতামটি অবিলম্বে অদৃশ্য হয়ে যাবে এবং শব্দগুলি লোড হয়ে গেলে পরীক্ষাটি শুরু হবে, যা ইন্টারনেট সংযোগের গতির উপর নির্ভর করে 40 সেকেন্ড বা তার বেশি সময় নেয়। আমরা ভবিষ্যতের প্রকাশে এই বিলম্বটি সংক্ষিপ্ত করার জন্য কাজ করছি।\\n\\nলোডিং শব্দ ...',\r\n    id: 'Pada setiap percobaan Anda akan mendengar kalimat, dan kemudian Anda akan diminta untuk mengingat dua kata. Suara itu terdistorsi dan mungkin sulit dikenali, jadi Anda tidak bisa mendapatkannya dengan benar. Jangan khawatir. Perlakukan saja sebagai permainan dan lakukan yang terbaik. Semoga beruntung. Tekan Pengembalian atau Klik Lanjutkan untuk melanjutkan.\\n\\nTombol Prosed akan segera hilang, dan percobaan akan dimulai setelah suara dimuat, yang membutuhkan waktu 40 detik atau lebih, tergantung pada kecepatan koneksi internet. Kami berupaya mempersingkat penundaan ini dalam rilis di masa mendatang.\\n\\nMemuat suara ...',\r\n    'zh-CN':\r\n      '在每个审判中，您都会听到一句话，然后您会被要求记住两个单词。声音被扭曲，可能很难识别，因此您无法使它们正确。不用担心。只需将其视为游戏，并尽力而为。祝你好运。点击返回或单击继续继续进行。\\n\\n继续按钮将立即消失，一旦加载声音，实验将开始，这取决于Internet连接的速度，需要40秒或更长时间。我们正在努力在以后的版本中缩短这一延迟。\\n\\n加载声音...',\r\n    'zh-HK':\r\n      '在每個審判中，您都會聽到一句話，然後您會被要求記住兩個單詞。聲音被扭曲，可能很難識別，因此您無法使它們正確。不用擔心。只需將其視為遊戲，並儘力而為。祝你好運。點擊返回或單擊繼續繼續進行。\\n\\n繼續按鈕將立即消失，一旦加載聲音，實驗將開始，這取決於Internet連接的速度，需要40秒或更長時間。我們正在努力在以後的版本中縮短這一延遲。\\n\\n加載聲音...',\r\n    ja: '各トライアルで、文が聞こえると、2つの単語を覚えておくように求められます。音は歪んでおり、認識が難しいかもしれないので、それらをすべて正しくすることはできません。心配しないで。それをゲームとして扱って、最善を尽くしてください。幸運を。戻るかクリックして続行して続行します。\\n\\n続行ボタンはすぐに消え、インターネット接続の速度に応じて、サウンドがロードされると実験が開始されます。将来のリリースでこの遅延を短縮するために取り組んでいます。\\n\\n音の読み込み...',\r\n    ko: '각 시험에서 문장을 듣고 두 단어를 기억하도록 요청받을 것입니다. 소리가 왜곡되어 인식하기 어려울 수 있으므로 올바르게 얻을 수는 없습니다. 괜찮아요. 게임으로 취급하고 최선을 다하십시오. 행운을 빌어요. 반품을 누르거나 계속 진행하려면 진행하십시오.\\n\\n진행 버튼은 즉시 사라지고 사운드가로드되면 실험이 시작되며 인터넷 연결 속도에 따라 40 초 이상이 걸립니다. 우리는 향후 릴리스 에서이 지연을 단축하기 위해 노력하고 있습니다.\\n\\n소리로드 ...',\r\n  },\r\n  T_soundPhraseResponse: {\r\n    'en-US':\r\n      'You just heard this sentence. Please select words from the two menus to fill in the missing words.',\r\n    de: 'Sie haben gerade diesen Satz gehört. Bitte wählen Sie Wörter aus den beiden Menüs aus, um die fehlenden Wörter auszufüllen.',\r\n    fr: \"Vous venez d'entendre cette phrase. Veuillez sélectionner des mots dans les deux menus pour remplir les mots manquants.\",\r\n    es: 'Acabo de escuchar esta oración. Seleccione palabras de los dos menús para completar las palabras faltantes.',\r\n    pt: 'Você acabou de ouvir essa frase. Selecione as palavras dos dois menus para preencher as palavras que faltam.',\r\n    it: 'Hai appena sentito questa frase. Seleziona le parole dai due menu per riempire le parole mancanti.',\r\n    ro: 'Tocmai ai auzit această propoziție. Vă rugăm să selectați cuvinte din cele două meniuri pentru a completa cuvintele care lipsesc.',\r\n    pl: 'Właśnie usłyszałeś to zdanie. Wybierz słowa z dwóch menu, aby wypełnić brakujące słowa.',\r\n    ru: 'Вы только что услышали это предложение. Пожалуйста, выберите слова из двух меню, чтобы заполнить пропущенные слова.',\r\n    hy: 'Դուք պարզապես լսել եք այս նախադասությունը: Խնդրում ենք երկու ընտրացանկից բառեր ընտրել բացակայող բառերը լրացնելու համար:',\r\n    fi: 'Kuulit juuri tämän lauseen. Valitse kahdesta valikosta sanat täyttämään puuttuvat sanat.',\r\n    ka: 'თქვენ უბრალოდ გსმენიათ ეს წინადადება. გთხოვთ, შეარჩიოთ სიტყვები ორი მენიუდან, რომ შეავსოთ დაკარგული სიტყვები.',\r\n    he: 'פשוט שמעת את המשפט הזה. אנא בחר מילים משני התפריטים כדי למלא את המילים החסרות.',\r\n    ar: 'لقد سمعت للتو هذه الجملة. يرجى تحديد كلمات من القوائم لملء الكلمات المفقودة.',\r\n    ur: 'آپ نے ابھی یہ جملہ سنا ہے۔ براہ کرم گمشدہ الفاظ کو پُر کرنے کے لئے دو مینو کے الفاظ منتخب کریں۔',\r\n    hi: 'आपने अभी यह वाक्य सुना है। कृपया लापता शब्दों को भरने के लिए दो मेनू से शब्दों का चयन करें।',\r\n    ta: 'இந்த வாக்கியத்தை நீங்கள் கேட்டீர்கள். காணாமல் போன சொற்களை நிரப்ப இரண்டு மெனுக்களிலிருந்து சொற்களைத் தேர்ந்தெடுக்கவும்.',\r\n    ml: 'നിങ്ങൾ ഈ ശിക്ഷ കേട്ടു. കാണാതായ വാക്കുകൾ പൂരിപ്പിക്കുന്നതിന് രണ്ട് മെനുകൾ മുതൽ ദയവായി വാക്കുകൾ തിരഞ്ഞെടുക്കുക.',\r\n    te: 'మీరు ఈ వాక్యాన్ని విన్నారు. తప్పిపోయిన పదాలను పూరించడానికి దయచేసి రెండు మెనూల నుండి పదాలను ఎంచుకోండి.',\r\n    kn: 'ನೀವು ಈ ವಾಕ್ಯವನ್ನು ಕೇಳಿದ್ದೀರಿ. ಕಾಣೆಯಾದ ಪದಗಳನ್ನು ತುಂಬಲು ದಯವಿಟ್ಟು ಎರಡು ಮೆನುಗಳ ಪದಗಳನ್ನು ಆಯ್ಕೆಮಾಡಿ.',\r\n    bn: 'আপনি এই বাক্যটি শুনেছেন। অনুপস্থিত শব্দগুলি পূরণ করতে দয়া করে দুটি মেনু থেকে শব্দ নির্বাচন করুন।',\r\n    id: 'Anda baru saja mendengar kalimat ini. Pilih kata -kata dari dua menu untuk mengisi kata -kata yang hilang.',\r\n    'zh-CN': '您刚刚听到这句话。请从两个菜单中选择单词以填写缺失的单词。',\r\n    'zh-HK': '您剛剛聽到這句話。請從兩個菜單中選擇單詞以填寫缺失的單詞。',\r\n    ja: 'この文章を聞いたばかりです。 2つのメニューから単語を選択して、不足している単語を入力してください。',\r\n    ko: '방금이 문장을 들었습니다. 누락 된 단어를 채우려면 두 메뉴에서 단어를 선택하십시오.',\r\n  },\r\n  T_soundPhraseTrial: {\r\n    'en-US': 'Hit the SPACE bar to hear the next sentence',\r\n    de: 'Schlagen Sie die Space Bar, um den nächsten Satz zu hören',\r\n    fr: \"Frappez la barre d'espace pour entendre la phrase suivante\",\r\n    es: 'Golpea la barra espacial para escuchar la siguiente oración',\r\n    pt: 'Bata na barra de espaço para ouvir a próxima frase',\r\n    it: 'Colpisci la barra spaziale per ascoltare la frase successiva',\r\n    ro: 'Loviți bara spațială pentru a auzi următoarea propoziție',\r\n    pl: 'Uderz w kosmos, aby usłyszeć następne zdanie',\r\n    ru: 'Ударьте космический планку, чтобы услышать следующее предложение',\r\n    hy: 'Հարվածեք տիեզերական սանդղակը `հաջորդ նախադասությունը լսելու համար',\r\n    fi: 'Osu avaruuspalkki kuullaksesi seuraavan lauseen',\r\n    ka: 'მოხვდით კოსმოსურ ზოლს შემდეგი წინადადების მოსასმენად',\r\n    he: 'פגע בסרגל החלל כדי לשמוע את המשפט הבא',\r\n    ar: 'اضغط على شريط الفضاء لسماع الجملة التالية',\r\n    ur: 'اگلے جملے کو سننے کے لئے اسپیس بار کو مارو',\r\n    hi: 'अगला वाक्य सुनने के लिए स्पेस बार को मारो',\r\n    ta: 'அடுத்த வாக்கியத்தைக் கேட்க விண்வெளி பட்டியைத் தாக்கவும்',\r\n    ml: 'അടുത്ത വാചകം കേൾക്കാൻ ബഹിരാകാശ ബാർ അമർത്തുക',\r\n    te: 'తదుపరి వాక్యాన్ని వినడానికి స్పేస్ బార్‌ను నొక్కండి',\r\n    kn: 'ಮುಂದಿನ ವಾಕ್ಯವನ್ನು ಕೇಳಲು ಬಾಹ್ಯಾಕಾಶ ಪಟ್ಟಿಯನ್ನು ಒತ್ತಿರಿ',\r\n    bn: 'পরবর্তী বাক্যটি শুনতে স্পেস বারে আঘাত করুন',\r\n    id: 'Tekan Space Bar untuk mendengar kalimat berikutnya',\r\n    'zh-CN': '登上太空酒吧听下一句话',\r\n    'zh-HK': '登上太空酒吧聽下一句話',\r\n    ja: '次の文を聞くためにスペースバーを押してください',\r\n    ko: '다음 문장을 들으려면 우주 막대를 치십시오',\r\n  },\r\n  T_takeABreakPopup: {\r\n    'en-US': 'Good work! Please take a moment to relax and blink.',\r\n    de: 'Gute Arbeit! Bitte nehmen Sie sich einen Moment Zeit, um sich zu entspannen und zu blinken.',\r\n    fr: 'Bon travail! Veuillez prendre un moment pour vous détendre et cligner des yeux.',\r\n    es: '¡Buen trabajo! Tómese un momento para relajarse y parpadear.',\r\n    pt: 'Bom trabalho! Por favor, reserve um momento para relaxar e piscar.',\r\n    it: 'Buon lavoro! Per favore, prenditi un momento per rilassarti e sbattere le palpebre.',\r\n    ro: 'Buna treaba! Vă rugăm să luați un moment pentru a vă relaxa și a clipi.',\r\n    pl: 'Dobra robota! Poświęć chwilę na relaks i mrugnięcie.',\r\n    ru: 'Хорошая работа! Пожалуйста, найдите время, чтобы расслабиться и моргнуть.',\r\n    hy: 'Լավ գործ է! Խնդրում ենք մի պահ հանգստանալ եւ թարթել:',\r\n    fi: 'Hyvää työtä! Ota hetki rentoutua ja vilkkua.',\r\n    ka: 'Კარგი ნამუშევარია! გთხოვთ, ერთი წუთით დაისვენოთ და მოციმციმე.',\r\n    he: 'עבודה טובה! אנא קח רגע להירגע ולהבהב.',\r\n    ar: 'عمل جيد! من فضلك خذ لحظة للاسترخاء وميض.',\r\n    ur: 'اچھا کام! براہ کرم آرام اور پلک جھپکنے میں ایک لمحہ لگائیں۔',\r\n    hi: 'अच्छा काम! कृपया आराम करने और पलक झपकने के लिए एक पल लें।',\r\n    ta: 'நல்ல வேலை! தயவுசெய்து ஓய்வெடுக்க சிறிது நேரம் ஒதுக்குங்கள்.',\r\n    ml: 'നല്ല ജോലി! വിശ്രമിക്കാനും മിന്നിത്തിളങ്ങാനും ദയവായി ഒരു നിമിഷം എടുക്കുക.',\r\n    te: 'మంచి పని! దయచేసి విశ్రాంతి తీసుకోవడానికి మరియు రెప్పపాటు చేయడానికి కొంత సమయం కేటాయించండి.',\r\n    kn: 'ಒಳ್ಳೆಯ ಕೆಲಸ! ದಯವಿಟ್ಟು ವಿಶ್ರಾಂತಿ ಮತ್ತು ಮಿಟುಕಿಸಲು ಸ್ವಲ್ಪ ಸಮಯ ತೆಗೆದುಕೊಳ್ಳಿ.',\r\n    bn: 'ভাল কাজ! শিথিল এবং ঝলকানোর জন্য দয়া করে কিছুক্ষণ সময় নিন।',\r\n    id: 'Kerja bagus! Mohon luangkan waktu sejenak untuk bersantai dan berkedip.',\r\n    'zh-CN': '干得好！请短暂的休息一下，眨眨眼放轻松。',\r\n    'zh-HK': '幹得好！請短暫的休息一下，眨眨眼放輕鬆。',\r\n    ja: 'よくできました！少し時間をかけてリラックスして点滅してください。',\r\n    ko: '잘 했어! 잠시 휴식을 취하고 깜박이십시오.',\r\n  },\r\n  T_thresholdBeginBlock: {\r\n    'en-US':\r\n      'You are about to start a block of xxx trials. A triplet of three letters will appear in each trial, for example: Z R N. Please report only the middle letter,',\r\n    de: 'Sie sind dabei, einen Block von xxx-Testversionen zu beginnen. Jeder Versuch enthält drei Buchstaben, wie z. B.: Z R N. Bitte melden Sie nur den mittleren Buchstaben,',\r\n    fr: \"Vous êtes sur le point de commencer un bloc d'essais xxx. Chaque essai présentera trois lettres, comme ceci : Z R N. Veuillez ne signaler que la lettre du milieu,\",\r\n    es: 'Estas a punto de comenzar un bloque de xxx ensayos. En cada ensayo, presentaremos tres letras, asi: Z R N. Por favor, reporta solo la letra del medio,',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Em cada ensaio, apresentaremos três letras também: Z R N. Por favor, relate apenas a letra do meio,',\r\n    it: 'Stai per iniziare un blocco di xxx prove. Ogni prova presenterà tre lettere, in questo modo: Z R N. Devi riportare solo la lettera centrale,',\r\n    ro: 'Sunteți pe cale să începeți un bloc de încercări xxx. În fiecare eseu, vom prezenta și trei scrisori: Z R N. Vă rugăm să raportați doar scrisoarea mediului,',\r\n    pl: 'Zamierzasz rozpocząć blok testów xxx. Każda próba zawiera trzy litery, takie jak: Z R N. Proszę podać tylko środkową literę',\r\n    ru: 'Вы собираетесь начать серию из ххх испытаний. В каждом испытании будут представлены три буквы, например: Z R N. Пожалуйста, укажите только среднюю букву,',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx թեստերի շարք: Յուրաքանչյուր թեստում կներկայացվեն երեք նամակ, օրինակ `z r n. Խնդրում ենք նշել միայն միջին տառը,',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Kolmen kirjaimen kolminkertainen näkyy jokaisessa kokeessa, esimerkiksi: Z R N. Ilmoita vain keskikirjeestä,',\r\n    ka: 'თქვენ აპირებთ xxx კვლევების ბლოკის დაწყებას. სამი ასოების სამეული გამოჩნდება თითოეულ სასამართლო პროცესზე, მაგალითად: Z R N. გთხოვთ, შეატყობინოთ მხოლოდ შუა წერილს,',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויי xxx. כל משפט יציג שלוש אותיות, כך: Z R N. אנא דווחו רק על האות האמצעית,',\r\n    ar: 'أنت على وشك بدء مجموعة من تجارب xxx. ستقدم كل تجربة ثلاثة أحرف ، على النحو التالي: Z R N. يرجى الإبلاغ عن الحرف الأوسط فقط ،',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ ہر آزمائشی تین خطوط پیش کرے گا ، جیسے: Z R N. براہ کرم صرف درمیانی خط کی اطلاع دیں ،',\r\n    hi: 'आप xxx ट्राइअलों का एक ब्लॉक शुरू करने वाले हैं। प्रत्येक ट्राइअल तीन अक्षर प्रस्तुत करेगा, जैसे: Z R N. कृपया केवल मध्य अक्षर को रिपोर्ट करें,',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். ஒவ்வொரு சோதனையிலும் மூன்று எழுத்துக்களின் மும்மடங்கு தோன்றும், எடுத்துக்காட்டாக: Z R N. தயவுசெய்து நடுத்தர கடிதத்தை மட்டுமே புகாரளிக்கவும்,',\r\n    ml: 'നിങ്ങൾ xxx ട്രയലുകളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. ഓരോ ട്രിപ്പിലും മൂന്ന് അക്ഷരങ്ങളുടെ ഒരു മൂന്നിരട്ടി ദൃശ്യമാകും, ഉദാഹരണത്തിന്: z r N. ദയവായി മധ്യ കത്ത് മാത്രം റിപ്പോർട്ടുചെയ്യുക,',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. ప్రతి ట్రయల్‌లో మూడు అక్షరాల త్రిపాది కనిపిస్తుంది, ఉదాహరణకు: Z R N. దయచేసి మధ్య లేఖను మాత్రమే నివేదించండి,',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲಿ ಮೂರು ಅಕ್ಷರಗಳ ತ್ರಿವಳಿಗಳು ಕಾಣಿಸಿಕೊಳ್ಳುತ್ತವೆ, ಉದಾಹರಣೆಗೆ: z r n. ದಯವಿಟ್ಟು ಮಧ್ಯಮ ಅಕ್ಷರವನ್ನು ಮಾತ್ರ ವರದಿ ಮಾಡಿ,',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। প্রতিটি পরীক্ষায় তিনটি চিঠির একটি ট্রিপলেট উপস্থিত হবে, উদাহরণস্বরূপ: জেড আর এন। দয়া করে কেবল মাঝের চিঠির প্রতিবেদন করুন,',\r\n    id: 'Anda akan memulai blok uji coba xxx. Triplet dari tiga huruf akan muncul di setiap percobaan, misalnya: Z R N. Harap hanya melaporkan huruf tengahnya,',\r\n    'zh-CN':\r\n      '您即将开始进行一个含有xxx次试验的区组。每次试验将会有三个字母出现，比如：Z R N。请只报告中间的字母。',\r\n    'zh-HK':\r\n      '您即將開始進行一個含有xxx次試驗的區組。每次試驗將會有三個字母出現，比如：Z R N。請只報告中間的字母。',\r\n    ja: 'あなたはxxxテストのブロックを始めようとしています。各テストではこのように3文字が表示されます：Z R N。真ん中の文字だけを報告してください。',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 예를 들어 Z R N. 중간 편지 만보 고하십시오.',\r\n  },\r\n  T_thresholdMiddleLetterBeginBlock: {\r\n    'en-US':\r\n      'You are about to begin a block of xxx trials. A triplet of three letters will appear in each trial, for example: Z R N. Please report only the middle letter,',\r\n    de: 'Sie sind kurz davor, einen Block von xxx -Versuchen zu beginnen. In jedem Versuch wird ein Triplett von drei Buchstaben angezeigt, zum Beispiel: Z R N. Bitte melden Sie nur den mittleren Brief.',\r\n    fr: \"Vous êtes sur le point de commencer un bloc d'essais xxx. Un triplet de trois lettres apparaîtra dans chaque essai, par exemple: Z R N. Veuillez signaler uniquement la lettre du milieu,\",\r\n    es: 'You are about to begin a block of xxx trials. A triplet of three letters will appear in each trial, for example: Z R N. Please report only the middle letter,',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Um trigêmeo de três letras aparecerá em cada teste, por exemplo: Z R N. Por favor, relate apenas a carta do meio,',\r\n    it: 'Stai per iniziare un blocco di prove xxx. Una tripletta di tre lettere apparirà in ogni prova, ad esempio: Z R N. Segnala solo la lettera di mezzo,',\r\n    ro: 'Ești pe cale să începi un bloc de încercări xxx. În fiecare proces va apărea un triplet din trei scrisori, de exemplu: Z R N. Vă rugăm să raportați doar scrisoarea de mijloc,',\r\n    pl: 'Niedługo rozpoczniecie blok prób xxx. Triplet trzech liter pojawi się w każdej próbie, na przykład: Z R N. Proszę zgłosić tylko środkowy litera,',\r\n    ru: 'Вы собираетесь начать блок xxx испытаний. В каждом испытании появится тройка из трех букв: Z R N. Пожалуйста, сообщите только о средней букве,',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx փորձարկումների բլոկ: Յուրաքանչյուր փորձության մեջ կհայտնվի երեք տառի եռյակը, օրինակ, Z R N. Խնդրում ենք զեկուցել միայն միջին նամակը,',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Kolmen kirjaimen kolminkertainen näkyy jokaisessa kokeessa, esimerkiksi: Z R N. Ilmoita vain keskikirjeestä,',\r\n    ka: 'თქვენ დაიწყებთ xxx ტესტების ბლოკს. სამი ასოების სამეული გამოჩნდება თითოეულ სასამართლო პროცესზე, მაგალითად: Z R N. გთხოვთ, შეატყობინოთ მხოლოდ შუა წერილს,',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויים ב- xxx. שלישייה של שלוש מכתבים תופיע בכל ניסיון, למשל: Z r N. אנא דווח רק על המכתב האמצעי,',\r\n    ar: 'أنت على وشك البدء في كتلة من تجارب xxx. ستظهر ثلاثة أحرف من ثلاثة رسائل في كل تجربة ، على سبيل المثال: Z R N. يرجى الإبلاغ عن الرسالة الوسطى فقط ،',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ ہر آزمائش میں تین خطوط کا ایک ٹرپلٹ نظر آئے گا ، مثال کے طور پر: Z R N. براہ کرم صرف درمیانی خط کی اطلاع دیں ،',\r\n    hi: 'आप xxx परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। प्रत्येक परीक्षण में तीन पत्रों का एक ट्रिपल दिखाई देगा, उदाहरण के लिए: Z r N. कृपया केवल मध्य पत्र की रिपोर्ट करें,',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். ஒவ்வொரு சோதனையிலும் மூன்று எழுத்துக்களின் மும்மடங்கு தோன்றும், எடுத்துக்காட்டாக: Z R N. தயவுசெய்து நடுத்தர கடிதத்தை மட்டுமே புகாரளிக்கவும்,',\r\n    ml: 'നിങ്ങൾ xxx പരീക്ഷണങ്ങളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. ഓരോ ട്രിപ്പിലും മൂന്ന് അക്ഷരങ്ങളുടെ ഒരു മൂന്നിരട്ടി ദൃശ്യമാകും, ഉദാഹരണത്തിന്: z r N. ദയവായി മധ്യ കത്ത് മാത്രം റിപ്പോർട്ടുചെയ്യുക,',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. ప్రతి ట్రయల్‌లో మూడు అక్షరాల త్రిపాది కనిపిస్తుంది, ఉదాహరణకు: Z R N. దయచేసి మధ్య లేఖను మాత్రమే నివేదించండి,',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲಿ ಮೂರು ಅಕ್ಷರಗಳ ತ್ರಿವಳಿಗಳು ಕಾಣಿಸಿಕೊಳ್ಳುತ್ತವೆ, ಉದಾಹರಣೆಗೆ: z r n. ದಯವಿಟ್ಟು ಮಧ್ಯಮ ಅಕ್ಷರವನ್ನು ಮಾತ್ರ ವರದಿ ಮಾಡಿ,',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। প্রতিটি পরীক্ষায় তিনটি চিঠির একটি ট্রিপলেট উপস্থিত হবে, উদাহরণস্বরূপ: জেড আর এন। দয়া করে কেবল মাঝের চিঠির প্রতিবেদন করুন,',\r\n    id: 'Anda akan memulai blok uji coba xxx. Triplet dari tiga huruf akan muncul di setiap percobaan, misalnya: Z R N. Harap hanya melaporkan huruf tengahnya,',\r\n    'zh-CN':\r\n      '您即将开始一个xxx试验。每个试验中将出现三个字母的三胞胎，例如：z r n。请仅报告中间字母，',\r\n    'zh-HK':\r\n      '您即將開始一個xxx試驗。每個試驗中將出現三個字母的三胞胎，例如：z r n。請僅報告中間字母，',\r\n    ja: 'xxxトライアルのブロックを開始しようとしています。たとえば、各試行に3文字のトリプレットが表示されます。',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 예를 들어 Z R N. 중간 편지 만보 고하십시오.',\r\n  },\r\n  T_thresholdLetterBeginBlock: {\r\n    'en-US':\r\n      'You are about to begin a block of xxx trials. A letters will appear in each trial. Please report it,',\r\n    de: 'Sie sind kurz davor, einen Block von xxx -Versuchen zu beginnen. In jedem Versuch erscheinen ein Buchstaben. Bitte melden Sie es,',\r\n    fr: \"Vous êtes sur le point de commencer un bloc d'essais xxx. Une lettre apparaîtra dans chaque essai. Veuillez le signaler,\",\r\n    es: 'Estás a punto de comenzar un bloque de pruebas xxx. Aparecerán letras en cada prueba. Por favor denunciarlo,',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Uma cartas aparecerá em cada tentativa. Por favor, relate,',\r\n    it: 'Stai per iniziare un blocco di prove xxx. Verranno visualizzate le lettere in ogni prova. Si prega di segnalarlo,',\r\n    ro: 'Ești pe cale să începi un bloc de încercări xxx. O scrisori va apărea în fiecare proces. Vă rugăm să îl raportați,',\r\n    pl: 'Niedługo rozpoczniecie blok prób xxx. W każdej próbie pojawią się listy. Zgłoś to,',\r\n    ru: 'Вы собираетесь начать блок xxx испытаний. Письма появятся в каждом испытании. Пожалуйста, сообщите об этом,',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx փորձարկումների բլոկ: Յուրաքանչյուր փորձության մեջ կհայտնվեն նամակներ: Խնդրում ենք զեկուցել այն,',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Jokaisessa kokeessa ilmestyy kirjeitä. Ilmoita siitä,',\r\n    ka: 'თქვენ დაიწყებთ xxx ტესტების ბლოკს. წერილები გამოჩნდება თითოეულ სასამართლო პროცესზე. გთხოვთ, შეატყობინოთ მას,',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויים ב- xxx. מכתבים יופיעו בכל משפט. אנא דווח על כך,',\r\n    ar: 'أنت على وشك البدء في كتلة من تجارب xxx. ستظهر الحروف في كل تجربة. الرجاء الإبلاغ عنها ،',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ ہر آزمائش میں ایک خطوط نظر آئیں گے۔ براہ کرم اس کی اطلاع دیں ،',\r\n    hi: 'आप xxx परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। प्रत्येक परीक्षण में एक पत्र दिखाई देगा। कृपया इसकी रिपोर्ट करें,',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். ஒவ்வொரு சோதனையிலும் ஒரு கடிதங்கள் தோன்றும். தயவுசெய்து அதைப் புகாரளிக்கவும்,',\r\n    ml: 'നിങ്ങൾ xxx പരീക്ഷണങ്ങളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. ഓരോ വിചാരണയിലും ഒരു കത്തുകൾ പ്രത്യക്ഷപ്പെടും. ദയവായി അത് റിപ്പോർട്ടുചെയ്യുക,',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. ప్రతి ట్రయల్‌లో ఒక అక్షరాలు కనిపిస్తాయి. దయచేసి దాన్ని నివేదించండి,',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ ಅಕ್ಷರಗಳು ಕಾಣಿಸಿಕೊಳ್ಳುತ್ತವೆ. ದಯವಿಟ್ಟು ಅದನ್ನು ವರದಿ ಮಾಡಿ,',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। প্রতিটি পরীক্ষায় একটি চিঠি উপস্থিত হবে। দয়া করে এটি রিপোর্ট করুন,',\r\n    id: 'Anda akan memulai blok uji coba xxx. Surat akan muncul di setiap percobaan. Tolong laporkan,',\r\n    'zh-CN': '您即将开始一个xxx试验。每个审判都会出现一个信件。请报告，',\r\n    'zh-HK': '您即將開始一個xxx試驗。每個審判都會出現一個信件。請報告，',\r\n    ja: 'xxxトライアルのブロックを開始しようとしています。各トライアルに文字が表示されます。報告してください、',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 각 시험에는 편지가 나타납니다. 보고 해주세요.',\r\n  },\r\n  T_thresholdRsvpReadingBeginBlock: {\r\n    'en-US':\r\n      'You are about to start a block of xxx trials. Each trial will quickly show you words, one after the other, and then ask you to report what you read',\r\n    de: 'Sie sind kurz davor, einen Block von xxx -Versuchen zu starten. Jeder Versuch zeigt Ihnen schnell Wörter, eine nacheinander, und die Bitten Sie, zu melden, was Sie lesen',\r\n    fr: \"Vous êtes sur le point de démarrer un bloc d'essais xxx. Chaque essai vous montrera rapidement des mots, l'un après l'autre, et vous demandez de signaler ce que vous lisez\",\r\n    es: 'You are about to start a block of xxx trials. Each trial will quickly show you words, one after the other, and then ask you to report what you read',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Cada julgamento mostrará rapidamente as palavras, uma após a outra, e pede que você relate o que lê',\r\n    it: \"Stai per avviare un blocco di prove xxx. Ogni prova ti mostrerà rapidamente le parole, una dopo l'altra, e ti chiede di segnalare ciò che leggi\",\r\n    ro: 'Sunteți pe cale să începeți un bloc de încercări xxx. Fiecare proces vă va arăta rapid cuvinte, unul după altul și vă va cere să raportați ce ați citit',\r\n    pl: 'Zaraz rozpoczniesz blok prób xxx. Każda próba szybko pokaże ci słowa jeden po drugim, a poproś o zgłoszenie, co przeczytałeś',\r\n    ru: 'Вы собираетесь начать блок xxx испытаний. Каждое испытание быстро покажет вам слова, один за другим, и попросить вас сообщить, что вы читаете',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx փորձարկումների բլոկ: Յուրաքանչյուր փորձություն արագորեն ձեզ կներկայացնի բառեր, մեկը մյուսի հետեւից, եւ խնդրեք ձեզ զեկուցել ձեր կարդացածը',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Jokainen kokeilu näyttää nopeasti sanat peräkkäin, ja pyydä sinua ilmoittamaan lukemasi',\r\n    ka: 'თქვენ აპირებთ xxx კვლევების ბლოკის დაწყებას. თითოეული სასამართლო პროცესი სწრაფად გაჩვენებთ სიტყვებს, ერთმანეთის მიყოლებით, და მოგთხოვთ შეატყობინოთ რა წაიკითხეთ',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויים ב- xxx. כל משפט יראה לך במהירות מילים, בזה אחר זה, ובקש אותך לדווח על מה שאתה קורא',\r\n    ar: 'أنت على وشك بدء كتلة من تجارب xxx. ستظهر لك كل تجربة بسرعة كلمات ، واحدة تلو الأخرى ، ويطلب منك الإبلاغ عن ما تقرأه',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ ہر مقدمے کی سماعت جلدی سے آپ کو الفاظ دکھائے گی ، ایک کے بعد ایک ، اور آپ سے جو کچھ پڑھتے ہیں اس کی اطلاع دینے کے لئے کہتے ہیں',\r\n    hi: 'आप xxx परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। प्रत्येक परीक्षण आपको जल्दी से शब्द दिखाएगा, एक के बाद एक, और आप जो पढ़ते हैं उसे रिपोर्ट करने के लिए कहेंगे',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். ஒவ்வொரு சோதனையும் விரைவாக உங்களுக்கு வார்த்தைகளைக் காண்பிக்கும், ஒன்றன் பின் ஒன்றாக, நீங்கள் படித்ததைப் புகாரளிக்கும்படி கேட்கவும்',\r\n    ml: 'നിങ്ങൾ xxx ട്രയലുകളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. ഓരോ ട്രയലും നിങ്ങൾക്ക് വാക്കുകൾ വേഗത്തിൽ കാണിക്കും, മറ്റൊന്ന്, നിങ്ങൾ വായിച്ച കാര്യങ്ങൾ റിപ്പോർട്ടുചെയ്യാൻ നിങ്ങളോട് ആവശ്യപ്പെടും',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. ప్రతి ట్రయల్ మీకు త్వరగా పదాలను చూపిస్తుంది, ఒకదాని తరువాత ఒకటి, మరియు మీరు చదివిన వాటిని నివేదించమని అడుగుతుంది',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗವು ಒಂದರ ನಂತರ ಒಂದರಂತೆ ಪದಗಳನ್ನು ತೋರಿಸುತ್ತದೆ, ಮತ್ತು ನೀವು ಓದಿದ್ದನ್ನು ವರದಿ ಮಾಡಲು ಕೇಳಿಕೊಳ್ಳಿ',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। প্রতিটি পরীক্ষা আপনাকে একের পর এক শব্দগুলি দ্রুত প্রদর্শন করবে এবং আপনি যা পড়েছেন তা আপনাকে জানাতে জিজ্ঞাসা করুন',\r\n    id: 'Anda akan memulai blok uji coba xxx. Setiap percobaan akan dengan cepat menunjukkan kepada Anda kata -kata, satu demi satu, dan meminta Anda untuk melaporkan apa yang Anda baca',\r\n    'zh-CN':\r\n      '您即将开始一个xxx试验。每个审判都会迅速向您展示单词，一个接一个地，要求您报告您阅读的内容',\r\n    'zh-HK':\r\n      '您即將開始一個xxx試驗。每個審判都會迅速向您展示單詞，一個接一個地，要求您報告您閱讀的內容',\r\n    ja: 'xxxトライアルのブロックを開始しようとしています。各トライアルは次々と単語をすぐに表示し、読んだものを報告するように頼みます',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 각 시험은 당신에게 다른 말을 신속하게 보여줄 것이며, 당신이 읽은 내용을보고하도록 요청합니다',\r\n  },\r\n  T_thresholdRepeatedLettersBeginBlock: {\r\n    'en-US':\r\n      'You are about to start a block of xxx trials. A field of letters will appear in each trial. Report the two middle characters that you see',\r\n    de: 'Sie sind kurz davor, einen Block von xxx -Versuchen zu starten. In jedem Versuch erscheint ein Buchstabenfeld. Melden Sie die beiden mittleren Charaktere, die Sie sehen',\r\n    fr: \"Vous êtes sur le point de démarrer un bloc d'essais xxx. Un champ de lettres apparaîtra dans chaque essai. Signaler les deux personnages du milieu que vous voyez\",\r\n    es: 'You are about to start a block of xxx trials. A field of letters will appear in each trial. Report the two middle characters that you see',\r\n    pt: 'Você está prestes a iniciar um bloco de ensaios xxx. Um campo de letras aparecerá em cada tentativa. Relate os dois personagens do meio que você vê',\r\n    it: 'Stai per avviare un blocco di prove xxx. Un campo di lettere apparirà in ogni prova. Segnala i due personaggi medi che vedi',\r\n    ro: 'Sunteți pe cale să începeți un bloc de încercări xxx. În fiecare proces va apărea un câmp de scrisori. Raportați cele două personaje de mijloc pe care le vedeți',\r\n    pl: 'Zaraz rozpoczniesz blok prób xxx. W każdej próbie pojawi się pole listów. Zgłoś dwie środkowe postacie, które widzisz',\r\n    ru: 'Вы собираетесь начать блок xxx испытаний. Поле писем появится в каждом испытании. Сообщите о двух средних персонажах, которые вы видите',\r\n    hy: 'Դուք պատրաստվում եք սկսել xxx փորձարկումների բլոկ: Յուրաքանչյուր փորձության մեջ կհայտնվի տառերի մի դաշտ: Հաղորդեք ձեր տեսած երկու միջին նիշերի մասին',\r\n    fi: 'Olet aloittamassa xxx -kokeiden lohkon. Jokaisessa kokeessa ilmestyy kirjainkenttä. Ilmoita kaksi keskimmäistä merkkiä, jotka näet',\r\n    ka: 'თქვენ აპირებთ xxx კვლევების ბლოკის დაწყებას. წერილების ველი გამოჩნდება თითოეულ სასამართლო პროცესზე. შეატყობინეთ ორი საშუალო პერსონაჟის, რომელსაც ხედავთ',\r\n    he: 'אתה עומד להתחיל בלוק של ניסויים ב- xxx. שדה מכתבים יופיע בכל משפט. דווח על שתי הדמויות הבינוניות שאתה רואה',\r\n    ar: 'أنت على وشك بدء كتلة من تجارب xxx. سيظهر مجال الرسائل في كل تجربة. أبلغ عن الشخصين الأوسطين اللذين تراهما',\r\n    ur: 'آپ xxx ٹرائلز کا ایک بلاک شروع کرنے والے ہیں۔ ہر آزمائش میں خطوط کا ایک فیلڈ نمودار ہوگا۔ آپ دیکھتے ہیں کہ دو درمیانی کرداروں کی اطلاع دیں',\r\n    hi: 'आप xxx परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। प्रत्येक परीक्षण में पत्रों का एक क्षेत्र दिखाई देगा। उन दो मध्य वर्णों की रिपोर्ट करें जिन्हें आप देखते हैं',\r\n    ta: 'நீங்கள் xxx சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். ஒவ்வொரு சோதனையிலும் கடிதங்களின் புலம் தோன்றும். நீங்கள் பார்க்கும் இரண்டு நடுத்தர எழுத்துக்களைப் புகாரளிக்கவும்',\r\n    ml: 'നിങ്ങൾ xxx ട്രയലുകളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. ഓരോ വിചാരണയിലും അക്ഷരങ്ങളുടെ ഒരു മേഖല ദൃശ്യമാകും. നിങ്ങൾ കാണുന്ന രണ്ട് മധ്യ പ്രതീകങ്ങൾ റിപ്പോർട്ടുചെയ്യുക',\r\n    te: 'మీరు xxx ట్రయల్స్ యొక్క బ్లాక్‌ను ప్రారంభించబోతున్నారు. ప్రతి ట్రయల్‌లో అక్షరాల క్షేత్రం కనిపిస్తుంది. మీరు చూసే రెండు మధ్య అక్షరాలను నివేదించండి',\r\n    kn: 'ನೀವು xxx ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ ಅಕ್ಷರಗಳ ಕ್ಷೇತ್ರ ಕಾಣಿಸುತ್ತದೆ. ನೀವು ನೋಡುವ ಎರಡು ಮಧ್ಯದ ಅಕ್ಷರಗಳನ್ನು ವರದಿ ಮಾಡಿ',\r\n    bn: 'আপনি xxx ট্রায়ালগুলির একটি ব্লক শুরু করতে চলেছেন। প্রতিটি পরীক্ষায় চিঠির একটি ক্ষেত্র উপস্থিত হবে। আপনি যে দুটি মাঝারি চরিত্র দেখেন তা রিপোর্ট করুন',\r\n    id: 'Anda akan memulai blok uji coba xxx. Bidang huruf akan muncul di setiap percobaan. Laporkan dua karakter tengah yang Anda lihat',\r\n    'zh-CN': '您即将开始一个xxx试验。每个审判中都会出现一个字母字段。报告您看到的两个中间字符',\r\n    'zh-HK': '您即將開始一個xxx試驗。每個審判中都會出現一個字母字段。報告您看到的兩個中間字符',\r\n    ja: 'xxxトライアルのブロックを開始しようとしています。各トライアルに文字のフィールドが表示されます。あなたが見る2つの中間文字を報告してください',\r\n    ko: 'xxx 시험 블록을 시작하려고합니다. 각 시험에서 편지 분야가 나타납니다. 당신이 보는 두 개의 중간 문자를보고하십시오',\r\n  },\r\n  T_thresholdSoundBeginBlock: {\r\n    'en-US':\r\n      'SOUND DETECTION. You\\'re about to start a block of many trials. You\\'re trying to detect a particular target sound: one note, repeated 8 times, always the same note. That target is only present on half the trials, randomly. On each trial, your job is to listen and decide whether it was present, yes or no. As you progress from trial to trial, based on your responses, the target sound volume will adapt so that it\\'s barely detectable. In the initial practice block, the target will be alone. In later blocks, the target will be harder to detect because of other sounds. Always ignore the other sounds, and try to report, yes or no, whether the target sound was present. Use the \"y\" key for yes and the \"n\" key for no. \\n\\nHit RETURN or click PROCEED as soon as you\\'re ready. The PROCEED button will disappear immediately, and the experiment will begin once the sounds are loaded, which takes 40 seconds or longer, depending on the speed of the internet connection. We are working to shorten this delay in a future release.\\n\\nLoading sounds ...',\r\n    de: 'Schallerkennung. Sie beginnen dabei, einen Block vieler Versuche zu beginnen. Sie versuchen, einen bestimmten Zielgeräusch zu erkennen: eine Note, die 8 Mal wiederholt wurde, immer dieselbe Note. Dieses Ziel ist nur zufällig in der Hälfte der Studien vorhanden. Bei jeder Testversion ist es Ihre Aufgabe, zuzuhören und zu entscheiden, ob es vorhanden war, ja oder nein. Während Sie von Versuch zu Versuch, basierend auf Ihren Antworten, passt sich das Zielschallvolumen so an, dass es kaum erkennbar ist. Im anfänglichen Übungsblock wird das Ziel allein sein. In späteren Blöcken wird das Ziel aufgrund anderer Geräusche schwerer zu erkennen sein. Ignorieren Sie immer die anderen Geräusche und versuchen Sie, Ja oder Nein zu berichten, ob der Zielgeräusch vorhanden war. Verwenden Sie den Schlüssel \"Y\" für Yes und den \"n\" -Staste für Nein.\\n\\nKlicken Sie auf Rückgabe oder klicken Sie auf Fahren, sobald Sie fertig sind. Die Taste für die Ausführung verschwindet sofort und das Experiment beginnt, sobald die Geräusche geladen sind, was je nach Geschwindigkeit der Internetverbindung 40 Sekunden oder länger dauert. Wir arbeiten daran, diese Verzögerung in einer zukünftigen Veröffentlichung zu verkürzen.\\n\\nLadegeräusche ...',\r\n    fr: \"Détection du son. Vous êtes sur le point de commencer un bloc de nombreux essais. Vous essayez de détecter un son cible particulier: une note, répétée 8 fois, toujours la même note. Cette cible n'est présente que sur la moitié des essais, au hasard. À chaque essai, votre travail consiste à écouter et à décider s'il était présent, oui ou non. Au fur et à mesure que vous progressez d'un essai à l'autre, en fonction de vos réponses, le volume sonore cible s'adaptera afin qu'il soit à peine détectable. Dans le bloc d'entraînement initial, la cible sera seule. Dans les blocs ultérieurs, la cible sera plus difficile à détecter en raison d'autres sons. Ignorez toujours les autres sons et essayez de signaler, oui ou non, que le son cible était présent. Utilisez la touche \\\"Y\\\" pour oui et la clé \\\"N\\\" pour non.\\n\\nAppuyez sur Retour ou cliquez sur Procéder dès que vous êtes prêt. Le bouton Procéder disparaîtra immédiatement et l'expérience commencera une fois les sons chargés, ce qui prend 40 secondes ou plus, selon la vitesse de la connexion Internet. Nous travaillons à raccourcir ce retard dans une version future.\\n\\nChargement des sons ...\",\r\n    es: 'Detección de sonido. Estás a punto de comenzar un bloque de muchas pruebas. Estás tratando de detectar un sonido objetivo en particular: una nota, repetida 8 veces, siempre la misma nota. Ese objetivo solo está presente en la mitad de los ensayos, al azar. En cada prueba, su trabajo es escuchar y decidir si estaba presente, sí o no. A medida que avanza de juicio a prueba, según sus respuestas, el volumen de sonido objetivo se adaptará para que apenas sea detectable. En el bloque de práctica inicial, el objetivo estará solo. En bloques posteriores, el objetivo será más difícil de detectar debido a otros sonidos. Siempre ignore los otros sonidos e intente informar, sí o no, si el sonido objetivo estaba presente. Use la tecla \"Y\" para sí y la tecla \"n\" para no.\\n\\nPresione la devolución o haga clic en Proceda tan pronto como esté listo. El botón proceder desaparecerá inmediatamente, y el experimento comenzará una vez que se carguen los sonidos, que tarda 40 segundos o más, dependiendo de la velocidad de la conexión a Internet. Estamos trabajando para acortar este retraso en un lanzamiento futuro.\\n\\nCargando sonidos ...',\r\n    pt: 'Detecção de som. Você está prestes a iniciar um bloco de muitas tentativas. Você está tentando detectar um som de destino específico: uma nota, repetida 8 vezes, sempre a mesma nota. Esse alvo está presente apenas em metade dos ensaios, aleatoriamente. Em cada teste, seu trabalho é ouvir e decidir se estava presente, sim ou não. À medida que você avança de tentativa para teste, com base em suas respostas, o volume de som de destino se adaptará para que quase não seja detectável. No bloco de prática inicial, o alvo estará sozinho. Nos blocos posteriores, o alvo será mais difícil de detectar por causa de outros sons. Sempre ignore os outros sons e tente relatar, sim ou não, se o som alvo estava presente. Use a tecla \"y\" para sim e a tecla \"N\" para não.\\n\\nPressione o retorno ou clique em prosseguir assim que estiver pronto. O botão Procena desaparecerá imediatamente e o experimento começará assim que os sons forem carregados, o que leva 40 segundos ou mais, dependendo da velocidade da conexão com a Internet. Estamos trabalhando para reduzir esse atraso em um lançamento futuro.\\n\\nSons de carregamento ...',\r\n    it: 'Rilevamento del suono. Stai per iniziare un blocco di molte prove. Stai cercando di rilevare un particolare suono di destinazione: una nota, ripetuta 8 volte, sempre la stessa nota. Tale obiettivo è presente solo a metà degli studi, in modo casuale. Ad ogni prova, il tuo compito è ascoltare e decidere se era presente, sì o no. Man mano che avanzi da processo a prova, in base alle tue risposte, il volume del suono target si adatterà in modo che sia appena rilevabile. Nel blocco di pratica iniziale, l\\'obiettivo sarà solo. Nei blocchi successivi, l\\'obiettivo sarà più difficile da rilevare a causa di altri suoni. Ignora sempre gli altri suoni e prova a segnalare, sì o no, se il suono target era presente. Usa il tasto \"Y\" per sì e il tasto \"N\" per il no.\\n\\nPremi reso o fai clic su Procedi non appena sei pronto. Il pulsante di procedimento scomparirà immediatamente e l\\'esperimento inizierà una volta caricati i suoni, il che richiede 40 secondi o più, a seconda della velocità della connessione Internet. Stiamo lavorando per abbreviare questo ritardo in una versione futura.\\n\\nCaricamento dei suoni ...',\r\n    ro: 'Detectarea sunetului. Ești pe cale să începi un bloc de multe încercări. Încercați să detectați un anumit sunet țintă: o notă, repetată de 8 ori, întotdeauna aceeași notă. Această țintă este prezentă doar pe jumătate din încercări, la întâmplare. La fiecare proces, meseria dvs. este să ascultați și să decideți dacă a fost prezent, da sau nu. Pe măsură ce progresați de la încercare la încercare, pe baza răspunsurilor dvs., volumul sunetului țintă se va adapta astfel încât să fie abia detectabil. În blocul inițial de practică, ținta va fi singură. În blocurile ulterioare, ținta va fi mai greu de detectat din cauza altor sunete. Ignorați întotdeauna celelalte sunete și încercați să raportați, da sau nu, dacă sunetul țintă a fost prezent. Utilizați cheia „Y” pentru da și cheia „n” pentru nr.\\n\\nApăsați Return sau faceți clic pe Continuați imediat ce sunteți gata. Butonul continuu va dispărea imediat, iar experimentul va începe odată ce sunetele vor fi încărcate, ceea ce durează 40 de secunde sau mai mult, în funcție de viteza conexiunii la internet. Lucrăm pentru a reduce această întârziere într -o versiune viitoare.\\n\\nÎncărcarea sunetelor ...',\r\n    pl: 'Wykrywanie dźwięku. Zaraz zaczniesz blok wielu prób. Próbujesz wykryć określony dźwięk docelowy: jedna nuta, powtarzana 8 razy, zawsze ta sama nuta. Ten cel jest obecny tylko w połowie prób, losowo. Podczas każdej próby Twoim zadaniem jest słuchanie i decydowanie, czy było to obecne, tak czy nie. W miarę postępów z procesu do próby, w oparciu o twoje odpowiedzi, docelowa głośność dźwięku dostosuje się, aby była ledwo wykrywalna. W początkowym bloku ćwiczeń cel będzie sam. W późniejszych blokach cel będzie trudniejszy do wykrycia z powodu innych dźwięków. Zawsze ignoruj ​​inne dźwięki i staraj się zgłosić, tak czy nie, czy docelowy dźwięk był obecny. Użyj klucza „Y” dla tak i klucza „N” dla nie.\\n\\nNaciśnij zwróć lub kliknij, kontynuuj, gdy tylko będziesz gotowy. Przycisk Przestrzeń zniknie natychmiast, a eksperyment rozpocznie się po załadowaniu dźwięków, co zajmuje 40 sekund lub dłużej, w zależności od prędkości połączenia internetowego. Pracujemy nad skróceniem tego opóźnienia w przyszłym wydaniu.\\n\\nŁadowanie dźwięków ...',\r\n    ru: 'Обнаружение звука. Вы собираетесь начать блок многих испытаний. Вы пытаетесь обнаружить конкретный целевой звук: одна нота, повторяющаяся 8 раз, всегда одна и та же нота. Эта цель присутствует только на половине испытаний, случайным образом. На каждом испытании ваша задача состоит в том, чтобы выслушать и решить, присутствовал ли она, да или нет. По мере того, как вы переходите от испытания к испытанию, основываясь на ваших ответах, целевой объем звука будет адаптироваться так, чтобы он едва обнаруживался. В первоначальном блоке практики цель будет одна. В более поздних блоках цель будет сложнее обнаружить из -за других звуков. Всегда игнорируйте другие звуки и старайтесь сообщить, да или нет, независимо от того, присутствовал ли целевой звук. Используйте ключ «Y» для «Да» и клавишу «N» для NO.\\n\\nНажмите возврат или нажмите, продолжайте, как только вы будете готовы. Кнопка продолжения сразу исчезнет, ​​и эксперимент начнется после загрузки звуков, что займет 40 или дольше, в зависимости от скорости подключения к Интернету. Мы работаем, чтобы сократить эту задержку в будущем.\\n\\nЗвуки загрузки ...',\r\n    hy: 'Ձայնի հայտնաբերում: Դուք պատրաստվում եք սկսել բազմաթիվ փորձությունների բլոկ: Դուք փորձում եք հայտնաբերել որոշակի նպատակային ձայն. Մեկ նոտա, կրկնեց 8 անգամ, միշտ նույն նոտան: Այդ թիրախը ներկայումս առկա է միայն դատավարությունների կեսին: Յուրաքանչյուր փորձության վրա ձեր գործն է լսել եւ որոշել, ներկա է, այո, թե ոչ: Երբ դատավարությունից առաջընթաց եք ապրում, ձեր պատասխաններից ելնելով, թիրախային ձայնի ծավալը հարմարվելու է այնպես, որ այն հազիվ թե հայտնաբերելի լինի: Նախնական պրակտիկայում բլոկում թիրախը մենակ կլինի: Հետագա բլոկներում թիրախը դժվար կլինի հայտնաբերել այլ հնչյունների պատճառով: Միշտ անտեսեք մյուս հնչյունները եւ փորձեք զեկուցել, այո կամ ոչ, լինի թիրախ ձայնը: Օգտագործեք «Y» ստեղնը `այո եւ« N »ստեղնը` ոչ:\\n\\nՀիթ վերադարձեք կամ կտտացրեք Շարունը, հենց որ պատրաստ եք: Շարունակվող կոճակը անմիջապես կվերանա, եւ փորձը կսկսվի այն ժամանակ, երբ հնչյունները բեռնվեն, ինչը տեւում է 40 վայրկյան կամ ավելի երկար, կախված ինտերնետային կապի արագությունից: Մենք աշխատում ենք կարճացնել այս ձգձգումը հետագա թողարկումում:\\n\\nՁայնի բեռնումը ...',\r\n    fi: 'Äänen havaitseminen. Olet aloittamassa monien kokeiden lohkon. Yrität havaita tietyn kohdeäänen: yksi huomautus, toistetaan 8 kertaa, aina sama huomautus. Tämä tavoite on läsnä vain puolet tutkimuksista, satunnaisesti. Jokaisessa oikeudenkäynnissä sinun tehtäväsi on kuunnella ja päättää onko se läsnä, kyllä ​​vai ei. Kun etenet kokeilusta oikeudenkäyntiin, vastausten perusteella kohdeäänen tilavuus mukautuu siten, että se on tuskin havaittavissa. Alkuperäisessä harjoituslohkossa tavoite on yksin. Myöhemmissä lohkoissa kohde on vaikeampi havaita muiden äänien takia. Ohita aina muut äänet ja yritä ilmoittaa, kyllä ​​vai ei, onko kohdeääni läsnä. Käytä \"Y\" -näppäintä kyllä ​​ja \"N\" -näppäimelle ei.\\n\\nPaina palauta tai napsauta Jatka heti kun olet valmis. Jatka -painike katoaa heti, ja koe alkaa, kun äänet on ladattu, mikä vie 40 sekuntia tai pidempään Internet -yhteyden nopeudesta riippuen. Pyrimme lyhentämään tätä viivettä tulevassa julkaisussa.\\n\\nÄänien lataaminen ...',\r\n    ka: 'ხმის გამოვლენა. თქვენ აპირებთ მრავალი განსაცდელის ბლოკის დაწყებას. თქვენ ცდილობთ გამოავლინოთ კონკრეტული სამიზნე ხმა: ერთი შენიშვნა, განმეორებით 8 ჯერ, ყოველთვის ერთი და იგივე შენიშვნა. ეს სამიზნე მხოლოდ შემთხვევითი ტესტების ნახევარზეა წარმოდგენილი. თითოეულ სასამართლო პროცესზე, თქვენი საქმეა მოუსმინოთ და გადაწყვიტეთ, იყო თუ არა ეს, დიახ თუ არა. როდესაც თქვენ პროგრესირებთ სასამართლო პროცესზე, თქვენი პასუხების საფუძველზე, სამიზნე ხმის მოცულობა ადაპტირდება ისე, რომ იგი ძლივს გამოვლინდეს. საწყისი პრაქტიკის ბლოკში, სამიზნე მარტო იქნება. მოგვიანებით ბლოკებში, სამიზნე უფრო რთული იქნება სხვა ბგერების გამო. ყოველთვის უგულებელყოფა სხვა ბგერებს და შეეცადეთ შეატყობინოთ, დიახ თუ არა, იყო თუ არა სამიზნე ხმა. გამოიყენეთ \"y\" გასაღები დიახ და \"n\" გასაღები არა.\\n\\nდააჭირეთ დაბრუნებას ან დააჭირეთ გააგრძელეთ, როგორც კი მზად იქნებით. გაშვების ღილაკი დაუყოვნებლივ გაქრება და ექსპერიმენტი დაიწყება ბგერების დატვირთვის შემდეგ, რაც 40 წამს ან მეტხანს სჭირდება, რაც დამოკიდებულია ინტერნეტ კავშირის სიჩქარეზე. ჩვენ ვმუშაობთ ამ შეფერხების შემცირებისთვის მომავალში.\\n\\nჩატვირთვა ხმები ...',\r\n    he: 'איתור קול. אתה עומד להתחיל גוש של ניסויים רבים. אתה מנסה לאתר צליל יעד מסוים: הערה אחת, חוזרת על עצמה 8 פעמים, תמיד אותה תו. יעד זה קיים רק במחצית הניסויים, באופן אקראי. בכל משפט, תפקידך הוא להקשיב ולהחליט אם הוא נוכח, כן או לא. כשאתה מתקדם ממשפט למשפט, בהתבסס על התגובות שלך, עוצמת הקול של היעד תסתגל כך שהוא בקושי ניתן לגילוי. בבלוק התרגול הראשוני היעד יהיה לבד. בבלוקים מאוחרים יותר, יהיה קשה יותר לאתר את היעד בגלל צלילים אחרים. תמיד התעלם מהצלילים האחרים, ונסה לדווח, כן או לא, האם צליל היעד היה קיים. השתמש במפתח \"Y\" עבור YES ובמפתח \"N\" עבור לא.\\n\\nלחץ על החזרה או לחץ על המשך ברגע שאתה מוכן. כפתור ההמשך ייעלם מייד והניסוי יתחיל ברגע שהצלילים יועברו, שנמשך 40 שניות ומעלה, תלוי במהירות החיבור לאינטרנט. אנו פועלים לקצר את העיכוב הזה במהדורה עתידית.\\n\\nטוען צלילי ...',\r\n    ar: 'اكتشاف الصوت. أنت على وشك بدء كتلة من العديد من التجارب. أنت تحاول اكتشاف صوت مستهدف معين: ملاحظة واحدة ، تتكرر 8 مرات ، ودائما نفس الملاحظة. هذا الهدف موجود فقط في نصف التجارب ، بشكل عشوائي. في كل تجربة ، تتمثل وظيفتك في الاستماع وتحديد ما إذا كانت موجودة ، نعم أم لا. مع تقدمك من التجربة إلى المحاكمة ، بناءً على ردودك ، سيتكيف حجم الصوت المستهدف بحيث يكون بالكاد يمكن اكتشافه. في كتلة الممارسة الأولية ، سيكون الهدف وحده. في الكتل اللاحقة ، سيكون الهدف أكثر صعوبة في اكتشافه بسبب الأصوات الأخرى. تجاهل دائمًا الأصوات الأخرى ، وحاول الإبلاغ ، نعم أو لا ، سواء كان الصوت المستهدف موجودًا. استخدم مفتاح \"Y\" لنعم ومفتاح \"N\" لـ NO.\\n\\nاضغط على الإرجاع أو انقر فوق متابعة بمجرد استعدادك. سيختفي زر المتابعة على الفور ، وستبدأ التجربة بمجرد تحميل الأصوات ، والتي تستغرق 40 ثانية أو أكثر ، اعتمادًا على سرعة اتصال الإنترنت. نحن نعمل على تقصير هذا التأخير في إصدار مستقبلي.\\n\\nتحميل الأصوات ...',\r\n    ur: 'آواز کا پتہ لگانا۔ آپ بہت ساری آزمائشوں کا ایک بلاک شروع کرنے والے ہیں۔ آپ کسی خاص ہدف کی آواز کا پتہ لگانے کی کوشش کر رہے ہیں: ایک نوٹ ، 8 بار دہرایا جاتا ہے ، ہمیشہ ایک ہی نوٹ۔ یہ ہدف صرف آدھے آزمائشوں پر ہی موجود ہے ، تصادفی طور پر۔ ہر آزمائش پر ، آپ کا کام سننا اور فیصلہ کرنا ہے کہ آیا یہ موجود تھا ، ہاں یا نہیں۔ جب آپ اپنے جوابات کی بنیاد پر مقدمے کی سماعت سے لے کر آزمائش تک ترقی کرتے ہیں تو ، ہدف کی آواز کا حجم موافقت پذیر ہوگا تاکہ یہ بمشکل ہی پتہ چل سکے۔ ابتدائی پریکٹس بلاک میں ، ہدف تنہا ہوگا۔ بعد کے بلاکس میں ، دیگر آوازوں کی وجہ سے ہدف کا پتہ لگانا مشکل ہوگا۔ ہمیشہ دوسری آوازوں کو نظرانداز کریں ، اور ہاں یا نہیں ، اطلاع دینے کی کوشش کریں کہ آیا ہدف کی آواز موجود تھی یا نہیں۔ ہاں کے لئے \"Y\" کی کلید اور نمبر کے لئے \"N\" کلید استعمال کریں۔\\n\\nواپس ہٹائیں یا تیار ہوتے ہی آگے بڑھنے پر کلک کریں۔ ایڈوانس بٹن فوری طور پر ختم ہوجائے گا ، اور انٹرنیٹ کنکشن کی رفتار پر منحصر ہے ، آواز بھری ہوئی ایک بار جب 40 سیکنڈ یا اس سے زیادہ وقت لگتا ہے تو تجربہ شروع ہوجائے گا۔ ہم آئندہ کی رہائی میں اس تاخیر کو مختصر کرنے کے لئے کام کر رہے ہیں۔\\n\\nآوازیں لوڈ ہو رہی ہیں ...',\r\n    hi: 'ध्वनि का पता लगाना। आप कई परीक्षणों का एक ब्लॉक शुरू करने वाले हैं। आप एक विशेष लक्ष्य ध्वनि का पता लगाने की कोशिश कर रहे हैं: एक नोट, 8 बार दोहराया, हमेशा एक ही नोट। यह लक्ष्य केवल आधे परीक्षणों पर मौजूद है, बेतरतीब ढंग से। प्रत्येक परीक्षण पर, आपका काम यह सुनना और तय करना है कि यह मौजूद था, हाँ या नहीं। जैसा कि आप परीक्षण से परीक्षण तक आगे बढ़ते हैं, आपकी प्रतिक्रियाओं के आधार पर, लक्ष्य ध्वनि की मात्रा अनुकूल होगी ताकि यह मुश्किल से पता लगाने योग्य हो। प्रारंभिक अभ्यास ब्लॉक में, लक्ष्य अकेले होगा। बाद के ब्लॉकों में, अन्य ध्वनियों के कारण लक्ष्य का पता लगाना कठिन होगा। हमेशा अन्य ध्वनियों को अनदेखा करें, और रिपोर्ट करने की कोशिश करें, हाँ या नहीं, क्या लक्ष्य ध्वनि मौजूद थी। हां के लिए \"Y\" कुंजी और \"N\" कुंजी के लिए उपयोग करें।\\n\\nरिटर्न हिट करें या तैयार होते ही आगे बढ़ें। आगे बटन तुरंत गायब हो जाएगा, और ध्वनि लोड होने के बाद प्रयोग शुरू हो जाएगा, जिसमें इंटरनेट कनेक्शन की गति के आधार पर 40 सेकंड या उससे अधिक समय लगता है। हम भविष्य की रिलीज में इस देरी को कम करने के लिए काम कर रहे हैं।\\n\\nलोड हो रहा है ...',\r\n    ta: 'ஒலி கண்டறிதல். நீங்கள் பல சோதனைகளின் ஒரு தொகுதியைத் தொடங்க உள்ளீர்கள். நீங்கள் ஒரு குறிப்பிட்ட இலக்கு ஒலியைக் கண்டறிய முயற்சிக்கிறீர்கள்: ஒரு குறிப்பு, 8 முறை மீண்டும் மீண்டும், எப்போதும் ஒரே குறிப்பு. அந்த இலக்கு தோராயமாக பாதி சோதனைகளில் மட்டுமே உள்ளது. ஒவ்வொரு சோதனையிலும், உங்கள் வேலை அது இருக்கிறதா, ஆம் அல்லது இல்லை என்று கேட்பதும் தீர்மானிப்பதும் ஆகும். உங்கள் பதில்களின் அடிப்படையில், சோதனையிலிருந்து சோதனைக்கு நீங்கள் முன்னேறும்போது, ​​இலக்கு ஒலி அளவு மாற்றியமைக்கும், இதனால் அது கண்டறிய முடியாதது. ஆரம்ப பயிற்சி தொகுதியில், இலக்கு தனியாக இருக்கும். பிற்கால தொகுதிகளில், மற்ற ஒலிகளின் காரணமாக இலக்கு கண்டறிவது கடினமாக இருக்கும். மற்ற ஒலிகளை எப்போதும் புறக்கணித்து, இலக்கு ஒலி இருக்கிறதா என்று ஆம் அல்லது இல்லை என்று புகாரளிக்க முயற்சிக்கவும். ஆம் என்ற \"y\" விசையையும், இல்லை என்பதற்கு \"N\" விசையையும் பயன்படுத்தவும்.\\n\\nதிரும்பவும் அல்லது நீங்கள் தயாரானவுடன் தொடரவும் என்பதைக் கிளிக் செய்யவும். தொடர பொத்தானை உடனடியாக மறைந்துவிடும், மேலும் ஒலிகள் ஏற்றப்பட்டவுடன் சோதனை தொடங்கும், இது இணைய இணைப்பின் வேகத்தைப் பொறுத்து 40 வினாடிகள் அல்லது அதற்கு மேற்பட்ட நேரம் ஆகும். எதிர்கால வெளியீட்டில் இந்த தாமதத்தை குறைக்க நாங்கள் பணியாற்றி வருகிறோம்.\\n\\nஒலிகளை ஏற்றுகிறது ...',\r\n    ml: 'ശബ്ദ കണ്ടെത്തൽ. നിങ്ങൾ നിരവധി പരീക്ഷണങ്ങളുടെ ഒരു ബ്ലോക്ക് ആരംഭിക്കാൻ പോകുന്നു. നിങ്ങൾ ഒരു പ്രത്യേക ടാർഗെറ്റ് ശബ്ദം കണ്ടെത്തുന്നതിന് ശ്രമിക്കുക: ഒരു കുറിപ്പ്, 8 തവണ ആവർത്തിച്ചു, എല്ലായ്പ്പോഴും സമാന കുറിപ്പ്. ആ ലക്ഷ്യം പകുതി പരീക്ഷണങ്ങളിൽ മാത്രമേ ക്രമരഹിതമായിട്ടുള്ളൂ. ഓരോ വിചാരണയിലും, അത് നിലവിലുണ്ടോ, അതെ അല്ലെങ്കിൽ ഇല്ല എന്ന് ശ്രദ്ധിക്കുക എന്നതാണ് നിങ്ങളുടെ ജോലി. നിങ്ങളുടെ പ്രതികരണങ്ങളെ അടിസ്ഥാനമാക്കി, ട്രയലിലേക്ക് നിങ്ങൾ ട്രയലിലേക്ക് പുരോഗമിക്കുമ്പോൾ, ടാർഗെറ്റ് ശബ്ദ വോളിയം പൊരുത്തപ്പെടും, അതിനാൽ ഇത് കഷ്ടിച്ച് കണ്ടെത്താനാകും. പ്രാരംഭ പരിശീലനത്തിൽ, ലക്ഷ്യം ഒറ്റയ്ക്ക് ആയിരിക്കും. പിന്നീടുള്ള ബ്ലോക്കുകളിൽ, മറ്റ് ശബ്ദങ്ങൾ കാരണം ടാർഗെറ്റ് കണ്ടെത്തുന്നതിന് ബുദ്ധിമുട്ടായിരിക്കും. എപ്പോഴും മറ്റ് ശബ്ദങ്ങൾ അവഗണിക്കുക, ടാർഗെറ്റ് ശബ്ദം നിലവിലുണ്ടോ എന്ന് റിപ്പോർട്ടുചെയ്യാൻ ശ്രമിക്കുക. അതെ, ഇല്ല എന്നതിനായുള്ള \"y\" കീ എന്നിവയും ഇല്ല.\\n\\nമടങ്ങിവരവ് അമർത്തുക അല്ലെങ്കിൽ നിങ്ങൾ തയ്യാറായ ഉടൻ തുടരുക ക്ലിക്കുചെയ്യുക. ആംവർ ബട്ടൺ ഉടനടി അപ്രത്യക്ഷമാകും, മാത്രമല്ല ഇത് ഇന്റർനെറ്റ് കണക്ഷന്റെ വേഗതയെ ആശ്രയിച്ച് 40 സെക്കൻഡോ അതിൽ കൂടുതലോ എടുക്കും. ഭാവിയിലെ ഒരു റിലീസിൽ ഈ കാലതാമസം ചുരുക്കുന്നതിന് ഞങ്ങൾ പ്രവർത്തിക്കുന്നു.\\n\\nലോഡുചെയ്യുന്നു ...',\r\n    te: 'ధ్వని గుర్తింపు. మీరు చాలా ట్రయల్స్ బ్లాక్‌ను ప్రారంభించబోతున్నారు. మీరు ఒక నిర్దిష్ట లక్ష్య ధ్వనిని గుర్తించడానికి ప్రయత్నిస్తున్నారు: ఒక గమనిక, 8 సార్లు పునరావృతం, ఎల్లప్పుడూ ఒకే గమనిక. ఆ లక్ష్యం యాదృచ్ఛికంగా సగం ట్రయల్స్‌లో మాత్రమే ఉంటుంది. ప్రతి ట్రయల్‌లో, మీ పని వినడం మరియు అది హాజరైనదా అని నిర్ణయించుకోవడం, అవును లేదా కాదు. మీరు ట్రయల్ నుండి ట్రయల్ వరకు అభివృద్ధి చెందుతున్నప్పుడు, మీ ప్రతిస్పందనల ఆధారంగా, టార్గెట్ సౌండ్ వాల్యూమ్ అనుగుణంగా ఉంటుంది, తద్వారా ఇది గుర్తించదగినది. ప్రారంభ ప్రాక్టీస్ బ్లాక్‌లో, లక్ష్యం ఒంటరిగా ఉంటుంది. తరువాతి బ్లాకులలో, ఇతర శబ్దాల కారణంగా లక్ష్యం గుర్తించడం కష్టం. ఇతర శబ్దాలను ఎల్లప్పుడూ విస్మరించండి మరియు లక్ష్య శబ్దం ఉందా అని నివేదించడానికి ప్రయత్నించండి. అవును కోసం \"Y\" కీని మరియు NO కోసం \"N\" కీని ఉపయోగించండి.\\n\\nరిటర్న్ నొక్కండి లేదా మీరు సిద్ధంగా ఉన్న వెంటనే కొనసాగండి క్లిక్ చేయండి. ఇంటర్నెట్ కనెక్షన్ యొక్క వేగాన్ని బట్టి శబ్దాలు లోడ్ అయిన తర్వాత ప్రయోగం వెంటనే అదృశ్యమవుతుంది మరియు శబ్దాలు లోడ్ అయిన తర్వాత ప్రయోగం ప్రారంభమవుతుంది. భవిష్యత్ విడుదలలో ఈ ఆలస్యాన్ని తగ్గించడానికి మేము కృషి చేస్తున్నాము.\\n\\nశబ్దాలు లోడ్ అవుతోంది ...',\r\n    kn: 'ಧ್ವನಿ ಪತ್ತೆ. ನೀವು ಅನೇಕ ಪ್ರಯೋಗಗಳ ಬ್ಲಾಕ್ ಅನ್ನು ಪ್ರಾರಂಭಿಸಲಿದ್ದೀರಿ. ನೀವು ನಿರ್ದಿಷ್ಟ ಗುರಿ ಧ್ವನಿಯನ್ನು ಕಂಡುಹಿಡಿಯಲು ಪ್ರಯತ್ನಿಸುತ್ತಿದ್ದೀರಿ: ಒಂದು ಟಿಪ್ಪಣಿ, 8 ಬಾರಿ ಪುನರಾವರ್ತಿಸಲಾಗಿದೆ, ಯಾವಾಗಲೂ ಒಂದೇ ಟಿಪ್ಪಣಿ. ಆ ಗುರಿ ಯಾದೃಚ್ ly ಿಕವಾಗಿ ಅರ್ಧ ಪ್ರಯೋಗಗಳಲ್ಲಿ ಮಾತ್ರ ಇರುತ್ತದೆ. ಪ್ರತಿ ಪ್ರಯೋಗದಲ್ಲೂ, ನಿಮ್ಮ ಕೆಲಸವೆಂದರೆ ಅದು ಇದೆಯೇ ಎಂದು ಆಲಿಸಿ ಮತ್ತು ನಿರ್ಧರಿಸುವುದು, ಹೌದು ಅಥವಾ ಇಲ್ಲ. ನಿಮ್ಮ ಪ್ರತಿಕ್ರಿಯೆಗಳ ಆಧಾರದ ಮೇಲೆ ನೀವು ವಿಚಾರಣೆಯಿಂದ ವಿಚಾರಣೆಗೆ ಪ್ರಗತಿಯಲ್ಲಿರುವಾಗ, ಗುರಿ ಧ್ವನಿ ಪರಿಮಾಣವು ಹೊಂದಿಕೊಳ್ಳುತ್ತದೆ ಇದರಿಂದ ಅದು ಪತ್ತೆಹಚ್ಚಲಾಗುವುದಿಲ್ಲ. ಆರಂಭಿಕ ಅಭ್ಯಾಸ ಬ್ಲಾಕ್‌ನಲ್ಲಿ, ಗುರಿ ಏಕಾಂಗಿಯಾಗಿರುತ್ತದೆ. ನಂತರದ ಬ್ಲಾಕ್‌ಗಳಲ್ಲಿ, ಇತರ ಶಬ್ದಗಳ ಕಾರಣದಿಂದಾಗಿ ಗುರಿ ಪತ್ತೆಹಚ್ಚಲು ಕಷ್ಟವಾಗುತ್ತದೆ. ಇತರ ಶಬ್ದಗಳನ್ನು ಯಾವಾಗಲೂ ನಿರ್ಲಕ್ಷಿಸಿ, ಮತ್ತು ಗುರಿ ಧ್ವನಿ ಇದೆಯೇ ಎಂದು ವರದಿ ಮಾಡಲು ಪ್ರಯತ್ನಿಸಿ. ಹೌದು ಗಾಗಿ \"Y\" ಕೀಲಿಯನ್ನು ಮತ್ತು \"N\" ಕೀಲಿಯನ್ನು ಇಲ್ಲ.\\n\\nರಿಟರ್ನ್ ಒತ್ತಿರಿ ಅಥವಾ ನೀವು ಸಿದ್ಧವಾದ ತಕ್ಷಣ ಮುಂದುವರಿಯಿರಿ ಕ್ಲಿಕ್ ಮಾಡಿ. ಮುಂದುವರಿಯುವ ಬಟನ್ ತಕ್ಷಣವೇ ಕಣ್ಮರೆಯಾಗುತ್ತದೆ, ಮತ್ತು ಶಬ್ದಗಳನ್ನು ಲೋಡ್ ಮಾಡಿದ ನಂತರ ಪ್ರಯೋಗವು ಪ್ರಾರಂಭವಾಗುತ್ತದೆ, ಇದು ಇಂಟರ್ನೆಟ್ ಸಂಪರ್ಕದ ವೇಗವನ್ನು ಅವಲಂಬಿಸಿ 40 ಸೆಕೆಂಡುಗಳು ಅಥವಾ ಅದಕ್ಕಿಂತ ಹೆಚ್ಚು ಸಮಯ ತೆಗೆದುಕೊಳ್ಳುತ್ತದೆ. ಭವಿಷ್ಯದ ಬಿಡುಗಡೆಯಲ್ಲಿ ಈ ವಿಳಂಬವನ್ನು ಕಡಿಮೆ ಮಾಡಲು ನಾವು ಕೆಲಸ ಮಾಡುತ್ತಿದ್ದೇವೆ.\\n\\nಶಬ್ದಗಳನ್ನು ಲೋಡ್ ಮಾಡಲಾಗುತ್ತಿದೆ ...',\r\n    bn: 'শব্দ সনাক্তকরণ। আপনি অনেক পরীক্ষার একটি ব্লক শুরু করতে চলেছেন। আপনি একটি নির্দিষ্ট টার্গেট শব্দ সনাক্ত করার চেষ্টা করছেন: একটি নোট, 8 বার পুনরাবৃত্তি, সর্বদা একই নোট। এই লক্ষ্যটি কেবল এলোমেলোভাবে অর্ধেক ট্রায়ালগুলিতে উপস্থিত রয়েছে। প্রতিটি পরীক্ষায়, আপনার কাজটি হ\\'ল এটি উপস্থিত ছিল কিনা তা শুনতে এবং সিদ্ধান্ত নেওয়া, হ্যাঁ বা না। আপনার প্রতিক্রিয়াগুলির উপর ভিত্তি করে আপনি যখন ট্রায়াল থেকে বিচারে অগ্রগতি করেন, তখন লক্ষ্য সাউন্ড ভলিউমটি এমনভাবে মানিয়ে নেবে যাতে এটি সবে সনাক্তযোগ্য। প্রাথমিক অনুশীলন ব্লকে, লক্ষ্যটি একা থাকবে। পরবর্তী ব্লকগুলিতে, অন্যান্য শব্দগুলির কারণে লক্ষ্যটি সনাক্ত করা আরও শক্ত হবে। সর্বদা অন্যান্য শব্দগুলি উপেক্ষা করুন এবং হ্যাঁ বা না, লক্ষ্য শব্দটি উপস্থিত ছিল কিনা তা প্রতিবেদন করার চেষ্টা করুন। হ্যাঁ জন্য \"y\" কী এবং নং এর জন্য \"এন\" কী ব্যবহার করুন।\\n\\nহিট রিটার্ন বা আপনি প্রস্তুত হওয়ার সাথে সাথে এগিয়ে যান ক্লিক করুন। প্রসেস বোতামটি অবিলম্বে অদৃশ্য হয়ে যাবে এবং শব্দগুলি লোড হয়ে গেলে পরীক্ষাটি শুরু হবে, যা ইন্টারনেট সংযোগের গতির উপর নির্ভর করে 40 সেকেন্ড বা তার বেশি সময় নেয়। আমরা ভবিষ্যতের প্রকাশে এই বিলম্বটি সংক্ষিপ্ত করার জন্য কাজ করছি।\\n\\nলোডিং শব্দ ...',\r\n    id: 'Deteksi suara. Anda akan memulai satu blok dari banyak uji coba. Anda mencoba mendeteksi suara target tertentu: satu catatan, diulangi 8 kali, selalu nada yang sama. Target itu hanya hadir pada setengah uji coba, secara acak. Pada setiap percobaan, pekerjaan Anda adalah mendengarkan dan memutuskan apakah itu ada, ya atau tidak. Saat Anda maju dari percobaan ke percobaan, berdasarkan tanggapan Anda, volume suara target akan beradaptasi sehingga hampir tidak terdeteksi. Di blok latihan awal, target akan sendirian. Di blok selanjutnya, target akan lebih sulit dideteksi karena suara lainnya. Selalu abaikan suara lainnya, dan coba laporkan, ya atau tidak, apakah suara target ada. Gunakan tombol \"y\" untuk Ya dan tombol \"n\" untuk tidak.\\n\\nTekan kembali atau klik lanjutkan segera setelah Anda siap. Tombol Prosed akan segera hilang, dan percobaan akan dimulai setelah suara dimuat, yang membutuhkan waktu 40 detik atau lebih, tergantung pada kecepatan koneksi internet. Kami berupaya mempersingkat penundaan ini dalam rilis di masa mendatang.\\n\\nMemuat suara ...',\r\n    'zh-CN':\r\n      '声音检测。您将开始进行许多试验。您正在尝试检测特定的目标声音：一个音符，重复8次，总是相同的音符。该目标仅在一半的试验中存在。在每个试验中，您的工作是倾听并确定是否在场，是还是否。随着您从试验的进行，根据您的响应，目标声音量将适应，因此几乎无法检测到。在最初的练习块中，目标将是一个人。在以后的块中，由于其他声音，目标将很难检测到。始终忽略其他声音，并尝试报告，是或否，是否存在目标声音。使用“是”的“ y”键，而“ n”键否。\\n\\n点击返回或单击，请尽快进行。继续按钮将立即消失，一旦加载声音，实验将开始，这取决于Internet连接的速度，需要40秒或更长时间。我们正在努力在以后的版本中缩短这一延迟。\\n\\n加载声音...',\r\n    'zh-HK':\r\n      '聲音檢測。您將開始進行許多試驗。您正在嘗試檢測特定的目標聲音：一個音符，重複8次，總是相同的音符。該目標僅在一半的試驗中存在。在每個試驗中，您的工作是傾聽並確定是否在場，是還是否。隨著您從試驗的進行，根據您的響應，目標聲音量將適應，因此幾乎無法檢測到。在最初的練習塊中，目標將是一個人。在以後的塊中，由於其他聲音，目標將很難檢測到。始終忽略其他聲音，並嘗試報告，是或否，是否存在目標聲音。使用“是”的“ y”鍵，而“ n”鍵否。\\n\\n點擊返回或單擊，請盡快進行。繼續按鈕將立即消失，一旦加載聲音，實驗將開始，這取決於Internet連接的速度，需要40秒或更長時間。我們正在努力在以後的版本中縮短這一延遲。\\n\\n加載聲音...',\r\n    ja: '音の検出。多くの試験のブロックを開始しようとしています。特定のターゲットサウンドを検出しようとしています。1つのメモ、8回繰り返され、常に同じメモです。そのターゲットは、ランダムに試行の半分にのみ存在します。各トライアルでは、あなたの仕事は、それが存在するかどうかを聞いて決定することです。応答に基づいて、試用から試用へと進むにつれて、ターゲットの音量が適応して、ほとんど検出できません。最初の練習ブロックでは、ターゲットは単独で行われます。後のブロックでは、他の音のためにターゲットを検出するのが難しくなります。常に他の音を無視し、ターゲットサウンドが存在するかどうかを報告してみてください。はいのために「Y」キーを使用し、「n」キーを使用します。\\n\\n返品を押すか、準備ができたらすぐにクリックしてください。続行ボタンはすぐに消え、インターネット接続の速度に応じて、サウンドがロードされると実験が開始されます。将来のリリースでこの遅延を短縮するために取り組んでいます。\\n\\n音の読み込み...',\r\n    ko: '소리 감지. 많은 시련의 블록을 시작하려고합니다. 특정 대상 사운드를 감지하려고합니다. 하나의 음표, 8 번 반복, 항상 같은 음표입니다. 그 목표는 시험의 절반에만 존재합니다. 각 재판에서 귀하의 임무는 예, 그렇지 않은지를 듣고 결정하는 것입니다. 응답에 따라 시험에서 시험으로 진행하면 대상 사운드 볼륨이 거의 감지 할 수 있도록 적응합니다. 초기 연습 블록에서는 대상이 혼자가됩니다. 이후 블록에서는 다른 소리 때문에 대상이 감지하기가 더 어려워집니다. 항상 다른 소리를 무시하고 대상 사운드가 있는지 여부를보고하십시오. 예에 \"y\"키를 사용하고 \"n\"키를 사용하십시오.\\n\\n준비 되 자마자 반품을 누르거나 클릭하십시오. 진행 버튼은 즉시 사라지고 사운드가로드되면 실험이 시작되며 인터넷 연결 속도에 따라 40 초 이상이 걸립니다. 우리는 향후 릴리스 에서이 지연을 단축하기 위해 노력하고 있습니다.\\n\\n소리로드 ...',\r\n  },\r\n  T_thresholdSoundCheck: {\r\n    'en-US':\r\n      \"Hello. Please make sure this computer's sound is working by clicking the Beep button. You'll hear a beep like that every time your answer is right. \",\r\n    de: 'Hallo. Bitte vergewissern Sie sich, dass der Sound dieses Computers funktioniert, indem Sie auf die Schaltfläche Piepton klicken. Übrigens, Sie werden jedes Mal einen solchen Piepton hören, wenn Sie eine Testversionen richtig machen.',\r\n    fr: 'Bonjour. Veuillez vous assurer que le son de cet ordinateur est activé en cliquant sur le bouton Bip. Au fait, vous entendrez un bip comme celui-ci à chaque fois que vous réussirez un essai.',\r\n    es: 'Hola. Asegúrate de que el sonido de esta computadora funcione haciendo clic en el botón Bip. Después, oirás un sonido como ese cada vez que realices un ensayo correctamente.',\r\n    pt: 'Olá. Verifique se o som deste computador funciona clicando no botão BIP. Então, você ouvirá um som assim toda vez que executa um ensaio corretamente.',\r\n    it: 'Ciao. Assicurati che il suono di questo computer funzioni facendo clic sul pulsante segnale acustico. Sentirai un segnale acustico così ogni volta che la tua risposta è giusta.',\r\n    ro: 'Buna ziua. Asigurați -vă că sunetul acestui computer funcționează făcând clic pe butonul BIP. Apoi, veți auzi un sunet de genul acesta de fiecare dată când efectuați corect un eseu.',\r\n    pl: 'Cześć. Upewnij się, że dźwięk tego komputera działa, klikając przycisk Sygnał dzwiękowy. Usłyszysz taki sygnał dźwiękowy za każdym razem, gdy poprawnie odpowiesz.\\n \\n\\n',\r\n    ru: 'Привет. Убедитесь, что на этом компьютере включен звук, нажав кнопку «Звуковой сигнал». Между прочим, вы будете слышать такой звуковой сигнал каждый раз, когда пройдете пробную версию.',\r\n    hy: 'Բարեւ Ձեզ. Համոզվեք, որ ձայնը միացված է այս համակարգչում `կտտացնելով« Ձայն ազդանշանը »կոճակը: Ի դեպ, դուք կտեսնեք այդպիսի ձայնային ազդանշան ամեն անգամ, երբ փորձարկման տարբերակը անցնեք:',\r\n    fi: 'Hei. Varmista, että tämän tietokoneen ääni toimii napsauttamalla piippauspainiketta. Kuulet sellaisen piippauksen joka kerta, kun vastauksesi on oikein.',\r\n    ka: 'გამარჯობა. გთხოვთ, დარწმუნდეთ, რომ ამ კომპიუტერის ხმა მუშაობს BEEP ღილაკის დაჭერით. თქვენ მოისმენთ beep- ს, როგორც ყოველთვის, როდესაც თქვენი პასუხი სწორია.',\r\n    he: 'שלום. אנא ודא כי צליל המחשב פועל על ידי לחיצה על כפתור ביפ. אגב, אתה תשמע צפצוף כזה בכל פעם שתקבל ניסיון נכון.',\r\n    ar: 'مرحبا. يرجى التأكد من تمكين صوت هذا الكمبيوتر بالضغط على زر التزمير (Beep). بالمناسبة ، ستسمع صوتًا كهذا في كل مرة تحصل فيها على تجربة صحيحة.',\r\n    ur: 'ہیلو. بیپ بٹن پر کلک کریں ، براہ کرم یقینی بنائیں کہ اس کمپیوٹر کی آواز کام کر رہی ہے۔ ویسے ، جب بھی آپ کی ٹری درست تھی ، آپ کو ایسی قسم کی بیپ سنی جائے گی۔',\r\n    hi: 'नमस्ते। बीप बटन पर क्लिक करके कृपया सुनिश्चित करें कि इस कंप्यूटर की ध्वनि काम कर रही है। वैसे, जब भी आपका ट्राइअल सही होगा, आपको ईस तरह की एक बीप सुनाई देगी।',\r\n    ta: 'வணக்கம். பீப் பொத்தானைக் கிளிக் செய்வதன் மூலம் இந்த கணினியின் ஒலி செயல்படுகிறது என்பதை உறுதிப்படுத்தவும். ஒவ்வொரு முறையும் உங்கள் பதில் சரியாக இருக்கும் ஒரு பீப்பைக் கேட்பீர்கள்.',\r\n    ml: 'ഹലോ. ബീപ്പ് ബട്ടൺ ക്ലിക്കുചെയ്തുകൊണ്ട് ഈ കമ്പ്യൂട്ടറിന്റെ ശബ്ദം പ്രവർത്തിക്കുന്നുവെന്ന് ദയവായി ഉറപ്പാക്കുക. നിങ്ങളുടെ ഉത്തരം ശരിയാണെല്ലാം നിങ്ങൾ ഒരു ബീപ്പ് കേൾക്കും.',\r\n    te: 'హలో. దయచేసి బీప్ బటన్‌ను క్లిక్ చేయడం ద్వారా ఈ కంప్యూటర్ శబ్దం పనిచేస్తుందని నిర్ధారించుకోండి. మీ సమాధానం సరైన ప్రతిసారీ మీరు అలాంటి బీప్ వింటారు.',\r\n    kn: 'ಹಲೋ. ಬೀಪ್ ಬಟನ್ ಕ್ಲಿಕ್ ಮಾಡುವ ಮೂಲಕ ಈ ಕಂಪ್ಯೂಟರ್‌ನ ಧ್ವನಿ ಕಾರ್ಯನಿರ್ವಹಿಸುತ್ತಿದೆ ಎಂದು ದಯವಿಟ್ಟು ಖಚಿತಪಡಿಸಿಕೊಳ್ಳಿ. ನಿಮ್ಮ ಉತ್ತರವು ಸರಿಯಾಗಿದ್ದಾಗಲೆಲ್ಲಾ ನೀವು ಬೀಪ್ ಅನ್ನು ಕೇಳುತ್ತೀರಿ.',\r\n    bn: 'হ্যালো. দয়া করে নিশ্চিত করুন যে এই কম্পিউটারের শব্দটি বীপ বোতামটি ক্লিক করে কাজ করছে। আপনি প্রতিবার আপনার উত্তরটি ঠিক থাকাকালীন এমন একটি বীপ শুনতে পাবেন।',\r\n    id: 'Halo. Pastikan suara komputer ini berfungsi dengan mengklik tombol bip. Anda akan mendengar bunyi bip seperti itu setiap kali jawaban Anda benar.',\r\n    'zh-CN':\r\n      '您好。请点击“哔”以确认此电脑的声音播放功能没有问题。顺带一提，当您每正确完成一次试验时，您将听到相同的“哔”声。',\r\n    'zh-HK':\r\n      '您好。請點擊“嗶”以確認此電腦的聲音播放功能沒有問題。順帶一提，當您每正確完成一次試驗時，您將聽到相同的“嗶”聲。',\r\n    ja: 'こんにちは。ピーボタンをクリックしてこのコンピュータの音が機能していることを確認してください。ちなみに、テストでは正解する度にこの音が鳴ります。',\r\n    ko: '안녕하세요. 경고음 버튼을 클릭 하여이 컴퓨터의 사운드가 작동하는지 확인하십시오. 당신은 당신의 대답이 옳을 때마다 그런 경고음을들을 것입니다.',\r\n  },\r\n  T_thresholdSoundNewTrial: {\r\n    'en-US': 'Hit the SPACE bar to hear the next trial.',\r\n    de: 'Schlagen Sie die Space Bar, um den nächsten Prozess zu hören.',\r\n    fr: 'Frappez la barre spatiale pour entendre le prochain essai.',\r\n    es: 'Golpea la barra espacial para escuchar la próxima prueba.',\r\n    pt: 'Bata na barra de espaço para ouvir o próximo julgamento.',\r\n    it: 'Colpisci la barra spaziale per ascoltare la prova successiva.',\r\n    ro: 'Apăsați bara spațială pentru a auzi următorul proces.',\r\n    pl: 'Uderz w bar kosmiczny, aby usłyszeć następny proces.',\r\n    ru: 'Ударьте космическую планку, чтобы услышать следующее испытание.',\r\n    hy: 'Հարվածեք տիեզերական սանդղակը `հաջորդ դատական ​​նիստը լսելու համար:',\r\n    fi: 'Osuta avaruuspalkki kuullaksesi seuraavan oikeudenkäynnin.',\r\n    ka: 'მოხვდით კოსმოსურ ზოლში, რომ მოისმინოთ შემდეგი სასამართლო პროცესი.',\r\n    he: 'פגע בסרגל החלל כדי לשמוע את המשפט הבא.',\r\n    ar: 'اضغط على شريط الفضاء لسماع المحاكمة التالية.',\r\n    ur: 'اگلی آزمائش سننے کے لئے اسپیس بار کو مارو۔',\r\n    hi: 'अगला परीक्षण सुनने के लिए स्पेस बार को मारो।',\r\n    ta: 'அடுத்த விசாரணையைக் கேட்க விண்வெளி பட்டியில் அழுத்தவும்.',\r\n    ml: 'അടുത്ത ട്രയൽ കേൾക്കാൻ ബഹിരാകാശ ബാർ അമർത്തുക.',\r\n    te: 'తదుపరి ట్రయల్ వినడానికి స్పేస్ బార్‌ను నొక్కండి.',\r\n    kn: 'ಮುಂದಿನ ಪ್ರಯೋಗವನ್ನು ಕೇಳಲು ಬಾಹ್ಯಾಕಾಶ ಪಟ್ಟಿಯನ್ನು ಹೊಡೆಯಿರಿ.',\r\n    bn: 'পরবর্তী ট্রায়াল শুনতে স্পেস বারে আঘাত করুন।',\r\n    id: 'Tekan Space Bar untuk mendengar persidangan berikutnya.',\r\n    'zh-CN': '登上太空酒吧，听到下一个审判。',\r\n    'zh-HK': '登上太空酒吧，聽到下一個審判。',\r\n    ja: '次のトライアルを聞くためにスペースバーを押してください。',\r\n    ko: '다음 시험을 들으려면 우주 막대를 치십시오.',\r\n  },\r\n  T_thresholdSoundResponse: {\r\n    'en-US': 'Was the target sound present? Press y or n.',\r\n    de: 'War der Zielklang vorhanden? Drücken Sie y oder n.',\r\n    fr: 'Le son cible était-il présent? Appuyez sur y ou n.',\r\n    es: '¿Estaba presente el sonido objetivo? Presione y o n.',\r\n    pt: 'O som alvo estava presente? Pressione y ou n.',\r\n    it: 'Il suono target era presente? Premere y o n.',\r\n    ro: 'Sunetul țintă a fost prezent? Apăsați y sau n.',\r\n    pl: 'Czy docelowy dźwięk był obecny? Naciśnij y lub n.',\r\n    ru: 'Был ли представлен целевой звук? Нажмите Y или N.',\r\n    hy: 'Նպատակը ներկա էր: Սեղմեք Y կամ N:',\r\n    fi: 'Oliko kohdeääni läsnä? Paina y tai n.',\r\n    ka: 'იყო სამიზნე ხმა? დააჭირეთ y ან n.',\r\n    he: 'האם צליל היעד היה קיים? לחץ על y או n.',\r\n    ar: 'هل كان الصوت المستهدف موجودًا؟ اضغط y أو n.',\r\n    ur: 'کیا ہدف کی آواز موجود تھی؟ Y یا N دبائیں۔',\r\n    hi: 'क्या लक्ष्य ध्वनि मौजूद थी? Y या n दबाएं।',\r\n    ta: 'இலக்கு ஒலி இருந்ததா? Y அல்லது N ஐ அழுத்தவும்.',\r\n    ml: 'ടാർഗെറ്റ് സൗണ്ട് നിലവിലുണ്ടോ? Y അല്ലെങ്കിൽ n അമർത്തുക.',\r\n    te: 'లక్ష్య ధ్వని ఉందా? Y లేదా n నొక్కండి.',\r\n    kn: 'ಗುರಿ ಧ್ವನಿ ಪ್ರಸ್ತುತವಾಗಿದೆಯೇ? Y ಅಥವಾ n ಒತ್ತಿರಿ.',\r\n    bn: 'লক্ষ্য শব্দ উপস্থিত ছিল? Y বা n টিপুন।',\r\n    id: 'Apakah suara target hadir? Tekan y atau n.',\r\n    'zh-CN': '目标声音存在吗？按y或n。',\r\n    'zh-HK': '目標聲音存在嗎？按y或n。',\r\n    ja: 'ターゲットサウンドは存在していましたか？ yまたはnを押します。',\r\n    ko: '대상 사운드가 존재 했습니까? y 또는 n을 누릅니다.',\r\n  },\r\n  T_thresholdTitle: {\r\n    'en-US': 'Welcome to EasyEyes Threshold.',\r\n    de: 'Willkommen bei Easyeyes -Schwellenwert.',\r\n    fr: 'Bienvenue dans le seuil EasyEyes.',\r\n    es: 'Bienvenido a EasyEyes Threshold.',\r\n    pt: 'Bem -vindo ao limiar easyeyes.',\r\n    it: 'Benvenuto in EasyEyes Threshold.',\r\n    ro: 'Bine ați venit la Pragul EasyEyes.',\r\n    pl: 'Witamy w Easyeyes treshold. ',\r\n    ru: 'Добро пожаловать в порог Easyeyes.',\r\n    hy: 'Բարի գալուստ EasyEyes- ի շեմը:',\r\n    fi: 'Tervetuloa Easyeyes -kynnysarvoon.',\r\n    ka: 'კეთილი იყოს თქვენი მობრძანება Easyeyes- ის ზღურბლზე.',\r\n    he: 'ברוך הבא לסף EasyEyes.',\r\n    ar: 'مرحبا بك في EasyEyes Threshold.',\r\n    ur: 'ایزیئس دہلیز میں خوش آمدید۔\\n',\r\n    hi: 'EasyEyes थ्रेसहोल्ड में आपका स्वागत है।\\n',\r\n    ta: 'எளிதான வாசலுக்கு வருக.',\r\n    ml: 'എളുപ്പമുള്ള പരിധിയിലേക്ക് സ്വാഗതം.',\r\n    te: 'ఈజీయెస్ థ్రెషోల్డ్‌కు స్వాగతం.',\r\n    kn: 'ಈಸಿಐಇಗಳ ಮಿತಿಗೆ ಸುಸ್ವಾಗತ.',\r\n    bn: 'ইজিয়েস থ্রেশহোল্ডে আপনাকে স্বাগতম।',\r\n    id: 'Selamat datang di Ambang Eyeseyes.',\r\n    'zh-CN': '欢迎使用 EasyEyes Threshold。',\r\n    'zh-HK': '歡迎使用 EasyEyes Threshold。',\r\n    ja: 'EasyEyes Thresholdへようこそ。',\r\n    ko: 'Easyeyes 임계 값에 오신 것을 환영합니다.',\r\n  },\r\n  T_whyClick: {\r\n    'en-US':\r\n      \"In this block we'll use clicks, instead of the keyboard, because clicking gets your eye to the right spot at the right time.\",\r\n    de: 'In diesem Block verwenden wir Klicks anstelle der Tastatur, da das Klicken zum richtigen Zeitpunkt zum richtigen Ort zum richtigen Ort ist.',\r\n    fr: 'Dans ce bloc, nous utiliserons des clics, au lieu du clavier, car en cliquant sur votre œil au bon endroit au bon moment.',\r\n    es: 'En este bloque, usaremos clics, en lugar del teclado, porque hacer clic pone tu ojo en el lugar justo en el momento justo.',\r\n    pt: 'Neste bloco, usaremos cliques, em vez do teclado, porque clicando em seu olho no lugar certo na hora certa.',\r\n    it: 'In questo blocco useremo i clic, anziché la tastiera, perché i clic portano gli occhi al punto giusto al momento giusto.',\r\n    ro: 'În acest bloc, vom folosi clicuri, în loc de tastatură, deoarece faceți clic pe ochiul dvs. la locul potrivit la momentul potrivit.',\r\n    pl: 'W tym bloku użyjemy kliknięć zamiast klawiatury, ponieważ kliknięcie przyciąga oko we właściwe miejsce we właściwym czasie.',\r\n    ru: 'В этом блоке мы будем использовать нажатие мыши, а не клавиатуру, потому что нажатие мыши направляет ваш взгляд на правильное место в правильное время.',\r\n    hy: 'Այս բլոկում մենք կօգտագործենք կտտոցներ, ստեղնաշարի փոխարեն, քանի որ կտտացնելով ճիշտ ժամանակին ձեր աչքը ճիշտ տեղում է ստանում:',\r\n    fi: 'Tässä lohkossa käytämme napsautuksia näppäimistön sijasta, koska napsauttaminen saa silmäsi oikeaan kohtaan oikeaan aikaan.',\r\n    ka: 'ამ ბლოკში ჩვენ გამოვიყენებთ დაწკაპუნებებს, კლავიშის ნაცვლად, რადგან დაჭერით თქვენს თვალს სწორ დროს მიჰყვება.',\r\n    he: 'בחסימה זו נשתמש בקליקים, במקום במקלדת, מכיוון שלחיצה מקבלת את העין שלך למקום הנכון בזמן הנכון.',\r\n    ar: 'في هذه الكتلة ، سنستخدم النقرات ، بدلاً من لوحة المفاتيح ، لأن النقر فوق عينيك إلى المكان المناسب في الوقت المناسب.',\r\n    ur: 'اس بلاک میں ہم کی بورڈ کے بجائے کلکس کا استعمال کریں گے ، کیونکہ کلک کرکے ، آپ کی آنکھیں صحیح وقت پر صحیح جگہ پر پہنچ جاتی ہیں۔',\r\n    hi: 'इस ब्लॉक में हम कीबोर्ड के बजाय क्लिकों का उपयोग करेंगे, क्योंकि क्लिक करने से आपकी आंखें सही समय पर सही स्थान पर पहुंच जाती हैं।',\r\n    ta: 'இந்தத் தொகுதியில் நாங்கள் விசைப்பலகைக்கு பதிலாக கிளிக்குகளைப் பயன்படுத்துவோம், ஏனென்றால் கிளிக் செய்வதன் மூலம் சரியான நேரத்தில் சரியான இடத்திற்கு உங்கள் கண்களை பெறுகிறது.',\r\n    ml: 'ഈ ബ്ലോക്കിൽ ഞങ്ങൾ കീബോർഡിന് പകരം ക്ലിക്കുകൾ ഉപയോഗിക്കും, കാരണം ക്ലിക്കുചെയ്യുന്നത് ശരിയായ സമയത്ത് ശരിയായ സ്ഥലത്ത് തന്നെ ലഭിക്കും.',\r\n    te: 'ఈ బ్లాక్‌లో మేము కీబోర్డ్‌కు బదులుగా క్లిక్‌లను ఉపయోగిస్తాము, ఎందుకంటే క్లిక్ చేయడం సరైన సమయంలో సరైన ప్రదేశానికి మీ కన్ను పొందుతుంది.',\r\n    kn: 'ಈ ಬ್ಲಾಕ್‌ನಲ್ಲಿ ನಾವು ಕೀಬೋರ್ಡ್ ಬದಲಿಗೆ ಕ್ಲಿಕ್‌ಗಳನ್ನು ಬಳಸುತ್ತೇವೆ, ಏಕೆಂದರೆ ಕ್ಲಿಕ್ ಮಾಡುವುದರಿಂದ ಸರಿಯಾದ ಸಮಯದಲ್ಲಿ ನಿಮ್ಮ ಕಣ್ಣನ್ನು ಸರಿಯಾದ ಸ್ಥಳಕ್ಕೆ ಬರುತ್ತದೆ.',\r\n    bn: 'এই ব্লকে আমরা কীবোর্ডের পরিবর্তে ক্লিকগুলি ব্যবহার করব, কারণ ক্লিক করা আপনার চোখটি সঠিক সময়ে সঠিক জায়গায় পেয়েছে।',\r\n    id: 'Di blok ini kami akan menggunakan klik, alih -alih keyboard, karena mengklik mengarahkan Anda ke tempat yang tepat pada waktu yang tepat.',\r\n    'zh-CN': '在此区组中请使用鼠标而非键盘，因为点击鼠标可以让您在合适的时机看合适的位置。',\r\n    'zh-HK': '在此區組中請使用鼠標而非鍵盤，因為點擊鼠標可以讓您在合適的時機看合適的位置。',\r\n    ja: 'このブロックでは、キーボードの代わりにクリックを使用します。クリックが適切なタイミングで適切な場所に目を向けるためです。',\r\n    ko: '이 블록에서는 키보드 대신 클릭을 사용합니다.',\r\n  },\r\n};\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./dist/example/i18n.js?");

/***/ }),

/***/ "./dist/mlsGen.js":
/*!************************!*\
  !*** ./dist/mlsGen.js ***!
  \************************/
/***/ (function(module) {

eval("\r\nvar createMLSGenModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createMLSGenModule) {\r\n  createMLSGenModule = createMLSGenModule || {};\r\n\r\nvar Module = typeof createMLSGenModule !== \"undefined\" ? createMLSGenModule : {};\r\n\r\nvar readyPromiseResolve, readyPromiseReject;\r\n\r\nModule[\"ready\"] = new Promise(function(resolve, reject) {\r\n readyPromiseResolve = resolve;\r\n readyPromiseReject = reject;\r\n});\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"_main\")) {\r\n Object.defineProperty(Module[\"ready\"], \"_main\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"_main\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"___getTypeName\")) {\r\n Object.defineProperty(Module[\"ready\"], \"___getTypeName\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"___getTypeName\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"___embind_register_native_and_builtin_types\")) {\r\n Object.defineProperty(Module[\"ready\"], \"___embind_register_native_and_builtin_types\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"___embind_register_native_and_builtin_types\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"___stdio_exit\")) {\r\n Object.defineProperty(Module[\"ready\"], \"___stdio_exit\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting ___stdio_exit on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"___stdio_exit\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting ___stdio_exit on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"__ZN6__asan9FakeStack17AddrIsInFakeStackEm\")) {\r\n Object.defineProperty(Module[\"ready\"], \"__ZN6__asan9FakeStack17AddrIsInFakeStackEm\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting __ZN6__asan9FakeStack17AddrIsInFakeStackEm on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"__ZN6__asan9FakeStack17AddrIsInFakeStackEm\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting __ZN6__asan9FakeStack17AddrIsInFakeStackEm on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"__ZN6__asan9FakeStack8AllocateEmmm\")) {\r\n Object.defineProperty(Module[\"ready\"], \"__ZN6__asan9FakeStack8AllocateEmmm\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting __ZN6__asan9FakeStack8AllocateEmmm on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"__ZN6__asan9FakeStack8AllocateEmmm\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting __ZN6__asan9FakeStack8AllocateEmmm on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module[\"ready\"], \"onRuntimeInitialized\")) {\r\n Object.defineProperty(Module[\"ready\"], \"onRuntimeInitialized\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n Object.defineProperty(Module[\"ready\"], \"onRuntimeInitialized\", {\r\n  configurable: true,\r\n  set: function() {\r\n   abort(\"You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\");\r\n  }\r\n });\r\n}\r\n\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\n\r\nvar thisProgram = \"./this.program\";\r\n\r\nvar quit_ = (status, toThrow) => {\r\n throw toThrow;\r\n};\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\n\r\nvar ENVIRONMENT_IS_WORKER = false;\r\n\r\nvar ENVIRONMENT_IS_NODE = false;\r\n\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\nif (Module[\"ENVIRONMENT\"]) {\r\n throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)\");\r\n}\r\n\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n if (Module[\"locateFile\"]) {\r\n  return Module[\"locateFile\"](path, scriptDirectory);\r\n }\r\n return scriptDirectory + path;\r\n}\r\n\r\nvar read_, readAsync, readBinary, setWindowTitle;\r\n\r\nfunction logExceptionOnExit(e) {\r\n if (e instanceof ExitStatus) return;\r\n let toLog = e;\r\n if (e && typeof e === \"object\" && e.stack) {\r\n  toLog = [ e, e.stack ];\r\n }\r\n err(\"exiting due to exception: \" + toLog);\r\n}\r\n\r\nif (ENVIRONMENT_IS_SHELL) {\r\n if (typeof process === \"object\" && \"function\" === \"function\" || typeof window === \"object\" || typeof importScripts === \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n if (typeof read != \"undefined\") {\r\n  read_ = function shell_read(f) {\r\n   return read(f);\r\n  };\r\n }\r\n readBinary = function readBinary(f) {\r\n  let data;\r\n  if (typeof readbuffer === \"function\") {\r\n   return new Uint8Array(readbuffer(f));\r\n  }\r\n  data = read(f, \"binary\");\r\n  assert(typeof data === \"object\");\r\n  return data;\r\n };\r\n readAsync = function readAsync(f, onload, onerror) {\r\n  setTimeout(() => onload(readBinary(f)), 0);\r\n };\r\n if (typeof scriptArgs != \"undefined\") {\r\n  arguments_ = scriptArgs;\r\n } else if (typeof arguments != \"undefined\") {\r\n  arguments_ = arguments;\r\n }\r\n if (typeof quit === \"function\") {\r\n  quit_ = ((status, toThrow) => {\r\n   logExceptionOnExit(toThrow);\r\n   quit(status);\r\n  });\r\n }\r\n if (typeof print !== \"undefined\") {\r\n  if (typeof console === \"undefined\") console = {};\r\n  console.log = print;\r\n  console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\r\n }\r\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n if (ENVIRONMENT_IS_WORKER) {\r\n  scriptDirectory = self.location.href;\r\n } else if (typeof document !== \"undefined\" && document.currentScript) {\r\n  scriptDirectory = document.currentScript.src;\r\n }\r\n if (_scriptDir) {\r\n  scriptDirectory = _scriptDir;\r\n }\r\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\r\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\r\n } else {\r\n  scriptDirectory = \"\";\r\n }\r\n if (!(typeof window === \"object\" || typeof importScripts === \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n {\r\n  read_ = (url => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, false);\r\n   xhr.send(null);\r\n   return xhr.responseText;\r\n  });\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n   readBinary = (url => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, false);\r\n    xhr.responseType = \"arraybuffer\";\r\n    xhr.send(null);\r\n    return new Uint8Array(xhr.response);\r\n   });\r\n  }\r\n  readAsync = ((url, onload, onerror) => {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"GET\", url, true);\r\n   xhr.responseType = \"arraybuffer\";\r\n   xhr.onload = (() => {\r\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n     onload(xhr.response);\r\n     return;\r\n    }\r\n    onerror();\r\n   });\r\n   xhr.onerror = onerror;\r\n   xhr.send(null);\r\n  });\r\n }\r\n setWindowTitle = (title => document.title = title);\r\n} else {\r\n throw new Error(\"environment detection error\");\r\n}\r\n\r\nvar out = Module[\"print\"] || console.log.bind(console);\r\n\r\nvar err = Module[\"printErr\"] || console.warn.bind(console);\r\n\r\nObject.assign(Module, moduleOverrides);\r\n\r\nmoduleOverrides = null;\r\n\r\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"arguments\")) {\r\n Object.defineProperty(Module, \"arguments\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"thisProgram\")) {\r\n Object.defineProperty(Module, \"thisProgram\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"quit\")) {\r\n Object.defineProperty(Module, \"quit\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nassert(typeof Module[\"memoryInitializerPrefixURL\"] === \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n\r\nassert(typeof Module[\"pthreadMainPrefixURL\"] === \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\r\n\r\nassert(typeof Module[\"cdInitializerPrefixURL\"] === \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n\r\nassert(typeof Module[\"filePackagePrefixURL\"] === \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\r\n\r\nassert(typeof Module[\"read\"] === \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\r\n\r\nassert(typeof Module[\"readAsync\"] === \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\r\n\r\nassert(typeof Module[\"readBinary\"] === \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\r\n\r\nassert(typeof Module[\"setWindowTitle\"] === \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\r\n\r\nassert(typeof Module[\"TOTAL_MEMORY\"] === \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"read\")) {\r\n Object.defineProperty(Module, \"read\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readAsync\")) {\r\n Object.defineProperty(Module, \"readAsync\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readBinary\")) {\r\n Object.defineProperty(Module, \"readBinary\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setWindowTitle\")) {\r\n Object.defineProperty(Module, \"setWindowTitle\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nassert(!ENVIRONMENT_IS_WORKER, \"worker environment detected but not enabled at build time.  Add 'worker' to `-s ENVIRONMENT` to enable.\");\r\n\r\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-s ENVIRONMENT` to enable.\");\r\n\r\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-s ENVIRONMENT` to enable.\");\r\n\r\nvar POINTER_SIZE = 4;\r\n\r\nfunction warnOnce(text) {\r\n if (!warnOnce.shown) warnOnce.shown = {};\r\n if (!warnOnce.shown[text]) {\r\n  warnOnce.shown[text] = 1;\r\n  err(text);\r\n }\r\n}\r\n\r\nfunction convertJsFunctionToWasm(func, sig) {\r\n if (typeof WebAssembly.Function === \"function\") {\r\n  var typeNames = {\r\n   \"i\": \"i32\",\r\n   \"j\": \"i64\",\r\n   \"f\": \"f32\",\r\n   \"d\": \"f64\"\r\n  };\r\n  var type = {\r\n   parameters: [],\r\n   results: sig[0] == \"v\" ? [] : [ typeNames[sig[0]] ]\r\n  };\r\n  for (var i = 1; i < sig.length; ++i) {\r\n   type.parameters.push(typeNames[sig[i]]);\r\n  }\r\n  return new WebAssembly.Function(type, func);\r\n }\r\n var typeSection = [ 1, 0, 1, 96 ];\r\n var sigRet = sig.slice(0, 1);\r\n var sigParam = sig.slice(1);\r\n var typeCodes = {\r\n  \"i\": 127,\r\n  \"j\": 126,\r\n  \"f\": 125,\r\n  \"d\": 124\r\n };\r\n typeSection.push(sigParam.length);\r\n for (var i = 0; i < sigParam.length; ++i) {\r\n  typeSection.push(typeCodes[sigParam[i]]);\r\n }\r\n if (sigRet == \"v\") {\r\n  typeSection.push(0);\r\n } else {\r\n  typeSection = typeSection.concat([ 1, typeCodes[sigRet] ]);\r\n }\r\n typeSection[1] = typeSection.length - 2;\r\n var bytes = new Uint8Array([ 0, 97, 115, 109, 1, 0, 0, 0 ].concat(typeSection, [ 2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0 ]));\r\n var module = new WebAssembly.Module(bytes);\r\n var instance = new WebAssembly.Instance(module, {\r\n  \"e\": {\r\n   \"f\": func\r\n  }\r\n });\r\n var wrappedFunc = instance.exports[\"f\"];\r\n return wrappedFunc;\r\n}\r\n\r\nvar freeTableIndexes = [];\r\n\r\nvar functionsInTableMap;\r\n\r\nfunction getEmptyTableSlot() {\r\n if (freeTableIndexes.length) {\r\n  return freeTableIndexes.pop();\r\n }\r\n try {\r\n  wasmTable.grow(1);\r\n } catch (err) {\r\n  if (!(err instanceof RangeError)) {\r\n   throw err;\r\n  }\r\n  throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\r\n }\r\n return wasmTable.length - 1;\r\n}\r\n\r\nfunction updateTableMap(offset, count) {\r\n for (var i = offset; i < offset + count; i++) {\r\n  var item = getWasmTableEntry(i);\r\n  if (item) {\r\n   functionsInTableMap.set(item, i);\r\n  }\r\n }\r\n}\r\n\r\nvar tempRet0 = 0;\r\n\r\nvar setTempRet0 = value => {\r\n tempRet0 = value;\r\n};\r\n\r\nvar wasmBinary;\r\n\r\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"wasmBinary\")) {\r\n Object.defineProperty(Module, \"wasmBinary\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nvar noExitRuntime = Module[\"noExitRuntime\"] || false;\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"noExitRuntime\")) {\r\n Object.defineProperty(Module, \"noExitRuntime\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nif (typeof WebAssembly !== \"object\") {\r\n abort(\"no native wasm support detected\");\r\n}\r\n\r\nfunction _asan_js_load_1(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_1(ptr);\r\n return HEAP8[ptr];\r\n}\r\n\r\nfunction _asan_js_load_1u(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_1u(ptr);\r\n return HEAPU8[ptr];\r\n}\r\n\r\nfunction _asan_js_load_2(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_2(ptr);\r\n return HEAP16[ptr];\r\n}\r\n\r\nfunction _asan_js_load_2u(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_2u(ptr);\r\n return HEAPU16[ptr];\r\n}\r\n\r\nfunction _asan_js_load_4(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_4(ptr);\r\n return HEAP32[ptr];\r\n}\r\n\r\nfunction _asan_js_load_4u(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_4u(ptr) >>> 0;\r\n return HEAPU32[ptr];\r\n}\r\n\r\nfunction _asan_js_load_f(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_f(ptr);\r\n return HEAPF32[ptr];\r\n}\r\n\r\nfunction _asan_js_load_d(ptr) {\r\n if (runtimeInitialized) return _asan_c_load_d(ptr);\r\n return HEAPF64[ptr];\r\n}\r\n\r\nfunction _asan_js_store_1(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_1(ptr, val);\r\n return HEAP8[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_1u(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_1u(ptr, val);\r\n return HEAPU8[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_2(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_2(ptr, val);\r\n return HEAP16[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_4(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_4(ptr, val);\r\n return HEAP32[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_4u(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_4u(ptr, val) >>> 0;\r\n return HEAPU32[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_f(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_f(ptr, val);\r\n return HEAPF32[ptr] = val;\r\n}\r\n\r\nfunction _asan_js_store_d(ptr, val) {\r\n if (runtimeInitialized) return _asan_c_store_d(ptr, val);\r\n return HEAPF64[ptr] = val;\r\n}\r\n\r\nvar wasmMemory;\r\n\r\nvar ABORT = false;\r\n\r\nvar EXITSTATUS;\r\n\r\nfunction assert(condition, text) {\r\n if (!condition) {\r\n  abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\r\n }\r\n}\r\n\r\nfunction getCFunc(ident) {\r\n var func = Module[\"_\" + ident];\r\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\r\n return func;\r\n}\r\n\r\nfunction ccall(ident, returnType, argTypes, args, opts) {\r\n var toC = {\r\n  \"string\": function(str) {\r\n   var ret = 0;\r\n   if (str !== null && str !== undefined && str !== 0) {\r\n    var len = (str.length << 2) + 1;\r\n    ret = stackAlloc(len);\r\n    stringToUTF8(str, ret, len);\r\n   }\r\n   return ret;\r\n  },\r\n  \"array\": function(arr) {\r\n   var ret = stackAlloc(arr.length);\r\n   writeArrayToMemory(arr, ret);\r\n   return ret;\r\n  }\r\n };\r\n function convertReturnValue(ret) {\r\n  if (returnType === \"string\") return UTF8ToString(ret);\r\n  if (returnType === \"boolean\") return Boolean(ret);\r\n  return ret;\r\n }\r\n var func = getCFunc(ident);\r\n var cArgs = [];\r\n var stack = 0;\r\n assert(returnType !== \"array\", 'Return type should not be \"array\".');\r\n if (args) {\r\n  for (var i = 0; i < args.length; i++) {\r\n   var converter = toC[argTypes[i]];\r\n   if (converter) {\r\n    if (stack === 0) stack = stackSave();\r\n    cArgs[i] = converter(args[i]);\r\n   } else {\r\n    cArgs[i] = args[i];\r\n   }\r\n  }\r\n }\r\n var ret = func.apply(null, cArgs);\r\n function onDone(ret) {\r\n  if (stack !== 0) stackRestore(stack);\r\n  return convertReturnValue(ret);\r\n }\r\n ret = onDone(ret);\r\n return ret;\r\n}\r\n\r\nvar ALLOC_STACK = 1;\r\n\r\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\r\n\r\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\r\n var endIdx = idx + maxBytesToRead;\r\n var endPtr = idx;\r\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\r\n  return UTF8Decoder.decode(heap.subarray(idx, endPtr));\r\n } else {\r\n  var str = \"\";\r\n  while (idx < endPtr) {\r\n   var u0 = heap[idx++];\r\n   if (!(u0 & 128)) {\r\n    str += String.fromCharCode(u0);\r\n    continue;\r\n   }\r\n   var u1 = heap[idx++] & 63;\r\n   if ((u0 & 224) == 192) {\r\n    str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n    continue;\r\n   }\r\n   var u2 = heap[idx++] & 63;\r\n   if ((u0 & 240) == 224) {\r\n    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\r\n   } else {\r\n    if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte 0x\" + u0.toString(16) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\r\n    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\r\n   }\r\n   if (u0 < 65536) {\r\n    str += String.fromCharCode(u0);\r\n   } else {\r\n    var ch = u0 - 65536;\r\n    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n   }\r\n  }\r\n }\r\n return str;\r\n}\r\n\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\r\n}\r\n\r\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n if (!(maxBytesToWrite > 0)) return 0;\r\n var startIdx = outIdx;\r\n var endIdx = outIdx + maxBytesToWrite - 1;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var u = str.charCodeAt(i);\r\n  if (u >= 55296 && u <= 57343) {\r\n   var u1 = str.charCodeAt(++i);\r\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\r\n  }\r\n  if (u <= 127) {\r\n   if (outIdx >= endIdx) break;\r\n   heap[outIdx++] = u;\r\n  } else if (u <= 2047) {\r\n   if (outIdx + 1 >= endIdx) break;\r\n   heap[outIdx++] = 192 | u >> 6;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  } else if (u <= 65535) {\r\n   if (outIdx + 2 >= endIdx) break;\r\n   heap[outIdx++] = 224 | u >> 12;\r\n   heap[outIdx++] = 128 | u >> 6 & 63;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  } else {\r\n   if (outIdx + 3 >= endIdx) break;\r\n   if (u > 1114111) warnOnce(\"Invalid Unicode code point 0x\" + u.toString(16) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\r\n   heap[outIdx++] = 240 | u >> 18;\r\n   heap[outIdx++] = 128 | u >> 12 & 63;\r\n   heap[outIdx++] = 128 | u >> 6 & 63;\r\n   heap[outIdx++] = 128 | u & 63;\r\n  }\r\n }\r\n heap[outIdx] = 0;\r\n return outIdx - startIdx;\r\n}\r\n\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n}\r\n\r\nfunction lengthBytesUTF8(str) {\r\n var len = 0;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var u = str.charCodeAt(i);\r\n  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\r\n  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;\r\n }\r\n return len;\r\n}\r\n\r\nvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\r\n\r\nfunction UTF16ToString(ptr, maxBytesToRead) {\r\n assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\r\n var endPtr = ptr;\r\n var idx = endPtr >> 1;\r\n var maxIdx = idx + maxBytesToRead / 2;\r\n while (!(idx >= maxIdx) && _asan_js_load_2u(idx)) ++idx;\r\n endPtr = idx << 1;\r\n if (endPtr - ptr > 32 && UTF16Decoder) {\r\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\r\n } else {\r\n  var str = \"\";\r\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n   var codeUnit = _asan_js_load_2(ptr + i * 2 >> 1);\r\n   if (codeUnit == 0) break;\r\n   str += String.fromCharCode(codeUnit);\r\n  }\r\n  return str;\r\n }\r\n}\r\n\r\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\r\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n if (maxBytesToWrite === undefined) {\r\n  maxBytesToWrite = 2147483647;\r\n }\r\n if (maxBytesToWrite < 2) return 0;\r\n maxBytesToWrite -= 2;\r\n var startPtr = outPtr;\r\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\r\n for (var i = 0; i < numCharsToWrite; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  _asan_js_store_2(outPtr >> 1, codeUnit);\r\n  outPtr += 2;\r\n }\r\n _asan_js_store_2(outPtr >> 1, 0);\r\n return outPtr - startPtr;\r\n}\r\n\r\nfunction lengthBytesUTF16(str) {\r\n return str.length * 2;\r\n}\r\n\r\nfunction UTF32ToString(ptr, maxBytesToRead) {\r\n assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\r\n var i = 0;\r\n var str = \"\";\r\n while (!(i >= maxBytesToRead / 4)) {\r\n  var utf32 = _asan_js_load_4(ptr + i * 4 >> 2);\r\n  if (utf32 == 0) break;\r\n  ++i;\r\n  if (utf32 >= 65536) {\r\n   var ch = utf32 - 65536;\r\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n  } else {\r\n   str += String.fromCharCode(utf32);\r\n  }\r\n }\r\n return str;\r\n}\r\n\r\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\r\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n if (maxBytesToWrite === undefined) {\r\n  maxBytesToWrite = 2147483647;\r\n }\r\n if (maxBytesToWrite < 4) return 0;\r\n var startPtr = outPtr;\r\n var endPtr = startPtr + maxBytesToWrite - 4;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n   var trailSurrogate = str.charCodeAt(++i);\r\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\r\n  }\r\n  _asan_js_store_4(outPtr >> 2, codeUnit);\r\n  outPtr += 4;\r\n  if (outPtr + 4 > endPtr) break;\r\n }\r\n _asan_js_store_4(outPtr >> 2, 0);\r\n return outPtr - startPtr;\r\n}\r\n\r\nfunction lengthBytesUTF32(str) {\r\n var len = 0;\r\n for (var i = 0; i < str.length; ++i) {\r\n  var codeUnit = str.charCodeAt(i);\r\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n  len += 4;\r\n }\r\n return len;\r\n}\r\n\r\nfunction allocateUTF8(str) {\r\n var size = lengthBytesUTF8(str) + 1;\r\n var ret = _malloc(size);\r\n if (ret) stringToUTF8Array(str, HEAP8, ret, size);\r\n return ret;\r\n}\r\n\r\nfunction writeArrayToMemory(array, buffer) {\r\n assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\r\n HEAP8.set(array, buffer);\r\n}\r\n\r\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\r\n for (var i = 0; i < str.length; ++i) {\r\n  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));\r\n  _asan_js_store_1(buffer++ >> 0, str.charCodeAt(i));\r\n }\r\n if (!dontAddNull) _asan_js_store_1(buffer >> 0, 0);\r\n}\r\n\r\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n\r\nfunction updateGlobalBufferAndViews(buf) {\r\n buffer = buf;\r\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\r\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\r\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\r\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\r\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\r\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\r\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\r\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\r\n}\r\n\r\nvar TOTAL_STACK = 5242880;\r\n\r\nif (Module[\"TOTAL_STACK\"]) assert(TOTAL_STACK === Module[\"TOTAL_STACK\"], \"the stack size can no longer be determined at runtime\");\r\n\r\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 79101952;\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"INITIAL_MEMORY\")) {\r\n Object.defineProperty(Module, \"INITIAL_MEMORY\", {\r\n  configurable: true,\r\n  get: function() {\r\n   abort(\"Module.INITIAL_MEMORY has been replaced with plain INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\r\n  }\r\n });\r\n}\r\n\r\nassert(INITIAL_MEMORY >= TOTAL_STACK, \"INITIAL_MEMORY should be larger than TOTAL_STACK, was \" + INITIAL_MEMORY + \"! (TOTAL_STACK=\" + TOTAL_STACK + \")\");\r\n\r\nassert(typeof Int32Array !== \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined, \"JS engine does not provide full typed array support\");\r\n\r\nassert(!Module[\"wasmMemory\"], \"Use of `wasmMemory` detected.  Use -s IMPORTED_MEMORY to define wasmMemory externally\");\r\n\r\nassert(INITIAL_MEMORY == 79101952, \"Detected runtime INITIAL_MEMORY setting.  Use -s IMPORTED_MEMORY to define wasmMemory dynamically\");\r\n\r\nvar wasmTable;\r\n\r\nfunction writeStackCookie() {\r\n var max = _emscripten_stack_get_end();\r\n assert((max & 3) == 0);\r\n _asan_js_store_4(max + 4 >> 2, 34821223);\r\n _asan_js_store_4(max + 8 >> 2, 2310721022);\r\n}\r\n\r\nfunction checkStackCookie() {\r\n if (ABORT) return;\r\n var max = _emscripten_stack_get_end();\r\n var cookie1 = _asan_js_load_4u(max + 4 >> 2);\r\n var cookie2 = _asan_js_load_4u(max + 8 >> 2);\r\n if (cookie1 != 34821223 || cookie2 != 2310721022) {\r\n  abort(\"Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x\" + cookie2.toString(16) + \" 0x\" + cookie1.toString(16));\r\n }\r\n}\r\n\r\n(function() {\r\n var h16 = new Int16Array(1);\r\n var h8 = new Int8Array(h16.buffer);\r\n h16[0] = 25459;\r\n if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)\";\r\n})();\r\n\r\nvar __ATPRERUN__ = [];\r\n\r\nvar __ATINIT__ = [];\r\n\r\nvar __ATEXIT__ = [];\r\n\r\nvar __ATPOSTRUN__ = [];\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeExited = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n if (Module[\"preRun\"]) {\r\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\r\n  while (Module[\"preRun\"].length) {\r\n   addOnPreRun(Module[\"preRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n checkStackCookie();\r\n assert(!runtimeInitialized);\r\n runtimeInitialized = true;\r\n if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\r\n FS.ignorePermissions = false;\r\n TTY.init();\r\n callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction exitRuntime() {\r\n checkStackCookie();\r\n ___funcs_on_exit();\r\n callRuntimeCallbacks(__ATEXIT__);\r\n FS.quit();\r\n TTY.shutdown();\r\n runtimeExited = true;\r\n}\r\n\r\nfunction postRun() {\r\n checkStackCookie();\r\n if (Module[\"postRun\"]) {\r\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\r\n  while (Module[\"postRun\"].length) {\r\n   addOnPostRun(Module[\"postRun\"].shift());\r\n  }\r\n }\r\n callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\nassert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\r\n\r\nassert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\r\n\r\nassert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\r\n\r\nassert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\r\n\r\nvar runDependencies = 0;\r\n\r\nvar runDependencyWatcher = null;\r\n\r\nvar dependenciesFulfilled = null;\r\n\r\nvar runDependencyTracking = {};\r\n\r\nfunction getUniqueRunDependency(id) {\r\n var orig = id;\r\n while (1) {\r\n  if (!runDependencyTracking[id]) return id;\r\n  id = orig + Math.random();\r\n }\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n runDependencies++;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n if (id) {\r\n  assert(!runDependencyTracking[id]);\r\n  runDependencyTracking[id] = 1;\r\n  if (runDependencyWatcher === null && typeof setInterval !== \"undefined\") {\r\n   runDependencyWatcher = setInterval(function() {\r\n    if (ABORT) {\r\n     clearInterval(runDependencyWatcher);\r\n     runDependencyWatcher = null;\r\n     return;\r\n    }\r\n    var shown = false;\r\n    for (var dep in runDependencyTracking) {\r\n     if (!shown) {\r\n      shown = true;\r\n      err(\"still waiting on run dependencies:\");\r\n     }\r\n     err(\"dependency: \" + dep);\r\n    }\r\n    if (shown) {\r\n     err(\"(end of list)\");\r\n    }\r\n   }, 1e4);\r\n  }\r\n } else {\r\n  err(\"warning: run dependency added without ID\");\r\n }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n runDependencies--;\r\n if (Module[\"monitorRunDependencies\"]) {\r\n  Module[\"monitorRunDependencies\"](runDependencies);\r\n }\r\n if (id) {\r\n  assert(runDependencyTracking[id]);\r\n  delete runDependencyTracking[id];\r\n } else {\r\n  err(\"warning: run dependency removed without ID\");\r\n }\r\n if (runDependencies == 0) {\r\n  if (runDependencyWatcher !== null) {\r\n   clearInterval(runDependencyWatcher);\r\n   runDependencyWatcher = null;\r\n  }\r\n  if (dependenciesFulfilled) {\r\n   var callback = dependenciesFulfilled;\r\n   dependenciesFulfilled = null;\r\n   callback();\r\n  }\r\n }\r\n}\r\n\r\nModule[\"preloadedImages\"] = {};\r\n\r\nModule[\"preloadedAudios\"] = {};\r\n\r\nfunction abort(what) {\r\n {\r\n  if (Module[\"onAbort\"]) {\r\n   Module[\"onAbort\"](what);\r\n  }\r\n }\r\n what = \"Aborted(\" + what + \")\";\r\n err(what);\r\n ABORT = true;\r\n EXITSTATUS = 1;\r\n var e = new WebAssembly.RuntimeError(what);\r\n readyPromiseReject(e);\r\n throw e;\r\n}\r\n\r\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\r\n\r\nfunction isDataURI(filename) {\r\n return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\nfunction isFileURI(filename) {\r\n return filename.startsWith(\"file://\");\r\n}\r\n\r\nfunction createExportWrapper(name, fixedasm) {\r\n return function() {\r\n  var displayName = name;\r\n  var asm = fixedasm;\r\n  if (!fixedasm) {\r\n   asm = Module[\"asm\"];\r\n  }\r\n  assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\r\n  assert(!runtimeExited, \"native function `\" + displayName + \"` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");\r\n  if (!asm[name]) {\r\n   assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\r\n  }\r\n  return asm[name].apply(null, arguments);\r\n };\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nwasmBinaryFile = \"mlsGen.wasm\";\r\n\r\nif (!isDataURI(wasmBinaryFile)) {\r\n wasmBinaryFile = locateFile(wasmBinaryFile);\r\n}\r\n\r\nfunction getBinary(file) {\r\n try {\r\n  if (file == wasmBinaryFile && wasmBinary) {\r\n   return new Uint8Array(wasmBinary);\r\n  }\r\n  if (readBinary) {\r\n   return readBinary(file);\r\n  } else {\r\n   throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n } catch (err) {\r\n  abort(err);\r\n }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n  if (typeof fetch === \"function\") {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    if (!response[\"ok\"]) {\r\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n    }\r\n    return response[\"arrayBuffer\"]();\r\n   }).catch(function() {\r\n    return getBinary(wasmBinaryFile);\r\n   });\r\n  }\r\n }\r\n return Promise.resolve().then(function() {\r\n  return getBinary(wasmBinaryFile);\r\n });\r\n}\r\n\r\nvar wasmOffsetConverter;\r\n\r\nfunction WasmOffsetConverter(wasmBytes, wasmModule) {\r\n var offset = 8;\r\n var funcidx = 0;\r\n this.offset_map = {};\r\n this.func_starts = [];\r\n this.name_map = {};\r\n this.import_functions = 0;\r\n var buffer = wasmBytes;\r\n function unsignedLEB128() {\r\n  var result = 0;\r\n  var shift = 0;\r\n  do {\r\n   var byte = buffer[offset++];\r\n   result += (byte & 127) << shift;\r\n   shift += 7;\r\n  } while (byte & 128);\r\n  return result;\r\n }\r\n function skipLimits() {\r\n  var flags = unsignedLEB128();\r\n  unsignedLEB128();\r\n  var hasMax = (flags & 1) != 0;\r\n  if (hasMax) {\r\n   unsignedLEB128();\r\n  }\r\n }\r\n binary_parse: while (offset < buffer.length) {\r\n  var type = buffer[offset++];\r\n  var end = unsignedLEB128() + offset;\r\n  switch (type) {\r\n  case 2:\r\n   var count = unsignedLEB128();\r\n   while (count-- > 0) {\r\n    offset = unsignedLEB128() + offset;\r\n    offset = unsignedLEB128() + offset;\r\n    switch (buffer[offset++]) {\r\n    case 0:\r\n     ++funcidx;\r\n     unsignedLEB128();\r\n     break;\r\n\r\n    case 1:\r\n     ++offset;\r\n     skipLimits();\r\n     break;\r\n\r\n    case 2:\r\n     skipLimits();\r\n     break;\r\n\r\n    case 3:\r\n     offset += 2;\r\n     break;\r\n\r\n    default:\r\n     throw \"bad import kind\";\r\n    }\r\n   }\r\n   this.import_functions = funcidx;\r\n   break;\r\n\r\n  case 10:\r\n   var count = unsignedLEB128();\r\n   while (count-- > 0) {\r\n    var size = unsignedLEB128();\r\n    this.offset_map[funcidx++] = offset;\r\n    this.func_starts.push(offset);\r\n    offset += size;\r\n   }\r\n   break binary_parse;\r\n  }\r\n  offset = end;\r\n }\r\n var sections = WebAssembly.Module.customSections(wasmModule, \"name\");\r\n for (var i = 0; i < sections.length; ++i) {\r\n  buffer = new Uint8Array(sections[i]);\r\n  if (buffer[0] != 1) continue;\r\n  offset = 1;\r\n  unsignedLEB128();\r\n  var count = unsignedLEB128();\r\n  while (count-- > 0) {\r\n   var index = unsignedLEB128();\r\n   var length = unsignedLEB128();\r\n   this.name_map[index] = UTF8ArrayToString(buffer, offset, length);\r\n   offset += length;\r\n  }\r\n }\r\n}\r\n\r\nWasmOffsetConverter.prototype.convert = function(funcidx, offset) {\r\n return this.offset_map[funcidx] + offset;\r\n};\r\n\r\nWasmOffsetConverter.prototype.getIndex = function(offset) {\r\n var lo = 0;\r\n var hi = this.func_starts.length;\r\n var mid;\r\n while (lo < hi) {\r\n  mid = Math.floor((lo + hi) / 2);\r\n  if (this.func_starts[mid] > offset) {\r\n   hi = mid;\r\n  } else {\r\n   lo = mid + 1;\r\n  }\r\n }\r\n return lo + this.import_functions - 1;\r\n};\r\n\r\nWasmOffsetConverter.prototype.isSameFunc = function(offset1, offset2) {\r\n return this.getIndex(offset1) == this.getIndex(offset2);\r\n};\r\n\r\nWasmOffsetConverter.prototype.getName = function(offset) {\r\n var index = this.getIndex(offset);\r\n return this.name_map[index] || \"wasm-function[\" + index + \"]\";\r\n};\r\n\r\nfunction resetPrototype(constructor, attrs) {\r\n var object = Object.create(constructor.prototype);\r\n return Object.assign(object, attrs);\r\n}\r\n\r\nfunction createWasm() {\r\n var info = {\r\n  \"env\": asmLibraryArg,\r\n  \"wasi_snapshot_preview1\": asmLibraryArg\r\n };\r\n function receiveInstance(instance, module) {\r\n  var exports = instance.exports;\r\n  Module[\"asm\"] = exports;\r\n  wasmMemory = Module[\"asm\"][\"memory\"];\r\n  assert(wasmMemory, \"memory not found in wasm exports\");\r\n  updateGlobalBufferAndViews(wasmMemory.buffer);\r\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\r\n  assert(wasmTable, \"table not found in wasm exports\");\r\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\r\n  removeRunDependency(\"wasm-instantiate\");\r\n }\r\n addRunDependency(\"wasm-instantiate\");\r\n var trueModule = Module;\r\n function receiveInstantiationResult(result) {\r\n  assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\r\n  trueModule = null;\r\n  receiveInstance(result[\"instance\"]);\r\n }\r\n function instantiateArrayBuffer(receiver) {\r\n  var savedBinary;\r\n  return getBinaryPromise().then(function(binary) {\r\n   savedBinary = binary;\r\n   return WebAssembly.instantiate(binary, info);\r\n  }).then(function(instance) {\r\n   wasmOffsetConverter = new WasmOffsetConverter(savedBinary, instance.module);\r\n   return instance;\r\n  }).then(receiver, function(reason) {\r\n   err(\"failed to asynchronously prepare wasm: \" + reason);\r\n   if (isFileURI(wasmBinaryFile)) {\r\n    err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\r\n   }\r\n   abort(reason);\r\n  });\r\n }\r\n function instantiateAsync() {\r\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\r\n   return fetch(wasmBinaryFile, {\r\n    credentials: \"same-origin\"\r\n   }).then(function(response) {\r\n    var result = WebAssembly.instantiateStreaming(response, info);\r\n    var clonedResponsePromise = response.clone().arrayBuffer();\r\n    return result.then(function(instantiationResult) {\r\n     clonedResponsePromise.then(function(arrayBufferResult) {\r\n      wasmOffsetConverter = new WasmOffsetConverter(new Uint8Array(arrayBufferResult), instantiationResult.module);\r\n      receiveInstantiationResult(instantiationResult);\r\n     }, function(reason) {\r\n      err(\"failed to initialize offset-converter: \" + reason);\r\n     });\r\n    }, function(reason) {\r\n     err(\"wasm streaming compile failed: \" + reason);\r\n     err(\"falling back to ArrayBuffer instantiation\");\r\n     return instantiateArrayBuffer(receiveInstantiationResult);\r\n    });\r\n   });\r\n  } else {\r\n   return instantiateArrayBuffer(receiveInstantiationResult);\r\n  }\r\n }\r\n if (Module[\"instantiateWasm\"]) {\r\n  wasmOffsetConverter = resetPrototype(WasmOffsetConverter, Module[\"wasmOffsetData\"]);\r\n  try {\r\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\r\n   return exports;\r\n  } catch (e) {\r\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\r\n   return false;\r\n  }\r\n }\r\n instantiateAsync().catch(readyPromiseReject);\r\n return {};\r\n}\r\n\r\nvar tempDouble;\r\n\r\nvar tempI64;\r\n\r\nvar ASM_CONSTS = {\r\n 9944289: function() {\r\n  return withBuiltinMalloc(function() {\r\n   return allocateUTF8(Module[\"ASAN_OPTIONS\"] || 0);\r\n  });\r\n },\r\n 9944386: function() {\r\n  return withBuiltinMalloc(function() {\r\n   return allocateUTF8(Module[\"LSAN_OPTIONS\"] || 0);\r\n  });\r\n },\r\n 9944483: function() {\r\n  return withBuiltinMalloc(function() {\r\n   return allocateUTF8(Module[\"UBSAN_OPTIONS\"] || 0);\r\n  });\r\n },\r\n 9944581: function() {\r\n  var setting = Module[\"printWithColors\"];\r\n  if (setting != null) {\r\n   return setting;\r\n  } else {\r\n   return ENVIRONMENT_IS_NODE && process.stderr.isTTY;\r\n  }\r\n }\r\n};\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n while (callbacks.length > 0) {\r\n  var callback = callbacks.shift();\r\n  if (typeof callback == \"function\") {\r\n   callback(Module);\r\n   continue;\r\n  }\r\n  var func = callback.func;\r\n  if (typeof func === \"number\") {\r\n   if (callback.arg === undefined) {\r\n    getWasmTableEntry(func)();\r\n   } else {\r\n    getWasmTableEntry(func)(callback.arg);\r\n   }\r\n  } else {\r\n   func(callback.arg === undefined ? null : callback.arg);\r\n  }\r\n }\r\n}\r\n\r\nfunction demangle(func) {\r\n warnOnce(\"warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\");\r\n return func;\r\n}\r\n\r\nfunction demangleAll(text) {\r\n var regex = /\\b_Z[\\w\\d_]+/g;\r\n return text.replace(regex, function(x) {\r\n  var y = demangle(x);\r\n  return x === y ? x : y + \" [\" + x + \"]\";\r\n });\r\n}\r\n\r\nvar wasmTableMirror = [];\r\n\r\nfunction getWasmTableEntry(funcPtr) {\r\n var func = wasmTableMirror[funcPtr];\r\n if (!func) {\r\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n }\r\n assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\r\n return func;\r\n}\r\n\r\nfunction jsStackTrace() {\r\n var error = new Error();\r\n if (!error.stack) {\r\n  try {\r\n   throw new Error();\r\n  } catch (e) {\r\n   error = e;\r\n  }\r\n  if (!error.stack) {\r\n   return \"(no stack trace available)\";\r\n  }\r\n }\r\n return error.stack.toString();\r\n}\r\n\r\nfunction setWasmTableEntry(idx, func) {\r\n wasmTable.set(idx, func);\r\n wasmTableMirror[idx] = func;\r\n}\r\n\r\nfunction ___assert_fail(condition, filename, line, func) {\r\n abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\r\n}\r\n\r\nvar PATH = {\r\n splitPath: function(filename) {\r\n  var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n  return splitPathRe.exec(filename).slice(1);\r\n },\r\n normalizeArray: function(parts, allowAboveRoot) {\r\n  var up = 0;\r\n  for (var i = parts.length - 1; i >= 0; i--) {\r\n   var last = parts[i];\r\n   if (last === \".\") {\r\n    parts.splice(i, 1);\r\n   } else if (last === \"..\") {\r\n    parts.splice(i, 1);\r\n    up++;\r\n   } else if (up) {\r\n    parts.splice(i, 1);\r\n    up--;\r\n   }\r\n  }\r\n  if (allowAboveRoot) {\r\n   for (;up; up--) {\r\n    parts.unshift(\"..\");\r\n   }\r\n  }\r\n  return parts;\r\n },\r\n normalize: function(path) {\r\n  var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\r\n  path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\r\n   return !!p;\r\n  }), !isAbsolute).join(\"/\");\r\n  if (!path && !isAbsolute) {\r\n   path = \".\";\r\n  }\r\n  if (path && trailingSlash) {\r\n   path += \"/\";\r\n  }\r\n  return (isAbsolute ? \"/\" : \"\") + path;\r\n },\r\n dirname: function(path) {\r\n  var result = PATH.splitPath(path), root = result[0], dir = result[1];\r\n  if (!root && !dir) {\r\n   return \".\";\r\n  }\r\n  if (dir) {\r\n   dir = dir.substr(0, dir.length - 1);\r\n  }\r\n  return root + dir;\r\n },\r\n basename: function(path) {\r\n  if (path === \"/\") return \"/\";\r\n  path = PATH.normalize(path);\r\n  path = path.replace(/\\/$/, \"\");\r\n  var lastSlash = path.lastIndexOf(\"/\");\r\n  if (lastSlash === -1) return path;\r\n  return path.substr(lastSlash + 1);\r\n },\r\n extname: function(path) {\r\n  return PATH.splitPath(path)[3];\r\n },\r\n join: function() {\r\n  var paths = Array.prototype.slice.call(arguments, 0);\r\n  return PATH.normalize(paths.join(\"/\"));\r\n },\r\n join2: function(l, r) {\r\n  return PATH.normalize(l + \"/\" + r);\r\n }\r\n};\r\n\r\nfunction getRandomDevice() {\r\n if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\r\n  var randomBuffer = new Uint8Array(1);\r\n  return function() {\r\n   crypto.getRandomValues(randomBuffer);\r\n   return randomBuffer[0];\r\n  };\r\n } else return function() {\r\n  abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\r\n };\r\n}\r\n\r\nvar PATH_FS = {\r\n resolve: function() {\r\n  var resolvedPath = \"\", resolvedAbsolute = false;\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n   var path = i >= 0 ? arguments[i] : FS.cwd();\r\n   if (typeof path !== \"string\") {\r\n    throw new TypeError(\"Arguments to path.resolve must be strings\");\r\n   } else if (!path) {\r\n    return \"\";\r\n   }\r\n   resolvedPath = path + \"/\" + resolvedPath;\r\n   resolvedAbsolute = path.charAt(0) === \"/\";\r\n  }\r\n  resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\r\n   return !!p;\r\n  }), !resolvedAbsolute).join(\"/\");\r\n  return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\r\n },\r\n relative: function(from, to) {\r\n  from = PATH_FS.resolve(from).substr(1);\r\n  to = PATH_FS.resolve(to).substr(1);\r\n  function trim(arr) {\r\n   var start = 0;\r\n   for (;start < arr.length; start++) {\r\n    if (arr[start] !== \"\") break;\r\n   }\r\n   var end = arr.length - 1;\r\n   for (;end >= 0; end--) {\r\n    if (arr[end] !== \"\") break;\r\n   }\r\n   if (start > end) return [];\r\n   return arr.slice(start, end - start + 1);\r\n  }\r\n  var fromParts = trim(from.split(\"/\"));\r\n  var toParts = trim(to.split(\"/\"));\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n   if (fromParts[i] !== toParts[i]) {\r\n    samePartsLength = i;\r\n    break;\r\n   }\r\n  }\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n   outputParts.push(\"..\");\r\n  }\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n  return outputParts.join(\"/\");\r\n }\r\n};\r\n\r\nvar TTY = {\r\n ttys: [],\r\n init: function() {},\r\n shutdown: function() {},\r\n register: function(dev, ops) {\r\n  TTY.ttys[dev] = {\r\n   input: [],\r\n   output: [],\r\n   ops: ops\r\n  };\r\n  FS.registerDevice(dev, TTY.stream_ops);\r\n },\r\n stream_ops: {\r\n  open: function(stream) {\r\n   var tty = TTY.ttys[stream.node.rdev];\r\n   if (!tty) {\r\n    throw new FS.ErrnoError(43);\r\n   }\r\n   stream.tty = tty;\r\n   stream.seekable = false;\r\n  },\r\n  close: function(stream) {\r\n   stream.tty.ops.flush(stream.tty);\r\n  },\r\n  flush: function(stream) {\r\n   stream.tty.ops.flush(stream.tty);\r\n  },\r\n  read: function(stream, buffer, offset, length, pos) {\r\n   if (!stream.tty || !stream.tty.ops.get_char) {\r\n    throw new FS.ErrnoError(60);\r\n   }\r\n   var bytesRead = 0;\r\n   for (var i = 0; i < length; i++) {\r\n    var result;\r\n    try {\r\n     result = stream.tty.ops.get_char(stream.tty);\r\n    } catch (e) {\r\n     throw new FS.ErrnoError(29);\r\n    }\r\n    if (result === undefined && bytesRead === 0) {\r\n     throw new FS.ErrnoError(6);\r\n    }\r\n    if (result === null || result === undefined) break;\r\n    bytesRead++;\r\n    buffer[offset + i] = result;\r\n   }\r\n   if (bytesRead) {\r\n    stream.node.timestamp = Date.now();\r\n   }\r\n   return bytesRead;\r\n  },\r\n  write: function(stream, buffer, offset, length, pos) {\r\n   if (!stream.tty || !stream.tty.ops.put_char) {\r\n    throw new FS.ErrnoError(60);\r\n   }\r\n   try {\r\n    for (var i = 0; i < length; i++) {\r\n     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\r\n    }\r\n   } catch (e) {\r\n    throw new FS.ErrnoError(29);\r\n   }\r\n   if (length) {\r\n    stream.node.timestamp = Date.now();\r\n   }\r\n   return i;\r\n  }\r\n },\r\n default_tty_ops: {\r\n  get_char: function(tty) {\r\n   if (!tty.input.length) {\r\n    var result = null;\r\n    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n     result = window.prompt(\"Input: \");\r\n     if (result !== null) {\r\n      result += \"\\n\";\r\n     }\r\n    } else if (typeof readline == \"function\") {\r\n     result = readline();\r\n     if (result !== null) {\r\n      result += \"\\n\";\r\n     }\r\n    }\r\n    if (!result) {\r\n     return null;\r\n    }\r\n    tty.input = intArrayFromString(result, true);\r\n   }\r\n   return tty.input.shift();\r\n  },\r\n  put_char: function(tty, val) {\r\n   if (val === null || val === 10) {\r\n    out(UTF8ArrayToString(tty.output, 0));\r\n    tty.output = [];\r\n   } else {\r\n    if (val != 0) tty.output.push(val);\r\n   }\r\n  },\r\n  flush: function(tty) {\r\n   if (tty.output && tty.output.length > 0) {\r\n    out(UTF8ArrayToString(tty.output, 0));\r\n    tty.output = [];\r\n   }\r\n  }\r\n },\r\n default_tty1_ops: {\r\n  put_char: function(tty, val) {\r\n   if (val === null || val === 10) {\r\n    err(UTF8ArrayToString(tty.output, 0));\r\n    tty.output = [];\r\n   } else {\r\n    if (val != 0) tty.output.push(val);\r\n   }\r\n  },\r\n  flush: function(tty) {\r\n   if (tty.output && tty.output.length > 0) {\r\n    err(UTF8ArrayToString(tty.output, 0));\r\n    tty.output = [];\r\n   }\r\n  }\r\n }\r\n};\r\n\r\nfunction zeroMemory(address, size) {\r\n HEAPU8.fill(0, address, address + size);\r\n}\r\n\r\nfunction alignMemory(size, alignment) {\r\n assert(alignment, \"alignment argument is required\");\r\n return Math.ceil(size / alignment) * alignment;\r\n}\r\n\r\nfunction mmapAlloc(size) {\r\n size = alignMemory(size, 65536);\r\n var ptr = _memalign(65536, size);\r\n if (!ptr) return 0;\r\n zeroMemory(ptr, size);\r\n return ptr;\r\n}\r\n\r\nvar MEMFS = {\r\n ops_table: null,\r\n mount: function(mount) {\r\n  return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\r\n },\r\n createNode: function(parent, name, mode, dev) {\r\n  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  if (!MEMFS.ops_table) {\r\n   MEMFS.ops_table = {\r\n    dir: {\r\n     node: {\r\n      getattr: MEMFS.node_ops.getattr,\r\n      setattr: MEMFS.node_ops.setattr,\r\n      lookup: MEMFS.node_ops.lookup,\r\n      mknod: MEMFS.node_ops.mknod,\r\n      rename: MEMFS.node_ops.rename,\r\n      unlink: MEMFS.node_ops.unlink,\r\n      rmdir: MEMFS.node_ops.rmdir,\r\n      readdir: MEMFS.node_ops.readdir,\r\n      symlink: MEMFS.node_ops.symlink\r\n     },\r\n     stream: {\r\n      llseek: MEMFS.stream_ops.llseek\r\n     }\r\n    },\r\n    file: {\r\n     node: {\r\n      getattr: MEMFS.node_ops.getattr,\r\n      setattr: MEMFS.node_ops.setattr\r\n     },\r\n     stream: {\r\n      llseek: MEMFS.stream_ops.llseek,\r\n      read: MEMFS.stream_ops.read,\r\n      write: MEMFS.stream_ops.write,\r\n      allocate: MEMFS.stream_ops.allocate,\r\n      mmap: MEMFS.stream_ops.mmap,\r\n      msync: MEMFS.stream_ops.msync\r\n     }\r\n    },\r\n    link: {\r\n     node: {\r\n      getattr: MEMFS.node_ops.getattr,\r\n      setattr: MEMFS.node_ops.setattr,\r\n      readlink: MEMFS.node_ops.readlink\r\n     },\r\n     stream: {}\r\n    },\r\n    chrdev: {\r\n     node: {\r\n      getattr: MEMFS.node_ops.getattr,\r\n      setattr: MEMFS.node_ops.setattr\r\n     },\r\n     stream: FS.chrdev_stream_ops\r\n    }\r\n   };\r\n  }\r\n  var node = FS.createNode(parent, name, mode, dev);\r\n  if (FS.isDir(node.mode)) {\r\n   node.node_ops = MEMFS.ops_table.dir.node;\r\n   node.stream_ops = MEMFS.ops_table.dir.stream;\r\n   node.contents = {};\r\n  } else if (FS.isFile(node.mode)) {\r\n   node.node_ops = MEMFS.ops_table.file.node;\r\n   node.stream_ops = MEMFS.ops_table.file.stream;\r\n   node.usedBytes = 0;\r\n   node.contents = null;\r\n  } else if (FS.isLink(node.mode)) {\r\n   node.node_ops = MEMFS.ops_table.link.node;\r\n   node.stream_ops = MEMFS.ops_table.link.stream;\r\n  } else if (FS.isChrdev(node.mode)) {\r\n   node.node_ops = MEMFS.ops_table.chrdev.node;\r\n   node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n  }\r\n  node.timestamp = Date.now();\r\n  if (parent) {\r\n   parent.contents[name] = node;\r\n   parent.timestamp = node.timestamp;\r\n  }\r\n  return node;\r\n },\r\n getFileDataAsTypedArray: function(node) {\r\n  if (!node.contents) return new Uint8Array(0);\r\n  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n  return new Uint8Array(node.contents);\r\n },\r\n expandFileStorage: function(node, newCapacity) {\r\n  var prevCapacity = node.contents ? node.contents.length : 0;\r\n  if (prevCapacity >= newCapacity) return;\r\n  var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\r\n  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n  var oldContents = node.contents;\r\n  node.contents = new Uint8Array(newCapacity);\r\n  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n },\r\n resizeFileStorage: function(node, newSize) {\r\n  if (node.usedBytes == newSize) return;\r\n  if (newSize == 0) {\r\n   node.contents = null;\r\n   node.usedBytes = 0;\r\n  } else {\r\n   var oldContents = node.contents;\r\n   node.contents = new Uint8Array(newSize);\r\n   if (oldContents) {\r\n    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\r\n   }\r\n   node.usedBytes = newSize;\r\n  }\r\n },\r\n node_ops: {\r\n  getattr: function(node) {\r\n   var attr = {};\r\n   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n   attr.ino = node.id;\r\n   attr.mode = node.mode;\r\n   attr.nlink = 1;\r\n   attr.uid = 0;\r\n   attr.gid = 0;\r\n   attr.rdev = node.rdev;\r\n   if (FS.isDir(node.mode)) {\r\n    attr.size = 4096;\r\n   } else if (FS.isFile(node.mode)) {\r\n    attr.size = node.usedBytes;\r\n   } else if (FS.isLink(node.mode)) {\r\n    attr.size = node.link.length;\r\n   } else {\r\n    attr.size = 0;\r\n   }\r\n   attr.atime = new Date(node.timestamp);\r\n   attr.mtime = new Date(node.timestamp);\r\n   attr.ctime = new Date(node.timestamp);\r\n   attr.blksize = 4096;\r\n   attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n   return attr;\r\n  },\r\n  setattr: function(node, attr) {\r\n   if (attr.mode !== undefined) {\r\n    node.mode = attr.mode;\r\n   }\r\n   if (attr.timestamp !== undefined) {\r\n    node.timestamp = attr.timestamp;\r\n   }\r\n   if (attr.size !== undefined) {\r\n    MEMFS.resizeFileStorage(node, attr.size);\r\n   }\r\n  },\r\n  lookup: function(parent, name) {\r\n   throw FS.genericErrors[44];\r\n  },\r\n  mknod: function(parent, name, mode, dev) {\r\n   return MEMFS.createNode(parent, name, mode, dev);\r\n  },\r\n  rename: function(old_node, new_dir, new_name) {\r\n   if (FS.isDir(old_node.mode)) {\r\n    var new_node;\r\n    try {\r\n     new_node = FS.lookupNode(new_dir, new_name);\r\n    } catch (e) {}\r\n    if (new_node) {\r\n     for (var i in new_node.contents) {\r\n      throw new FS.ErrnoError(55);\r\n     }\r\n    }\r\n   }\r\n   delete old_node.parent.contents[old_node.name];\r\n   old_node.parent.timestamp = Date.now();\r\n   old_node.name = new_name;\r\n   new_dir.contents[new_name] = old_node;\r\n   new_dir.timestamp = old_node.parent.timestamp;\r\n   old_node.parent = new_dir;\r\n  },\r\n  unlink: function(parent, name) {\r\n   delete parent.contents[name];\r\n   parent.timestamp = Date.now();\r\n  },\r\n  rmdir: function(parent, name) {\r\n   var node = FS.lookupNode(parent, name);\r\n   for (var i in node.contents) {\r\n    throw new FS.ErrnoError(55);\r\n   }\r\n   delete parent.contents[name];\r\n   parent.timestamp = Date.now();\r\n  },\r\n  readdir: function(node) {\r\n   var entries = [ \".\", \"..\" ];\r\n   for (var key in node.contents) {\r\n    if (!node.contents.hasOwnProperty(key)) {\r\n     continue;\r\n    }\r\n    entries.push(key);\r\n   }\r\n   return entries;\r\n  },\r\n  symlink: function(parent, newname, oldpath) {\r\n   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n   node.link = oldpath;\r\n   return node;\r\n  },\r\n  readlink: function(node) {\r\n   if (!FS.isLink(node.mode)) {\r\n    throw new FS.ErrnoError(28);\r\n   }\r\n   return node.link;\r\n  }\r\n },\r\n stream_ops: {\r\n  read: function(stream, buffer, offset, length, position) {\r\n   var contents = stream.node.contents;\r\n   if (position >= stream.node.usedBytes) return 0;\r\n   var size = Math.min(stream.node.usedBytes - position, length);\r\n   assert(size >= 0);\r\n   if (size > 8 && contents.subarray) {\r\n    buffer.set(contents.subarray(position, position + size), offset);\r\n   } else {\r\n    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n   }\r\n   return size;\r\n  },\r\n  write: function(stream, buffer, offset, length, position, canOwn) {\r\n   assert(!(buffer instanceof ArrayBuffer));\r\n   if (!length) return 0;\r\n   var node = stream.node;\r\n   node.timestamp = Date.now();\r\n   if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n    if (canOwn) {\r\n     assert(position === 0, \"canOwn must imply no weird position inside the file\");\r\n     node.contents = buffer.subarray(offset, offset + length);\r\n     node.usedBytes = length;\r\n     return length;\r\n    } else if (node.usedBytes === 0 && position === 0) {\r\n     node.contents = buffer.slice(offset, offset + length);\r\n     node.usedBytes = length;\r\n     return length;\r\n    } else if (position + length <= node.usedBytes) {\r\n     node.contents.set(buffer.subarray(offset, offset + length), position);\r\n     return length;\r\n    }\r\n   }\r\n   MEMFS.expandFileStorage(node, position + length);\r\n   if (node.contents.subarray && buffer.subarray) {\r\n    node.contents.set(buffer.subarray(offset, offset + length), position);\r\n   } else {\r\n    for (var i = 0; i < length; i++) {\r\n     node.contents[position + i] = buffer[offset + i];\r\n    }\r\n   }\r\n   node.usedBytes = Math.max(node.usedBytes, position + length);\r\n   return length;\r\n  },\r\n  llseek: function(stream, offset, whence) {\r\n   var position = offset;\r\n   if (whence === 1) {\r\n    position += stream.position;\r\n   } else if (whence === 2) {\r\n    if (FS.isFile(stream.node.mode)) {\r\n     position += stream.node.usedBytes;\r\n    }\r\n   }\r\n   if (position < 0) {\r\n    throw new FS.ErrnoError(28);\r\n   }\r\n   return position;\r\n  },\r\n  allocate: function(stream, offset, length) {\r\n   MEMFS.expandFileStorage(stream.node, offset + length);\r\n   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n  },\r\n  mmap: function(stream, address, length, position, prot, flags) {\r\n   if (address !== 0) {\r\n    throw new FS.ErrnoError(28);\r\n   }\r\n   if (!FS.isFile(stream.node.mode)) {\r\n    throw new FS.ErrnoError(43);\r\n   }\r\n   var ptr;\r\n   var allocated;\r\n   var contents = stream.node.contents;\r\n   if (!(flags & 2) && contents.buffer === buffer) {\r\n    allocated = false;\r\n    ptr = contents.byteOffset;\r\n   } else {\r\n    if (position > 0 || position + length < contents.length) {\r\n     if (contents.subarray) {\r\n      contents = contents.subarray(position, position + length);\r\n     } else {\r\n      contents = Array.prototype.slice.call(contents, position, position + length);\r\n     }\r\n    }\r\n    allocated = true;\r\n    ptr = mmapAlloc(length);\r\n    if (!ptr) {\r\n     throw new FS.ErrnoError(48);\r\n    }\r\n    HEAP8.set(contents, ptr);\r\n   }\r\n   return {\r\n    ptr: ptr,\r\n    allocated: allocated\r\n   };\r\n  },\r\n  msync: function(stream, buffer, offset, length, mmapFlags) {\r\n   if (!FS.isFile(stream.node.mode)) {\r\n    throw new FS.ErrnoError(43);\r\n   }\r\n   if (mmapFlags & 2) {\r\n    return 0;\r\n   }\r\n   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n   return 0;\r\n  }\r\n }\r\n};\r\n\r\nfunction asyncLoad(url, onload, onerror, noRunDep) {\r\n var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\r\n readAsync(url, function(arrayBuffer) {\r\n  assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n  onload(new Uint8Array(arrayBuffer));\r\n  if (dep) removeRunDependency(dep);\r\n }, function(event) {\r\n  if (onerror) {\r\n   onerror();\r\n  } else {\r\n   throw 'Loading data file \"' + url + '\" failed.';\r\n  }\r\n });\r\n if (dep) addRunDependency(dep);\r\n}\r\n\r\nvar ERRNO_MESSAGES = {\r\n 0: \"Success\",\r\n 1: \"Arg list too long\",\r\n 2: \"Permission denied\",\r\n 3: \"Address already in use\",\r\n 4: \"Address not available\",\r\n 5: \"Address family not supported by protocol family\",\r\n 6: \"No more processes\",\r\n 7: \"Socket already connected\",\r\n 8: \"Bad file number\",\r\n 9: \"Trying to read unreadable message\",\r\n 10: \"Mount device busy\",\r\n 11: \"Operation canceled\",\r\n 12: \"No children\",\r\n 13: \"Connection aborted\",\r\n 14: \"Connection refused\",\r\n 15: \"Connection reset by peer\",\r\n 16: \"File locking deadlock error\",\r\n 17: \"Destination address required\",\r\n 18: \"Math arg out of domain of func\",\r\n 19: \"Quota exceeded\",\r\n 20: \"File exists\",\r\n 21: \"Bad address\",\r\n 22: \"File too large\",\r\n 23: \"Host is unreachable\",\r\n 24: \"Identifier removed\",\r\n 25: \"Illegal byte sequence\",\r\n 26: \"Connection already in progress\",\r\n 27: \"Interrupted system call\",\r\n 28: \"Invalid argument\",\r\n 29: \"I/O error\",\r\n 30: \"Socket is already connected\",\r\n 31: \"Is a directory\",\r\n 32: \"Too many symbolic links\",\r\n 33: \"Too many open files\",\r\n 34: \"Too many links\",\r\n 35: \"Message too long\",\r\n 36: \"Multihop attempted\",\r\n 37: \"File or path name too long\",\r\n 38: \"Network interface is not configured\",\r\n 39: \"Connection reset by network\",\r\n 40: \"Network is unreachable\",\r\n 41: \"Too many open files in system\",\r\n 42: \"No buffer space available\",\r\n 43: \"No such device\",\r\n 44: \"No such file or directory\",\r\n 45: \"Exec format error\",\r\n 46: \"No record locks available\",\r\n 47: \"The link has been severed\",\r\n 48: \"Not enough core\",\r\n 49: \"No message of desired type\",\r\n 50: \"Protocol not available\",\r\n 51: \"No space left on device\",\r\n 52: \"Function not implemented\",\r\n 53: \"Socket is not connected\",\r\n 54: \"Not a directory\",\r\n 55: \"Directory not empty\",\r\n 56: \"State not recoverable\",\r\n 57: \"Socket operation on non-socket\",\r\n 59: \"Not a typewriter\",\r\n 60: \"No such device or address\",\r\n 61: \"Value too large for defined data type\",\r\n 62: \"Previous owner died\",\r\n 63: \"Not super-user\",\r\n 64: \"Broken pipe\",\r\n 65: \"Protocol error\",\r\n 66: \"Unknown protocol\",\r\n 67: \"Protocol wrong type for socket\",\r\n 68: \"Math result not representable\",\r\n 69: \"Read only file system\",\r\n 70: \"Illegal seek\",\r\n 71: \"No such process\",\r\n 72: \"Stale file handle\",\r\n 73: \"Connection timed out\",\r\n 74: \"Text file busy\",\r\n 75: \"Cross-device link\",\r\n 100: \"Device not a stream\",\r\n 101: \"Bad font file fmt\",\r\n 102: \"Invalid slot\",\r\n 103: \"Invalid request code\",\r\n 104: \"No anode\",\r\n 105: \"Block device required\",\r\n 106: \"Channel number out of range\",\r\n 107: \"Level 3 halted\",\r\n 108: \"Level 3 reset\",\r\n 109: \"Link number out of range\",\r\n 110: \"Protocol driver not attached\",\r\n 111: \"No CSI structure available\",\r\n 112: \"Level 2 halted\",\r\n 113: \"Invalid exchange\",\r\n 114: \"Invalid request descriptor\",\r\n 115: \"Exchange full\",\r\n 116: \"No data (for no delay io)\",\r\n 117: \"Timer expired\",\r\n 118: \"Out of streams resources\",\r\n 119: \"Machine is not on the network\",\r\n 120: \"Package not installed\",\r\n 121: \"The object is remote\",\r\n 122: \"Advertise error\",\r\n 123: \"Srmount error\",\r\n 124: \"Communication error on send\",\r\n 125: \"Cross mount point (not really error)\",\r\n 126: \"Given log. name not unique\",\r\n 127: \"f.d. invalid for this operation\",\r\n 128: \"Remote address changed\",\r\n 129: \"Can   access a needed shared lib\",\r\n 130: \"Accessing a corrupted shared lib\",\r\n 131: \".lib section in a.out corrupted\",\r\n 132: \"Attempting to link in too many libs\",\r\n 133: \"Attempting to exec a shared library\",\r\n 135: \"Streams pipe error\",\r\n 136: \"Too many users\",\r\n 137: \"Socket type not supported\",\r\n 138: \"Not supported\",\r\n 139: \"Protocol family not supported\",\r\n 140: \"Can't send after socket shutdown\",\r\n 141: \"Too many references\",\r\n 142: \"Host is down\",\r\n 148: \"No medium (in tape drive)\",\r\n 156: \"Level 2 not synchronized\"\r\n};\r\n\r\nvar ERRNO_CODES = {};\r\n\r\nvar FS = {\r\n root: null,\r\n mounts: [],\r\n devices: {},\r\n streams: [],\r\n nextInode: 1,\r\n nameTable: null,\r\n currentPath: \"/\",\r\n initialized: false,\r\n ignorePermissions: true,\r\n ErrnoError: null,\r\n genericErrors: {},\r\n filesystems: null,\r\n syncFSRequests: 0,\r\n lookupPath: (path, opts = {}) => {\r\n  path = PATH_FS.resolve(FS.cwd(), path);\r\n  if (!path) return {\r\n   path: \"\",\r\n   node: null\r\n  };\r\n  var defaults = {\r\n   follow_mount: true,\r\n   recurse_count: 0\r\n  };\r\n  for (var key in defaults) {\r\n   if (opts[key] === undefined) {\r\n    opts[key] = defaults[key];\r\n   }\r\n  }\r\n  if (opts.recurse_count > 8) {\r\n   throw new FS.ErrnoError(32);\r\n  }\r\n  var parts = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), false);\r\n  var current = FS.root;\r\n  var current_path = \"/\";\r\n  for (var i = 0; i < parts.length; i++) {\r\n   var islast = i === parts.length - 1;\r\n   if (islast && opts.parent) {\r\n    break;\r\n   }\r\n   current = FS.lookupNode(current, parts[i]);\r\n   current_path = PATH.join2(current_path, parts[i]);\r\n   if (FS.isMountpoint(current)) {\r\n    if (!islast || islast && opts.follow_mount) {\r\n     current = current.mounted.root;\r\n    }\r\n   }\r\n   if (!islast || opts.follow) {\r\n    var count = 0;\r\n    while (FS.isLink(current.mode)) {\r\n     var link = FS.readlink(current_path);\r\n     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n     var lookup = FS.lookupPath(current_path, {\r\n      recurse_count: opts.recurse_count\r\n     });\r\n     current = lookup.node;\r\n     if (count++ > 40) {\r\n      throw new FS.ErrnoError(32);\r\n     }\r\n    }\r\n   }\r\n  }\r\n  return {\r\n   path: current_path,\r\n   node: current\r\n  };\r\n },\r\n getPath: node => {\r\n  var path;\r\n  while (true) {\r\n   if (FS.isRoot(node)) {\r\n    var mount = node.mount.mountpoint;\r\n    if (!path) return mount;\r\n    return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\r\n   }\r\n   path = path ? node.name + \"/\" + path : node.name;\r\n   node = node.parent;\r\n  }\r\n },\r\n hashName: (parentid, name) => {\r\n  var hash = 0;\r\n  for (var i = 0; i < name.length; i++) {\r\n   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\r\n  }\r\n  return (parentid + hash >>> 0) % FS.nameTable.length;\r\n },\r\n hashAddNode: node => {\r\n  var hash = FS.hashName(node.parent.id, node.name);\r\n  node.name_next = FS.nameTable[hash];\r\n  FS.nameTable[hash] = node;\r\n },\r\n hashRemoveNode: node => {\r\n  var hash = FS.hashName(node.parent.id, node.name);\r\n  if (FS.nameTable[hash] === node) {\r\n   FS.nameTable[hash] = node.name_next;\r\n  } else {\r\n   var current = FS.nameTable[hash];\r\n   while (current) {\r\n    if (current.name_next === node) {\r\n     current.name_next = node.name_next;\r\n     break;\r\n    }\r\n    current = current.name_next;\r\n   }\r\n  }\r\n },\r\n lookupNode: (parent, name) => {\r\n  var errCode = FS.mayLookup(parent);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode, parent);\r\n  }\r\n  var hash = FS.hashName(parent.id, name);\r\n  for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n   var nodeName = node.name;\r\n   if (node.parent.id === parent.id && nodeName === name) {\r\n    return node;\r\n   }\r\n  }\r\n  return FS.lookup(parent, name);\r\n },\r\n createNode: (parent, name, mode, rdev) => {\r\n  assert(typeof parent === \"object\");\r\n  var node = new FS.FSNode(parent, name, mode, rdev);\r\n  FS.hashAddNode(node);\r\n  return node;\r\n },\r\n destroyNode: node => {\r\n  FS.hashRemoveNode(node);\r\n },\r\n isRoot: node => {\r\n  return node === node.parent;\r\n },\r\n isMountpoint: node => {\r\n  return !!node.mounted;\r\n },\r\n isFile: mode => {\r\n  return (mode & 61440) === 32768;\r\n },\r\n isDir: mode => {\r\n  return (mode & 61440) === 16384;\r\n },\r\n isLink: mode => {\r\n  return (mode & 61440) === 40960;\r\n },\r\n isChrdev: mode => {\r\n  return (mode & 61440) === 8192;\r\n },\r\n isBlkdev: mode => {\r\n  return (mode & 61440) === 24576;\r\n },\r\n isFIFO: mode => {\r\n  return (mode & 61440) === 4096;\r\n },\r\n isSocket: mode => {\r\n  return (mode & 49152) === 49152;\r\n },\r\n flagModes: {\r\n  \"r\": 0,\r\n  \"r+\": 2,\r\n  \"w\": 577,\r\n  \"w+\": 578,\r\n  \"a\": 1089,\r\n  \"a+\": 1090\r\n },\r\n modeStringToFlags: str => {\r\n  var flags = FS.flagModes[str];\r\n  if (typeof flags === \"undefined\") {\r\n   throw new Error(\"Unknown file open mode: \" + str);\r\n  }\r\n  return flags;\r\n },\r\n flagsToPermissionString: flag => {\r\n  var perms = [ \"r\", \"w\", \"rw\" ][flag & 3];\r\n  if (flag & 512) {\r\n   perms += \"w\";\r\n  }\r\n  return perms;\r\n },\r\n nodePermissions: (node, perms) => {\r\n  if (FS.ignorePermissions) {\r\n   return 0;\r\n  }\r\n  if (perms.includes(\"r\") && !(node.mode & 292)) {\r\n   return 2;\r\n  } else if (perms.includes(\"w\") && !(node.mode & 146)) {\r\n   return 2;\r\n  } else if (perms.includes(\"x\") && !(node.mode & 73)) {\r\n   return 2;\r\n  }\r\n  return 0;\r\n },\r\n mayLookup: dir => {\r\n  var errCode = FS.nodePermissions(dir, \"x\");\r\n  if (errCode) return errCode;\r\n  if (!dir.node_ops.lookup) return 2;\r\n  return 0;\r\n },\r\n mayCreate: (dir, name) => {\r\n  try {\r\n   var node = FS.lookupNode(dir, name);\r\n   return 20;\r\n  } catch (e) {}\r\n  return FS.nodePermissions(dir, \"wx\");\r\n },\r\n mayDelete: (dir, name, isdir) => {\r\n  var node;\r\n  try {\r\n   node = FS.lookupNode(dir, name);\r\n  } catch (e) {\r\n   return e.errno;\r\n  }\r\n  var errCode = FS.nodePermissions(dir, \"wx\");\r\n  if (errCode) {\r\n   return errCode;\r\n  }\r\n  if (isdir) {\r\n   if (!FS.isDir(node.mode)) {\r\n    return 54;\r\n   }\r\n   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n    return 10;\r\n   }\r\n  } else {\r\n   if (FS.isDir(node.mode)) {\r\n    return 31;\r\n   }\r\n  }\r\n  return 0;\r\n },\r\n mayOpen: (node, flags) => {\r\n  if (!node) {\r\n   return 44;\r\n  }\r\n  if (FS.isLink(node.mode)) {\r\n   return 32;\r\n  } else if (FS.isDir(node.mode)) {\r\n   if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\r\n    return 31;\r\n   }\r\n  }\r\n  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n },\r\n MAX_OPEN_FDS: 4096,\r\n nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n  for (var fd = fd_start; fd <= fd_end; fd++) {\r\n   if (!FS.streams[fd]) {\r\n    return fd;\r\n   }\r\n  }\r\n  throw new FS.ErrnoError(33);\r\n },\r\n getStream: fd => FS.streams[fd],\r\n createStream: (stream, fd_start, fd_end) => {\r\n  if (!FS.FSStream) {\r\n   FS.FSStream = function() {};\r\n   FS.FSStream.prototype = {\r\n    object: {\r\n     get: function() {\r\n      return this.node;\r\n     },\r\n     set: function(val) {\r\n      this.node = val;\r\n     }\r\n    },\r\n    isRead: {\r\n     get: function() {\r\n      return (this.flags & 2097155) !== 1;\r\n     }\r\n    },\r\n    isWrite: {\r\n     get: function() {\r\n      return (this.flags & 2097155) !== 0;\r\n     }\r\n    },\r\n    isAppend: {\r\n     get: function() {\r\n      return this.flags & 1024;\r\n     }\r\n    }\r\n   };\r\n  }\r\n  stream = Object.assign(new FS.FSStream(), stream);\r\n  var fd = FS.nextfd(fd_start, fd_end);\r\n  stream.fd = fd;\r\n  FS.streams[fd] = stream;\r\n  return stream;\r\n },\r\n closeStream: fd => {\r\n  FS.streams[fd] = null;\r\n },\r\n chrdev_stream_ops: {\r\n  open: stream => {\r\n   var device = FS.getDevice(stream.node.rdev);\r\n   stream.stream_ops = device.stream_ops;\r\n   if (stream.stream_ops.open) {\r\n    stream.stream_ops.open(stream);\r\n   }\r\n  },\r\n  llseek: () => {\r\n   throw new FS.ErrnoError(70);\r\n  }\r\n },\r\n major: dev => dev >> 8,\r\n minor: dev => dev & 255,\r\n makedev: (ma, mi) => ma << 8 | mi,\r\n registerDevice: (dev, ops) => {\r\n  FS.devices[dev] = {\r\n   stream_ops: ops\r\n  };\r\n },\r\n getDevice: dev => FS.devices[dev],\r\n getMounts: mount => {\r\n  var mounts = [];\r\n  var check = [ mount ];\r\n  while (check.length) {\r\n   var m = check.pop();\r\n   mounts.push(m);\r\n   check.push.apply(check, m.mounts);\r\n  }\r\n  return mounts;\r\n },\r\n syncfs: (populate, callback) => {\r\n  if (typeof populate === \"function\") {\r\n   callback = populate;\r\n   populate = false;\r\n  }\r\n  FS.syncFSRequests++;\r\n  if (FS.syncFSRequests > 1) {\r\n   err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\r\n  }\r\n  var mounts = FS.getMounts(FS.root.mount);\r\n  var completed = 0;\r\n  function doCallback(errCode) {\r\n   assert(FS.syncFSRequests > 0);\r\n   FS.syncFSRequests--;\r\n   return callback(errCode);\r\n  }\r\n  function done(errCode) {\r\n   if (errCode) {\r\n    if (!done.errored) {\r\n     done.errored = true;\r\n     return doCallback(errCode);\r\n    }\r\n    return;\r\n   }\r\n   if (++completed >= mounts.length) {\r\n    doCallback(null);\r\n   }\r\n  }\r\n  mounts.forEach(mount => {\r\n   if (!mount.type.syncfs) {\r\n    return done(null);\r\n   }\r\n   mount.type.syncfs(mount, populate, done);\r\n  });\r\n },\r\n mount: (type, opts, mountpoint) => {\r\n  if (typeof type === \"string\") {\r\n   throw type;\r\n  }\r\n  var root = mountpoint === \"/\";\r\n  var pseudo = !mountpoint;\r\n  var node;\r\n  if (root && FS.root) {\r\n   throw new FS.ErrnoError(10);\r\n  } else if (!root && !pseudo) {\r\n   var lookup = FS.lookupPath(mountpoint, {\r\n    follow_mount: false\r\n   });\r\n   mountpoint = lookup.path;\r\n   node = lookup.node;\r\n   if (FS.isMountpoint(node)) {\r\n    throw new FS.ErrnoError(10);\r\n   }\r\n   if (!FS.isDir(node.mode)) {\r\n    throw new FS.ErrnoError(54);\r\n   }\r\n  }\r\n  var mount = {\r\n   type: type,\r\n   opts: opts,\r\n   mountpoint: mountpoint,\r\n   mounts: []\r\n  };\r\n  var mountRoot = type.mount(mount);\r\n  mountRoot.mount = mount;\r\n  mount.root = mountRoot;\r\n  if (root) {\r\n   FS.root = mountRoot;\r\n  } else if (node) {\r\n   node.mounted = mount;\r\n   if (node.mount) {\r\n    node.mount.mounts.push(mount);\r\n   }\r\n  }\r\n  return mountRoot;\r\n },\r\n unmount: mountpoint => {\r\n  var lookup = FS.lookupPath(mountpoint, {\r\n   follow_mount: false\r\n  });\r\n  if (!FS.isMountpoint(lookup.node)) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  var node = lookup.node;\r\n  var mount = node.mounted;\r\n  var mounts = FS.getMounts(mount);\r\n  Object.keys(FS.nameTable).forEach(hash => {\r\n   var current = FS.nameTable[hash];\r\n   while (current) {\r\n    var next = current.name_next;\r\n    if (mounts.includes(current.mount)) {\r\n     FS.destroyNode(current);\r\n    }\r\n    current = next;\r\n   }\r\n  });\r\n  node.mounted = null;\r\n  var idx = node.mount.mounts.indexOf(mount);\r\n  assert(idx !== -1);\r\n  node.mount.mounts.splice(idx, 1);\r\n },\r\n lookup: (parent, name) => {\r\n  return parent.node_ops.lookup(parent, name);\r\n },\r\n mknod: (path, mode, dev) => {\r\n  var lookup = FS.lookupPath(path, {\r\n   parent: true\r\n  });\r\n  var parent = lookup.node;\r\n  var name = PATH.basename(path);\r\n  if (!name || name === \".\" || name === \"..\") {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  var errCode = FS.mayCreate(parent, name);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  if (!parent.node_ops.mknod) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  return parent.node_ops.mknod(parent, name, mode, dev);\r\n },\r\n create: (path, mode) => {\r\n  mode = mode !== undefined ? mode : 438;\r\n  mode &= 4095;\r\n  mode |= 32768;\r\n  return FS.mknod(path, mode, 0);\r\n },\r\n mkdir: (path, mode) => {\r\n  mode = mode !== undefined ? mode : 511;\r\n  mode &= 511 | 512;\r\n  mode |= 16384;\r\n  return FS.mknod(path, mode, 0);\r\n },\r\n mkdirTree: (path, mode) => {\r\n  var dirs = path.split(\"/\");\r\n  var d = \"\";\r\n  for (var i = 0; i < dirs.length; ++i) {\r\n   if (!dirs[i]) continue;\r\n   d += \"/\" + dirs[i];\r\n   try {\r\n    FS.mkdir(d, mode);\r\n   } catch (e) {\r\n    if (e.errno != 20) throw e;\r\n   }\r\n  }\r\n },\r\n mkdev: (path, mode, dev) => {\r\n  if (typeof dev === \"undefined\") {\r\n   dev = mode;\r\n   mode = 438;\r\n  }\r\n  mode |= 8192;\r\n  return FS.mknod(path, mode, dev);\r\n },\r\n symlink: (oldpath, newpath) => {\r\n  if (!PATH_FS.resolve(oldpath)) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  var lookup = FS.lookupPath(newpath, {\r\n   parent: true\r\n  });\r\n  var parent = lookup.node;\r\n  if (!parent) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  var newname = PATH.basename(newpath);\r\n  var errCode = FS.mayCreate(parent, newname);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  if (!parent.node_ops.symlink) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  return parent.node_ops.symlink(parent, newname, oldpath);\r\n },\r\n rename: (old_path, new_path) => {\r\n  var old_dirname = PATH.dirname(old_path);\r\n  var new_dirname = PATH.dirname(new_path);\r\n  var old_name = PATH.basename(old_path);\r\n  var new_name = PATH.basename(new_path);\r\n  var lookup, old_dir, new_dir;\r\n  lookup = FS.lookupPath(old_path, {\r\n   parent: true\r\n  });\r\n  old_dir = lookup.node;\r\n  lookup = FS.lookupPath(new_path, {\r\n   parent: true\r\n  });\r\n  new_dir = lookup.node;\r\n  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n  if (old_dir.mount !== new_dir.mount) {\r\n   throw new FS.ErrnoError(75);\r\n  }\r\n  var old_node = FS.lookupNode(old_dir, old_name);\r\n  var relative = PATH_FS.relative(old_path, new_dirname);\r\n  if (relative.charAt(0) !== \".\") {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  relative = PATH_FS.relative(new_path, old_dirname);\r\n  if (relative.charAt(0) !== \".\") {\r\n   throw new FS.ErrnoError(55);\r\n  }\r\n  var new_node;\r\n  try {\r\n   new_node = FS.lookupNode(new_dir, new_name);\r\n  } catch (e) {}\r\n  if (old_node === new_node) {\r\n   return;\r\n  }\r\n  var isdir = FS.isDir(old_node.mode);\r\n  var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  if (!old_dir.node_ops.rename) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\r\n   throw new FS.ErrnoError(10);\r\n  }\r\n  if (new_dir !== old_dir) {\r\n   errCode = FS.nodePermissions(old_dir, \"w\");\r\n   if (errCode) {\r\n    throw new FS.ErrnoError(errCode);\r\n   }\r\n  }\r\n  FS.hashRemoveNode(old_node);\r\n  try {\r\n   old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n  } catch (e) {\r\n   throw e;\r\n  } finally {\r\n   FS.hashAddNode(old_node);\r\n  }\r\n },\r\n rmdir: path => {\r\n  var lookup = FS.lookupPath(path, {\r\n   parent: true\r\n  });\r\n  var parent = lookup.node;\r\n  var name = PATH.basename(path);\r\n  var node = FS.lookupNode(parent, name);\r\n  var errCode = FS.mayDelete(parent, name, true);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  if (!parent.node_ops.rmdir) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  if (FS.isMountpoint(node)) {\r\n   throw new FS.ErrnoError(10);\r\n  }\r\n  parent.node_ops.rmdir(parent, name);\r\n  FS.destroyNode(node);\r\n },\r\n readdir: path => {\r\n  var lookup = FS.lookupPath(path, {\r\n   follow: true\r\n  });\r\n  var node = lookup.node;\r\n  if (!node.node_ops.readdir) {\r\n   throw new FS.ErrnoError(54);\r\n  }\r\n  return node.node_ops.readdir(node);\r\n },\r\n unlink: path => {\r\n  var lookup = FS.lookupPath(path, {\r\n   parent: true\r\n  });\r\n  var parent = lookup.node;\r\n  if (!parent) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  var name = PATH.basename(path);\r\n  var node = FS.lookupNode(parent, name);\r\n  var errCode = FS.mayDelete(parent, name, false);\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  if (!parent.node_ops.unlink) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  if (FS.isMountpoint(node)) {\r\n   throw new FS.ErrnoError(10);\r\n  }\r\n  parent.node_ops.unlink(parent, name);\r\n  FS.destroyNode(node);\r\n },\r\n readlink: path => {\r\n  var lookup = FS.lookupPath(path);\r\n  var link = lookup.node;\r\n  if (!link) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  if (!link.node_ops.readlink) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n },\r\n stat: (path, dontFollow) => {\r\n  var lookup = FS.lookupPath(path, {\r\n   follow: !dontFollow\r\n  });\r\n  var node = lookup.node;\r\n  if (!node) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  if (!node.node_ops.getattr) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  return node.node_ops.getattr(node);\r\n },\r\n lstat: path => {\r\n  return FS.stat(path, true);\r\n },\r\n chmod: (path, mode, dontFollow) => {\r\n  var node;\r\n  if (typeof path === \"string\") {\r\n   var lookup = FS.lookupPath(path, {\r\n    follow: !dontFollow\r\n   });\r\n   node = lookup.node;\r\n  } else {\r\n   node = path;\r\n  }\r\n  if (!node.node_ops.setattr) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  node.node_ops.setattr(node, {\r\n   mode: mode & 4095 | node.mode & ~4095,\r\n   timestamp: Date.now()\r\n  });\r\n },\r\n lchmod: (path, mode) => {\r\n  FS.chmod(path, mode, true);\r\n },\r\n fchmod: (fd, mode) => {\r\n  var stream = FS.getStream(fd);\r\n  if (!stream) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  FS.chmod(stream.node, mode);\r\n },\r\n chown: (path, uid, gid, dontFollow) => {\r\n  var node;\r\n  if (typeof path === \"string\") {\r\n   var lookup = FS.lookupPath(path, {\r\n    follow: !dontFollow\r\n   });\r\n   node = lookup.node;\r\n  } else {\r\n   node = path;\r\n  }\r\n  if (!node.node_ops.setattr) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  node.node_ops.setattr(node, {\r\n   timestamp: Date.now()\r\n  });\r\n },\r\n lchown: (path, uid, gid) => {\r\n  FS.chown(path, uid, gid, true);\r\n },\r\n fchown: (fd, uid, gid) => {\r\n  var stream = FS.getStream(fd);\r\n  if (!stream) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  FS.chown(stream.node, uid, gid);\r\n },\r\n truncate: (path, len) => {\r\n  if (len < 0) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  var node;\r\n  if (typeof path === \"string\") {\r\n   var lookup = FS.lookupPath(path, {\r\n    follow: true\r\n   });\r\n   node = lookup.node;\r\n  } else {\r\n   node = path;\r\n  }\r\n  if (!node.node_ops.setattr) {\r\n   throw new FS.ErrnoError(63);\r\n  }\r\n  if (FS.isDir(node.mode)) {\r\n   throw new FS.ErrnoError(31);\r\n  }\r\n  if (!FS.isFile(node.mode)) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  var errCode = FS.nodePermissions(node, \"w\");\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  node.node_ops.setattr(node, {\r\n   size: len,\r\n   timestamp: Date.now()\r\n  });\r\n },\r\n ftruncate: (fd, len) => {\r\n  var stream = FS.getStream(fd);\r\n  if (!stream) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if ((stream.flags & 2097155) === 0) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  FS.truncate(stream.node, len);\r\n },\r\n utime: (path, atime, mtime) => {\r\n  var lookup = FS.lookupPath(path, {\r\n   follow: true\r\n  });\r\n  var node = lookup.node;\r\n  node.node_ops.setattr(node, {\r\n   timestamp: Math.max(atime, mtime)\r\n  });\r\n },\r\n open: (path, flags, mode, fd_start, fd_end) => {\r\n  if (path === \"\") {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\r\n  mode = typeof mode === \"undefined\" ? 438 : mode;\r\n  if (flags & 64) {\r\n   mode = mode & 4095 | 32768;\r\n  } else {\r\n   mode = 0;\r\n  }\r\n  var node;\r\n  if (typeof path === \"object\") {\r\n   node = path;\r\n  } else {\r\n   path = PATH.normalize(path);\r\n   try {\r\n    var lookup = FS.lookupPath(path, {\r\n     follow: !(flags & 131072)\r\n    });\r\n    node = lookup.node;\r\n   } catch (e) {}\r\n  }\r\n  var created = false;\r\n  if (flags & 64) {\r\n   if (node) {\r\n    if (flags & 128) {\r\n     throw new FS.ErrnoError(20);\r\n    }\r\n   } else {\r\n    node = FS.mknod(path, mode, 0);\r\n    created = true;\r\n   }\r\n  }\r\n  if (!node) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  if (FS.isChrdev(node.mode)) {\r\n   flags &= ~512;\r\n  }\r\n  if (flags & 65536 && !FS.isDir(node.mode)) {\r\n   throw new FS.ErrnoError(54);\r\n  }\r\n  if (!created) {\r\n   var errCode = FS.mayOpen(node, flags);\r\n   if (errCode) {\r\n    throw new FS.ErrnoError(errCode);\r\n   }\r\n  }\r\n  if (flags & 512) {\r\n   FS.truncate(node, 0);\r\n  }\r\n  flags &= ~(128 | 512 | 131072);\r\n  var stream = FS.createStream({\r\n   node: node,\r\n   path: FS.getPath(node),\r\n   flags: flags,\r\n   seekable: true,\r\n   position: 0,\r\n   stream_ops: node.stream_ops,\r\n   ungotten: [],\r\n   error: false\r\n  }, fd_start, fd_end);\r\n  if (stream.stream_ops.open) {\r\n   stream.stream_ops.open(stream);\r\n  }\r\n  if (Module[\"logReadFiles\"] && !(flags & 1)) {\r\n   if (!FS.readFiles) FS.readFiles = {};\r\n   if (!(path in FS.readFiles)) {\r\n    FS.readFiles[path] = 1;\r\n   }\r\n  }\r\n  return stream;\r\n },\r\n close: stream => {\r\n  if (FS.isClosed(stream)) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (stream.getdents) stream.getdents = null;\r\n  try {\r\n   if (stream.stream_ops.close) {\r\n    stream.stream_ops.close(stream);\r\n   }\r\n  } catch (e) {\r\n   throw e;\r\n  } finally {\r\n   FS.closeStream(stream.fd);\r\n  }\r\n  stream.fd = null;\r\n },\r\n isClosed: stream => {\r\n  return stream.fd === null;\r\n },\r\n llseek: (stream, offset, whence) => {\r\n  if (FS.isClosed(stream)) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (!stream.seekable || !stream.stream_ops.llseek) {\r\n   throw new FS.ErrnoError(70);\r\n  }\r\n  if (whence != 0 && whence != 1 && whence != 2) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n  stream.ungotten = [];\r\n  return stream.position;\r\n },\r\n read: (stream, buffer, offset, length, position) => {\r\n  if (length < 0 || position < 0) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  if (FS.isClosed(stream)) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if ((stream.flags & 2097155) === 1) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (FS.isDir(stream.node.mode)) {\r\n   throw new FS.ErrnoError(31);\r\n  }\r\n  if (!stream.stream_ops.read) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  var seeking = typeof position !== \"undefined\";\r\n  if (!seeking) {\r\n   position = stream.position;\r\n  } else if (!stream.seekable) {\r\n   throw new FS.ErrnoError(70);\r\n  }\r\n  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n  if (!seeking) stream.position += bytesRead;\r\n  return bytesRead;\r\n },\r\n write: (stream, buffer, offset, length, position, canOwn) => {\r\n  if (length < 0 || position < 0) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  if (FS.isClosed(stream)) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if ((stream.flags & 2097155) === 0) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (FS.isDir(stream.node.mode)) {\r\n   throw new FS.ErrnoError(31);\r\n  }\r\n  if (!stream.stream_ops.write) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  if (stream.seekable && stream.flags & 1024) {\r\n   FS.llseek(stream, 0, 2);\r\n  }\r\n  var seeking = typeof position !== \"undefined\";\r\n  if (!seeking) {\r\n   position = stream.position;\r\n  } else if (!stream.seekable) {\r\n   throw new FS.ErrnoError(70);\r\n  }\r\n  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n  if (!seeking) stream.position += bytesWritten;\r\n  return bytesWritten;\r\n },\r\n allocate: (stream, offset, length) => {\r\n  if (FS.isClosed(stream)) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (offset < 0 || length <= 0) {\r\n   throw new FS.ErrnoError(28);\r\n  }\r\n  if ((stream.flags & 2097155) === 0) {\r\n   throw new FS.ErrnoError(8);\r\n  }\r\n  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n   throw new FS.ErrnoError(43);\r\n  }\r\n  if (!stream.stream_ops.allocate) {\r\n   throw new FS.ErrnoError(138);\r\n  }\r\n  stream.stream_ops.allocate(stream, offset, length);\r\n },\r\n mmap: (stream, address, length, position, prot, flags) => {\r\n  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n   throw new FS.ErrnoError(2);\r\n  }\r\n  if ((stream.flags & 2097155) === 1) {\r\n   throw new FS.ErrnoError(2);\r\n  }\r\n  if (!stream.stream_ops.mmap) {\r\n   throw new FS.ErrnoError(43);\r\n  }\r\n  return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\r\n },\r\n msync: (stream, buffer, offset, length, mmapFlags) => {\r\n  if (!stream || !stream.stream_ops.msync) {\r\n   return 0;\r\n  }\r\n  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n },\r\n munmap: stream => 0,\r\n ioctl: (stream, cmd, arg) => {\r\n  if (!stream.stream_ops.ioctl) {\r\n   throw new FS.ErrnoError(59);\r\n  }\r\n  return stream.stream_ops.ioctl(stream, cmd, arg);\r\n },\r\n readFile: (path, opts = {}) => {\r\n  opts.flags = opts.flags || 0;\r\n  opts.encoding = opts.encoding || \"binary\";\r\n  if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n   throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n  }\r\n  var ret;\r\n  var stream = FS.open(path, opts.flags);\r\n  var stat = FS.stat(path);\r\n  var length = stat.size;\r\n  var buf = new Uint8Array(length);\r\n  FS.read(stream, buf, 0, length, 0);\r\n  if (opts.encoding === \"utf8\") {\r\n   ret = UTF8ArrayToString(buf, 0);\r\n  } else if (opts.encoding === \"binary\") {\r\n   ret = buf;\r\n  }\r\n  FS.close(stream);\r\n  return ret;\r\n },\r\n writeFile: (path, data, opts = {}) => {\r\n  opts.flags = opts.flags || 577;\r\n  var stream = FS.open(path, opts.flags, opts.mode);\r\n  if (typeof data === \"string\") {\r\n   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n  } else if (ArrayBuffer.isView(data)) {\r\n   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n  } else {\r\n   throw new Error(\"Unsupported data type\");\r\n  }\r\n  FS.close(stream);\r\n },\r\n cwd: () => FS.currentPath,\r\n chdir: path => {\r\n  var lookup = FS.lookupPath(path, {\r\n   follow: true\r\n  });\r\n  if (lookup.node === null) {\r\n   throw new FS.ErrnoError(44);\r\n  }\r\n  if (!FS.isDir(lookup.node.mode)) {\r\n   throw new FS.ErrnoError(54);\r\n  }\r\n  var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n  if (errCode) {\r\n   throw new FS.ErrnoError(errCode);\r\n  }\r\n  FS.currentPath = lookup.path;\r\n },\r\n createDefaultDirectories: () => {\r\n  FS.mkdir(\"/tmp\");\r\n  FS.mkdir(\"/home\");\r\n  FS.mkdir(\"/home/web_user\");\r\n },\r\n createDefaultDevices: () => {\r\n  FS.mkdir(\"/dev\");\r\n  FS.registerDevice(FS.makedev(1, 3), {\r\n   read: () => 0,\r\n   write: (stream, buffer, offset, length, pos) => length\r\n  });\r\n  FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n  FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n  FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n  var random_device = getRandomDevice();\r\n  FS.createDevice(\"/dev\", \"random\", random_device);\r\n  FS.createDevice(\"/dev\", \"urandom\", random_device);\r\n  FS.mkdir(\"/dev/shm\");\r\n  FS.mkdir(\"/dev/shm/tmp\");\r\n },\r\n createSpecialDirectories: () => {\r\n  FS.mkdir(\"/proc\");\r\n  var proc_self = FS.mkdir(\"/proc/self\");\r\n  FS.mkdir(\"/proc/self/fd\");\r\n  FS.mount({\r\n   mount: () => {\r\n    var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\r\n    node.node_ops = {\r\n     lookup: (parent, name) => {\r\n      var fd = +name;\r\n      var stream = FS.getStream(fd);\r\n      if (!stream) throw new FS.ErrnoError(8);\r\n      var ret = {\r\n       parent: null,\r\n       mount: {\r\n        mountpoint: \"fake\"\r\n       },\r\n       node_ops: {\r\n        readlink: () => stream.path\r\n       }\r\n      };\r\n      ret.parent = ret;\r\n      return ret;\r\n     }\r\n    };\r\n    return node;\r\n   }\r\n  }, {}, \"/proc/self/fd\");\r\n },\r\n createStandardStreams: () => {\r\n  if (Module[\"stdin\"]) {\r\n   FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\r\n  } else {\r\n   FS.symlink(\"/dev/tty\", \"/dev/stdin\");\r\n  }\r\n  if (Module[\"stdout\"]) {\r\n   FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\r\n  } else {\r\n   FS.symlink(\"/dev/tty\", \"/dev/stdout\");\r\n  }\r\n  if (Module[\"stderr\"]) {\r\n   FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\r\n  } else {\r\n   FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\r\n  }\r\n  var stdin = FS.open(\"/dev/stdin\", 0);\r\n  var stdout = FS.open(\"/dev/stdout\", 1);\r\n  var stderr = FS.open(\"/dev/stderr\", 1);\r\n  assert(stdin.fd === 0, \"invalid handle for stdin (\" + stdin.fd + \")\");\r\n  assert(stdout.fd === 1, \"invalid handle for stdout (\" + stdout.fd + \")\");\r\n  assert(stderr.fd === 2, \"invalid handle for stderr (\" + stderr.fd + \")\");\r\n },\r\n ensureErrnoError: () => {\r\n  if (FS.ErrnoError) return;\r\n  FS.ErrnoError = function ErrnoError(errno, node) {\r\n   this.node = node;\r\n   this.setErrno = function(errno) {\r\n    this.errno = errno;\r\n    for (var key in ERRNO_CODES) {\r\n     if (ERRNO_CODES[key] === errno) {\r\n      this.code = key;\r\n      break;\r\n     }\r\n    }\r\n   };\r\n   this.setErrno(errno);\r\n   this.message = ERRNO_MESSAGES[errno];\r\n   if (this.stack) {\r\n    Object.defineProperty(this, \"stack\", {\r\n     value: new Error().stack,\r\n     writable: true\r\n    });\r\n    this.stack = demangleAll(this.stack);\r\n   }\r\n  };\r\n  FS.ErrnoError.prototype = new Error();\r\n  FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n  [ 44 ].forEach(code => {\r\n   FS.genericErrors[code] = new FS.ErrnoError(code);\r\n   FS.genericErrors[code].stack = \"<generic error, no stack>\";\r\n  });\r\n },\r\n staticInit: () => {\r\n  FS.ensureErrnoError();\r\n  FS.nameTable = new Array(4096);\r\n  FS.mount(MEMFS, {}, \"/\");\r\n  FS.createDefaultDirectories();\r\n  FS.createDefaultDevices();\r\n  FS.createSpecialDirectories();\r\n  FS.filesystems = {\r\n   \"MEMFS\": MEMFS\r\n  };\r\n },\r\n init: (input, output, error) => {\r\n  assert(!FS.init.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\r\n  FS.init.initialized = true;\r\n  FS.ensureErrnoError();\r\n  Module[\"stdin\"] = input || Module[\"stdin\"];\r\n  Module[\"stdout\"] = output || Module[\"stdout\"];\r\n  Module[\"stderr\"] = error || Module[\"stderr\"];\r\n  FS.createStandardStreams();\r\n },\r\n quit: () => {\r\n  FS.init.initialized = false;\r\n  ___stdio_exit();\r\n  for (var i = 0; i < FS.streams.length; i++) {\r\n   var stream = FS.streams[i];\r\n   if (!stream) {\r\n    continue;\r\n   }\r\n   FS.close(stream);\r\n  }\r\n },\r\n getMode: (canRead, canWrite) => {\r\n  var mode = 0;\r\n  if (canRead) mode |= 292 | 73;\r\n  if (canWrite) mode |= 146;\r\n  return mode;\r\n },\r\n findObject: (path, dontResolveLastLink) => {\r\n  var ret = FS.analyzePath(path, dontResolveLastLink);\r\n  if (ret.exists) {\r\n   return ret.object;\r\n  } else {\r\n   return null;\r\n  }\r\n },\r\n analyzePath: (path, dontResolveLastLink) => {\r\n  try {\r\n   var lookup = FS.lookupPath(path, {\r\n    follow: !dontResolveLastLink\r\n   });\r\n   path = lookup.path;\r\n  } catch (e) {}\r\n  var ret = {\r\n   isRoot: false,\r\n   exists: false,\r\n   error: 0,\r\n   name: null,\r\n   path: null,\r\n   object: null,\r\n   parentExists: false,\r\n   parentPath: null,\r\n   parentObject: null\r\n  };\r\n  try {\r\n   var lookup = FS.lookupPath(path, {\r\n    parent: true\r\n   });\r\n   ret.parentExists = true;\r\n   ret.parentPath = lookup.path;\r\n   ret.parentObject = lookup.node;\r\n   ret.name = PATH.basename(path);\r\n   lookup = FS.lookupPath(path, {\r\n    follow: !dontResolveLastLink\r\n   });\r\n   ret.exists = true;\r\n   ret.path = lookup.path;\r\n   ret.object = lookup.node;\r\n   ret.name = lookup.node.name;\r\n   ret.isRoot = lookup.path === \"/\";\r\n  } catch (e) {\r\n   ret.error = e.errno;\r\n  }\r\n  return ret;\r\n },\r\n createPath: (parent, path, canRead, canWrite) => {\r\n  parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\r\n  var parts = path.split(\"/\").reverse();\r\n  while (parts.length) {\r\n   var part = parts.pop();\r\n   if (!part) continue;\r\n   var current = PATH.join2(parent, part);\r\n   try {\r\n    FS.mkdir(current);\r\n   } catch (e) {}\r\n   parent = current;\r\n  }\r\n  return current;\r\n },\r\n createFile: (parent, name, properties, canRead, canWrite) => {\r\n  var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n  var mode = FS.getMode(canRead, canWrite);\r\n  return FS.create(path, mode);\r\n },\r\n createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\r\n  var path = name;\r\n  if (parent) {\r\n   parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\r\n   path = name ? PATH.join2(parent, name) : parent;\r\n  }\r\n  var mode = FS.getMode(canRead, canWrite);\r\n  var node = FS.create(path, mode);\r\n  if (data) {\r\n   if (typeof data === \"string\") {\r\n    var arr = new Array(data.length);\r\n    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n    data = arr;\r\n   }\r\n   FS.chmod(node, mode | 146);\r\n   var stream = FS.open(node, 577);\r\n   FS.write(stream, data, 0, data.length, 0, canOwn);\r\n   FS.close(stream);\r\n   FS.chmod(node, mode);\r\n  }\r\n  return node;\r\n },\r\n createDevice: (parent, name, input, output) => {\r\n  var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n  var mode = FS.getMode(!!input, !!output);\r\n  if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n  var dev = FS.makedev(FS.createDevice.major++, 0);\r\n  FS.registerDevice(dev, {\r\n   open: stream => {\r\n    stream.seekable = false;\r\n   },\r\n   close: stream => {\r\n    if (output && output.buffer && output.buffer.length) {\r\n     output(10);\r\n    }\r\n   },\r\n   read: (stream, buffer, offset, length, pos) => {\r\n    var bytesRead = 0;\r\n    for (var i = 0; i < length; i++) {\r\n     var result;\r\n     try {\r\n      result = input();\r\n     } catch (e) {\r\n      throw new FS.ErrnoError(29);\r\n     }\r\n     if (result === undefined && bytesRead === 0) {\r\n      throw new FS.ErrnoError(6);\r\n     }\r\n     if (result === null || result === undefined) break;\r\n     bytesRead++;\r\n     buffer[offset + i] = result;\r\n    }\r\n    if (bytesRead) {\r\n     stream.node.timestamp = Date.now();\r\n    }\r\n    return bytesRead;\r\n   },\r\n   write: (stream, buffer, offset, length, pos) => {\r\n    for (var i = 0; i < length; i++) {\r\n     try {\r\n      output(buffer[offset + i]);\r\n     } catch (e) {\r\n      throw new FS.ErrnoError(29);\r\n     }\r\n    }\r\n    if (length) {\r\n     stream.node.timestamp = Date.now();\r\n    }\r\n    return i;\r\n   }\r\n  });\r\n  return FS.mkdev(path, mode, dev);\r\n },\r\n forceLoadFile: obj => {\r\n  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n  if (typeof XMLHttpRequest !== \"undefined\") {\r\n   throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n  } else if (read_) {\r\n   try {\r\n    obj.contents = intArrayFromString(read_(obj.url), true);\r\n    obj.usedBytes = obj.contents.length;\r\n   } catch (e) {\r\n    throw new FS.ErrnoError(29);\r\n   }\r\n  } else {\r\n   throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\r\n  }\r\n },\r\n createLazyFile: (parent, name, url, canRead, canWrite) => {\r\n  function LazyUint8Array() {\r\n   this.lengthKnown = false;\r\n   this.chunks = [];\r\n  }\r\n  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\r\n   if (idx > this.length - 1 || idx < 0) {\r\n    return undefined;\r\n   }\r\n   var chunkOffset = idx % this.chunkSize;\r\n   var chunkNum = idx / this.chunkSize | 0;\r\n   return this.getter(chunkNum)[chunkOffset];\r\n  };\r\n  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n   this.getter = getter;\r\n  };\r\n  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n   var xhr = new XMLHttpRequest();\r\n   xhr.open(\"HEAD\", url, false);\r\n   xhr.send(null);\r\n   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n   var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n   var header;\r\n   var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n   var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n   var chunkSize = 1024 * 1024;\r\n   if (!hasByteServing) chunkSize = datalength;\r\n   var doXHR = (from, to) => {\r\n    if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n    if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", url, false);\r\n    if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n    xhr.responseType = \"arraybuffer\";\r\n    if (xhr.overrideMimeType) {\r\n     xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n    }\r\n    xhr.send(null);\r\n    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n    if (xhr.response !== undefined) {\r\n     return new Uint8Array(xhr.response || []);\r\n    } else {\r\n     return intArrayFromString(xhr.responseText || \"\", true);\r\n    }\r\n   };\r\n   var lazyArray = this;\r\n   lazyArray.setDataGetter(chunkNum => {\r\n    var start = chunkNum * chunkSize;\r\n    var end = (chunkNum + 1) * chunkSize - 1;\r\n    end = Math.min(end, datalength - 1);\r\n    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\r\n     lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n    }\r\n    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\r\n    return lazyArray.chunks[chunkNum];\r\n   });\r\n   if (usesGzip || !datalength) {\r\n    chunkSize = datalength = 1;\r\n    datalength = this.getter(0).length;\r\n    chunkSize = datalength;\r\n    out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n   }\r\n   this._length = datalength;\r\n   this._chunkSize = chunkSize;\r\n   this.lengthKnown = true;\r\n  };\r\n  if (typeof XMLHttpRequest !== \"undefined\") {\r\n   if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n   var lazyArray = new LazyUint8Array();\r\n   Object.defineProperties(lazyArray, {\r\n    length: {\r\n     get: function() {\r\n      if (!this.lengthKnown) {\r\n       this.cacheLength();\r\n      }\r\n      return this._length;\r\n     }\r\n    },\r\n    chunkSize: {\r\n     get: function() {\r\n      if (!this.lengthKnown) {\r\n       this.cacheLength();\r\n      }\r\n      return this._chunkSize;\r\n     }\r\n    }\r\n   });\r\n   var properties = {\r\n    isDevice: false,\r\n    contents: lazyArray\r\n   };\r\n  } else {\r\n   var properties = {\r\n    isDevice: false,\r\n    url: url\r\n   };\r\n  }\r\n  var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n  if (properties.contents) {\r\n   node.contents = properties.contents;\r\n  } else if (properties.url) {\r\n   node.contents = null;\r\n   node.url = properties.url;\r\n  }\r\n  Object.defineProperties(node, {\r\n   usedBytes: {\r\n    get: function() {\r\n     return this.contents.length;\r\n    }\r\n   }\r\n  });\r\n  var stream_ops = {};\r\n  var keys = Object.keys(node.stream_ops);\r\n  keys.forEach(key => {\r\n   var fn = node.stream_ops[key];\r\n   stream_ops[key] = function forceLoadLazyFile() {\r\n    FS.forceLoadFile(node);\r\n    return fn.apply(null, arguments);\r\n   };\r\n  });\r\n  stream_ops.read = ((stream, buffer, offset, length, position) => {\r\n   FS.forceLoadFile(node);\r\n   var contents = stream.node.contents;\r\n   if (position >= contents.length) return 0;\r\n   var size = Math.min(contents.length - position, length);\r\n   assert(size >= 0);\r\n   if (contents.slice) {\r\n    for (var i = 0; i < size; i++) {\r\n     buffer[offset + i] = contents[position + i];\r\n    }\r\n   } else {\r\n    for (var i = 0; i < size; i++) {\r\n     buffer[offset + i] = contents.get(position + i);\r\n    }\r\n   }\r\n   return size;\r\n  });\r\n  node.stream_ops = stream_ops;\r\n  return node;\r\n },\r\n createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n  var dep = getUniqueRunDependency(\"cp \" + fullname);\r\n  function processData(byteArray) {\r\n   function finish(byteArray) {\r\n    if (preFinish) preFinish();\r\n    if (!dontCreateFile) {\r\n     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n    }\r\n    if (onload) onload();\r\n    removeRunDependency(dep);\r\n   }\r\n   if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n    if (onerror) onerror();\r\n    removeRunDependency(dep);\r\n   })) {\r\n    return;\r\n   }\r\n   finish(byteArray);\r\n  }\r\n  addRunDependency(dep);\r\n  if (typeof url == \"string\") {\r\n   asyncLoad(url, byteArray => processData(byteArray), onerror);\r\n  } else {\r\n   processData(url);\r\n  }\r\n },\r\n indexedDB: () => {\r\n  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n },\r\n DB_NAME: () => {\r\n  return \"EM_FS_\" + window.location.pathname;\r\n },\r\n DB_VERSION: 20,\r\n DB_STORE_NAME: \"FILE_DATA\",\r\n saveFilesToDB: (paths, onload, onerror) => {\r\n  onload = onload || (() => {});\r\n  onerror = onerror || (() => {});\r\n  var indexedDB = FS.indexedDB();\r\n  try {\r\n   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n  } catch (e) {\r\n   return onerror(e);\r\n  }\r\n  openRequest.onupgradeneeded = (() => {\r\n   out(\"creating db\");\r\n   var db = openRequest.result;\r\n   db.createObjectStore(FS.DB_STORE_NAME);\r\n  });\r\n  openRequest.onsuccess = (() => {\r\n   var db = openRequest.result;\r\n   var transaction = db.transaction([ FS.DB_STORE_NAME ], \"readwrite\");\r\n   var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n   var ok = 0, fail = 0, total = paths.length;\r\n   function finish() {\r\n    if (fail == 0) onload(); else onerror();\r\n   }\r\n   paths.forEach(path => {\r\n    var putRequest = files.put(FS.analyzePath(path).object.contents, path);\r\n    putRequest.onsuccess = (() => {\r\n     ok++;\r\n     if (ok + fail == total) finish();\r\n    });\r\n    putRequest.onerror = (() => {\r\n     fail++;\r\n     if (ok + fail == total) finish();\r\n    });\r\n   });\r\n   transaction.onerror = onerror;\r\n  });\r\n  openRequest.onerror = onerror;\r\n },\r\n loadFilesFromDB: (paths, onload, onerror) => {\r\n  onload = onload || (() => {});\r\n  onerror = onerror || (() => {});\r\n  var indexedDB = FS.indexedDB();\r\n  try {\r\n   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n  } catch (e) {\r\n   return onerror(e);\r\n  }\r\n  openRequest.onupgradeneeded = onerror;\r\n  openRequest.onsuccess = (() => {\r\n   var db = openRequest.result;\r\n   try {\r\n    var transaction = db.transaction([ FS.DB_STORE_NAME ], \"readonly\");\r\n   } catch (e) {\r\n    onerror(e);\r\n    return;\r\n   }\r\n   var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n   var ok = 0, fail = 0, total = paths.length;\r\n   function finish() {\r\n    if (fail == 0) onload(); else onerror();\r\n   }\r\n   paths.forEach(path => {\r\n    var getRequest = files.get(path);\r\n    getRequest.onsuccess = (() => {\r\n     if (FS.analyzePath(path).exists) {\r\n      FS.unlink(path);\r\n     }\r\n     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\r\n     ok++;\r\n     if (ok + fail == total) finish();\r\n    });\r\n    getRequest.onerror = (() => {\r\n     fail++;\r\n     if (ok + fail == total) finish();\r\n    });\r\n   });\r\n   transaction.onerror = onerror;\r\n  });\r\n  openRequest.onerror = onerror;\r\n },\r\n absolutePath: () => {\r\n  abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\r\n },\r\n createFolder: () => {\r\n  abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\r\n },\r\n createLink: () => {\r\n  abort(\"FS.createLink has been removed; use FS.symlink instead\");\r\n },\r\n joinPath: () => {\r\n  abort(\"FS.joinPath has been removed; use PATH.join instead\");\r\n },\r\n mmapAlloc: () => {\r\n  abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\r\n },\r\n standardizePath: () => {\r\n  abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\r\n }\r\n};\r\n\r\nvar SYSCALLS = {\r\n mappings: {},\r\n DEFAULT_POLLMASK: 5,\r\n calculateAt: function(dirfd, path, allowEmpty) {\r\n  if (path[0] === \"/\") {\r\n   return path;\r\n  }\r\n  var dir;\r\n  if (dirfd === -100) {\r\n   dir = FS.cwd();\r\n  } else {\r\n   var dirstream = FS.getStream(dirfd);\r\n   if (!dirstream) throw new FS.ErrnoError(8);\r\n   dir = dirstream.path;\r\n  }\r\n  if (path.length == 0) {\r\n   if (!allowEmpty) {\r\n    throw new FS.ErrnoError(44);\r\n   }\r\n   return dir;\r\n  }\r\n  return PATH.join2(dir, path);\r\n },\r\n doStat: function(func, path, buf) {\r\n  try {\r\n   var stat = func(path);\r\n  } catch (e) {\r\n   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n    return -54;\r\n   }\r\n   throw e;\r\n  }\r\n  _asan_js_store_4(buf >> 2, stat.dev);\r\n  _asan_js_store_4(buf + 4 >> 2, 0);\r\n  _asan_js_store_4(buf + 8 >> 2, stat.ino);\r\n  _asan_js_store_4(buf + 12 >> 2, stat.mode);\r\n  _asan_js_store_4(buf + 16 >> 2, stat.nlink);\r\n  _asan_js_store_4(buf + 20 >> 2, stat.uid);\r\n  _asan_js_store_4(buf + 24 >> 2, stat.gid);\r\n  _asan_js_store_4(buf + 28 >> 2, stat.rdev);\r\n  _asan_js_store_4(buf + 32 >> 2, 0);\r\n  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \r\n  _asan_js_store_4(buf + 40 >> 2, tempI64[0]), _asan_js_store_4(buf + 44 >> 2, tempI64[1]);\r\n  _asan_js_store_4(buf + 48 >> 2, 4096);\r\n  _asan_js_store_4(buf + 52 >> 2, stat.blocks);\r\n  _asan_js_store_4(buf + 56 >> 2, stat.atime.getTime() / 1e3 | 0);\r\n  _asan_js_store_4(buf + 60 >> 2, 0);\r\n  _asan_js_store_4(buf + 64 >> 2, stat.mtime.getTime() / 1e3 | 0);\r\n  _asan_js_store_4(buf + 68 >> 2, 0);\r\n  _asan_js_store_4(buf + 72 >> 2, stat.ctime.getTime() / 1e3 | 0);\r\n  _asan_js_store_4(buf + 76 >> 2, 0);\r\n  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \r\n  _asan_js_store_4(buf + 80 >> 2, tempI64[0]), _asan_js_store_4(buf + 84 >> 2, tempI64[1]);\r\n  return 0;\r\n },\r\n doMsync: function(addr, stream, len, flags, offset) {\r\n  var buffer = HEAPU8.slice(addr, addr + len);\r\n  FS.msync(stream, buffer, offset, len, flags);\r\n },\r\n doMkdir: function(path, mode) {\r\n  path = PATH.normalize(path);\r\n  if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\r\n  FS.mkdir(path, mode, 0);\r\n  return 0;\r\n },\r\n doMknod: function(path, mode, dev) {\r\n  switch (mode & 61440) {\r\n  case 32768:\r\n  case 8192:\r\n  case 24576:\r\n  case 4096:\r\n  case 49152:\r\n   break;\r\n\r\n  default:\r\n   return -28;\r\n  }\r\n  FS.mknod(path, mode, dev);\r\n  return 0;\r\n },\r\n doReadlink: function(path, buf, bufsize) {\r\n  if (bufsize <= 0) return -28;\r\n  var ret = FS.readlink(path);\r\n  var len = Math.min(bufsize, lengthBytesUTF8(ret));\r\n  var endChar = _asan_js_load_1(buf + len);\r\n  stringToUTF8(ret, buf, bufsize + 1);\r\n  _asan_js_store_1(buf + len, endChar);\r\n  return len;\r\n },\r\n doAccess: function(path, amode) {\r\n  if (amode & ~7) {\r\n   return -28;\r\n  }\r\n  var lookup = FS.lookupPath(path, {\r\n   follow: true\r\n  });\r\n  var node = lookup.node;\r\n  if (!node) {\r\n   return -44;\r\n  }\r\n  var perms = \"\";\r\n  if (amode & 4) perms += \"r\";\r\n  if (amode & 2) perms += \"w\";\r\n  if (amode & 1) perms += \"x\";\r\n  if (perms && FS.nodePermissions(node, perms)) {\r\n   return -2;\r\n  }\r\n  return 0;\r\n },\r\n doDup: function(path, flags, suggestFD) {\r\n  var suggest = FS.getStream(suggestFD);\r\n  if (suggest) FS.close(suggest);\r\n  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\r\n },\r\n doReadv: function(stream, iov, iovcnt, offset) {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n   var ptr = _asan_js_load_4(iov + i * 8 >> 2);\r\n   var len = _asan_js_load_4(iov + (i * 8 + 4) >> 2);\r\n   var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n   if (curr < 0) return -1;\r\n   ret += curr;\r\n   if (curr < len) break;\r\n  }\r\n  return ret;\r\n },\r\n doWritev: function(stream, iov, iovcnt, offset) {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n   var ptr = _asan_js_load_4(iov + i * 8 >> 2);\r\n   var len = _asan_js_load_4(iov + (i * 8 + 4) >> 2);\r\n   var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n   if (curr < 0) return -1;\r\n   ret += curr;\r\n  }\r\n  return ret;\r\n },\r\n varargs: undefined,\r\n get: function() {\r\n  assert(SYSCALLS.varargs != undefined);\r\n  SYSCALLS.varargs += 4;\r\n  var ret = _asan_js_load_4(SYSCALLS.varargs - 4 >> 2);\r\n  return ret;\r\n },\r\n getStr: function(ptr) {\r\n  var ret = UTF8ToString(ptr);\r\n  return ret;\r\n },\r\n getStreamFromFD: function(fd) {\r\n  var stream = FS.getStream(fd);\r\n  if (!stream) throw new FS.ErrnoError(8);\r\n  return stream;\r\n },\r\n get64: function(low, high) {\r\n  if (low >= 0) assert(high === 0); else assert(high === -1);\r\n  return low;\r\n }\r\n};\r\n\r\nfunction ___syscall_dup(fd) {\r\n try {\r\n  var old = SYSCALLS.getStreamFromFD(fd);\r\n  return FS.open(old.path, old.flags, 0).fd;\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return -e.errno;\r\n }\r\n}\r\n\r\nfunction ___syscall_open(path, flags, varargs) {\r\n SYSCALLS.varargs = varargs;\r\n try {\r\n  var pathname = SYSCALLS.getStr(path);\r\n  var mode = varargs ? SYSCALLS.get() : 0;\r\n  var stream = FS.open(pathname, flags, mode);\r\n  return stream.fd;\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return -e.errno;\r\n }\r\n}\r\n\r\nfunction ___syscall_stat64(path, buf) {\r\n try {\r\n  path = SYSCALLS.getStr(path);\r\n  return SYSCALLS.doStat(FS.stat, path, buf);\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return -e.errno;\r\n }\r\n}\r\n\r\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\r\n\r\nfunction getShiftFromSize(size) {\r\n switch (size) {\r\n case 1:\r\n  return 0;\r\n\r\n case 2:\r\n  return 1;\r\n\r\n case 4:\r\n  return 2;\r\n\r\n case 8:\r\n  return 3;\r\n\r\n default:\r\n  throw new TypeError(\"Unknown type size: \" + size);\r\n }\r\n}\r\n\r\nfunction embind_init_charCodes() {\r\n var codes = new Array(256);\r\n for (var i = 0; i < 256; ++i) {\r\n  codes[i] = String.fromCharCode(i);\r\n }\r\n embind_charCodes = codes;\r\n}\r\n\r\nvar embind_charCodes = undefined;\r\n\r\nfunction readLatin1String(ptr) {\r\n var ret = \"\";\r\n var c = ptr;\r\n while (_asan_js_load_1u(c)) {\r\n  ret += embind_charCodes[_asan_js_load_1u(c++)];\r\n }\r\n return ret;\r\n}\r\n\r\nvar awaitingDependencies = {};\r\n\r\nvar registeredTypes = {};\r\n\r\nvar typeDependencies = {};\r\n\r\nvar char_0 = 48;\r\n\r\nvar char_9 = 57;\r\n\r\nfunction makeLegalFunctionName(name) {\r\n if (undefined === name) {\r\n  return \"_unknown\";\r\n }\r\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n var f = name.charCodeAt(0);\r\n if (f >= char_0 && f <= char_9) {\r\n  return \"_\" + name;\r\n } else {\r\n  return name;\r\n }\r\n}\r\n\r\nfunction createNamedFunction(name, body) {\r\n name = makeLegalFunctionName(name);\r\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\r\n}\r\n\r\nfunction extendError(baseErrorType, errorName) {\r\n var errorClass = createNamedFunction(errorName, function(message) {\r\n  this.name = errorName;\r\n  this.message = message;\r\n  var stack = new Error(message).stack;\r\n  if (stack !== undefined) {\r\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\r\n  }\r\n });\r\n errorClass.prototype = Object.create(baseErrorType.prototype);\r\n errorClass.prototype.constructor = errorClass;\r\n errorClass.prototype.toString = function() {\r\n  if (this.message === undefined) {\r\n   return this.name;\r\n  } else {\r\n   return this.name + \": \" + this.message;\r\n  }\r\n };\r\n return errorClass;\r\n}\r\n\r\nvar BindingError = undefined;\r\n\r\nfunction throwBindingError(message) {\r\n throw new BindingError(message);\r\n}\r\n\r\nvar InternalError = undefined;\r\n\r\nfunction throwInternalError(message) {\r\n throw new InternalError(message);\r\n}\r\n\r\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\r\n myTypes.forEach(function(type) {\r\n  typeDependencies[type] = dependentTypes;\r\n });\r\n function onComplete(typeConverters) {\r\n  var myTypeConverters = getTypeConverters(typeConverters);\r\n  if (myTypeConverters.length !== myTypes.length) {\r\n   throwInternalError(\"Mismatched type converter count\");\r\n  }\r\n  for (var i = 0; i < myTypes.length; ++i) {\r\n   registerType(myTypes[i], myTypeConverters[i]);\r\n  }\r\n }\r\n var typeConverters = new Array(dependentTypes.length);\r\n var unregisteredTypes = [];\r\n var registered = 0;\r\n dependentTypes.forEach(function(dt, i) {\r\n  if (registeredTypes.hasOwnProperty(dt)) {\r\n   typeConverters[i] = registeredTypes[dt];\r\n  } else {\r\n   unregisteredTypes.push(dt);\r\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\r\n    awaitingDependencies[dt] = [];\r\n   }\r\n   awaitingDependencies[dt].push(function() {\r\n    typeConverters[i] = registeredTypes[dt];\r\n    ++registered;\r\n    if (registered === unregisteredTypes.length) {\r\n     onComplete(typeConverters);\r\n    }\r\n   });\r\n  }\r\n });\r\n if (0 === unregisteredTypes.length) {\r\n  onComplete(typeConverters);\r\n }\r\n}\r\n\r\nfunction registerType(rawType, registeredInstance, options = {}) {\r\n if (!(\"argPackAdvance\" in registeredInstance)) {\r\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\r\n }\r\n var name = registeredInstance.name;\r\n if (!rawType) {\r\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\r\n }\r\n if (registeredTypes.hasOwnProperty(rawType)) {\r\n  if (options.ignoreDuplicateRegistrations) {\r\n   return;\r\n  } else {\r\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\r\n  }\r\n }\r\n registeredTypes[rawType] = registeredInstance;\r\n delete typeDependencies[rawType];\r\n if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n  var callbacks = awaitingDependencies[rawType];\r\n  delete awaitingDependencies[rawType];\r\n  callbacks.forEach(function(cb) {\r\n   cb();\r\n  });\r\n }\r\n}\r\n\r\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\r\n var shift = getShiftFromSize(size);\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(wt) {\r\n   return !!wt;\r\n  },\r\n  \"toWireType\": function(destructors, o) {\r\n   return o ? trueValue : falseValue;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": function(pointer) {\r\n   var heap;\r\n   if (size === 1) {\r\n    heap = HEAP8;\r\n   } else if (size === 2) {\r\n    heap = HEAP16;\r\n   } else if (size === 4) {\r\n    heap = HEAP32;\r\n   } else {\r\n    throw new TypeError(\"Unknown boolean type size: \" + name);\r\n   }\r\n   return this[\"fromWireType\"](heap[pointer >> shift]);\r\n  },\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction ClassHandle_isAliasOf(other) {\r\n if (!(this instanceof ClassHandle)) {\r\n  return false;\r\n }\r\n if (!(other instanceof ClassHandle)) {\r\n  return false;\r\n }\r\n var leftClass = this.$$.ptrType.registeredClass;\r\n var left = this.$$.ptr;\r\n var rightClass = other.$$.ptrType.registeredClass;\r\n var right = other.$$.ptr;\r\n while (leftClass.baseClass) {\r\n  left = leftClass.upcast(left);\r\n  leftClass = leftClass.baseClass;\r\n }\r\n while (rightClass.baseClass) {\r\n  right = rightClass.upcast(right);\r\n  rightClass = rightClass.baseClass;\r\n }\r\n return leftClass === rightClass && left === right;\r\n}\r\n\r\nfunction shallowCopyInternalPointer(o) {\r\n return {\r\n  count: o.count,\r\n  deleteScheduled: o.deleteScheduled,\r\n  preservePointerOnDelete: o.preservePointerOnDelete,\r\n  ptr: o.ptr,\r\n  ptrType: o.ptrType,\r\n  smartPtr: o.smartPtr,\r\n  smartPtrType: o.smartPtrType\r\n };\r\n}\r\n\r\nfunction throwInstanceAlreadyDeleted(obj) {\r\n function getInstanceTypeName(handle) {\r\n  return handle.$$.ptrType.registeredClass.name;\r\n }\r\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\r\n}\r\n\r\nvar finalizationRegistry = false;\r\n\r\nfunction detachFinalizer(handle) {}\r\n\r\nfunction runDestructor($$) {\r\n if ($$.smartPtr) {\r\n  $$.smartPtrType.rawDestructor($$.smartPtr);\r\n } else {\r\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\r\n }\r\n}\r\n\r\nfunction releaseClassHandle($$) {\r\n $$.count.value -= 1;\r\n var toDelete = 0 === $$.count.value;\r\n if (toDelete) {\r\n  runDestructor($$);\r\n }\r\n}\r\n\r\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\r\n if (ptrClass === desiredClass) {\r\n  return ptr;\r\n }\r\n if (undefined === desiredClass.baseClass) {\r\n  return null;\r\n }\r\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\r\n if (rv === null) {\r\n  return null;\r\n }\r\n return desiredClass.downcast(rv);\r\n}\r\n\r\nvar registeredPointers = {};\r\n\r\nfunction getInheritedInstanceCount() {\r\n return Object.keys(registeredInstances).length;\r\n}\r\n\r\nfunction getLiveInheritedInstances() {\r\n var rv = [];\r\n for (var k in registeredInstances) {\r\n  if (registeredInstances.hasOwnProperty(k)) {\r\n   rv.push(registeredInstances[k]);\r\n  }\r\n }\r\n return rv;\r\n}\r\n\r\nvar deletionQueue = [];\r\n\r\nfunction flushPendingDeletes() {\r\n while (deletionQueue.length) {\r\n  var obj = deletionQueue.pop();\r\n  obj.$$.deleteScheduled = false;\r\n  obj[\"delete\"]();\r\n }\r\n}\r\n\r\nvar delayFunction = undefined;\r\n\r\nfunction setDelayFunction(fn) {\r\n delayFunction = fn;\r\n if (deletionQueue.length && delayFunction) {\r\n  delayFunction(flushPendingDeletes);\r\n }\r\n}\r\n\r\nfunction init_embind() {\r\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\r\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\r\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\r\n Module[\"setDelayFunction\"] = setDelayFunction;\r\n}\r\n\r\nvar registeredInstances = {};\r\n\r\nfunction getBasestPointer(class_, ptr) {\r\n if (ptr === undefined) {\r\n  throwBindingError(\"ptr should not be undefined\");\r\n }\r\n while (class_.baseClass) {\r\n  ptr = class_.upcast(ptr);\r\n  class_ = class_.baseClass;\r\n }\r\n return ptr;\r\n}\r\n\r\nfunction getInheritedInstance(class_, ptr) {\r\n ptr = getBasestPointer(class_, ptr);\r\n return registeredInstances[ptr];\r\n}\r\n\r\nfunction makeClassHandle(prototype, record) {\r\n if (!record.ptrType || !record.ptr) {\r\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\r\n }\r\n var hasSmartPtrType = !!record.smartPtrType;\r\n var hasSmartPtr = !!record.smartPtr;\r\n if (hasSmartPtrType !== hasSmartPtr) {\r\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\r\n }\r\n record.count = {\r\n  value: 1\r\n };\r\n return attachFinalizer(Object.create(prototype, {\r\n  $$: {\r\n   value: record\r\n  }\r\n }));\r\n}\r\n\r\nfunction RegisteredPointer_fromWireType(ptr) {\r\n var rawPointer = this.getPointee(ptr);\r\n if (!rawPointer) {\r\n  this.destructor(ptr);\r\n  return null;\r\n }\r\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\r\n if (undefined !== registeredInstance) {\r\n  if (0 === registeredInstance.$$.count.value) {\r\n   registeredInstance.$$.ptr = rawPointer;\r\n   registeredInstance.$$.smartPtr = ptr;\r\n   return registeredInstance[\"clone\"]();\r\n  } else {\r\n   var rv = registeredInstance[\"clone\"]();\r\n   this.destructor(ptr);\r\n   return rv;\r\n  }\r\n }\r\n function makeDefaultHandle() {\r\n  if (this.isSmartPointer) {\r\n   return makeClassHandle(this.registeredClass.instancePrototype, {\r\n    ptrType: this.pointeeType,\r\n    ptr: rawPointer,\r\n    smartPtrType: this,\r\n    smartPtr: ptr\r\n   });\r\n  } else {\r\n   return makeClassHandle(this.registeredClass.instancePrototype, {\r\n    ptrType: this,\r\n    ptr: ptr\r\n   });\r\n  }\r\n }\r\n var actualType = this.registeredClass.getActualType(rawPointer);\r\n var registeredPointerRecord = registeredPointers[actualType];\r\n if (!registeredPointerRecord) {\r\n  return makeDefaultHandle.call(this);\r\n }\r\n var toType;\r\n if (this.isConst) {\r\n  toType = registeredPointerRecord.constPointerType;\r\n } else {\r\n  toType = registeredPointerRecord.pointerType;\r\n }\r\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\r\n if (dp === null) {\r\n  return makeDefaultHandle.call(this);\r\n }\r\n if (this.isSmartPointer) {\r\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n   ptrType: toType,\r\n   ptr: dp,\r\n   smartPtrType: this,\r\n   smartPtr: ptr\r\n  });\r\n } else {\r\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n   ptrType: toType,\r\n   ptr: dp\r\n  });\r\n }\r\n}\r\n\r\nfunction attachFinalizer(handle) {\r\n if (\"undefined\" === typeof FinalizationRegistry) {\r\n  attachFinalizer = (handle => handle);\r\n  return handle;\r\n }\r\n finalizationRegistry = new FinalizationRegistry(info => {\r\n  console.warn(info.leakWarning.stack.replace(/^Error: /, \"\"));\r\n  releaseClassHandle(info.$$);\r\n });\r\n attachFinalizer = (handle => {\r\n  var $$ = handle.$$;\r\n  var hasSmartPtr = !!$$.smartPtr;\r\n  if (hasSmartPtr) {\r\n   var info = {\r\n    $$: $$\r\n   };\r\n   var cls = $$.ptrType.registeredClass;\r\n   info.leakWarning = new Error(\"Embind found a leaked C++ instance \" + cls.name + \" <0x\" + $$.ptr.toString(16) + \">.\\n\" + \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" + \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" + \"Originally allocated\");\r\n   if (\"captureStackTrace\" in Error) {\r\n    Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\r\n   }\r\n   finalizationRegistry.register(handle, info, handle);\r\n  }\r\n  return handle;\r\n });\r\n detachFinalizer = (handle => finalizationRegistry.unregister(handle));\r\n return attachFinalizer(handle);\r\n}\r\n\r\nfunction ClassHandle_clone() {\r\n if (!this.$$.ptr) {\r\n  throwInstanceAlreadyDeleted(this);\r\n }\r\n if (this.$$.preservePointerOnDelete) {\r\n  this.$$.count.value += 1;\r\n  return this;\r\n } else {\r\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\r\n   $$: {\r\n    value: shallowCopyInternalPointer(this.$$)\r\n   }\r\n  }));\r\n  clone.$$.count.value += 1;\r\n  clone.$$.deleteScheduled = false;\r\n  return clone;\r\n }\r\n}\r\n\r\nfunction ClassHandle_delete() {\r\n if (!this.$$.ptr) {\r\n  throwInstanceAlreadyDeleted(this);\r\n }\r\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n  throwBindingError(\"Object already scheduled for deletion\");\r\n }\r\n detachFinalizer(this);\r\n releaseClassHandle(this.$$);\r\n if (!this.$$.preservePointerOnDelete) {\r\n  this.$$.smartPtr = undefined;\r\n  this.$$.ptr = undefined;\r\n }\r\n}\r\n\r\nfunction ClassHandle_isDeleted() {\r\n return !this.$$.ptr;\r\n}\r\n\r\nfunction ClassHandle_deleteLater() {\r\n if (!this.$$.ptr) {\r\n  throwInstanceAlreadyDeleted(this);\r\n }\r\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n  throwBindingError(\"Object already scheduled for deletion\");\r\n }\r\n deletionQueue.push(this);\r\n if (deletionQueue.length === 1 && delayFunction) {\r\n  delayFunction(flushPendingDeletes);\r\n }\r\n this.$$.deleteScheduled = true;\r\n return this;\r\n}\r\n\r\nfunction init_ClassHandle() {\r\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\r\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\r\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\r\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\r\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\r\n}\r\n\r\nfunction ClassHandle() {}\r\n\r\nfunction ensureOverloadTable(proto, methodName, humanName) {\r\n if (undefined === proto[methodName].overloadTable) {\r\n  var prevFunc = proto[methodName];\r\n  proto[methodName] = function() {\r\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\r\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\r\n   }\r\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\r\n  };\r\n  proto[methodName].overloadTable = [];\r\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\r\n }\r\n}\r\n\r\nfunction exposePublicSymbol(name, value, numArguments) {\r\n if (Module.hasOwnProperty(name)) {\r\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\r\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\r\n  }\r\n  ensureOverloadTable(Module, name, name);\r\n  if (Module.hasOwnProperty(numArguments)) {\r\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\r\n  }\r\n  Module[name].overloadTable[numArguments] = value;\r\n } else {\r\n  Module[name] = value;\r\n  if (undefined !== numArguments) {\r\n   Module[name].numArguments = numArguments;\r\n  }\r\n }\r\n}\r\n\r\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\r\n this.name = name;\r\n this.constructor = constructor;\r\n this.instancePrototype = instancePrototype;\r\n this.rawDestructor = rawDestructor;\r\n this.baseClass = baseClass;\r\n this.getActualType = getActualType;\r\n this.upcast = upcast;\r\n this.downcast = downcast;\r\n this.pureVirtualFunctions = [];\r\n}\r\n\r\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\r\n while (ptrClass !== desiredClass) {\r\n  if (!ptrClass.upcast) {\r\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\r\n  }\r\n  ptr = ptrClass.upcast(ptr);\r\n  ptrClass = ptrClass.baseClass;\r\n }\r\n return ptr;\r\n}\r\n\r\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n if (handle === null) {\r\n  if (this.isReference) {\r\n   throwBindingError(\"null is not a valid \" + this.name);\r\n  }\r\n  return 0;\r\n }\r\n if (!handle.$$) {\r\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n }\r\n if (!handle.$$.ptr) {\r\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n }\r\n var handleClass = handle.$$.ptrType.registeredClass;\r\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n return ptr;\r\n}\r\n\r\nfunction genericPointerToWireType(destructors, handle) {\r\n var ptr;\r\n if (handle === null) {\r\n  if (this.isReference) {\r\n   throwBindingError(\"null is not a valid \" + this.name);\r\n  }\r\n  if (this.isSmartPointer) {\r\n   ptr = this.rawConstructor();\r\n   if (destructors !== null) {\r\n    destructors.push(this.rawDestructor, ptr);\r\n   }\r\n   return ptr;\r\n  } else {\r\n   return 0;\r\n  }\r\n }\r\n if (!handle.$$) {\r\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n }\r\n if (!handle.$$.ptr) {\r\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n }\r\n if (!this.isConst && handle.$$.ptrType.isConst) {\r\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\r\n }\r\n var handleClass = handle.$$.ptrType.registeredClass;\r\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n if (this.isSmartPointer) {\r\n  if (undefined === handle.$$.smartPtr) {\r\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\r\n  }\r\n  switch (this.sharingPolicy) {\r\n  case 0:\r\n   if (handle.$$.smartPtrType === this) {\r\n    ptr = handle.$$.smartPtr;\r\n   } else {\r\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\r\n   }\r\n   break;\r\n\r\n  case 1:\r\n   ptr = handle.$$.smartPtr;\r\n   break;\r\n\r\n  case 2:\r\n   if (handle.$$.smartPtrType === this) {\r\n    ptr = handle.$$.smartPtr;\r\n   } else {\r\n    var clonedHandle = handle[\"clone\"]();\r\n    ptr = this.rawShare(ptr, Emval.toHandle(function() {\r\n     clonedHandle[\"delete\"]();\r\n    }));\r\n    if (destructors !== null) {\r\n     destructors.push(this.rawDestructor, ptr);\r\n    }\r\n   }\r\n   break;\r\n\r\n  default:\r\n   throwBindingError(\"Unsupporting sharing policy\");\r\n  }\r\n }\r\n return ptr;\r\n}\r\n\r\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n if (handle === null) {\r\n  if (this.isReference) {\r\n   throwBindingError(\"null is not a valid \" + this.name);\r\n  }\r\n  return 0;\r\n }\r\n if (!handle.$$) {\r\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n }\r\n if (!handle.$$.ptr) {\r\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n }\r\n if (handle.$$.ptrType.isConst) {\r\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\r\n }\r\n var handleClass = handle.$$.ptrType.registeredClass;\r\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n return ptr;\r\n}\r\n\r\nfunction simpleReadValueFromPointer(pointer) {\r\n return this[\"fromWireType\"](_asan_js_load_4u(pointer >> 2));\r\n}\r\n\r\nfunction RegisteredPointer_getPointee(ptr) {\r\n if (this.rawGetPointee) {\r\n  ptr = this.rawGetPointee(ptr);\r\n }\r\n return ptr;\r\n}\r\n\r\nfunction RegisteredPointer_destructor(ptr) {\r\n if (this.rawDestructor) {\r\n  this.rawDestructor(ptr);\r\n }\r\n}\r\n\r\nfunction RegisteredPointer_deleteObject(handle) {\r\n if (handle !== null) {\r\n  handle[\"delete\"]();\r\n }\r\n}\r\n\r\nfunction init_RegisteredPointer() {\r\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\r\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\r\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\r\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\r\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\r\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\r\n}\r\n\r\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\r\n this.name = name;\r\n this.registeredClass = registeredClass;\r\n this.isReference = isReference;\r\n this.isConst = isConst;\r\n this.isSmartPointer = isSmartPointer;\r\n this.pointeeType = pointeeType;\r\n this.sharingPolicy = sharingPolicy;\r\n this.rawGetPointee = rawGetPointee;\r\n this.rawConstructor = rawConstructor;\r\n this.rawShare = rawShare;\r\n this.rawDestructor = rawDestructor;\r\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\r\n  if (isConst) {\r\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\r\n   this.destructorFunction = null;\r\n  } else {\r\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\r\n   this.destructorFunction = null;\r\n  }\r\n } else {\r\n  this[\"toWireType\"] = genericPointerToWireType;\r\n }\r\n}\r\n\r\nfunction replacePublicSymbol(name, value, numArguments) {\r\n if (!Module.hasOwnProperty(name)) {\r\n  throwInternalError(\"Replacing nonexistant public symbol\");\r\n }\r\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\r\n  Module[name].overloadTable[numArguments] = value;\r\n } else {\r\n  Module[name] = value;\r\n  Module[name].argCount = numArguments;\r\n }\r\n}\r\n\r\nfunction dynCallLegacy(sig, ptr, args) {\r\n assert(\"dynCall_\" + sig in Module, \"bad function pointer type - no table for sig '\" + sig + \"'\");\r\n if (args && args.length) {\r\n  assert(args.length === sig.substring(1).replace(/j/g, \"--\").length);\r\n } else {\r\n  assert(sig.length == 1);\r\n }\r\n var f = Module[\"dynCall_\" + sig];\r\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\r\n}\r\n\r\nfunction dynCall(sig, ptr, args) {\r\n if (sig.includes(\"j\")) {\r\n  return dynCallLegacy(sig, ptr, args);\r\n }\r\n assert(getWasmTableEntry(ptr), \"missing table entry in dynCall: \" + ptr);\r\n return getWasmTableEntry(ptr).apply(null, args);\r\n}\r\n\r\nfunction getDynCaller(sig, ptr) {\r\n assert(sig.includes(\"j\"), \"getDynCaller should only be called with i64 sigs\");\r\n var argCache = [];\r\n return function() {\r\n  argCache.length = 0;\r\n  Object.assign(argCache, arguments);\r\n  return dynCall(sig, ptr, argCache);\r\n };\r\n}\r\n\r\nfunction embind__requireFunction(signature, rawFunction) {\r\n signature = readLatin1String(signature);\r\n function makeDynCaller() {\r\n  if (signature.includes(\"j\")) {\r\n   return getDynCaller(signature, rawFunction);\r\n  }\r\n  return getWasmTableEntry(rawFunction);\r\n }\r\n var fp = makeDynCaller();\r\n if (typeof fp !== \"function\") {\r\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\r\n }\r\n return fp;\r\n}\r\n\r\nvar UnboundTypeError = undefined;\r\n\r\nfunction getTypeName(type) {\r\n var ptr = ___getTypeName(type);\r\n var rv = readLatin1String(ptr);\r\n _free(ptr);\r\n return rv;\r\n}\r\n\r\nfunction throwUnboundTypeError(message, types) {\r\n var unboundTypes = [];\r\n var seen = {};\r\n function visit(type) {\r\n  if (seen[type]) {\r\n   return;\r\n  }\r\n  if (registeredTypes[type]) {\r\n   return;\r\n  }\r\n  if (typeDependencies[type]) {\r\n   typeDependencies[type].forEach(visit);\r\n   return;\r\n  }\r\n  unboundTypes.push(type);\r\n  seen[type] = true;\r\n }\r\n types.forEach(visit);\r\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\r\n}\r\n\r\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\r\n name = readLatin1String(name);\r\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\r\n if (upcast) {\r\n  upcast = embind__requireFunction(upcastSignature, upcast);\r\n }\r\n if (downcast) {\r\n  downcast = embind__requireFunction(downcastSignature, downcast);\r\n }\r\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\r\n var legalFunctionName = makeLegalFunctionName(name);\r\n exposePublicSymbol(legalFunctionName, function() {\r\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\r\n });\r\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\r\n  base = base[0];\r\n  var baseClass;\r\n  var basePrototype;\r\n  if (baseClassRawType) {\r\n   baseClass = base.registeredClass;\r\n   basePrototype = baseClass.instancePrototype;\r\n  } else {\r\n   basePrototype = ClassHandle.prototype;\r\n  }\r\n  var constructor = createNamedFunction(legalFunctionName, function() {\r\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\r\n    throw new BindingError(\"Use 'new' to construct \" + name);\r\n   }\r\n   if (undefined === registeredClass.constructor_body) {\r\n    throw new BindingError(name + \" has no accessible constructor\");\r\n   }\r\n   var body = registeredClass.constructor_body[arguments.length];\r\n   if (undefined === body) {\r\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\r\n   }\r\n   return body.apply(this, arguments);\r\n  });\r\n  var instancePrototype = Object.create(basePrototype, {\r\n   constructor: {\r\n    value: constructor\r\n   }\r\n  });\r\n  constructor.prototype = instancePrototype;\r\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\r\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\r\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\r\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\r\n  registeredPointers[rawType] = {\r\n   pointerType: pointerConverter,\r\n   constPointerType: constPointerConverter\r\n  };\r\n  replacePublicSymbol(legalFunctionName, constructor);\r\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\r\n });\r\n}\r\n\r\nfunction heap32VectorToArray(count, firstElement) {\r\n var array = [];\r\n for (var i = 0; i < count; i++) {\r\n  array.push(_asan_js_load_4((firstElement >> 2) + i));\r\n }\r\n return array;\r\n}\r\n\r\nfunction runDestructors(destructors) {\r\n while (destructors.length) {\r\n  var ptr = destructors.pop();\r\n  var del = destructors.pop();\r\n  del(ptr);\r\n }\r\n}\r\n\r\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\r\n assert(argCount > 0);\r\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n invoker = embind__requireFunction(invokerSignature, invoker);\r\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\r\n  classType = classType[0];\r\n  var humanName = \"constructor \" + classType.name;\r\n  if (undefined === classType.registeredClass.constructor_body) {\r\n   classType.registeredClass.constructor_body = [];\r\n  }\r\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\r\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\r\n  }\r\n  classType.registeredClass.constructor_body[argCount - 1] = (() => {\r\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\r\n  });\r\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\r\n   argTypes.splice(1, 0, null);\r\n   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\r\n   return [];\r\n  });\r\n  return [];\r\n });\r\n}\r\n\r\nfunction new_(constructor, argumentList) {\r\n if (!(constructor instanceof Function)) {\r\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\r\n }\r\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\r\n dummy.prototype = constructor.prototype;\r\n var obj = new dummy();\r\n var r = constructor.apply(obj, argumentList);\r\n return r instanceof Object ? r : obj;\r\n}\r\n\r\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\r\n var argCount = argTypes.length;\r\n if (argCount < 2) {\r\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\r\n }\r\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\r\n var needsDestructorStack = false;\r\n for (var i = 1; i < argTypes.length; ++i) {\r\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\r\n   needsDestructorStack = true;\r\n   break;\r\n  }\r\n }\r\n var returns = argTypes[0].name !== \"void\";\r\n var argsList = \"\";\r\n var argsListWired = \"\";\r\n for (var i = 0; i < argCount - 2; ++i) {\r\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\r\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\r\n }\r\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\r\n if (needsDestructorStack) {\r\n  invokerFnBody += \"var destructors = [];\\n\";\r\n }\r\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\r\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\r\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\r\n if (isClassMethodFunc) {\r\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\r\n }\r\n for (var i = 0; i < argCount - 2; ++i) {\r\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\r\n  args1.push(\"argType\" + i);\r\n  args2.push(argTypes[i + 2]);\r\n }\r\n if (isClassMethodFunc) {\r\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\r\n }\r\n invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\r\n if (needsDestructorStack) {\r\n  invokerFnBody += \"runDestructors(destructors);\\n\";\r\n } else {\r\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\r\n   if (argTypes[i].destructorFunction !== null) {\r\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\r\n    args1.push(paramName + \"_dtor\");\r\n    args2.push(argTypes[i].destructorFunction);\r\n   }\r\n  }\r\n }\r\n if (returns) {\r\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\r\n } else {}\r\n invokerFnBody += \"}\\n\";\r\n args1.push(invokerFnBody);\r\n var invokerFunction = new_(Function, args1).apply(null, args2);\r\n return invokerFunction;\r\n}\r\n\r\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\r\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n methodName = readLatin1String(methodName);\r\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\r\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\r\n  classType = classType[0];\r\n  var humanName = classType.name + \".\" + methodName;\r\n  if (methodName.startsWith(\"@@\")) {\r\n   methodName = Symbol[methodName.substring(2)];\r\n  }\r\n  if (isPureVirtual) {\r\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\r\n  }\r\n  function unboundTypesHandler() {\r\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\r\n  }\r\n  var proto = classType.registeredClass.instancePrototype;\r\n  var method = proto[methodName];\r\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\r\n   unboundTypesHandler.argCount = argCount - 2;\r\n   unboundTypesHandler.className = classType.name;\r\n   proto[methodName] = unboundTypesHandler;\r\n  } else {\r\n   ensureOverloadTable(proto, methodName, humanName);\r\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\r\n  }\r\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\r\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\r\n   if (undefined === proto[methodName].overloadTable) {\r\n    memberFunction.argCount = argCount - 2;\r\n    proto[methodName] = memberFunction;\r\n   } else {\r\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\r\n   }\r\n   return [];\r\n  });\r\n  return [];\r\n });\r\n}\r\n\r\nvar emval_free_list = [];\r\n\r\nvar emval_handle_array = [ {}, {\r\n value: undefined\r\n}, {\r\n value: null\r\n}, {\r\n value: true\r\n}, {\r\n value: false\r\n} ];\r\n\r\nfunction __emval_decref(handle) {\r\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\r\n  emval_handle_array[handle] = undefined;\r\n  emval_free_list.push(handle);\r\n }\r\n}\r\n\r\nfunction count_emval_handles() {\r\n var count = 0;\r\n for (var i = 5; i < emval_handle_array.length; ++i) {\r\n  if (emval_handle_array[i] !== undefined) {\r\n   ++count;\r\n  }\r\n }\r\n return count;\r\n}\r\n\r\nfunction get_first_emval() {\r\n for (var i = 5; i < emval_handle_array.length; ++i) {\r\n  if (emval_handle_array[i] !== undefined) {\r\n   return emval_handle_array[i];\r\n  }\r\n }\r\n return null;\r\n}\r\n\r\nfunction init_emval() {\r\n Module[\"count_emval_handles\"] = count_emval_handles;\r\n Module[\"get_first_emval\"] = get_first_emval;\r\n}\r\n\r\nvar Emval = {\r\n toValue: function(handle) {\r\n  if (!handle) {\r\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\r\n  }\r\n  return emval_handle_array[handle].value;\r\n },\r\n toHandle: function(value) {\r\n  switch (value) {\r\n  case undefined:\r\n   {\r\n    return 1;\r\n   }\r\n\r\n  case null:\r\n   {\r\n    return 2;\r\n   }\r\n\r\n  case true:\r\n   {\r\n    return 3;\r\n   }\r\n\r\n  case false:\r\n   {\r\n    return 4;\r\n   }\r\n\r\n  default:\r\n   {\r\n    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\r\n    emval_handle_array[handle] = {\r\n     refcount: 1,\r\n     value: value\r\n    };\r\n    return handle;\r\n   }\r\n  }\r\n }\r\n};\r\n\r\nfunction __embind_register_emval(rawType, name) {\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(handle) {\r\n   var rv = Emval.toValue(handle);\r\n   __emval_decref(handle);\r\n   return rv;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   return Emval.toHandle(value);\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction _embind_repr(v) {\r\n if (v === null) {\r\n  return \"null\";\r\n }\r\n var t = typeof v;\r\n if (t === \"object\" || t === \"array\" || t === \"function\") {\r\n  return v.toString();\r\n } else {\r\n  return \"\" + v;\r\n }\r\n}\r\n\r\nfunction floatReadValueFromPointer(name, shift) {\r\n switch (shift) {\r\n case 2:\r\n  return function(pointer) {\r\n   return this[\"fromWireType\"](_asan_js_load_f(pointer >> 2));\r\n  };\r\n\r\n case 3:\r\n  return function(pointer) {\r\n   return this[\"fromWireType\"](_asan_js_load_d(pointer >> 3));\r\n  };\r\n\r\n default:\r\n  throw new TypeError(\"Unknown float type: \" + name);\r\n }\r\n}\r\n\r\nfunction __embind_register_float(rawType, name, size) {\r\n var shift = getShiftFromSize(size);\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   return value;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\r\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\r\n   }\r\n   return value;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\r\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n name = readLatin1String(name);\r\n rawInvoker = embind__requireFunction(signature, rawInvoker);\r\n exposePublicSymbol(name, function() {\r\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\r\n }, argCount - 1);\r\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\r\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\r\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\r\n  return [];\r\n });\r\n}\r\n\r\nfunction integerReadValueFromPointer(name, shift, signed) {\r\n switch (shift) {\r\n case 0:\r\n  return signed ? function readS8FromPointer(pointer) {\r\n   return _asan_js_load_1(pointer);\r\n  } : function readU8FromPointer(pointer) {\r\n   return _asan_js_load_1u(pointer);\r\n  };\r\n\r\n case 1:\r\n  return signed ? function readS16FromPointer(pointer) {\r\n   return _asan_js_load_2(pointer >> 1);\r\n  } : function readU16FromPointer(pointer) {\r\n   return _asan_js_load_2u(pointer >> 1);\r\n  };\r\n\r\n case 2:\r\n  return signed ? function readS32FromPointer(pointer) {\r\n   return _asan_js_load_4(pointer >> 2);\r\n  } : function readU32FromPointer(pointer) {\r\n   return _asan_js_load_4u(pointer >> 2);\r\n  };\r\n\r\n default:\r\n  throw new TypeError(\"Unknown integer type: \" + name);\r\n }\r\n}\r\n\r\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\r\n name = readLatin1String(name);\r\n if (maxRange === -1) {\r\n  maxRange = 4294967295;\r\n }\r\n var shift = getShiftFromSize(size);\r\n var fromWireType = value => value;\r\n if (minRange === 0) {\r\n  var bitshift = 32 - 8 * size;\r\n  fromWireType = (value => value << bitshift >>> bitshift);\r\n }\r\n var isUnsignedType = name.includes(\"unsigned\");\r\n var checkAssertions = (value, toTypeName) => {\r\n  if (typeof value !== \"number\" && typeof value !== \"boolean\") {\r\n   throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + toTypeName);\r\n  }\r\n  if (value < minRange || value > maxRange) {\r\n   throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\r\n  }\r\n };\r\n var toWireType;\r\n if (isUnsignedType) {\r\n  toWireType = function(destructors, value) {\r\n   checkAssertions(value, this.name);\r\n   return value >>> 0;\r\n  };\r\n } else {\r\n  toWireType = function(destructors, value) {\r\n   checkAssertions(value, this.name);\r\n   return value;\r\n  };\r\n }\r\n registerType(primitiveType, {\r\n  name: name,\r\n  \"fromWireType\": fromWireType,\r\n  \"toWireType\": toWireType,\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\r\n  destructorFunction: null\r\n });\r\n}\r\n\r\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\r\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\r\n var TA = typeMapping[dataTypeIndex];\r\n function decodeMemoryView(handle) {\r\n  handle = handle >> 2;\r\n  var heap = HEAPU32;\r\n  var size = heap[handle];\r\n  var data = heap[handle + 1];\r\n  return new TA(buffer, data, size);\r\n }\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": decodeMemoryView,\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": decodeMemoryView\r\n }, {\r\n  ignoreDuplicateRegistrations: true\r\n });\r\n}\r\n\r\nfunction __embind_register_std_string(rawType, name) {\r\n name = readLatin1String(name);\r\n var stdStringIsUTF8 = name === \"std::string\";\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   var length = _asan_js_load_4u(value >> 2);\r\n   var str;\r\n   if (stdStringIsUTF8) {\r\n    var decodeStartPtr = value + 4;\r\n    for (var i = 0; i <= length; ++i) {\r\n     var currentBytePtr = value + 4 + i;\r\n     if (i == length || _asan_js_load_1u(currentBytePtr) == 0) {\r\n      var maxRead = currentBytePtr - decodeStartPtr;\r\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n      if (str === undefined) {\r\n       str = stringSegment;\r\n      } else {\r\n       str += String.fromCharCode(0);\r\n       str += stringSegment;\r\n      }\r\n      decodeStartPtr = currentBytePtr + 1;\r\n     }\r\n    }\r\n   } else {\r\n    var a = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n     a[i] = String.fromCharCode(_asan_js_load_1u(value + 4 + i));\r\n    }\r\n    str = a.join(\"\");\r\n   }\r\n   _free(value);\r\n   return str;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   if (value instanceof ArrayBuffer) {\r\n    value = new Uint8Array(value);\r\n   }\r\n   var getLength;\r\n   var valueIsOfTypeString = typeof value === \"string\";\r\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\r\n    throwBindingError(\"Cannot pass non-string to std::string\");\r\n   }\r\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n    getLength = (() => lengthBytesUTF8(value));\r\n   } else {\r\n    getLength = (() => value.length);\r\n   }\r\n   var length = getLength();\r\n   var ptr = _malloc(4 + length + 1);\r\n   _asan_js_store_4u(ptr >> 2, length);\r\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n    stringToUTF8(value, ptr + 4, length + 1);\r\n   } else {\r\n    if (valueIsOfTypeString) {\r\n     for (var i = 0; i < length; ++i) {\r\n      var charCode = value.charCodeAt(i);\r\n      if (charCode > 255) {\r\n       _free(ptr);\r\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\r\n      }\r\n      _asan_js_store_1u(ptr + 4 + i, charCode);\r\n     }\r\n    } else {\r\n     for (var i = 0; i < length; ++i) {\r\n      _asan_js_store_1u(ptr + 4 + i, value[i]);\r\n     }\r\n    }\r\n   }\r\n   if (destructors !== null) {\r\n    destructors.push(_free, ptr);\r\n   }\r\n   return ptr;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: function(ptr) {\r\n   _free(ptr);\r\n  }\r\n });\r\n}\r\n\r\nfunction __embind_register_std_wstring(rawType, charSize, name) {\r\n name = readLatin1String(name);\r\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\r\n if (charSize === 2) {\r\n  decodeString = UTF16ToString;\r\n  encodeString = stringToUTF16;\r\n  lengthBytesUTF = lengthBytesUTF16;\r\n  getHeap = (() => HEAPU16);\r\n  shift = 1;\r\n } else if (charSize === 4) {\r\n  decodeString = UTF32ToString;\r\n  encodeString = stringToUTF32;\r\n  lengthBytesUTF = lengthBytesUTF32;\r\n  getHeap = (() => HEAPU32);\r\n  shift = 2;\r\n }\r\n registerType(rawType, {\r\n  name: name,\r\n  \"fromWireType\": function(value) {\r\n   var length = _asan_js_load_4u(value >> 2);\r\n   var HEAP = getHeap();\r\n   var str;\r\n   var decodeStartPtr = value + 4;\r\n   for (var i = 0; i <= length; ++i) {\r\n    var currentBytePtr = value + 4 + i * charSize;\r\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\r\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n     if (str === undefined) {\r\n      str = stringSegment;\r\n     } else {\r\n      str += String.fromCharCode(0);\r\n      str += stringSegment;\r\n     }\r\n     decodeStartPtr = currentBytePtr + charSize;\r\n    }\r\n   }\r\n   _free(value);\r\n   return str;\r\n  },\r\n  \"toWireType\": function(destructors, value) {\r\n   if (!(typeof value === \"string\")) {\r\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\r\n   }\r\n   var length = lengthBytesUTF(value);\r\n   var ptr = _malloc(4 + length + charSize);\r\n   _asan_js_store_4u(ptr >> 2, length >> shift);\r\n   encodeString(value, ptr + 4, length + charSize);\r\n   if (destructors !== null) {\r\n    destructors.push(_free, ptr);\r\n   }\r\n   return ptr;\r\n  },\r\n  \"argPackAdvance\": 8,\r\n  \"readValueFromPointer\": simpleReadValueFromPointer,\r\n  destructorFunction: function(ptr) {\r\n   _free(ptr);\r\n  }\r\n });\r\n}\r\n\r\nfunction __embind_register_void(rawType, name) {\r\n name = readLatin1String(name);\r\n registerType(rawType, {\r\n  isVoid: true,\r\n  name: name,\r\n  \"argPackAdvance\": 0,\r\n  \"fromWireType\": function() {\r\n   return undefined;\r\n  },\r\n  \"toWireType\": function(destructors, o) {\r\n   return undefined;\r\n  }\r\n });\r\n}\r\n\r\nfunction __emval_incref(handle) {\r\n if (handle > 4) {\r\n  emval_handle_array[handle].refcount += 1;\r\n }\r\n}\r\n\r\nfunction requireRegisteredType(rawType, humanName) {\r\n var impl = registeredTypes[rawType];\r\n if (undefined === impl) {\r\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\r\n }\r\n return impl;\r\n}\r\n\r\nfunction __emval_take_value(type, argv) {\r\n type = requireRegisteredType(type, \"_emval_take_value\");\r\n var v = type[\"readValueFromPointer\"](argv);\r\n return Emval.toHandle(v);\r\n}\r\n\r\nfunction _abort() {\r\n abort(\"native code called abort()\");\r\n}\r\n\r\nvar readAsmConstArgsArray = [];\r\n\r\nfunction readAsmConstArgs(sigPtr, buf) {\r\n assert(Array.isArray(readAsmConstArgsArray));\r\n assert(buf % 16 == 0);\r\n readAsmConstArgsArray.length = 0;\r\n var ch;\r\n buf >>= 2;\r\n while (ch = _asan_js_load_1u(sigPtr++)) {\r\n  assert(ch === 100 || ch === 102 || ch === 105);\r\n  var readAsmConstArgsDouble = ch < 105;\r\n  if (readAsmConstArgsDouble && buf & 1) buf++;\r\n  readAsmConstArgsArray.push(readAsmConstArgsDouble ? _asan_js_load_d(buf++ >> 1) : _asan_js_load_4(buf));\r\n  ++buf;\r\n }\r\n return readAsmConstArgsArray;\r\n}\r\n\r\nfunction _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n var args = readAsmConstArgs(sigPtr, argbuf);\r\n if (!ASM_CONSTS.hasOwnProperty(code)) abort(\"No EM_ASM constant found at address \" + code);\r\n return ASM_CONSTS[code].apply(null, args);\r\n}\r\n\r\nfunction _emscripten_asm_const_double(a0, a1, a2) {\r\n return _emscripten_asm_const_int(a0, a1, a2);\r\n}\r\n\r\nfunction syscallMmap2(addr, len, prot, flags, fd, off) {\r\n off <<= 12;\r\n var ptr;\r\n var allocated = false;\r\n if ((flags & 16) !== 0 && addr % 65536 !== 0) {\r\n  return -28;\r\n }\r\n if ((flags & 32) !== 0) {\r\n  ptr = mmapAlloc(len);\r\n  if (!ptr) return -48;\r\n  allocated = true;\r\n } else {\r\n  var info = FS.getStream(fd);\r\n  if (!info) return -8;\r\n  var res = FS.mmap(info, addr, len, off, prot, flags);\r\n  ptr = res.ptr;\r\n  allocated = res.allocated;\r\n }\r\n SYSCALLS.mappings[ptr] = {\r\n  malloc: ptr,\r\n  len: len,\r\n  allocated: allocated,\r\n  fd: fd,\r\n  prot: prot,\r\n  flags: flags,\r\n  offset: off\r\n };\r\n return ptr;\r\n}\r\n\r\nfunction withBuiltinMalloc(func) {\r\n var prev_malloc = typeof _malloc !== \"undefined\" ? _malloc : undefined;\r\n var prev_memalign = typeof _memalign !== \"undefined\" ? _memalign : undefined;\r\n var prev_free = typeof _free !== \"undefined\" ? _free : undefined;\r\n _malloc = _emscripten_builtin_malloc;\r\n _memalign = _emscripten_builtin_memalign;\r\n _free = _emscripten_builtin_free;\r\n try {\r\n  return func();\r\n } finally {\r\n  _malloc = prev_malloc;\r\n  _memalign = prev_memalign;\r\n  _free = prev_free;\r\n }\r\n}\r\n\r\nfunction _emscripten_builtin_mmap2(addr, len, prot, flags, fd, off) {\r\n return withBuiltinMalloc(function() {\r\n  return syscallMmap2(addr, len, prot, flags, fd, off);\r\n });\r\n}\r\n\r\nfunction syscallMunmap(addr, len) {\r\n var info = SYSCALLS.mappings[addr];\r\n if (len === 0 || !info) {\r\n  return -28;\r\n }\r\n if (len === info.len) {\r\n  var stream = FS.getStream(info.fd);\r\n  if (stream) {\r\n   if (info.prot & 2) {\r\n    SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);\r\n   }\r\n   FS.munmap(stream);\r\n  }\r\n  SYSCALLS.mappings[addr] = null;\r\n  if (info.allocated) {\r\n   _free(info.malloc);\r\n  }\r\n }\r\n return 0;\r\n}\r\n\r\nfunction _emscripten_builtin_munmap(addr, len) {\r\n return withBuiltinMalloc(function() {\r\n  return syscallMunmap(addr, len);\r\n });\r\n}\r\n\r\nfunction _emscripten_console_error(str) {\r\n assert(typeof str === \"number\");\r\n console.error(UTF8ToString(str));\r\n}\r\n\r\nfunction _emscripten_get_heap_max() {\r\n return HEAPU8.length;\r\n}\r\n\r\nfunction _emscripten_get_module_name(buf, length) {\r\n return stringToUTF8(wasmBinaryFile, buf, length);\r\n}\r\n\r\nvar _emscripten_get_now;\r\n\r\n_emscripten_get_now = (() => performance.now());\r\n\r\nvar UNWIND_CACHE = {};\r\n\r\nfunction convertFrameToPC(frame) {\r\n assert(wasmOffsetConverter);\r\n var match;\r\n if (match = /\\bwasm-function\\[\\d+\\]:(0x[0-9a-f]+)/.exec(frame)) {\r\n  return +match[1];\r\n } else if (match = /\\bwasm-function\\[(\\d+)\\]:(\\d+)/.exec(frame)) {\r\n  return wasmOffsetConverter.convert(+match[1], +match[2]);\r\n } else if (match = /:(\\d+):\\d+(?:\\)|$)/.exec(frame)) {\r\n  return 2147483648 | +match[1];\r\n }\r\n return 0;\r\n}\r\n\r\nfunction convertPCtoSourceLocation(pc) {\r\n if (UNWIND_CACHE.last_get_source_pc == pc) return UNWIND_CACHE.last_source;\r\n var match;\r\n var source;\r\n if (!source) {\r\n  var frame = UNWIND_CACHE[pc];\r\n  if (!frame) return null;\r\n  if (match = /\\((.*):(\\d+):(\\d+)\\)$/.exec(frame)) {\r\n   source = {\r\n    file: match[1],\r\n    line: match[2],\r\n    column: match[3]\r\n   };\r\n  } else if (match = /@(.*):(\\d+):(\\d+)/.exec(frame)) {\r\n   source = {\r\n    file: match[1],\r\n    line: match[2],\r\n    column: match[3]\r\n   };\r\n  }\r\n }\r\n UNWIND_CACHE.last_get_source_pc = pc;\r\n UNWIND_CACHE.last_source = source;\r\n return source;\r\n}\r\n\r\nfunction _emscripten_pc_get_column(pc) {\r\n var result = convertPCtoSourceLocation(pc);\r\n return result ? result.column || 0 : 0;\r\n}\r\n\r\nfunction _emscripten_pc_get_file(pc) {\r\n return withBuiltinMalloc(function() {\r\n  var result = convertPCtoSourceLocation(pc);\r\n  if (!result) return 0;\r\n  if (_emscripten_pc_get_file.ret) _free(_emscripten_pc_get_file.ret);\r\n  _emscripten_pc_get_file.ret = allocateUTF8(result.file);\r\n  return _emscripten_pc_get_file.ret;\r\n });\r\n}\r\n\r\nfunction _emscripten_pc_get_function(pc) {\r\n return withBuiltinMalloc(function() {\r\n  var name;\r\n  if (pc & 2147483648) {\r\n   var frame = UNWIND_CACHE[pc];\r\n   if (!frame) return 0;\r\n   var match;\r\n   if (match = /^\\s+at (.*) \\(.*\\)$/.exec(frame)) {\r\n    name = match[1];\r\n   } else if (match = /^(.+?)@/.exec(frame)) {\r\n    name = match[1];\r\n   } else {\r\n    return 0;\r\n   }\r\n  } else {\r\n   name = wasmOffsetConverter.getName(pc);\r\n  }\r\n  if (_emscripten_pc_get_function.ret) _free(_emscripten_pc_get_function.ret);\r\n  _emscripten_pc_get_function.ret = allocateUTF8(name);\r\n  return _emscripten_pc_get_function.ret;\r\n });\r\n}\r\n\r\nfunction _emscripten_pc_get_line(pc) {\r\n var result = convertPCtoSourceLocation(pc);\r\n return result ? result.line : 0;\r\n}\r\n\r\nfunction abortOnCannotGrowMemory(requestedSize) {\r\n abort(\"Cannot enlarge memory arrays to size \" + requestedSize + \" bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value \" + HEAP8.length + \", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \");\r\n}\r\n\r\nfunction _emscripten_resize_heap(requestedSize) {\r\n var oldSize = HEAPU8.length;\r\n requestedSize = requestedSize >>> 0;\r\n abortOnCannotGrowMemory(requestedSize);\r\n}\r\n\r\nfunction _emscripten_return_address(level) {\r\n var callstack = new Error().stack.split(\"\\n\");\r\n if (callstack[0] == \"Error\") {\r\n  callstack.shift();\r\n }\r\n return convertFrameToPC(callstack[level + 2]);\r\n}\r\n\r\nfunction saveInUnwindCache(callstack) {\r\n callstack.forEach(function(frame) {\r\n  var pc = convertFrameToPC(frame);\r\n  if (pc) {\r\n   UNWIND_CACHE[pc] = frame;\r\n  }\r\n });\r\n}\r\n\r\nfunction _emscripten_stack_snapshot() {\r\n var callstack = new Error().stack.split(\"\\n\");\r\n if (callstack[0] == \"Error\") {\r\n  callstack.shift();\r\n }\r\n saveInUnwindCache(callstack);\r\n UNWIND_CACHE.last_addr = convertFrameToPC(callstack[2]);\r\n UNWIND_CACHE.last_stack = callstack;\r\n return UNWIND_CACHE.last_addr;\r\n}\r\n\r\nfunction _emscripten_stack_unwind_buffer(addr, buffer, count) {\r\n var stack;\r\n if (UNWIND_CACHE.last_addr == addr) {\r\n  stack = UNWIND_CACHE.last_stack;\r\n } else {\r\n  stack = new Error().stack.split(\"\\n\");\r\n  if (stack[0] == \"Error\") {\r\n   stack.shift();\r\n  }\r\n  saveInUnwindCache(stack);\r\n }\r\n var offset = 2;\r\n while (stack[offset] && convertFrameToPC(stack[offset]) != addr) {\r\n  ++offset;\r\n }\r\n for (var i = 0; i < count && stack[i + offset]; ++i) {\r\n  _asan_js_store_4(buffer + i * 4 >> 2, convertFrameToPC(stack[i + offset]));\r\n }\r\n return i;\r\n}\r\n\r\nvar ENV = {};\r\n\r\nfunction getExecutableName() {\r\n return thisProgram || \"./this.program\";\r\n}\r\n\r\nfunction getEnvStrings() {\r\n if (!getEnvStrings.strings) {\r\n  var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\r\n  var env = {\r\n   \"USER\": \"web_user\",\r\n   \"LOGNAME\": \"web_user\",\r\n   \"PATH\": \"/\",\r\n   \"PWD\": \"/\",\r\n   \"HOME\": \"/home/web_user\",\r\n   \"LANG\": lang,\r\n   \"_\": getExecutableName()\r\n  };\r\n  for (var x in ENV) {\r\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\r\n  }\r\n  var strings = [];\r\n  for (var x in env) {\r\n   strings.push(x + \"=\" + env[x]);\r\n  }\r\n  getEnvStrings.strings = strings;\r\n }\r\n return getEnvStrings.strings;\r\n}\r\n\r\nfunction _environ_get(__environ, environ_buf) {\r\n var bufSize = 0;\r\n getEnvStrings().forEach(function(string, i) {\r\n  var ptr = environ_buf + bufSize;\r\n  _asan_js_store_4(__environ + i * 4 >> 2, ptr);\r\n  writeAsciiToMemory(string, ptr);\r\n  bufSize += string.length + 1;\r\n });\r\n return 0;\r\n}\r\n\r\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n var strings = getEnvStrings();\r\n _asan_js_store_4(penviron_count >> 2, strings.length);\r\n var bufSize = 0;\r\n strings.forEach(function(string) {\r\n  bufSize += string.length + 1;\r\n });\r\n _asan_js_store_4(penviron_buf_size >> 2, bufSize);\r\n return 0;\r\n}\r\n\r\nfunction _fd_close(fd) {\r\n try {\r\n  var stream = SYSCALLS.getStreamFromFD(fd);\r\n  FS.close(stream);\r\n  return 0;\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return e.errno;\r\n }\r\n}\r\n\r\nfunction _fd_read(fd, iov, iovcnt, pnum) {\r\n try {\r\n  var stream = SYSCALLS.getStreamFromFD(fd);\r\n  var num = SYSCALLS.doReadv(stream, iov, iovcnt);\r\n  _asan_js_store_4(pnum >> 2, num);\r\n  return 0;\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return e.errno;\r\n }\r\n}\r\n\r\nfunction _fd_write(fd, iov, iovcnt, pnum) {\r\n try {\r\n  var stream = SYSCALLS.getStreamFromFD(fd);\r\n  var num = SYSCALLS.doWritev(stream, iov, iovcnt);\r\n  _asan_js_store_4(pnum >> 2, num);\r\n  return 0;\r\n } catch (e) {\r\n  if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\r\n  return e.errno;\r\n }\r\n}\r\n\r\nfunction _proc_exit(code) {\r\n procExit(code);\r\n}\r\n\r\nfunction _setTempRet0(val) {\r\n setTempRet0(val);\r\n}\r\n\r\nvar FSNode = function(parent, name, mode, rdev) {\r\n if (!parent) {\r\n  parent = this;\r\n }\r\n this.parent = parent;\r\n this.mount = parent.mount;\r\n this.mounted = null;\r\n this.id = FS.nextInode++;\r\n this.name = name;\r\n this.mode = mode;\r\n this.node_ops = {};\r\n this.stream_ops = {};\r\n this.rdev = rdev;\r\n};\r\n\r\nvar readMode = 292 | 73;\r\n\r\nvar writeMode = 146;\r\n\r\nObject.defineProperties(FSNode.prototype, {\r\n read: {\r\n  get: function() {\r\n   return (this.mode & readMode) === readMode;\r\n  },\r\n  set: function(val) {\r\n   val ? this.mode |= readMode : this.mode &= ~readMode;\r\n  }\r\n },\r\n write: {\r\n  get: function() {\r\n   return (this.mode & writeMode) === writeMode;\r\n  },\r\n  set: function(val) {\r\n   val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n  }\r\n },\r\n isFolder: {\r\n  get: function() {\r\n   return FS.isDir(this.mode);\r\n  }\r\n },\r\n isDevice: {\r\n  get: function() {\r\n   return FS.isChrdev(this.mode);\r\n  }\r\n }\r\n});\r\n\r\nFS.FSNode = FSNode;\r\n\r\nFS.staticInit();\r\n\r\nERRNO_CODES = {\r\n \"EPERM\": 63,\r\n \"ENOENT\": 44,\r\n \"ESRCH\": 71,\r\n \"EINTR\": 27,\r\n \"EIO\": 29,\r\n \"ENXIO\": 60,\r\n \"E2BIG\": 1,\r\n \"ENOEXEC\": 45,\r\n \"EBADF\": 8,\r\n \"ECHILD\": 12,\r\n \"EAGAIN\": 6,\r\n \"EWOULDBLOCK\": 6,\r\n \"ENOMEM\": 48,\r\n \"EACCES\": 2,\r\n \"EFAULT\": 21,\r\n \"ENOTBLK\": 105,\r\n \"EBUSY\": 10,\r\n \"EEXIST\": 20,\r\n \"EXDEV\": 75,\r\n \"ENODEV\": 43,\r\n \"ENOTDIR\": 54,\r\n \"EISDIR\": 31,\r\n \"EINVAL\": 28,\r\n \"ENFILE\": 41,\r\n \"EMFILE\": 33,\r\n \"ENOTTY\": 59,\r\n \"ETXTBSY\": 74,\r\n \"EFBIG\": 22,\r\n \"ENOSPC\": 51,\r\n \"ESPIPE\": 70,\r\n \"EROFS\": 69,\r\n \"EMLINK\": 34,\r\n \"EPIPE\": 64,\r\n \"EDOM\": 18,\r\n \"ERANGE\": 68,\r\n \"ENOMSG\": 49,\r\n \"EIDRM\": 24,\r\n \"ECHRNG\": 106,\r\n \"EL2NSYNC\": 156,\r\n \"EL3HLT\": 107,\r\n \"EL3RST\": 108,\r\n \"ELNRNG\": 109,\r\n \"EUNATCH\": 110,\r\n \"ENOCSI\": 111,\r\n \"EL2HLT\": 112,\r\n \"EDEADLK\": 16,\r\n \"ENOLCK\": 46,\r\n \"EBADE\": 113,\r\n \"EBADR\": 114,\r\n \"EXFULL\": 115,\r\n \"ENOANO\": 104,\r\n \"EBADRQC\": 103,\r\n \"EBADSLT\": 102,\r\n \"EDEADLOCK\": 16,\r\n \"EBFONT\": 101,\r\n \"ENOSTR\": 100,\r\n \"ENODATA\": 116,\r\n \"ETIME\": 117,\r\n \"ENOSR\": 118,\r\n \"ENONET\": 119,\r\n \"ENOPKG\": 120,\r\n \"EREMOTE\": 121,\r\n \"ENOLINK\": 47,\r\n \"EADV\": 122,\r\n \"ESRMNT\": 123,\r\n \"ECOMM\": 124,\r\n \"EPROTO\": 65,\r\n \"EMULTIHOP\": 36,\r\n \"EDOTDOT\": 125,\r\n \"EBADMSG\": 9,\r\n \"ENOTUNIQ\": 126,\r\n \"EBADFD\": 127,\r\n \"EREMCHG\": 128,\r\n \"ELIBACC\": 129,\r\n \"ELIBBAD\": 130,\r\n \"ELIBSCN\": 131,\r\n \"ELIBMAX\": 132,\r\n \"ELIBEXEC\": 133,\r\n \"ENOSYS\": 52,\r\n \"ENOTEMPTY\": 55,\r\n \"ENAMETOOLONG\": 37,\r\n \"ELOOP\": 32,\r\n \"EOPNOTSUPP\": 138,\r\n \"EPFNOSUPPORT\": 139,\r\n \"ECONNRESET\": 15,\r\n \"ENOBUFS\": 42,\r\n \"EAFNOSUPPORT\": 5,\r\n \"EPROTOTYPE\": 67,\r\n \"ENOTSOCK\": 57,\r\n \"ENOPROTOOPT\": 50,\r\n \"ESHUTDOWN\": 140,\r\n \"ECONNREFUSED\": 14,\r\n \"EADDRINUSE\": 3,\r\n \"ECONNABORTED\": 13,\r\n \"ENETUNREACH\": 40,\r\n \"ENETDOWN\": 38,\r\n \"ETIMEDOUT\": 73,\r\n \"EHOSTDOWN\": 142,\r\n \"EHOSTUNREACH\": 23,\r\n \"EINPROGRESS\": 26,\r\n \"EALREADY\": 7,\r\n \"EDESTADDRREQ\": 17,\r\n \"EMSGSIZE\": 35,\r\n \"EPROTONOSUPPORT\": 66,\r\n \"ESOCKTNOSUPPORT\": 137,\r\n \"EADDRNOTAVAIL\": 4,\r\n \"ENETRESET\": 39,\r\n \"EISCONN\": 30,\r\n \"ENOTCONN\": 53,\r\n \"ETOOMANYREFS\": 141,\r\n \"EUSERS\": 136,\r\n \"EDQUOT\": 19,\r\n \"ESTALE\": 72,\r\n \"ENOTSUP\": 138,\r\n \"ENOMEDIUM\": 148,\r\n \"EILSEQ\": 25,\r\n \"EOVERFLOW\": 61,\r\n \"ECANCELED\": 11,\r\n \"ENOTRECOVERABLE\": 56,\r\n \"EOWNERDEAD\": 62,\r\n \"ESTRPIPE\": 135\r\n};\r\n\r\nembind_init_charCodes();\r\n\r\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\r\n\r\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\r\n\r\ninit_ClassHandle();\r\n\r\ninit_embind();\r\n\r\ninit_RegisteredPointer();\r\n\r\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\r\n\r\ninit_emval();\r\n\r\nvar ASSERTIONS = true;\r\n\r\nfunction intArrayFromString(stringy, dontAddNull, length) {\r\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n var u8array = new Array(len);\r\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n if (dontAddNull) u8array.length = numBytesWritten;\r\n return u8array;\r\n}\r\n\r\nvar asmLibraryArg = {\r\n \"__assert_fail\": ___assert_fail,\r\n \"__syscall_dup\": ___syscall_dup,\r\n \"__syscall_open\": ___syscall_open,\r\n \"__syscall_stat64\": ___syscall_stat64,\r\n \"_embind_register_bigint\": __embind_register_bigint,\r\n \"_embind_register_bool\": __embind_register_bool,\r\n \"_embind_register_class\": __embind_register_class,\r\n \"_embind_register_class_constructor\": __embind_register_class_constructor,\r\n \"_embind_register_class_function\": __embind_register_class_function,\r\n \"_embind_register_emval\": __embind_register_emval,\r\n \"_embind_register_float\": __embind_register_float,\r\n \"_embind_register_function\": __embind_register_function,\r\n \"_embind_register_integer\": __embind_register_integer,\r\n \"_embind_register_memory_view\": __embind_register_memory_view,\r\n \"_embind_register_std_string\": __embind_register_std_string,\r\n \"_embind_register_std_wstring\": __embind_register_std_wstring,\r\n \"_embind_register_void\": __embind_register_void,\r\n \"_emval_decref\": __emval_decref,\r\n \"_emval_incref\": __emval_incref,\r\n \"_emval_take_value\": __emval_take_value,\r\n \"abort\": _abort,\r\n \"emscripten_asm_const_double\": _emscripten_asm_const_double,\r\n \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n \"emscripten_builtin_mmap2\": _emscripten_builtin_mmap2,\r\n \"emscripten_builtin_munmap\": _emscripten_builtin_munmap,\r\n \"emscripten_console_error\": _emscripten_console_error,\r\n \"emscripten_get_heap_max\": _emscripten_get_heap_max,\r\n \"emscripten_get_module_name\": _emscripten_get_module_name,\r\n \"emscripten_get_now\": _emscripten_get_now,\r\n \"emscripten_pc_get_column\": _emscripten_pc_get_column,\r\n \"emscripten_pc_get_file\": _emscripten_pc_get_file,\r\n \"emscripten_pc_get_function\": _emscripten_pc_get_function,\r\n \"emscripten_pc_get_line\": _emscripten_pc_get_line,\r\n \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n \"emscripten_return_address\": _emscripten_return_address,\r\n \"emscripten_stack_snapshot\": _emscripten_stack_snapshot,\r\n \"emscripten_stack_unwind_buffer\": _emscripten_stack_unwind_buffer,\r\n \"environ_get\": _environ_get,\r\n \"environ_sizes_get\": _environ_sizes_get,\r\n \"fd_close\": _fd_close,\r\n \"fd_read\": _fd_read,\r\n \"fd_write\": _fd_write,\r\n \"proc_exit\": _proc_exit,\r\n \"setTempRet0\": _setTempRet0\r\n};\r\n\r\nvar asm = createWasm();\r\n\r\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\r\n\r\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\r\n\r\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = createExportWrapper(\"__embind_register_native_and_builtin_types\");\r\n\r\nvar ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\r\n\r\nvar ___stdio_exit = Module[\"___stdio_exit\"] = createExportWrapper(\"__stdio_exit\");\r\n\r\nvar ___funcs_on_exit = Module[\"___funcs_on_exit\"] = createExportWrapper(\"__funcs_on_exit\");\r\n\r\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\r\n\r\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\r\n\r\nvar _memalign = Module[\"_memalign\"] = createExportWrapper(\"memalign\");\r\n\r\nvar _emscripten_builtin_malloc = Module[\"_emscripten_builtin_malloc\"] = createExportWrapper(\"emscripten_builtin_malloc\");\r\n\r\nvar _emscripten_builtin_free = Module[\"_emscripten_builtin_free\"] = createExportWrapper(\"emscripten_builtin_free\");\r\n\r\nvar _emscripten_builtin_memalign = Module[\"_emscripten_builtin_memalign\"] = createExportWrapper(\"emscripten_builtin_memalign\");\r\n\r\nvar _emscripten_stack_init = Module[\"_emscripten_stack_init\"] = function() {\r\n return (_emscripten_stack_init = Module[\"_emscripten_stack_init\"] = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\r\n};\r\n\r\nvar _emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = function() {\r\n return (_emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\r\n};\r\n\r\nvar _emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = function() {\r\n return (_emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\nvar _emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = function() {\r\n return (_emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\nvar stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\r\n\r\nvar stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\r\n\r\nvar stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\r\n\r\nvar __ZN6__asan9FakeStack17AddrIsInFakeStackEm = Module[\"__ZN6__asan9FakeStack17AddrIsInFakeStackEm\"] = createExportWrapper(\"_ZN6__asan9FakeStack17AddrIsInFakeStackEm\");\r\n\r\nvar __ZN6__asan9FakeStack8AllocateEmmm = Module[\"__ZN6__asan9FakeStack8AllocateEmmm\"] = createExportWrapper(\"_ZN6__asan9FakeStack8AllocateEmmm\");\r\n\r\nvar _asan_c_load_1 = Module[\"_asan_c_load_1\"] = createExportWrapper(\"asan_c_load_1\");\r\n\r\nvar _asan_c_load_1u = Module[\"_asan_c_load_1u\"] = createExportWrapper(\"asan_c_load_1u\");\r\n\r\nvar _asan_c_load_2 = Module[\"_asan_c_load_2\"] = createExportWrapper(\"asan_c_load_2\");\r\n\r\nvar _asan_c_load_2u = Module[\"_asan_c_load_2u\"] = createExportWrapper(\"asan_c_load_2u\");\r\n\r\nvar _asan_c_load_4 = Module[\"_asan_c_load_4\"] = createExportWrapper(\"asan_c_load_4\");\r\n\r\nvar _asan_c_load_4u = Module[\"_asan_c_load_4u\"] = createExportWrapper(\"asan_c_load_4u\");\r\n\r\nvar _asan_c_load_f = Module[\"_asan_c_load_f\"] = createExportWrapper(\"asan_c_load_f\");\r\n\r\nvar _asan_c_load_d = Module[\"_asan_c_load_d\"] = createExportWrapper(\"asan_c_load_d\");\r\n\r\nvar _asan_c_store_1 = Module[\"_asan_c_store_1\"] = createExportWrapper(\"asan_c_store_1\");\r\n\r\nvar _asan_c_store_1u = Module[\"_asan_c_store_1u\"] = createExportWrapper(\"asan_c_store_1u\");\r\n\r\nvar _asan_c_store_2 = Module[\"_asan_c_store_2\"] = createExportWrapper(\"asan_c_store_2\");\r\n\r\nvar _asan_c_store_2u = Module[\"_asan_c_store_2u\"] = createExportWrapper(\"asan_c_store_2u\");\r\n\r\nvar _asan_c_store_4 = Module[\"_asan_c_store_4\"] = createExportWrapper(\"asan_c_store_4\");\r\n\r\nvar _asan_c_store_4u = Module[\"_asan_c_store_4u\"] = createExportWrapper(\"asan_c_store_4u\");\r\n\r\nvar _asan_c_store_f = Module[\"_asan_c_store_f\"] = createExportWrapper(\"asan_c_store_f\");\r\n\r\nvar _asan_c_store_d = Module[\"_asan_c_store_d\"] = createExportWrapper(\"asan_c_store_d\");\r\n\r\nvar dynCall_jii = Module[\"dynCall_jii\"] = createExportWrapper(\"dynCall_jii\");\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayFromString\")) Module[\"intArrayFromString\"] = (() => abort(\"'intArrayFromString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayToString\")) Module[\"intArrayToString\"] = (() => abort(\"'intArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ccall\")) Module[\"ccall\"] = (() => abort(\"'ccall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"cwrap\")) Module[\"cwrap\"] = (() => abort(\"'cwrap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setValue\")) Module[\"setValue\"] = (() => abort(\"'setValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getValue\")) Module[\"getValue\"] = (() => abort(\"'getValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"allocate\")) Module[\"allocate\"] = (() => abort(\"'allocate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ArrayToString\")) Module[\"UTF8ArrayToString\"] = (() => abort(\"'UTF8ArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ToString\")) Module[\"UTF8ToString\"] = (() => abort(\"'UTF8ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8Array\")) Module[\"stringToUTF8Array\"] = (() => abort(\"'stringToUTF8Array' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8\")) Module[\"stringToUTF8\"] = (() => abort(\"'stringToUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF8\")) Module[\"lengthBytesUTF8\"] = (() => abort(\"'lengthBytesUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = (() => abort(\"'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreRun\")) Module[\"addOnPreRun\"] = (() => abort(\"'addOnPreRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnInit\")) Module[\"addOnInit\"] = (() => abort(\"'addOnInit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreMain\")) Module[\"addOnPreMain\"] = (() => abort(\"'addOnPreMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnExit\")) Module[\"addOnExit\"] = (() => abort(\"'addOnExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPostRun\")) Module[\"addOnPostRun\"] = (() => abort(\"'addOnPostRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeStringToMemory\")) Module[\"writeStringToMemory\"] = (() => abort(\"'writeStringToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeArrayToMemory\")) Module[\"writeArrayToMemory\"] = (() => abort(\"'writeArrayToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeAsciiToMemory\")) Module[\"writeAsciiToMemory\"] = (() => abort(\"'writeAsciiToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addRunDependency\")) Module[\"addRunDependency\"] = (() => abort(\"'addRunDependency' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"removeRunDependency\")) Module[\"removeRunDependency\"] = (() => abort(\"'removeRunDependency' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createFolder\")) Module[\"FS_createFolder\"] = (() => abort(\"'FS_createFolder' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPath\")) Module[\"FS_createPath\"] = (() => abort(\"'FS_createPath' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDataFile\")) Module[\"FS_createDataFile\"] = (() => abort(\"'FS_createDataFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPreloadedFile\")) Module[\"FS_createPreloadedFile\"] = (() => abort(\"'FS_createPreloadedFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLazyFile\")) Module[\"FS_createLazyFile\"] = (() => abort(\"'FS_createLazyFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLink\")) Module[\"FS_createLink\"] = (() => abort(\"'FS_createLink' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDevice\")) Module[\"FS_createDevice\"] = (() => abort(\"'FS_createDevice' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_unlink\")) Module[\"FS_unlink\"] = (() => abort(\"'FS_unlink' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getLEB\")) Module[\"getLEB\"] = (() => abort(\"'getLEB' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getFunctionTables\")) Module[\"getFunctionTables\"] = (() => abort(\"'getFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"alignFunctionTables\")) Module[\"alignFunctionTables\"] = (() => abort(\"'alignFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerFunctions\")) Module[\"registerFunctions\"] = (() => abort(\"'registerFunctions' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"addFunction\")) Module[\"addFunction\"] = (() => abort(\"'addFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"removeFunction\")) Module[\"removeFunction\"] = (() => abort(\"'removeFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = (() => abort(\"'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"prettyPrint\")) Module[\"prettyPrint\"] = (() => abort(\"'prettyPrint' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = (() => abort(\"'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getCompilerSetting\")) Module[\"getCompilerSetting\"] = (() => abort(\"'getCompilerSetting' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"print\")) Module[\"print\"] = (() => abort(\"'print' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"printErr\")) Module[\"printErr\"] = (() => abort(\"'printErr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getTempRet0\")) Module[\"getTempRet0\"] = (() => abort(\"'getTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setTempRet0\")) Module[\"setTempRet0\"] = (() => abort(\"'setTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"callMain\")) Module[\"callMain\"] = (() => abort(\"'callMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"abort\")) Module[\"abort\"] = (() => abort(\"'abort' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"keepRuntimeAlive\")) Module[\"keepRuntimeAlive\"] = (() => abort(\"'keepRuntimeAlive' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"WasmOffsetConverter\")) Module[\"WasmOffsetConverter\"] = (() => abort(\"'WasmOffsetConverter' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"zeroMemory\")) Module[\"zeroMemory\"] = (() => abort(\"'zeroMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToNewUTF8\")) Module[\"stringToNewUTF8\"] = (() => abort(\"'stringToNewUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setFileTime\")) Module[\"setFileTime\"] = (() => abort(\"'setFileTime' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"abortOnCannotGrowMemory\")) Module[\"abortOnCannotGrowMemory\"] = (() => abort(\"'abortOnCannotGrowMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emscripten_realloc_buffer\")) Module[\"emscripten_realloc_buffer\"] = (() => abort(\"'emscripten_realloc_buffer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ENV\")) Module[\"ENV\"] = (() => abort(\"'ENV' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"withStackSave\")) Module[\"withStackSave\"] = (() => abort(\"'withStackSave' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_CODES\")) Module[\"ERRNO_CODES\"] = (() => abort(\"'ERRNO_CODES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_MESSAGES\")) Module[\"ERRNO_MESSAGES\"] = (() => abort(\"'ERRNO_MESSAGES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setErrNo\")) Module[\"setErrNo\"] = (() => abort(\"'setErrNo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"inetPton4\")) Module[\"inetPton4\"] = (() => abort(\"'inetPton4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"inetNtop4\")) Module[\"inetNtop4\"] = (() => abort(\"'inetNtop4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"inetPton6\")) Module[\"inetPton6\"] = (() => abort(\"'inetPton6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"inetNtop6\")) Module[\"inetNtop6\"] = (() => abort(\"'inetNtop6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readSockaddr\")) Module[\"readSockaddr\"] = (() => abort(\"'readSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeSockaddr\")) Module[\"writeSockaddr\"] = (() => abort(\"'writeSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"DNS\")) Module[\"DNS\"] = (() => abort(\"'DNS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getHostByName\")) Module[\"getHostByName\"] = (() => abort(\"'getHostByName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"Protocols\")) Module[\"Protocols\"] = (() => abort(\"'Protocols' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"Sockets\")) Module[\"Sockets\"] = (() => abort(\"'Sockets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getRandomDevice\")) Module[\"getRandomDevice\"] = (() => abort(\"'getRandomDevice' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"traverseStack\")) Module[\"traverseStack\"] = (() => abort(\"'traverseStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"convertFrameToPC\")) Module[\"convertFrameToPC\"] = (() => abort(\"'convertFrameToPC' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UNWIND_CACHE\")) Module[\"UNWIND_CACHE\"] = (() => abort(\"'UNWIND_CACHE' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"saveInUnwindCache\")) Module[\"saveInUnwindCache\"] = (() => abort(\"'saveInUnwindCache' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"convertPCtoSourceLocation\")) Module[\"convertPCtoSourceLocation\"] = (() => abort(\"'convertPCtoSourceLocation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"withBuiltinMalloc\")) Module[\"withBuiltinMalloc\"] = (() => abort(\"'withBuiltinMalloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgsArray\")) Module[\"readAsmConstArgsArray\"] = (() => abort(\"'readAsmConstArgsArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgs\")) Module[\"readAsmConstArgs\"] = (() => abort(\"'readAsmConstArgs' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"mainThreadEM_ASM\")) Module[\"mainThreadEM_ASM\"] = (() => abort(\"'mainThreadEM_ASM' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"jstoi_q\")) Module[\"jstoi_q\"] = (() => abort(\"'jstoi_q' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"jstoi_s\")) Module[\"jstoi_s\"] = (() => abort(\"'jstoi_s' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getExecutableName\")) Module[\"getExecutableName\"] = (() => abort(\"'getExecutableName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"listenOnce\")) Module[\"listenOnce\"] = (() => abort(\"'listenOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"autoResumeAudioContext\")) Module[\"autoResumeAudioContext\"] = (() => abort(\"'autoResumeAudioContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCallLegacy\")) Module[\"dynCallLegacy\"] = (() => abort(\"'dynCallLegacy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getDynCaller\")) Module[\"getDynCaller\"] = (() => abort(\"'getDynCaller' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = (() => abort(\"'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"callRuntimeCallbacks\")) Module[\"callRuntimeCallbacks\"] = (() => abort(\"'callRuntimeCallbacks' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"wasmTableMirror\")) Module[\"wasmTableMirror\"] = (() => abort(\"'wasmTableMirror' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setWasmTableEntry\")) Module[\"setWasmTableEntry\"] = (() => abort(\"'setWasmTableEntry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getWasmTableEntry\")) Module[\"getWasmTableEntry\"] = (() => abort(\"'getWasmTableEntry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"handleException\")) Module[\"handleException\"] = (() => abort(\"'handleException' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"runtimeKeepalivePush\")) Module[\"runtimeKeepalivePush\"] = (() => abort(\"'runtimeKeepalivePush' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"runtimeKeepalivePop\")) Module[\"runtimeKeepalivePop\"] = (() => abort(\"'runtimeKeepalivePop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"callUserCallback\")) Module[\"callUserCallback\"] = (() => abort(\"'callUserCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"maybeExit\")) Module[\"maybeExit\"] = (() => abort(\"'maybeExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"safeSetTimeout\")) Module[\"safeSetTimeout\"] = (() => abort(\"'safeSetTimeout' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"asmjsMangle\")) Module[\"asmjsMangle\"] = (() => abort(\"'asmjsMangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"asyncLoad\")) Module[\"asyncLoad\"] = (() => abort(\"'asyncLoad' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"alignMemory\")) Module[\"alignMemory\"] = (() => abort(\"'alignMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"mmapAlloc\")) Module[\"mmapAlloc\"] = (() => abort(\"'mmapAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"reallyNegative\")) Module[\"reallyNegative\"] = (() => abort(\"'reallyNegative' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"unSign\")) Module[\"unSign\"] = (() => abort(\"'unSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"reSign\")) Module[\"reSign\"] = (() => abort(\"'reSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"formatString\")) Module[\"formatString\"] = (() => abort(\"'formatString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"PATH\")) Module[\"PATH\"] = (() => abort(\"'PATH' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"PATH_FS\")) Module[\"PATH_FS\"] = (() => abort(\"'PATH_FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SYSCALLS\")) Module[\"SYSCALLS\"] = (() => abort(\"'SYSCALLS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"syscallMmap2\")) Module[\"syscallMmap2\"] = (() => abort(\"'syscallMmap2' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"syscallMunmap\")) Module[\"syscallMunmap\"] = (() => abort(\"'syscallMunmap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getSocketFromFD\")) Module[\"getSocketFromFD\"] = (() => abort(\"'getSocketFromFD' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getSocketAddress\")) Module[\"getSocketAddress\"] = (() => abort(\"'getSocketAddress' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"JSEvents\")) Module[\"JSEvents\"] = (() => abort(\"'JSEvents' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerKeyEventCallback\")) Module[\"registerKeyEventCallback\"] = (() => abort(\"'registerKeyEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"specialHTMLTargets\")) Module[\"specialHTMLTargets\"] = (() => abort(\"'specialHTMLTargets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"maybeCStringToJsString\")) Module[\"maybeCStringToJsString\"] = (() => abort(\"'maybeCStringToJsString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"findEventTarget\")) Module[\"findEventTarget\"] = (() => abort(\"'findEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"findCanvasEventTarget\")) Module[\"findCanvasEventTarget\"] = (() => abort(\"'findCanvasEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getBoundingClientRect\")) Module[\"getBoundingClientRect\"] = (() => abort(\"'getBoundingClientRect' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillMouseEventData\")) Module[\"fillMouseEventData\"] = (() => abort(\"'fillMouseEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerMouseEventCallback\")) Module[\"registerMouseEventCallback\"] = (() => abort(\"'registerMouseEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerWheelEventCallback\")) Module[\"registerWheelEventCallback\"] = (() => abort(\"'registerWheelEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerUiEventCallback\")) Module[\"registerUiEventCallback\"] = (() => abort(\"'registerUiEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerFocusEventCallback\")) Module[\"registerFocusEventCallback\"] = (() => abort(\"'registerFocusEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillDeviceOrientationEventData\")) Module[\"fillDeviceOrientationEventData\"] = (() => abort(\"'fillDeviceOrientationEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerDeviceOrientationEventCallback\")) Module[\"registerDeviceOrientationEventCallback\"] = (() => abort(\"'registerDeviceOrientationEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillDeviceMotionEventData\")) Module[\"fillDeviceMotionEventData\"] = (() => abort(\"'fillDeviceMotionEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerDeviceMotionEventCallback\")) Module[\"registerDeviceMotionEventCallback\"] = (() => abort(\"'registerDeviceMotionEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"screenOrientation\")) Module[\"screenOrientation\"] = (() => abort(\"'screenOrientation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillOrientationChangeEventData\")) Module[\"fillOrientationChangeEventData\"] = (() => abort(\"'fillOrientationChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerOrientationChangeEventCallback\")) Module[\"registerOrientationChangeEventCallback\"] = (() => abort(\"'registerOrientationChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillFullscreenChangeEventData\")) Module[\"fillFullscreenChangeEventData\"] = (() => abort(\"'fillFullscreenChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerFullscreenChangeEventCallback\")) Module[\"registerFullscreenChangeEventCallback\"] = (() => abort(\"'registerFullscreenChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerRestoreOldStyle\")) Module[\"registerRestoreOldStyle\"] = (() => abort(\"'registerRestoreOldStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"hideEverythingExceptGivenElement\")) Module[\"hideEverythingExceptGivenElement\"] = (() => abort(\"'hideEverythingExceptGivenElement' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"restoreHiddenElements\")) Module[\"restoreHiddenElements\"] = (() => abort(\"'restoreHiddenElements' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setLetterbox\")) Module[\"setLetterbox\"] = (() => abort(\"'setLetterbox' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"currentFullscreenStrategy\")) Module[\"currentFullscreenStrategy\"] = (() => abort(\"'currentFullscreenStrategy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"restoreOldWindowedStyle\")) Module[\"restoreOldWindowedStyle\"] = (() => abort(\"'restoreOldWindowedStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"softFullscreenResizeWebGLRenderTarget\")) Module[\"softFullscreenResizeWebGLRenderTarget\"] = (() => abort(\"'softFullscreenResizeWebGLRenderTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"doRequestFullscreen\")) Module[\"doRequestFullscreen\"] = (() => abort(\"'doRequestFullscreen' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillPointerlockChangeEventData\")) Module[\"fillPointerlockChangeEventData\"] = (() => abort(\"'fillPointerlockChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerPointerlockChangeEventCallback\")) Module[\"registerPointerlockChangeEventCallback\"] = (() => abort(\"'registerPointerlockChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerPointerlockErrorEventCallback\")) Module[\"registerPointerlockErrorEventCallback\"] = (() => abort(\"'registerPointerlockErrorEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"requestPointerLock\")) Module[\"requestPointerLock\"] = (() => abort(\"'requestPointerLock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillVisibilityChangeEventData\")) Module[\"fillVisibilityChangeEventData\"] = (() => abort(\"'fillVisibilityChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerVisibilityChangeEventCallback\")) Module[\"registerVisibilityChangeEventCallback\"] = (() => abort(\"'registerVisibilityChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerTouchEventCallback\")) Module[\"registerTouchEventCallback\"] = (() => abort(\"'registerTouchEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillGamepadEventData\")) Module[\"fillGamepadEventData\"] = (() => abort(\"'fillGamepadEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerGamepadEventCallback\")) Module[\"registerGamepadEventCallback\"] = (() => abort(\"'registerGamepadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerBeforeUnloadEventCallback\")) Module[\"registerBeforeUnloadEventCallback\"] = (() => abort(\"'registerBeforeUnloadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"fillBatteryEventData\")) Module[\"fillBatteryEventData\"] = (() => abort(\"'fillBatteryEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"battery\")) Module[\"battery\"] = (() => abort(\"'battery' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerBatteryEventCallback\")) Module[\"registerBatteryEventCallback\"] = (() => abort(\"'registerBatteryEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setCanvasElementSize\")) Module[\"setCanvasElementSize\"] = (() => abort(\"'setCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getCanvasElementSize\")) Module[\"getCanvasElementSize\"] = (() => abort(\"'getCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"demangle\")) Module[\"demangle\"] = (() => abort(\"'demangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"demangleAll\")) Module[\"demangleAll\"] = (() => abort(\"'demangleAll' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"jsStackTrace\")) Module[\"jsStackTrace\"] = (() => abort(\"'jsStackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = (() => abort(\"'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getEnvStrings\")) Module[\"getEnvStrings\"] = (() => abort(\"'getEnvStrings' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"checkWasiClock\")) Module[\"checkWasiClock\"] = (() => abort(\"'checkWasiClock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64\")) Module[\"writeI53ToI64\"] = (() => abort(\"'writeI53ToI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Clamped\")) Module[\"writeI53ToI64Clamped\"] = (() => abort(\"'writeI53ToI64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Signaling\")) Module[\"writeI53ToI64Signaling\"] = (() => abort(\"'writeI53ToI64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Clamped\")) Module[\"writeI53ToU64Clamped\"] = (() => abort(\"'writeI53ToU64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Signaling\")) Module[\"writeI53ToU64Signaling\"] = (() => abort(\"'writeI53ToU64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readI53FromI64\")) Module[\"readI53FromI64\"] = (() => abort(\"'readI53FromI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readI53FromU64\")) Module[\"readI53FromU64\"] = (() => abort(\"'readI53FromU64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"convertI32PairToI53\")) Module[\"convertI32PairToI53\"] = (() => abort(\"'convertI32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"convertU32PairToI53\")) Module[\"convertU32PairToI53\"] = (() => abort(\"'convertU32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setImmediateWrapped\")) Module[\"setImmediateWrapped\"] = (() => abort(\"'setImmediateWrapped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"clearImmediateWrapped\")) Module[\"clearImmediateWrapped\"] = (() => abort(\"'clearImmediateWrapped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"polyfillSetImmediate\")) Module[\"polyfillSetImmediate\"] = (() => abort(\"'polyfillSetImmediate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"uncaughtExceptionCount\")) Module[\"uncaughtExceptionCount\"] = (() => abort(\"'uncaughtExceptionCount' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"exceptionLast\")) Module[\"exceptionLast\"] = (() => abort(\"'exceptionLast' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"exceptionCaught\")) Module[\"exceptionCaught\"] = (() => abort(\"'exceptionCaught' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ExceptionInfo\")) Module[\"ExceptionInfo\"] = (() => abort(\"'ExceptionInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"CatchInfo\")) Module[\"CatchInfo\"] = (() => abort(\"'CatchInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"exception_addRef\")) Module[\"exception_addRef\"] = (() => abort(\"'exception_addRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"exception_decRef\")) Module[\"exception_decRef\"] = (() => abort(\"'exception_decRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"Browser\")) Module[\"Browser\"] = (() => abort(\"'Browser' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"funcWrappers\")) Module[\"funcWrappers\"] = (() => abort(\"'funcWrappers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = (() => abort(\"'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setMainLoop\")) Module[\"setMainLoop\"] = (() => abort(\"'setMainLoop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"wget\")) Module[\"wget\"] = (() => abort(\"'wget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"FS\")) Module[\"FS\"] = (() => abort(\"'FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"MEMFS\")) Module[\"MEMFS\"] = (() => abort(\"'MEMFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"TTY\")) Module[\"TTY\"] = (() => abort(\"'TTY' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"PIPEFS\")) Module[\"PIPEFS\"] = (() => abort(\"'PIPEFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SOCKFS\")) Module[\"SOCKFS\"] = (() => abort(\"'SOCKFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"_setNetworkCallback\")) Module[\"_setNetworkCallback\"] = (() => abort(\"'_setNetworkCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"tempFixedLengthArray\")) Module[\"tempFixedLengthArray\"] = (() => abort(\"'tempFixedLengthArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"miniTempWebGLFloatBuffers\")) Module[\"miniTempWebGLFloatBuffers\"] = (() => abort(\"'miniTempWebGLFloatBuffers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"heapObjectForWebGLType\")) Module[\"heapObjectForWebGLType\"] = (() => abort(\"'heapObjectForWebGLType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"heapAccessShiftForWebGLHeap\")) Module[\"heapAccessShiftForWebGLHeap\"] = (() => abort(\"'heapAccessShiftForWebGLHeap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"GL\")) Module[\"GL\"] = (() => abort(\"'GL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGet\")) Module[\"emscriptenWebGLGet\"] = (() => abort(\"'emscriptenWebGLGet' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"computeUnpackAlignedImageSize\")) Module[\"computeUnpackAlignedImageSize\"] = (() => abort(\"'computeUnpackAlignedImageSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetTexPixelData\")) Module[\"emscriptenWebGLGetTexPixelData\"] = (() => abort(\"'emscriptenWebGLGetTexPixelData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetUniform\")) Module[\"emscriptenWebGLGetUniform\"] = (() => abort(\"'emscriptenWebGLGetUniform' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"webglGetUniformLocation\")) Module[\"webglGetUniformLocation\"] = (() => abort(\"'webglGetUniformLocation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"webglPrepareUniformLocationsBeforeFirstUse\")) Module[\"webglPrepareUniformLocationsBeforeFirstUse\"] = (() => abort(\"'webglPrepareUniformLocationsBeforeFirstUse' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"webglGetLeftBracePos\")) Module[\"webglGetLeftBracePos\"] = (() => abort(\"'webglGetLeftBracePos' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetVertexAttrib\")) Module[\"emscriptenWebGLGetVertexAttrib\"] = (() => abort(\"'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"writeGLArray\")) Module[\"writeGLArray\"] = (() => abort(\"'writeGLArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"AL\")) Module[\"AL\"] = (() => abort(\"'AL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_unicode\")) Module[\"SDL_unicode\"] = (() => abort(\"'SDL_unicode' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_ttfContext\")) Module[\"SDL_ttfContext\"] = (() => abort(\"'SDL_ttfContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_audio\")) Module[\"SDL_audio\"] = (() => abort(\"'SDL_audio' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL\")) Module[\"SDL\"] = (() => abort(\"'SDL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"SDL_gfx\")) Module[\"SDL_gfx\"] = (() => abort(\"'SDL_gfx' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"GLUT\")) Module[\"GLUT\"] = (() => abort(\"'GLUT' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"EGL\")) Module[\"EGL\"] = (() => abort(\"'EGL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"GLFW_Window\")) Module[\"GLFW_Window\"] = (() => abort(\"'GLFW_Window' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"GLFW\")) Module[\"GLFW\"] = (() => abort(\"'GLFW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"GLEW\")) Module[\"GLEW\"] = (() => abort(\"'GLEW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"IDBStore\")) Module[\"IDBStore\"] = (() => abort(\"'IDBStore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"runAndAbortIfError\")) Module[\"runAndAbortIfError\"] = (() => abort(\"'runAndAbortIfError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"InternalError\")) Module[\"InternalError\"] = (() => abort(\"'InternalError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"BindingError\")) Module[\"BindingError\"] = (() => abort(\"'BindingError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UnboundTypeError\")) Module[\"UnboundTypeError\"] = (() => abort(\"'UnboundTypeError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"PureVirtualError\")) Module[\"PureVirtualError\"] = (() => abort(\"'PureVirtualError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"init_embind\")) Module[\"init_embind\"] = (() => abort(\"'init_embind' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"throwInternalError\")) Module[\"throwInternalError\"] = (() => abort(\"'throwInternalError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"throwBindingError\")) Module[\"throwBindingError\"] = (() => abort(\"'throwBindingError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"throwUnboundTypeError\")) Module[\"throwUnboundTypeError\"] = (() => abort(\"'throwUnboundTypeError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ensureOverloadTable\")) Module[\"ensureOverloadTable\"] = (() => abort(\"'ensureOverloadTable' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"exposePublicSymbol\")) Module[\"exposePublicSymbol\"] = (() => abort(\"'exposePublicSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"replacePublicSymbol\")) Module[\"replacePublicSymbol\"] = (() => abort(\"'replacePublicSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"extendError\")) Module[\"extendError\"] = (() => abort(\"'extendError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"createNamedFunction\")) Module[\"createNamedFunction\"] = (() => abort(\"'createNamedFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registeredInstances\")) Module[\"registeredInstances\"] = (() => abort(\"'registeredInstances' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getBasestPointer\")) Module[\"getBasestPointer\"] = (() => abort(\"'getBasestPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerInheritedInstance\")) Module[\"registerInheritedInstance\"] = (() => abort(\"'registerInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"unregisterInheritedInstance\")) Module[\"unregisterInheritedInstance\"] = (() => abort(\"'unregisterInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getInheritedInstance\")) Module[\"getInheritedInstance\"] = (() => abort(\"'getInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getInheritedInstanceCount\")) Module[\"getInheritedInstanceCount\"] = (() => abort(\"'getInheritedInstanceCount' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getLiveInheritedInstances\")) Module[\"getLiveInheritedInstances\"] = (() => abort(\"'getLiveInheritedInstances' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registeredTypes\")) Module[\"registeredTypes\"] = (() => abort(\"'registeredTypes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"awaitingDependencies\")) Module[\"awaitingDependencies\"] = (() => abort(\"'awaitingDependencies' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"typeDependencies\")) Module[\"typeDependencies\"] = (() => abort(\"'typeDependencies' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registeredPointers\")) Module[\"registeredPointers\"] = (() => abort(\"'registeredPointers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"registerType\")) Module[\"registerType\"] = (() => abort(\"'registerType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"whenDependentTypesAreResolved\")) Module[\"whenDependentTypesAreResolved\"] = (() => abort(\"'whenDependentTypesAreResolved' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"embind_charCodes\")) Module[\"embind_charCodes\"] = (() => abort(\"'embind_charCodes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"embind_init_charCodes\")) Module[\"embind_init_charCodes\"] = (() => abort(\"'embind_init_charCodes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"readLatin1String\")) Module[\"readLatin1String\"] = (() => abort(\"'readLatin1String' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getTypeName\")) Module[\"getTypeName\"] = (() => abort(\"'getTypeName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"heap32VectorToArray\")) Module[\"heap32VectorToArray\"] = (() => abort(\"'heap32VectorToArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"requireRegisteredType\")) Module[\"requireRegisteredType\"] = (() => abort(\"'requireRegisteredType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getShiftFromSize\")) Module[\"getShiftFromSize\"] = (() => abort(\"'getShiftFromSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"integerReadValueFromPointer\")) Module[\"integerReadValueFromPointer\"] = (() => abort(\"'integerReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"enumReadValueFromPointer\")) Module[\"enumReadValueFromPointer\"] = (() => abort(\"'enumReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"floatReadValueFromPointer\")) Module[\"floatReadValueFromPointer\"] = (() => abort(\"'floatReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"simpleReadValueFromPointer\")) Module[\"simpleReadValueFromPointer\"] = (() => abort(\"'simpleReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"runDestructors\")) Module[\"runDestructors\"] = (() => abort(\"'runDestructors' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"new_\")) Module[\"new_\"] = (() => abort(\"'new_' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"craftInvokerFunction\")) Module[\"craftInvokerFunction\"] = (() => abort(\"'craftInvokerFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"embind__requireFunction\")) Module[\"embind__requireFunction\"] = (() => abort(\"'embind__requireFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"tupleRegistrations\")) Module[\"tupleRegistrations\"] = (() => abort(\"'tupleRegistrations' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"structRegistrations\")) Module[\"structRegistrations\"] = (() => abort(\"'structRegistrations' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"genericPointerToWireType\")) Module[\"genericPointerToWireType\"] = (() => abort(\"'genericPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"constNoSmartPtrRawPointerToWireType\")) Module[\"constNoSmartPtrRawPointerToWireType\"] = (() => abort(\"'constNoSmartPtrRawPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"nonConstNoSmartPtrRawPointerToWireType\")) Module[\"nonConstNoSmartPtrRawPointerToWireType\"] = (() => abort(\"'nonConstNoSmartPtrRawPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"init_RegisteredPointer\")) Module[\"init_RegisteredPointer\"] = (() => abort(\"'init_RegisteredPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredPointer\")) Module[\"RegisteredPointer\"] = (() => abort(\"'RegisteredPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredPointer_getPointee\")) Module[\"RegisteredPointer_getPointee\"] = (() => abort(\"'RegisteredPointer_getPointee' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredPointer_destructor\")) Module[\"RegisteredPointer_destructor\"] = (() => abort(\"'RegisteredPointer_destructor' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredPointer_deleteObject\")) Module[\"RegisteredPointer_deleteObject\"] = (() => abort(\"'RegisteredPointer_deleteObject' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredPointer_fromWireType\")) Module[\"RegisteredPointer_fromWireType\"] = (() => abort(\"'RegisteredPointer_fromWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"runDestructor\")) Module[\"runDestructor\"] = (() => abort(\"'runDestructor' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"releaseClassHandle\")) Module[\"releaseClassHandle\"] = (() => abort(\"'releaseClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"finalizationRegistry\")) Module[\"finalizationRegistry\"] = (() => abort(\"'finalizationRegistry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"detachFinalizer_deps\")) Module[\"detachFinalizer_deps\"] = (() => abort(\"'detachFinalizer_deps' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"detachFinalizer\")) Module[\"detachFinalizer\"] = (() => abort(\"'detachFinalizer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"attachFinalizer\")) Module[\"attachFinalizer\"] = (() => abort(\"'attachFinalizer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"makeClassHandle\")) Module[\"makeClassHandle\"] = (() => abort(\"'makeClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"init_ClassHandle\")) Module[\"init_ClassHandle\"] = (() => abort(\"'init_ClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle\")) Module[\"ClassHandle\"] = (() => abort(\"'ClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle_isAliasOf\")) Module[\"ClassHandle_isAliasOf\"] = (() => abort(\"'ClassHandle_isAliasOf' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"throwInstanceAlreadyDeleted\")) Module[\"throwInstanceAlreadyDeleted\"] = (() => abort(\"'throwInstanceAlreadyDeleted' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle_clone\")) Module[\"ClassHandle_clone\"] = (() => abort(\"'ClassHandle_clone' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle_delete\")) Module[\"ClassHandle_delete\"] = (() => abort(\"'ClassHandle_delete' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"deletionQueue\")) Module[\"deletionQueue\"] = (() => abort(\"'deletionQueue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle_isDeleted\")) Module[\"ClassHandle_isDeleted\"] = (() => abort(\"'ClassHandle_isDeleted' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ClassHandle_deleteLater\")) Module[\"ClassHandle_deleteLater\"] = (() => abort(\"'ClassHandle_deleteLater' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"flushPendingDeletes\")) Module[\"flushPendingDeletes\"] = (() => abort(\"'flushPendingDeletes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"delayFunction\")) Module[\"delayFunction\"] = (() => abort(\"'delayFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"setDelayFunction\")) Module[\"setDelayFunction\"] = (() => abort(\"'setDelayFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"RegisteredClass\")) Module[\"RegisteredClass\"] = (() => abort(\"'RegisteredClass' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"shallowCopyInternalPointer\")) Module[\"shallowCopyInternalPointer\"] = (() => abort(\"'shallowCopyInternalPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"downcastPointer\")) Module[\"downcastPointer\"] = (() => abort(\"'downcastPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"upcastPointer\")) Module[\"upcastPointer\"] = (() => abort(\"'upcastPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"validateThis\")) Module[\"validateThis\"] = (() => abort(\"'validateThis' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"char_0\")) Module[\"char_0\"] = (() => abort(\"'char_0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"char_9\")) Module[\"char_9\"] = (() => abort(\"'char_9' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"makeLegalFunctionName\")) Module[\"makeLegalFunctionName\"] = (() => abort(\"'makeLegalFunctionName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_handle_array\")) Module[\"emval_handle_array\"] = (() => abort(\"'emval_handle_array' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_free_list\")) Module[\"emval_free_list\"] = (() => abort(\"'emval_free_list' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_symbols\")) Module[\"emval_symbols\"] = (() => abort(\"'emval_symbols' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"init_emval\")) Module[\"init_emval\"] = (() => abort(\"'init_emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"count_emval_handles\")) Module[\"count_emval_handles\"] = (() => abort(\"'count_emval_handles' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"get_first_emval\")) Module[\"get_first_emval\"] = (() => abort(\"'get_first_emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"getStringOrSymbol\")) Module[\"getStringOrSymbol\"] = (() => abort(\"'getStringOrSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"Emval\")) Module[\"Emval\"] = (() => abort(\"'Emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_newers\")) Module[\"emval_newers\"] = (() => abort(\"'emval_newers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"craftEmvalAllocator\")) Module[\"craftEmvalAllocator\"] = (() => abort(\"'craftEmvalAllocator' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_get_global\")) Module[\"emval_get_global\"] = (() => abort(\"'emval_get_global' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_methodCallers\")) Module[\"emval_methodCallers\"] = (() => abort(\"'emval_methodCallers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"emval_registeredMethods\")) Module[\"emval_registeredMethods\"] = (() => abort(\"'emval_registeredMethods' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"warnOnce\")) Module[\"warnOnce\"] = (() => abort(\"'warnOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stackSave\")) Module[\"stackSave\"] = (() => abort(\"'stackSave' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stackRestore\")) Module[\"stackRestore\"] = (() => abort(\"'stackRestore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stackAlloc\")) Module[\"stackAlloc\"] = (() => abort(\"'stackAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"AsciiToString\")) Module[\"AsciiToString\"] = (() => abort(\"'AsciiToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToAscii\")) Module[\"stringToAscii\"] = (() => abort(\"'stringToAscii' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF16ToString\")) Module[\"UTF16ToString\"] = (() => abort(\"'UTF16ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF16\")) Module[\"stringToUTF16\"] = (() => abort(\"'stringToUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF16\")) Module[\"lengthBytesUTF16\"] = (() => abort(\"'lengthBytesUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF32ToString\")) Module[\"UTF32ToString\"] = (() => abort(\"'UTF32ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF32\")) Module[\"stringToUTF32\"] = (() => abort(\"'stringToUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF32\")) Module[\"lengthBytesUTF32\"] = (() => abort(\"'lengthBytesUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8\")) Module[\"allocateUTF8\"] = (() => abort(\"'allocateUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8OnStack\")) Module[\"allocateUTF8OnStack\"] = (() => abort(\"'allocateUTF8OnStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\"));\r\n\r\nModule[\"writeStackCookie\"] = writeStackCookie;\r\n\r\nModule[\"checkStackCookie\"] = checkStackCookie;\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_NORMAL\")) Object.defineProperty(Module, \"ALLOC_NORMAL\", {\r\n configurable: true,\r\n get: function() {\r\n  abort(\"'ALLOC_NORMAL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\");\r\n }\r\n});\r\n\r\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_STACK\")) Object.defineProperty(Module, \"ALLOC_STACK\", {\r\n configurable: true,\r\n get: function() {\r\n  abort(\"'ALLOC_STACK' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\");\r\n }\r\n});\r\n\r\nvar calledRun;\r\n\r\nfunction ExitStatus(status) {\r\n this.name = \"ExitStatus\";\r\n this.message = \"Program terminated with exit(\" + status + \")\";\r\n this.status = status;\r\n}\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n if (!calledRun) run();\r\n if (!calledRun) dependenciesFulfilled = runCaller;\r\n};\r\n\r\nfunction stackCheckInit() {\r\n _emscripten_stack_init();\r\n writeStackCookie();\r\n}\r\n\r\nfunction run(args) {\r\n args = args || arguments_;\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n stackCheckInit();\r\n preRun();\r\n if (runDependencies > 0) {\r\n  return;\r\n }\r\n function doRun() {\r\n  if (calledRun) return;\r\n  calledRun = true;\r\n  Module[\"calledRun\"] = true;\r\n  if (ABORT) return;\r\n  initRuntime();\r\n  readyPromiseResolve(Module);\r\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\r\n  assert(!Module[\"_main\"], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\r\n  postRun();\r\n }\r\n if (Module[\"setStatus\"]) {\r\n  Module[\"setStatus\"](\"Running...\");\r\n  setTimeout(function() {\r\n   setTimeout(function() {\r\n    Module[\"setStatus\"](\"\");\r\n   }, 1);\r\n   doRun();\r\n  }, 1);\r\n } else {\r\n  doRun();\r\n }\r\n checkStackCookie();\r\n}\r\n\r\nModule[\"run\"] = run;\r\n\r\nfunction procExit(code) {\r\n EXITSTATUS = code;\r\n if (!keepRuntimeAlive()) {\r\n  if (Module[\"onExit\"]) Module[\"onExit\"](code);\r\n  ABORT = true;\r\n }\r\n quit_(code, new ExitStatus(code));\r\n}\r\n\r\nif (Module[\"preInit\"]) {\r\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\r\n while (Module[\"preInit\"].length > 0) {\r\n  Module[\"preInit\"].pop()();\r\n }\r\n}\r\n\r\nrun();\r\n\r\n\r\n  return createMLSGenModule.ready\r\n}\r\n);\r\n})();\r\nif (true)\r\n  module.exports = createMLSGenModule;\r\nelse {}\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./dist/mlsGen.js?");

/***/ }),

/***/ "./node_modules/@firebase/database/dist/index.esm2017.js":
/*!***************************************************************!*\
  !*** ./node_modules/@firebase/database/dist/index.esm2017.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DataSnapshot\": function() { return /* binding */ DataSnapshot; },\n/* harmony export */   \"Database\": function() { return /* binding */ Database; },\n/* harmony export */   \"OnDisconnect\": function() { return /* binding */ OnDisconnect; },\n/* harmony export */   \"QueryConstraint\": function() { return /* binding */ QueryConstraint; },\n/* harmony export */   \"TransactionResult\": function() { return /* binding */ TransactionResult; },\n/* harmony export */   \"_QueryImpl\": function() { return /* binding */ QueryImpl; },\n/* harmony export */   \"_QueryParams\": function() { return /* binding */ QueryParams; },\n/* harmony export */   \"_ReferenceImpl\": function() { return /* binding */ ReferenceImpl; },\n/* harmony export */   \"_TEST_ACCESS_forceRestClient\": function() { return /* binding */ forceRestClient; },\n/* harmony export */   \"_TEST_ACCESS_hijackHash\": function() { return /* binding */ hijackHash; },\n/* harmony export */   \"_repoManagerDatabaseFromApp\": function() { return /* binding */ repoManagerDatabaseFromApp; },\n/* harmony export */   \"_setSDKVersion\": function() { return /* binding */ setSDKVersion; },\n/* harmony export */   \"_validatePathString\": function() { return /* binding */ validatePathString; },\n/* harmony export */   \"_validateWritablePath\": function() { return /* binding */ validateWritablePath; },\n/* harmony export */   \"child\": function() { return /* binding */ child; },\n/* harmony export */   \"connectDatabaseEmulator\": function() { return /* binding */ connectDatabaseEmulator; },\n/* harmony export */   \"enableLogging\": function() { return /* binding */ enableLogging; },\n/* harmony export */   \"endAt\": function() { return /* binding */ endAt; },\n/* harmony export */   \"endBefore\": function() { return /* binding */ endBefore; },\n/* harmony export */   \"equalTo\": function() { return /* binding */ equalTo; },\n/* harmony export */   \"forceLongPolling\": function() { return /* binding */ forceLongPolling; },\n/* harmony export */   \"forceWebSockets\": function() { return /* binding */ forceWebSockets; },\n/* harmony export */   \"get\": function() { return /* binding */ get; },\n/* harmony export */   \"getDatabase\": function() { return /* binding */ getDatabase; },\n/* harmony export */   \"goOffline\": function() { return /* binding */ goOffline; },\n/* harmony export */   \"goOnline\": function() { return /* binding */ goOnline; },\n/* harmony export */   \"increment\": function() { return /* binding */ increment; },\n/* harmony export */   \"limitToFirst\": function() { return /* binding */ limitToFirst; },\n/* harmony export */   \"limitToLast\": function() { return /* binding */ limitToLast; },\n/* harmony export */   \"off\": function() { return /* binding */ off; },\n/* harmony export */   \"onChildAdded\": function() { return /* binding */ onChildAdded; },\n/* harmony export */   \"onChildChanged\": function() { return /* binding */ onChildChanged; },\n/* harmony export */   \"onChildMoved\": function() { return /* binding */ onChildMoved; },\n/* harmony export */   \"onChildRemoved\": function() { return /* binding */ onChildRemoved; },\n/* harmony export */   \"onDisconnect\": function() { return /* binding */ onDisconnect; },\n/* harmony export */   \"onValue\": function() { return /* binding */ onValue; },\n/* harmony export */   \"orderByChild\": function() { return /* binding */ orderByChild; },\n/* harmony export */   \"orderByKey\": function() { return /* binding */ orderByKey; },\n/* harmony export */   \"orderByPriority\": function() { return /* binding */ orderByPriority; },\n/* harmony export */   \"orderByValue\": function() { return /* binding */ orderByValue; },\n/* harmony export */   \"push\": function() { return /* binding */ push; },\n/* harmony export */   \"query\": function() { return /* binding */ query; },\n/* harmony export */   \"ref\": function() { return /* binding */ ref; },\n/* harmony export */   \"refFromURL\": function() { return /* binding */ refFromURL; },\n/* harmony export */   \"remove\": function() { return /* binding */ remove; },\n/* harmony export */   \"runTransaction\": function() { return /* binding */ runTransaction; },\n/* harmony export */   \"serverTimestamp\": function() { return /* binding */ serverTimestamp; },\n/* harmony export */   \"set\": function() { return /* binding */ set; },\n/* harmony export */   \"setPriority\": function() { return /* binding */ setPriority; },\n/* harmony export */   \"setWithPriority\": function() { return /* binding */ setWithPriority; },\n/* harmony export */   \"startAfter\": function() { return /* binding */ startAfter; },\n/* harmony export */   \"startAt\": function() { return /* binding */ startAt; },\n/* harmony export */   \"update\": function() { return /* binding */ update; }\n/* harmony export */ });\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/esm/index.esm2017.js\");\n\n\n\n\n\nconst name = \"@firebase/database\";\nconst version = \"0.14.4\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.jsonEval)(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new _firebase_logger__WEBPACK_IMPORTED_MODULE_3__.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringToByteArray)(str);\r\n    const sha1 = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return _firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = _firebase_logger__WEBPACK_IMPORTED_MODULE_3__.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\r\n    if (typeof timeout === 'number' &&\r\n        // @ts-ignore Is only defined in Deno environments.\r\n        typeof Deno !== 'undefined' &&\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno['unrefTimer']) {\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno.unrefTimer(timeout);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    }\r\n    else if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false, isUsingEmulator = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.isUsingEmulator = isUsingEmulator;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof type === 'string', 'typeof type must == string');\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.deepCopy)(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64Encode)(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\r\n            this.myIFrame.doc.body.textContent = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        if (applicationId) {\r\n            urlParams[APPLICATION_ID_PARAM] = applicationId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            let options;\r\n            if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n            }\r\n            this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.jsonEval)(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    /**\r\n     * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\r\n     * TransportManager has already set up transports_\r\n     */\r\n    static get IS_TRANSPORT_INITIALIZED() {\r\n        return this.globalTransportInitialized_;\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n            TransportManager.globalTransportInitialized_ = true;\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Keeps track of whether the TransportManager has already chosen a transport to use\r\nTransportManager.globalTransportInitialized_ = false;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* RealtimeState.CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                const handshakePayload = Object.assign({}, payload);\r\n                if (this.repoInfo_.isUsingEmulator) {\r\n                    // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\r\n                    handshakePayload.h = this.repoInfo_.host;\r\n                }\r\n                this.onHandshake_(handshakePayload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* RealtimeState.CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* RealtimeState.CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* RealtimeState.DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isMobileCordova)()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent of (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringLength)(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringLength)(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringLength)(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(msg));\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!this.listens.get(pathString).has(queryId), `listen() called twice for same path/queryId.`);\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isAdmin)(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isValidFormat)(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isNodeSdk)()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isMobileCordova)()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isReactNative)()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assertionError)('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.map)(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(this.indexSet_, indexName);\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.map)(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* ChangeType.VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* ChangeType.CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* ChangeType.CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* ChangeType.CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* ChangeType.CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        const isWithinStart = this.startIsInclusive_\r\n            ? this.index_.compare(this.getStartPost(), node) <= 0\r\n            : this.index_.compare(this.getStartPost(), node) < 0;\r\n        const isWithinEnd = this.endIsInclusive_\r\n            ? this.index_.compare(node, this.getEndPost()) <= 0\r\n            : this.index_.compare(node, this.getEndPost()) < 0;\r\n        return isWithinStart && isWithinEnd;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.withinDirectionalStart = (node) => this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\r\n        this.withinDirectionalEnd = (node) => this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\r\n        this.withinStartPost = (node) => {\r\n            const compareRes = this.index_.compare(this.rangedFilter_.getStartPost(), node);\r\n            return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.withinEndPost = (node) => {\r\n            const compareRes = this.index_.compare(node, this.rangedFilter_.getEndPost());\r\n            return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    if (!this.withinDirectionalStart(next)) {\r\n                        // if we have not reached the start, skip to the next element\r\n                        continue;\r\n                    }\r\n                    else if (!this.withinDirectionalEnd(next)) {\r\n                        // if we have reached the end, stop adding elements\r\n                        break;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    const inRange = count < this.limit_ &&\r\n                        this.withinDirectionalStart(next) &&\r\n                        this.withinDirectionalEnd(next);\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false; // can only be true if startSet_ is true\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false; // can only be true if endSet_ is true\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.startAfterSet_ = this.startAfterSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.endBeforeSet_ = this.endBeforeSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* REST_QUERY_CONSTANTS.PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* REST_QUERY_CONSTANTS.VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* REST_QUERY_CONSTANTS.KEY_INDEX */;\r\n    }\r\n    else {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* REST_QUERY_CONSTANTS.ORDER_BY */] = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(orderBy);\r\n    if (queryParams.startSet_) {\r\n        const startParam = queryParams.startAfterSet_\r\n            ? \"startAfter\" /* REST_QUERY_CONSTANTS.START_AFTER */\r\n            : \"startAt\" /* REST_QUERY_CONSTANTS.START_AT */;\r\n        qs[startParam] = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[startParam] += ',' + (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        const endParam = queryParams.endBeforeSet_\r\n            ? \"endBefore\" /* REST_QUERY_CONSTANTS.END_BEFORE */\r\n            : \"endAt\" /* REST_QUERY_CONSTANTS.END_AT */;\r\n        qs[endParam] = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[endParam] += ',' + (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* REST_QUERY_CONSTANTS.LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* REST_QUERY_CONSTANTS.LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n        obj[\"sin\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE */] =\r\n            !queryParams.startAfterSet_;\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n        obj[\"ein\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE */] =\r\n            !queryParams.endBeforeSet_;\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* WIRE_PROTOCOL_CONSTANTS.LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* WIRE_PROTOCOL_CONSTANTS.INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.querystring)(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.jsonEval)(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* ChangeType.CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* ChangeType.CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* ChangeType.CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* ChangeType.CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* ChangeType.VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assertionError)('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assertionError)('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(type === \"child_added\" /* ChangeType.CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* ChangeType.CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* ChangeType.CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* ChangeType.CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assertionError)('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assertionError)('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === null;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\r\n *  deduping needs to take place. This flag allows toggling of that behavior\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError, skipListenerDedup = false) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        if (!skipListenerDedup) {\r\n            /**\r\n             * We may have just removed one of many listeners and can short-circuit this whole process\r\n             * We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n             * properly set up.\r\n             */\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            const removingDefault = -1 !==\r\n                removed.findIndex(query => {\r\n                    return query._queryParams.loadsAllData();\r\n                });\r\n            const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n            if (removingDefault && !covered) {\r\n                const subtree = syncTree.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (let i = 0; i < newViews.length; ++i) {\r\n                        const view = newViews[i], newQuery = view.query;\r\n                        const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                        syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                // Otherwise there's nothing below us, so nothing we need to start listening on\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    const defaultTag = null;\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach((queryToRemove) => {\r\n                        const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration, skipSetupListener = false) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringLength)(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.errorPrefix)(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.map)(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.map)(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will wait until the\r\n *  repo has established a connection and then request the value for `query`.\r\n * If the client is not able to retrieve the query result for another reason,\r\n * it reports an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query, eventRegistration) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        /**\r\n         * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\r\n         * Add an event registration,\r\n         * Update data at the path,\r\n         * Raise any events,\r\n         * Cleanup the SyncTree\r\n         */\r\n        syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration, true);\r\n        let events;\r\n        if (query._queryParams.loadsAllData()) {\r\n            events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        }\r\n        else {\r\n            const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, query._path, node, tag);\r\n        }\r\n        /*\r\n         * We need to raise events in the scenario where `get()` is called at a parent path, and\r\n         * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\r\n         * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\r\n         * and its corresponding serverCache, including the child location where `onValue` is called. Then,\r\n         * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\r\n         * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\r\n         * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\r\n         * ensure the corresponding child events will get fired.\r\n         */\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n        syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration, null, true);\r\n        return node;\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* TransactionStatus.RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.safeGet)(newVal, '.priority');\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* TransactionStatus.RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(txn.status === 0 /* TransactionStatus.RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* TransactionStatus.SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* TransactionStatus.RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* TransactionStatus.RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* TransactionStatus.NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* TransactionStatus.RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.contains)(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* TransactionStatus.COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* TransactionStatus.SENT */) {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* TransactionStatus.SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(queue[i].status === 0 /* TransactionStatus.RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.stringify)(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\r\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thennablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(query);\r\n    const callbackContext = new CallbackContext(() => { });\r\n    const container = new ValueEventRegistration(callbackContext);\r\n    return repoGetValue(query._repo, query, container).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.assert)(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\r\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\r\n * the respective `on*` callbacks.\r\n *\r\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value less than or equal\r\n * to the specified value and a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams, \r\n    /*isUsingEmulator=*/ true);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\nfunction checkTransportInit() {\r\n    if (TransportManager.IS_TRANSPORT_INITIALIZED) {\r\n        warn('Transport has already been initialized. Please call this function before calling ref or setting up a listener');\r\n    }\r\n}\r\n/**\r\n * Force the use of websockets instead of longPolling.\r\n */\r\nfunction forceWebSockets() {\r\n    checkTransportInit();\r\n    BrowserPollConnection.forceDisallow();\r\n}\r\n/**\r\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\r\n */\r\nfunction forceLongPolling() {\r\n    checkTransportInit();\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = (0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)(), url) {\r\n    const db = (0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__._getProvider)(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n    if (!db._instanceStarted) {\r\n        const emulator = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getDefaultEmulatorHostnameAndPort)('database');\r\n        if (emulator) {\r\n            connectDatabaseEmulator(db, ...emulator);\r\n        }\r\n    }\r\n    return db;\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.createMockUserToken)(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(_firebase_app__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION);\r\n    (0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__._registerComponent)(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    (0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    (0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getModularInstance)(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\n\n//# sourceMappingURL=index.esm2017.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/@firebase/database/dist/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.esm2017.js":
/*!***********************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.esm2017.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSTANTS\": function() { return /* binding */ CONSTANTS; },\n/* harmony export */   \"DecodeBase64StringError\": function() { return /* binding */ DecodeBase64StringError; },\n/* harmony export */   \"Deferred\": function() { return /* binding */ Deferred; },\n/* harmony export */   \"ErrorFactory\": function() { return /* binding */ ErrorFactory; },\n/* harmony export */   \"FirebaseError\": function() { return /* binding */ FirebaseError; },\n/* harmony export */   \"MAX_VALUE_MILLIS\": function() { return /* binding */ MAX_VALUE_MILLIS; },\n/* harmony export */   \"RANDOM_FACTOR\": function() { return /* binding */ RANDOM_FACTOR; },\n/* harmony export */   \"Sha1\": function() { return /* binding */ Sha1; },\n/* harmony export */   \"areCookiesEnabled\": function() { return /* binding */ areCookiesEnabled; },\n/* harmony export */   \"assert\": function() { return /* binding */ assert; },\n/* harmony export */   \"assertionError\": function() { return /* binding */ assertionError; },\n/* harmony export */   \"async\": function() { return /* binding */ async; },\n/* harmony export */   \"base64\": function() { return /* binding */ base64; },\n/* harmony export */   \"base64Decode\": function() { return /* binding */ base64Decode; },\n/* harmony export */   \"base64Encode\": function() { return /* binding */ base64Encode; },\n/* harmony export */   \"base64urlEncodeWithoutPadding\": function() { return /* binding */ base64urlEncodeWithoutPadding; },\n/* harmony export */   \"calculateBackoffMillis\": function() { return /* binding */ calculateBackoffMillis; },\n/* harmony export */   \"contains\": function() { return /* binding */ contains; },\n/* harmony export */   \"createMockUserToken\": function() { return /* binding */ createMockUserToken; },\n/* harmony export */   \"createSubscribe\": function() { return /* binding */ createSubscribe; },\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"deepCopy\": function() { return /* binding */ deepCopy; },\n/* harmony export */   \"deepEqual\": function() { return /* binding */ deepEqual; },\n/* harmony export */   \"deepExtend\": function() { return /* binding */ deepExtend; },\n/* harmony export */   \"errorPrefix\": function() { return /* binding */ errorPrefix; },\n/* harmony export */   \"extractQuerystring\": function() { return /* binding */ extractQuerystring; },\n/* harmony export */   \"getDefaultAppConfig\": function() { return /* binding */ getDefaultAppConfig; },\n/* harmony export */   \"getDefaultEmulatorHost\": function() { return /* binding */ getDefaultEmulatorHost; },\n/* harmony export */   \"getDefaultEmulatorHostnameAndPort\": function() { return /* binding */ getDefaultEmulatorHostnameAndPort; },\n/* harmony export */   \"getDefaults\": function() { return /* binding */ getDefaults; },\n/* harmony export */   \"getExperimentalSetting\": function() { return /* binding */ getExperimentalSetting; },\n/* harmony export */   \"getGlobal\": function() { return /* binding */ getGlobal; },\n/* harmony export */   \"getModularInstance\": function() { return /* binding */ getModularInstance; },\n/* harmony export */   \"getUA\": function() { return /* binding */ getUA; },\n/* harmony export */   \"isAdmin\": function() { return /* binding */ isAdmin; },\n/* harmony export */   \"isBrowser\": function() { return /* binding */ isBrowser; },\n/* harmony export */   \"isBrowserExtension\": function() { return /* binding */ isBrowserExtension; },\n/* harmony export */   \"isElectron\": function() { return /* binding */ isElectron; },\n/* harmony export */   \"isEmpty\": function() { return /* binding */ isEmpty; },\n/* harmony export */   \"isIE\": function() { return /* binding */ isIE; },\n/* harmony export */   \"isIndexedDBAvailable\": function() { return /* binding */ isIndexedDBAvailable; },\n/* harmony export */   \"isMobileCordova\": function() { return /* binding */ isMobileCordova; },\n/* harmony export */   \"isNode\": function() { return /* binding */ isNode; },\n/* harmony export */   \"isNodeSdk\": function() { return /* binding */ isNodeSdk; },\n/* harmony export */   \"isReactNative\": function() { return /* binding */ isReactNative; },\n/* harmony export */   \"isSafari\": function() { return /* binding */ isSafari; },\n/* harmony export */   \"isUWP\": function() { return /* binding */ isUWP; },\n/* harmony export */   \"isValidFormat\": function() { return /* binding */ isValidFormat; },\n/* harmony export */   \"isValidTimestamp\": function() { return /* binding */ isValidTimestamp; },\n/* harmony export */   \"issuedAtTime\": function() { return /* binding */ issuedAtTime; },\n/* harmony export */   \"jsonEval\": function() { return /* binding */ jsonEval; },\n/* harmony export */   \"map\": function() { return /* binding */ map; },\n/* harmony export */   \"ordinal\": function() { return /* binding */ ordinal; },\n/* harmony export */   \"promiseWithTimeout\": function() { return /* binding */ promiseWithTimeout; },\n/* harmony export */   \"querystring\": function() { return /* binding */ querystring; },\n/* harmony export */   \"querystringDecode\": function() { return /* binding */ querystringDecode; },\n/* harmony export */   \"safeGet\": function() { return /* binding */ safeGet; },\n/* harmony export */   \"stringLength\": function() { return /* binding */ stringLength; },\n/* harmony export */   \"stringToByteArray\": function() { return /* binding */ stringToByteArray; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; },\n/* harmony export */   \"uuidv4\": function() { return /* binding */ uuidv4; },\n/* harmony export */   \"validateArgCount\": function() { return /* binding */ validateArgCount; },\n/* harmony export */   \"validateCallback\": function() { return /* binding */ validateCallback; },\n/* harmony export */   \"validateContextObject\": function() { return /* binding */ validateContextObject; },\n/* harmony export */   \"validateIndexedDBOpenable\": function() { return /* binding */ validateIndexedDBOpenable; },\n/* harmony export */   \"validateNamespace\": function() { return /* binding */ validateNamespace; }\n/* harmony export */ });\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof __webpack_require__.g !== 'undefined') {\r\n        return __webpack_require__.g;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(__webpack_require__.g.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\n\n//# sourceMappingURL=index.esm2017.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/@firebase/util/dist/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ \"./node_modules/axios/lib/defaults/transitional.js\");\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\nvar CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\nvar parseProtocol = __webpack_require__(/*! ../helpers/parseProtocol */ \"./node_modules/axios/lib/helpers/parseProtocol.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = __webpack_require__(/*! ./cancel/CanceledError */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\naxios.VERSION = (__webpack_require__(/*! ./env/data */ \"./node_modules/axios/lib/env/data.js\").version);\naxios.toFormData = __webpack_require__(/*! ./helpers/toFormData */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\n// Expose AxiosError class\naxios.AxiosError = __webpack_require__(/*! ../lib/core/AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar CanceledError = __webpack_require__(/*! ./CanceledError */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/cancel/CanceledError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar buildFullPath = __webpack_require__(/*! ./buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/AxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults/index.js\");\nvar CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar AxiosError = __webpack_require__(/*! ./AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ../helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\nvar transitionalDefaults = __webpack_require__(/*! ./transitional */ \"./node_modules/axios/lib/defaults/transitional.js\");\nvar toFormData = __webpack_require__(/*! ../helpers/toFormData */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ../adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ../adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: __webpack_require__(/*! ./env/FormData */ \"./node_modules/axios/lib/helpers/null.js\")\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/defaults/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/defaults/transitional.js?");

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ (function(module) {

eval("module.exports = {\n  \"version\": \"0.27.2\"\n};\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/env/data.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ (function(module) {

eval("// eslint-disable-next-line strict\nmodule.exports = null;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/null.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/parseProtocol.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/toFormData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar VERSION = (__webpack_require__(/*! ../env/data */ \"./node_modules/axios/lib/env/data.js\").version);\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/helpers/validator.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/dijkstrajs/dijkstra.js":
/*!*********************************************!*\
  !*** ./node_modules/dijkstrajs/dijkstra.js ***!
  \*********************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (true) {\n  module.exports = dijkstra;\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/dijkstrajs/dijkstra.js?");

/***/ }),

/***/ "./node_modules/encode-utf8/index.js":
/*!*******************************************!*\
  !*** ./node_modules/encode-utf8/index.js ***!
  \*******************************************/
/***/ (function(module) {

"use strict";
eval("\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/encode-utf8/index.js?");

/***/ }),

/***/ "./node_modules/peerjs/dist/peerjs.min.js":
/*!************************************************!*\
  !*** ./node_modules/peerjs/dist/peerjs.min.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("parcelRequire=function(e,r,t,n){var i,o=\"function\"==typeof parcelRequire&&parcelRequire,u=undefined;function f(t,n){if(!r[t]){if(!e[t]){var i=\"function\"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if( true&&\"string\"==typeof t)return __webpack_require__(\"./node_modules/peerjs/dist sync recursive\")(t);var c=new Error(\"Cannot find module '\"+t+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]); true?module.exports=l:0}if(parcelRequire=f,i)throw i;return f}({\"EgBh\":[function(require,module,exports) {\nvar e={};e.useBlobBuilder=function(){try{return new Blob([]),!1}catch(e){return!0}}(),e.useArrayBufferView=!e.useBlobBuilder&&function(){try{return 0===new Blob([new Uint8Array([])]).size}catch(e){return!0}}(),module.exports.binaryFeatures=e;var r=module.exports.BlobBuilder;function t(){this._pieces=[],this._parts=[]}\"undefined\"!=typeof window&&(r=module.exports.BlobBuilder=window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder||window.BlobBuilder),t.prototype.append=function(e){\"number\"==typeof e?this._pieces.push(e):(this.flush(),this._parts.push(e))},t.prototype.flush=function(){if(this._pieces.length>0){var r=new Uint8Array(this._pieces);e.useArrayBufferView||(r=r.buffer),this._parts.push(r),this._pieces=[]}},t.prototype.getBuffer=function(){if(this.flush(),e.useBlobBuilder){for(var t=new r,i=0,u=this._parts.length;i<u;i++)t.append(this._parts[i]);return t.getBlob()}return new Blob(this._parts)},module.exports.BufferBuilder=t;\n},{}],\"kdPp\":[function(require,module,exports) {\nvar t=require(\"./bufferbuilder\").BufferBuilder,e=require(\"./bufferbuilder\").binaryFeatures,i={unpack:function(t){return new r(t).unpack()},pack:function(t){var e=new n;return e.pack(t),e.getBuffer()}};function r(t){this.index=0,this.dataBuffer=t,this.dataView=new Uint8Array(this.dataBuffer),this.length=this.dataBuffer.byteLength}function n(){this.bufferBuilder=new t}function u(t){var e=t.charCodeAt(0);return e<=2047?\"00\":e<=65535?\"000\":e<=2097151?\"0000\":e<=67108863?\"00000\":\"000000\"}function a(t){return t.length>600?new Blob([t]).size:t.replace(/[^\\u0000-\\u007F]/g,u).length}module.exports=i,r.prototype.unpack=function(){var t,e=this.unpack_uint8();if(e<128)return e;if((224^e)<32)return(224^e)-32;if((t=160^e)<=15)return this.unpack_raw(t);if((t=176^e)<=15)return this.unpack_string(t);if((t=144^e)<=15)return this.unpack_array(t);if((t=128^e)<=15)return this.unpack_map(t);switch(e){case 192:return null;case 193:return;case 194:return!1;case 195:return!0;case 202:return this.unpack_float();case 203:return this.unpack_double();case 204:return this.unpack_uint8();case 205:return this.unpack_uint16();case 206:return this.unpack_uint32();case 207:return this.unpack_uint64();case 208:return this.unpack_int8();case 209:return this.unpack_int16();case 210:return this.unpack_int32();case 211:return this.unpack_int64();case 212:case 213:case 214:case 215:return;case 216:return t=this.unpack_uint16(),this.unpack_string(t);case 217:return t=this.unpack_uint32(),this.unpack_string(t);case 218:return t=this.unpack_uint16(),this.unpack_raw(t);case 219:return t=this.unpack_uint32(),this.unpack_raw(t);case 220:return t=this.unpack_uint16(),this.unpack_array(t);case 221:return t=this.unpack_uint32(),this.unpack_array(t);case 222:return t=this.unpack_uint16(),this.unpack_map(t);case 223:return t=this.unpack_uint32(),this.unpack_map(t)}},r.prototype.unpack_uint8=function(){var t=255&this.dataView[this.index];return this.index++,t},r.prototype.unpack_uint16=function(){var t=this.read(2),e=256*(255&t[0])+(255&t[1]);return this.index+=2,e},r.prototype.unpack_uint32=function(){var t=this.read(4),e=256*(256*(256*t[0]+t[1])+t[2])+t[3];return this.index+=4,e},r.prototype.unpack_uint64=function(){var t=this.read(8),e=256*(256*(256*(256*(256*(256*(256*t[0]+t[1])+t[2])+t[3])+t[4])+t[5])+t[6])+t[7];return this.index+=8,e},r.prototype.unpack_int8=function(){var t=this.unpack_uint8();return t<128?t:t-256},r.prototype.unpack_int16=function(){var t=this.unpack_uint16();return t<32768?t:t-65536},r.prototype.unpack_int32=function(){var t=this.unpack_uint32();return t<Math.pow(2,31)?t:t-Math.pow(2,32)},r.prototype.unpack_int64=function(){var t=this.unpack_uint64();return t<Math.pow(2,63)?t:t-Math.pow(2,64)},r.prototype.unpack_raw=function(t){if(this.length<this.index+t)throw new Error(\"BinaryPackFailure: index is out of range \"+this.index+\" \"+t+\" \"+this.length);var e=this.dataBuffer.slice(this.index,this.index+t);return this.index+=t,e},r.prototype.unpack_string=function(t){for(var e,i,r=this.read(t),n=0,u=\"\";n<t;)(e=r[n])<128?(u+=String.fromCharCode(e),n++):(192^e)<32?(i=(192^e)<<6|63&r[n+1],u+=String.fromCharCode(i),n+=2):(i=(15&e)<<12|(63&r[n+1])<<6|63&r[n+2],u+=String.fromCharCode(i),n+=3);return this.index+=t,u},r.prototype.unpack_array=function(t){for(var e=new Array(t),i=0;i<t;i++)e[i]=this.unpack();return e},r.prototype.unpack_map=function(t){for(var e={},i=0;i<t;i++){var r=this.unpack(),n=this.unpack();e[r]=n}return e},r.prototype.unpack_float=function(){var t=this.unpack_uint32(),e=(t>>23&255)-127;return(0===t>>31?1:-1)*(8388607&t|8388608)*Math.pow(2,e-23)},r.prototype.unpack_double=function(){var t=this.unpack_uint32(),e=this.unpack_uint32(),i=(t>>20&2047)-1023;return(0===t>>31?1:-1)*((1048575&t|1048576)*Math.pow(2,i-20)+e*Math.pow(2,i-52))},r.prototype.read=function(t){var e=this.index;if(e+t<=this.length)return this.dataView.subarray(e,e+t);throw new Error(\"BinaryPackFailure: read index out of range\")},n.prototype.getBuffer=function(){return this.bufferBuilder.getBuffer()},n.prototype.pack=function(t){var i=typeof t;if(\"string\"===i)this.pack_string(t);else if(\"number\"===i)Math.floor(t)===t?this.pack_integer(t):this.pack_double(t);else if(\"boolean\"===i)!0===t?this.bufferBuilder.append(195):!1===t&&this.bufferBuilder.append(194);else if(\"undefined\"===i)this.bufferBuilder.append(192);else{if(\"object\"!==i)throw new Error('Type \"'+i+'\" not yet supported');if(null===t)this.bufferBuilder.append(192);else{var r=t.constructor;if(r==Array)this.pack_array(t);else if(r==Blob||r==File||t instanceof Blob||t instanceof File)this.pack_bin(t);else if(r==ArrayBuffer)e.useArrayBufferView?this.pack_bin(new Uint8Array(t)):this.pack_bin(t);else if(\"BYTES_PER_ELEMENT\"in t)e.useArrayBufferView?this.pack_bin(new Uint8Array(t.buffer)):this.pack_bin(t.buffer);else if(r==Object||r.toString().startsWith(\"class\"))this.pack_object(t);else if(r==Date)this.pack_string(t.toString());else{if(\"function\"!=typeof t.toBinaryPack)throw new Error('Type \"'+r.toString()+'\" not yet supported');this.bufferBuilder.append(t.toBinaryPack())}}}this.bufferBuilder.flush()},n.prototype.pack_bin=function(t){var e=t.length||t.byteLength||t.size;if(e<=15)this.pack_uint8(160+e);else if(e<=65535)this.bufferBuilder.append(218),this.pack_uint16(e);else{if(!(e<=4294967295))throw new Error(\"Invalid length\");this.bufferBuilder.append(219),this.pack_uint32(e)}this.bufferBuilder.append(t)},n.prototype.pack_string=function(t){var e=a(t);if(e<=15)this.pack_uint8(176+e);else if(e<=65535)this.bufferBuilder.append(216),this.pack_uint16(e);else{if(!(e<=4294967295))throw new Error(\"Invalid length\");this.bufferBuilder.append(217),this.pack_uint32(e)}this.bufferBuilder.append(t)},n.prototype.pack_array=function(t){var e=t.length;if(e<=15)this.pack_uint8(144+e);else if(e<=65535)this.bufferBuilder.append(220),this.pack_uint16(e);else{if(!(e<=4294967295))throw new Error(\"Invalid length\");this.bufferBuilder.append(221),this.pack_uint32(e)}for(var i=0;i<e;i++)this.pack(t[i])},n.prototype.pack_integer=function(t){if(t>=-32&&t<=127)this.bufferBuilder.append(255&t);else if(t>=0&&t<=255)this.bufferBuilder.append(204),this.pack_uint8(t);else if(t>=-128&&t<=127)this.bufferBuilder.append(208),this.pack_int8(t);else if(t>=0&&t<=65535)this.bufferBuilder.append(205),this.pack_uint16(t);else if(t>=-32768&&t<=32767)this.bufferBuilder.append(209),this.pack_int16(t);else if(t>=0&&t<=4294967295)this.bufferBuilder.append(206),this.pack_uint32(t);else if(t>=-2147483648&&t<=2147483647)this.bufferBuilder.append(210),this.pack_int32(t);else if(t>=-0x8000000000000000&&t<=0x8000000000000000)this.bufferBuilder.append(211),this.pack_int64(t);else{if(!(t>=0&&t<=0x10000000000000000))throw new Error(\"Invalid integer\");this.bufferBuilder.append(207),this.pack_uint64(t)}},n.prototype.pack_double=function(t){var e=0;t<0&&(e=1,t=-t);var i=Math.floor(Math.log(t)/Math.LN2),r=t/Math.pow(2,i)-1,n=Math.floor(r*Math.pow(2,52)),u=Math.pow(2,32),a=e<<31|i+1023<<20|n/u&1048575,p=n%u;this.bufferBuilder.append(203),this.pack_int32(a),this.pack_int32(p)},n.prototype.pack_object=function(t){var e=Object.keys(t).length;if(e<=15)this.pack_uint8(128+e);else if(e<=65535)this.bufferBuilder.append(222),this.pack_uint16(e);else{if(!(e<=4294967295))throw new Error(\"Invalid length\");this.bufferBuilder.append(223),this.pack_uint32(e)}for(var i in t)t.hasOwnProperty(i)&&(this.pack(i),this.pack(t[i]))},n.prototype.pack_uint8=function(t){this.bufferBuilder.append(t)},n.prototype.pack_uint16=function(t){this.bufferBuilder.append(t>>8),this.bufferBuilder.append(255&t)},n.prototype.pack_uint32=function(t){var e=4294967295&t;this.bufferBuilder.append((4278190080&e)>>>24),this.bufferBuilder.append((16711680&e)>>>16),this.bufferBuilder.append((65280&e)>>>8),this.bufferBuilder.append(255&e)},n.prototype.pack_uint64=function(t){var e=t/Math.pow(2,32),i=t%Math.pow(2,32);this.bufferBuilder.append((4278190080&e)>>>24),this.bufferBuilder.append((16711680&e)>>>16),this.bufferBuilder.append((65280&e)>>>8),this.bufferBuilder.append(255&e),this.bufferBuilder.append((4278190080&i)>>>24),this.bufferBuilder.append((16711680&i)>>>16),this.bufferBuilder.append((65280&i)>>>8),this.bufferBuilder.append(255&i)},n.prototype.pack_int8=function(t){this.bufferBuilder.append(255&t)},n.prototype.pack_int16=function(t){this.bufferBuilder.append((65280&t)>>8),this.bufferBuilder.append(255&t)},n.prototype.pack_int32=function(t){this.bufferBuilder.append(t>>>24&255),this.bufferBuilder.append((16711680&t)>>>16),this.bufferBuilder.append((65280&t)>>>8),this.bufferBuilder.append(255&t)},n.prototype.pack_int64=function(t){var e=Math.floor(t/Math.pow(2,32)),i=t%Math.pow(2,32);this.bufferBuilder.append((4278190080&e)>>>24),this.bufferBuilder.append((16711680&e)>>>16),this.bufferBuilder.append((65280&e)>>>8),this.bufferBuilder.append(255&e),this.bufferBuilder.append((4278190080&i)>>>24),this.bufferBuilder.append((16711680&i)>>>16),this.bufferBuilder.append((65280&i)>>>8),this.bufferBuilder.append(255&i)};\n},{\"./bufferbuilder\":\"EgBh\"}],\"iSxC\":[function(require,module,exports) {\n\"use strict\";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function t(e){return(t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.extractVersion=o,exports.wrapPeerConnectionEvent=i,exports.disableLog=s,exports.disableWarnings=a,exports.log=p,exports.deprecated=u,exports.detectBrowser=c,exports.compactObject=f,exports.walkStats=l,exports.filterStats=v;var n=!0,r=!0;function o(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)}function i(e,t,n){if(e.RTCPeerConnection){var r=e.RTCPeerConnection.prototype,o=r.addEventListener;r.addEventListener=function(e,r){if(e!==t)return o.apply(this,arguments);var i=function(e){var t=n(e);t&&(r.handleEvent?r.handleEvent(t):r(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(r,i),o.apply(this,[e,i])};var i=r.removeEventListener;r.removeEventListener=function(e,n){if(e!==t||!this._eventMap||!this._eventMap[t])return i.apply(this,arguments);if(!this._eventMap[t].has(n))return i.apply(this,arguments);var r=this._eventMap[t].get(n);return this._eventMap[t].delete(n),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,i.apply(this,[e,r])},Object.defineProperty(r,\"on\"+t,{get:function(){return this[\"_on\"+t]},set:function(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}}function s(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+t(e)+\". Please use a boolean.\"):(n=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")}function a(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+t(e)+\". Please use a boolean.\"):(r=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))}function p(){if(\"object\"===(\"undefined\"==typeof window?\"undefined\":t(window))){if(n)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}}function u(e,t){r&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")}function c(e){var t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser=\"Not a browser.\",t;var{navigator:n}=e;if(n.mozGetUserMedia)t.browser=\"firefox\",t.version=o(n.userAgent,/Firefox\\/(\\d+)\\./,1);else if(n.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection&&!e.RTCIceGatherer)t.browser=\"chrome\",t.version=o(n.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else if(n.mediaDevices&&n.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))t.browser=\"edge\",t.version=o(n.userAgent,/Edge\\/(\\d+).(\\d+)$/,2);else{if(!e.RTCPeerConnection||!n.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return t.browser=\"Not a supported browser.\",t;t.browser=\"safari\",t.version=o(n.userAgent,/AppleWebKit\\/(\\d+)\\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&\"currentDirection\"in e.RTCRtpTransceiver.prototype}return t}function d(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function f(t){return d(t)?Object.keys(t).reduce(function(n,r){var o=d(t[r]),i=o?f(t[r]):t[r],s=o&&!Object.keys(i).length;return void 0===i||s?n:Object.assign(n,e({},r,i))},{}):t}function l(e,t,n){t&&!n.has(t.id)&&(n.set(t.id,t),Object.keys(t).forEach(function(r){r.endsWith(\"Id\")?l(e,e.get(t[r]),n):r.endsWith(\"Ids\")&&t[r].forEach(function(t){l(e,e.get(t),n)})}))}function v(e,t,n){var r=n?\"outbound-rtp\":\"inbound-rtp\",o=new Map;if(null===t)return o;var i=[];return e.forEach(function(e){\"track\"===e.type&&e.trackIdentifier===t.id&&i.push(e)}),i.forEach(function(t){e.forEach(function(n){n.type===r&&n.trackId===t.id&&l(e,n,o)})}),o}\n},{}],\"s6SN\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetUserMedia=i;var e=t(require(\"../utils.js\"));function r(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}function t(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var o={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=n?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(o,i,a):o[i]=e[i]}return o.default=e,t&&t.set(e,o),o}function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=e.log;function i(e,r){var t=e&&e.navigator;if(t.mediaDevices){var i=function(e){if(\"object\"!==o(e)||e.mandatory||e.optional)return e;var r={};return Object.keys(e).forEach(function(t){if(\"require\"!==t&&\"advanced\"!==t&&\"mediaSource\"!==t){var n=\"object\"===o(e[t])?e[t]:{ideal:e[t]};void 0!==n.exact&&\"number\"==typeof n.exact&&(n.min=n.max=n.exact);var i=function(e,r){return e?e+r.charAt(0).toUpperCase()+r.slice(1):\"deviceId\"===r?\"sourceId\":r};if(void 0!==n.ideal){r.optional=r.optional||[];var a={};\"number\"==typeof n.ideal?(a[i(\"min\",t)]=n.ideal,r.optional.push(a),(a={})[i(\"max\",t)]=n.ideal,r.optional.push(a)):(a[i(\"\",t)]=n.ideal,r.optional.push(a))}void 0!==n.exact&&\"number\"!=typeof n.exact?(r.mandatory=r.mandatory||{},r.mandatory[i(\"\",t)]=n.exact):[\"min\",\"max\"].forEach(function(e){void 0!==n[e]&&(r.mandatory=r.mandatory||{},r.mandatory[i(e,t)]=n[e])})}}),e.advanced&&(r.optional=(r.optional||[]).concat(e.advanced)),r},a=function(e,a){if(r.version>=61)return a(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"===o(e.audio)){var c=function(e,r,t){r in e&&!(t in e)&&(e[t]=e[r],delete e[r])};c((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),c(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=i(e.audio)}if(e&&\"object\"===o(e.video)){var d=e.video.facingMode;d=d&&(\"object\"===o(d)?d:{ideal:d});var u,s=r.version<66;if(d&&(\"user\"===d.exact||\"environment\"===d.exact||\"user\"===d.ideal||\"environment\"===d.ideal)&&(!t.mediaDevices.getSupportedConstraints||!t.mediaDevices.getSupportedConstraints().facingMode||s))if(delete e.video.facingMode,\"environment\"===d.exact||\"environment\"===d.ideal?u=[\"back\",\"rear\"]:\"user\"!==d.exact&&\"user\"!==d.ideal||(u=[\"front\"]),u)return t.mediaDevices.enumerateDevices().then(function(r){var t=(r=r.filter(function(e){return\"videoinput\"===e.kind})).find(function(e){return u.some(function(r){return e.label.toLowerCase().includes(r)})});return!t&&r.length&&u.includes(\"back\")&&(t=r[r.length-1]),t&&(e.video.deviceId=d.exact?{exact:t.deviceId}:{ideal:t.deviceId}),e.video=i(e.video),n(\"chrome: \"+JSON.stringify(e)),a(e)});e.video=i(e.video)}return n(\"chrome: \"+JSON.stringify(e)),a(e)},c=function(e){return r.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString:function(){return this.name+(this.message&&\": \")+this.message}}};if(t.getUserMedia=function(e,r,o){a(e,function(e){t.webkitGetUserMedia(e,r,function(e){o&&o(c(e))})})}.bind(t),t.mediaDevices.getUserMedia){var d=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return a(e,function(e){return d(e).then(function(r){if(e.audio&&!r.getAudioTracks().length||e.video&&!r.getVideoTracks().length)throw r.getTracks().forEach(function(e){e.stop()}),new DOMException(\"\",\"NotFoundError\");return r},function(e){return Promise.reject(c(e))})})}}}}\n},{\"../utils.js\":\"iSxC\"}],\"VHa8\":[function(require,module,exports) {\n\"use strict\";function e(e,i){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(\"function\"==typeof i?e.navigator.mediaDevices.getDisplayMedia=function(a){return i(a).then(function(i){var t=a.video&&a.video.width,o=a.video&&a.video.height,d=a.video&&a.video.frameRate;return a.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:i,maxFrameRate:d||3}},t&&(a.video.mandatory.maxWidth=t),o&&(a.video.mandatory.maxHeight=o),e.navigator.mediaDevices.getUserMedia(a)})}:console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"))}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetDisplayMedia=e;\n},{}],\"uI5X\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimMediaStream=a,exports.shimOnTrack=c,exports.shimGetSendersWithDtmf=p,exports.shimGetStats=d,exports.shimSenderReceiverGetStats=h,exports.shimAddTrackRemoveTrackWithNative=f,exports.shimAddTrackRemoveTrack=m,exports.shimPeerConnection=u,exports.fixNegotiationNeeded=l,Object.defineProperty(exports,\"shimGetUserMedia\",{enumerable:!0,get:function(){return t.shimGetUserMedia}}),Object.defineProperty(exports,\"shimGetDisplayMedia\",{enumerable:!0,get:function(){return r.shimGetDisplayMedia}});var e=i(require(\"../utils.js\")),t=require(\"./getusermedia\"),r=require(\"./getdisplaymedia\");function n(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return n=function(){return e},e}function i(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=n();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var s=i?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(r,o,s):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function c(t){if(\"object\"!==s(t)||!t.RTCPeerConnection||\"ontrack\"in t.RTCPeerConnection.prototype)e.wrapPeerConnectionEvent(t,\"track\",function(e){return e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e});else{Object.defineProperty(t.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});var r=t.RTCPeerConnection.prototype.setRemoteDescription;t.RTCPeerConnection.prototype.setRemoteDescription=function(){var e=this;return this._ontrackpoly||(this._ontrackpoly=function(r){r.stream.addEventListener(\"addtrack\",function(n){var i;i=t.RTCPeerConnection.prototype.getReceivers?e.getReceivers().find(function(e){return e.track&&e.track.id===n.track.id}):{track:n.track};var o=new Event(\"track\");o.track=n.track,o.receiver=i,o.transceiver={receiver:i},o.streams=[r.stream],e.dispatchEvent(o)}),r.stream.getTracks().forEach(function(n){var i;i=t.RTCPeerConnection.prototype.getReceivers?e.getReceivers().find(function(e){return e.track&&e.track.id===n.id}):{track:n};var o=new Event(\"track\");o.track=n,o.receiver=i,o.transceiver={receiver:i},o.streams=[r.stream],e.dispatchEvent(o)})},this.addEventListener(\"addstream\",this._ontrackpoly)),r.apply(this,arguments)}}}function p(e){if(\"object\"===s(e)&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){var t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};var r=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){var i=r.apply(this,arguments);return i||(i=t(this,e),this._senders.push(i)),i};var n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){n.apply(this,arguments);var t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}var i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var r=this;this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach(function(e){r._senders.push(t(r,e))})};var o=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;this._senders=this._senders||[],o.apply(this,[e]),e.getTracks().forEach(function(e){var r=t._senders.find(function(t){return t.track===e});r&&t._senders.splice(t._senders.indexOf(r),1)})}}else if(\"object\"===s(e)&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){var a=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){var e=this,t=a.apply(this,[]);return t.forEach(function(t){return t._pc=e}),t},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function d(e){if(e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){var e=this,[r,n,i]=arguments;if(arguments.length>0&&\"function\"==typeof r)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||\"function\"!=typeof r))return t.apply(this,[]);var o=function(e){var t={};return e.result().forEach(function(e){var r={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach(function(t){r[t]=e.stat(t)}),t[r.id]=r}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){return t.apply(this,[function(e){n(s(o(e)))},r])}return new Promise(function(r,n){t.apply(e,[function(e){r(s(o(e)))},n])}).then(n,i)}}}function h(t){if(\"object\"===s(t)&&t.RTCPeerConnection&&t.RTCRtpSender&&t.RTCRtpReceiver){if(!(\"getStats\"in t.RTCRtpSender.prototype)){var r=t.RTCPeerConnection.prototype.getSenders;r&&(t.RTCPeerConnection.prototype.getSenders=function(){var e=this,t=r.apply(this,[]);return t.forEach(function(t){return t._pc=e}),t});var n=t.RTCPeerConnection.prototype.addTrack;n&&(t.RTCPeerConnection.prototype.addTrack=function(){var e=n.apply(this,arguments);return e._pc=this,e}),t.RTCRtpSender.prototype.getStats=function(){var t=this;return this._pc.getStats().then(function(r){return e.filterStats(r,t.track,!0)})}}if(!(\"getStats\"in t.RTCRtpReceiver.prototype)){var i=t.RTCPeerConnection.prototype.getReceivers;i&&(t.RTCPeerConnection.prototype.getReceivers=function(){var e=this,t=i.apply(this,[]);return t.forEach(function(t){return t._pc=e}),t}),e.wrapPeerConnectionEvent(t,\"track\",function(e){return e.receiver._pc=e.srcElement,e}),t.RTCRtpReceiver.prototype.getStats=function(){var t=this;return this._pc.getStats().then(function(r){return e.filterStats(r,t.track,!1)})}}if(\"getStats\"in t.RTCRtpSender.prototype&&\"getStats\"in t.RTCRtpReceiver.prototype){var o=t.RTCPeerConnection.prototype.getStats;t.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof t.MediaStreamTrack){var e,r,n,i=arguments[0];return this.getSenders().forEach(function(t){t.track===i&&(e?n=!0:e=t)}),this.getReceivers().forEach(function(e){return e.track===i&&(r?n=!0:r=e),e.track===i}),n||e&&r?Promise.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):e?e.getStats():r?r.getStats():Promise.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return o.apply(this,arguments)}}}}function f(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this;return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(function(t){return e._shimmedLocalStreams[t][0]})};var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){if(!r)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};var n=t.apply(this,arguments);return this._shimmedLocalStreams[r.id]?-1===this._shimmedLocalStreams[r.id].indexOf(n)&&this._shimmedLocalStreams[r.id].push(n):this._shimmedLocalStreams[r.id]=[r,n],n};var r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var t=this;this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach(function(e){if(t.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")});var n=this.getSenders();r.apply(this,arguments);var i=this.getSenders().filter(function(e){return-1===n.indexOf(e)});this._shimmedLocalStreams[e.id]=[e].concat(i)};var n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],n.apply(this,arguments)};var i=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){var t=this;return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach(function(r){var n=t._shimmedLocalStreams[r].indexOf(e);-1!==n&&t._shimmedLocalStreams[r].splice(n,1),1===t._shimmedLocalStreams[r].length&&delete t._shimmedLocalStreams[r]}),i.apply(this,arguments)}}function m(e,t){if(e.RTCPeerConnection){if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return f(e);var r=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this,t=r.apply(this);return this._reverseStreams=this._reverseStreams||{},t.map(function(t){return e._reverseStreams[t.id]})};var n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){var r=this;if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach(function(e){if(r.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}),!this._reverseStreams[t.id]){var i=new e.MediaStream(t.getTracks());this._streams[t.id]=i,this._reverseStreams[i.id]=t,t=i}n.apply(this,[t])};var i=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},i.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,r){var n=this;if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");var i=[].slice.call(arguments,1);if(1!==i.length||!i[0].getTracks().find(function(e){return e===t}))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");if(this.getSenders().find(function(e){return e.track===t}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};var o=this._streams[r.id];if(o)o.addTrack(t),Promise.resolve().then(function(){n.dispatchEvent(new Event(\"negotiationneeded\"))});else{var s=new e.MediaStream([t]);this._streams[r.id]=s,this._reverseStreams[s.id]=r,this.addStream(s)}return this.getSenders().find(function(e){return e.track===t})},[\"createOffer\",\"createAnswer\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t],n=o({},t,function(){var e=this,t=arguments;return arguments.length&&\"function\"==typeof arguments[0]?r.apply(this,[function(r){var n=c(e,r);t[0].apply(null,[n])},function(e){t[1]&&t[1].apply(null,e)},arguments[2]]):r.apply(this,arguments).then(function(t){return c(e,t)})});e.RTCPeerConnection.prototype[t]=n[t]});var s=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=(e=this,t=arguments[0],r=t.sdp,Object.keys(e._reverseStreams||[]).forEach(function(t){var n=e._reverseStreams[t],i=e._streams[n.id];r=r.replace(new RegExp(n.id,\"g\"),i.id)}),new RTCSessionDescription({type:t.type,sdp:r})),s.apply(this,arguments)):s.apply(this,arguments);var e,t,r};var a=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get:function(){var e=a.get.apply(this);return\"\"===e.type?e:c(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){var t,r=this;if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===this))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");this._streams=this._streams||{},Object.keys(this._streams).forEach(function(n){r._streams[n].getTracks().find(function(t){return e.track===t})&&(t=r._streams[n])}),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event(\"negotiationneeded\")))}}function c(e,t){var r=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var n=e._reverseStreams[t],i=e._streams[n.id];r=r.replace(new RegExp(i.id,\"g\"),n.id)}),new RTCSessionDescription({type:t.type,sdp:r})}}function u(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var r=e.RTCPeerConnection.prototype[t],n=o({},t,function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),r.apply(this,arguments)});e.RTCPeerConnection.prototype[t]=n[t]})}function l(t,r){e.wrapPeerConnectionEvent(t,\"negotiationneeded\",function(e){var t=e.target;if(!(r.version<72||t.getConfiguration&&\"plan-b\"===t.getConfiguration().sdpSemantics)||\"stable\"===t.signalingState)return e})}\n},{\"../utils.js\":\"iSxC\",\"./getusermedia\":\"s6SN\",\"./getdisplaymedia\":\"VHa8\"}],\"NZ1C\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.filterIceServers=n;var r=t(require(\"../utils\"));function e(){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap;return e=function(){return r},r}function t(r){if(r&&r.__esModule)return r;if(null===r||\"object\"!=typeof r&&\"function\"!=typeof r)return{default:r};var t=e();if(t&&t.has(r))return t.get(r);var n={},u=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in r)if(Object.prototype.hasOwnProperty.call(r,i)){var f=u?Object.getOwnPropertyDescriptor(r,i):null;f&&(f.get||f.set)?Object.defineProperty(n,i,f):n[i]=r[i]}return n.default=r,t&&t.set(r,n),n}function n(e,t){var n=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var t=e.urls||e.url;e.url&&!e.urls&&r.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\");var u=\"string\"==typeof t;return u&&(t=[t]),t=t.filter(function(r){if(0===r.indexOf(\"stun:\"))return!1;var e=r.startsWith(\"turn\")&&!r.startsWith(\"turn:[\")&&r.includes(\"transport=udp\");return e&&!n?(n=!0,!0):e&&!n}),delete e.url,e.urls=u?t[0]:t,!!t.length}})}\n},{\"../utils\":\"iSxC\"}],\"YHvh\":[function(require,module,exports) {\n\"use strict\";var r={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};r.localCName=r.generateIdentifier(),r.splitLines=function(r){return r.trim().split(\"\\n\").map(function(r){return r.trim()})},r.splitSections=function(r){return r.split(\"\\nm=\").map(function(r,e){return(e>0?\"m=\"+r:r).trim()+\"\\r\\n\"})},r.getDescription=function(e){var t=r.splitSections(e);return t&&t[0]},r.getMediaSections=function(e){var t=r.splitSections(e);return t.shift(),t},r.matchPrefix=function(e,t){return r.splitLines(e).filter(function(r){return 0===r.indexOf(t)})},r.parseCandidate=function(r){for(var e,t={foundation:(e=0===r.indexOf(\"a=candidate:\")?r.substring(12).split(\" \"):r.substring(10).split(\" \"))[0],component:parseInt(e[1],10),protocol:e[2].toLowerCase(),priority:parseInt(e[3],10),ip:e[4],address:e[4],port:parseInt(e[5],10),type:e[7]},a=8;a<e.length;a+=2)switch(e[a]){case\"raddr\":t.relatedAddress=e[a+1];break;case\"rport\":t.relatedPort=parseInt(e[a+1],10);break;case\"tcptype\":t.tcpType=e[a+1];break;case\"ufrag\":t.ufrag=e[a+1],t.usernameFragment=e[a+1];break;default:t[e[a]]=e[a+1]}return t},r.writeCandidate=function(r){var e=[];e.push(r.foundation),e.push(r.component),e.push(r.protocol.toUpperCase()),e.push(r.priority),e.push(r.address||r.ip),e.push(r.port);var t=r.type;return e.push(\"typ\"),e.push(t),\"host\"!==t&&r.relatedAddress&&r.relatedPort&&(e.push(\"raddr\"),e.push(r.relatedAddress),e.push(\"rport\"),e.push(r.relatedPort)),r.tcpType&&\"tcp\"===r.protocol.toLowerCase()&&(e.push(\"tcptype\"),e.push(r.tcpType)),(r.usernameFragment||r.ufrag)&&(e.push(\"ufrag\"),e.push(r.usernameFragment||r.ufrag)),\"candidate:\"+e.join(\" \")},r.parseIceOptions=function(r){return r.substr(14).split(\" \")},r.parseRtpMap=function(r){var e=r.substr(9).split(\" \"),t={payloadType:parseInt(e.shift(),10)};return e=e[0].split(\"/\"),t.name=e[0],t.clockRate=parseInt(e[1],10),t.channels=3===e.length?parseInt(e[2],10):1,t.numChannels=t.channels,t},r.writeRtpMap=function(r){var e=r.payloadType;void 0!==r.preferredPayloadType&&(e=r.preferredPayloadType);var t=r.channels||r.numChannels||1;return\"a=rtpmap:\"+e+\" \"+r.name+\"/\"+r.clockRate+(1!==t?\"/\"+t:\"\")+\"\\r\\n\"},r.parseExtmap=function(r){var e=r.substr(9).split(\" \");return{id:parseInt(e[0],10),direction:e[0].indexOf(\"/\")>0?e[0].split(\"/\")[1]:\"sendrecv\",uri:e[1]}},r.writeExtmap=function(r){return\"a=extmap:\"+(r.id||r.preferredId)+(r.direction&&\"sendrecv\"!==r.direction?\"/\"+r.direction:\"\")+\" \"+r.uri+\"\\r\\n\"},r.parseFmtp=function(r){for(var e,t={},a=r.substr(r.indexOf(\" \")+1).split(\";\"),n=0;n<a.length;n++)t[(e=a[n].trim().split(\"=\"))[0].trim()]=e[1];return t},r.writeFmtp=function(r){var e=\"\",t=r.payloadType;if(void 0!==r.preferredPayloadType&&(t=r.preferredPayloadType),r.parameters&&Object.keys(r.parameters).length){var a=[];Object.keys(r.parameters).forEach(function(e){r.parameters[e]?a.push(e+\"=\"+r.parameters[e]):a.push(e)}),e+=\"a=fmtp:\"+t+\" \"+a.join(\";\")+\"\\r\\n\"}return e},r.parseRtcpFb=function(r){var e=r.substr(r.indexOf(\" \")+1).split(\" \");return{type:e.shift(),parameter:e.join(\" \")}},r.writeRtcpFb=function(r){var e=\"\",t=r.payloadType;return void 0!==r.preferredPayloadType&&(t=r.preferredPayloadType),r.rtcpFeedback&&r.rtcpFeedback.length&&r.rtcpFeedback.forEach(function(r){e+=\"a=rtcp-fb:\"+t+\" \"+r.type+(r.parameter&&r.parameter.length?\" \"+r.parameter:\"\")+\"\\r\\n\"}),e},r.parseSsrcMedia=function(r){var e=r.indexOf(\" \"),t={ssrc:parseInt(r.substr(7,e-7),10)},a=r.indexOf(\":\",e);return a>-1?(t.attribute=r.substr(e+1,a-e-1),t.value=r.substr(a+1)):t.attribute=r.substr(e+1),t},r.parseSsrcGroup=function(r){var e=r.substr(13).split(\" \");return{semantics:e.shift(),ssrcs:e.map(function(r){return parseInt(r,10)})}},r.getMid=function(e){var t=r.matchPrefix(e,\"a=mid:\")[0];if(t)return t.substr(6)},r.parseFingerprint=function(r){var e=r.substr(14).split(\" \");return{algorithm:e[0].toLowerCase(),value:e[1]}},r.getDtlsParameters=function(e,t){return{role:\"auto\",fingerprints:r.matchPrefix(e+t,\"a=fingerprint:\").map(r.parseFingerprint)}},r.writeDtlsParameters=function(r,e){var t=\"a=setup:\"+e+\"\\r\\n\";return r.fingerprints.forEach(function(r){t+=\"a=fingerprint:\"+r.algorithm+\" \"+r.value+\"\\r\\n\"}),t},r.parseCryptoLine=function(r){var e=r.substr(9).split(\" \");return{tag:parseInt(e[0],10),cryptoSuite:e[1],keyParams:e[2],sessionParams:e.slice(3)}},r.writeCryptoLine=function(e){return\"a=crypto:\"+e.tag+\" \"+e.cryptoSuite+\" \"+(\"object\"==typeof e.keyParams?r.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?\" \"+e.sessionParams.join(\" \"):\"\")+\"\\r\\n\"},r.parseCryptoKeyParams=function(r){if(0!==r.indexOf(\"inline:\"))return null;var e=r.substr(7).split(\"|\");return{keyMethod:\"inline\",keySalt:e[0],lifeTime:e[1],mkiValue:e[2]?e[2].split(\":\")[0]:void 0,mkiLength:e[2]?e[2].split(\":\")[1]:void 0}},r.writeCryptoKeyParams=function(r){return r.keyMethod+\":\"+r.keySalt+(r.lifeTime?\"|\"+r.lifeTime:\"\")+(r.mkiValue&&r.mkiLength?\"|\"+r.mkiValue+\":\"+r.mkiLength:\"\")},r.getCryptoParameters=function(e,t){return r.matchPrefix(e+t,\"a=crypto:\").map(r.parseCryptoLine)},r.getIceParameters=function(e,t){var a=r.matchPrefix(e+t,\"a=ice-ufrag:\")[0],n=r.matchPrefix(e+t,\"a=ice-pwd:\")[0];return a&&n?{usernameFragment:a.substr(12),password:n.substr(10)}:null},r.writeIceParameters=function(r){return\"a=ice-ufrag:\"+r.usernameFragment+\"\\r\\na=ice-pwd:\"+r.password+\"\\r\\n\"},r.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},a=r.splitLines(e)[0].split(\" \"),n=3;n<a.length;n++){var s=a[n],i=r.matchPrefix(e,\"a=rtpmap:\"+s+\" \")[0];if(i){var p=r.parseRtpMap(i),c=r.matchPrefix(e,\"a=fmtp:\"+s+\" \");switch(p.parameters=c.length?r.parseFmtp(c[0]):{},p.rtcpFeedback=r.matchPrefix(e,\"a=rtcp-fb:\"+s+\" \").map(r.parseRtcpFb),t.codecs.push(p),p.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(p.name.toUpperCase())}}}return r.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(r.parseExtmap(e))}),t},r.writeRtpDescription=function(e,t){var a=\"\";a+=\"m=\"+e+\" \",a+=t.codecs.length>0?\"9\":\"0\",a+=\" UDP/TLS/RTP/SAVPF \",a+=t.codecs.map(function(r){return void 0!==r.preferredPayloadType?r.preferredPayloadType:r.payloadType}).join(\" \")+\"\\r\\n\",a+=\"c=IN IP4 0.0.0.0\\r\\n\",a+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){a+=r.writeRtpMap(e),a+=r.writeFmtp(e),a+=r.writeRtcpFb(e)});var n=0;return t.codecs.forEach(function(r){r.maxptime>n&&(n=r.maxptime)}),n>0&&(a+=\"a=maxptime:\"+n+\"\\r\\n\"),a+=\"a=rtcp-mux\\r\\n\",t.headerExtensions&&t.headerExtensions.forEach(function(e){a+=r.writeExtmap(e)}),a},r.parseRtpEncodingParameters=function(e){var t,a=[],n=r.parseRtpParameters(e),s=-1!==n.fecMechanisms.indexOf(\"RED\"),i=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),p=r.matchPrefix(e,\"a=ssrc:\").map(function(e){return r.parseSsrcMedia(e)}).filter(function(r){return\"cname\"===r.attribute}),c=p.length>0&&p[0].ssrc,o=r.matchPrefix(e,\"a=ssrc-group:FID\").map(function(r){return r.substr(17).split(\" \").map(function(r){return parseInt(r,10)})});o.length>0&&o[0].length>1&&o[0][0]===c&&(t=o[0][1]),n.codecs.forEach(function(r){if(\"RTX\"===r.name.toUpperCase()&&r.parameters.apt){var e={ssrc:c,codecPayloadType:parseInt(r.parameters.apt,10)};c&&t&&(e.rtx={ssrc:t}),a.push(e),s&&((e=JSON.parse(JSON.stringify(e))).fec={ssrc:c,mechanism:i?\"red+ulpfec\":\"red\"},a.push(e))}}),0===a.length&&c&&a.push({ssrc:c});var u=r.matchPrefix(e,\"b=\");return u.length&&(u=0===u[0].indexOf(\"b=TIAS:\")?parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,a.forEach(function(r){r.maxBitrate=u})),a},r.parseRtcpParameters=function(e){var t={},a=r.matchPrefix(e,\"a=ssrc:\").map(function(e){return r.parseSsrcMedia(e)}).filter(function(r){return\"cname\"===r.attribute})[0];a&&(t.cname=a.value,t.ssrc=a.ssrc);var n=r.matchPrefix(e,\"a=rtcp-rsize\");t.reducedSize=n.length>0,t.compound=0===n.length;var s=r.matchPrefix(e,\"a=rtcp-mux\");return t.mux=s.length>0,t},r.parseMsid=function(e){var t,a=r.matchPrefix(e,\"a=msid:\");if(1===a.length)return{stream:(t=a[0].substr(7).split(\" \"))[0],track:t[1]};var n=r.matchPrefix(e,\"a=ssrc:\").map(function(e){return r.parseSsrcMedia(e)}).filter(function(r){return\"msid\"===r.attribute});return n.length>0?{stream:(t=n[0].value.split(\" \"))[0],track:t[1]}:void 0},r.parseSctpDescription=function(e){var t,a=r.parseMLine(e),n=r.matchPrefix(e,\"a=max-message-size:\");n.length>0&&(t=parseInt(n[0].substr(19),10)),isNaN(t)&&(t=65536);var s=r.matchPrefix(e,\"a=sctp-port:\");if(s.length>0)return{port:parseInt(s[0].substr(12),10),protocol:a.fmt,maxMessageSize:t};if(r.matchPrefix(e,\"a=sctpmap:\").length>0){var i=r.matchPrefix(e,\"a=sctpmap:\")[0].substr(10).split(\" \");return{port:parseInt(i[0],10),protocol:i[1],maxMessageSize:t}}},r.writeSctpDescription=function(r,e){var t=[];return t=\"DTLS/SCTP\"!==r.protocol?[\"m=\"+r.kind+\" 9 \"+r.protocol+\" \"+e.protocol+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctp-port:\"+e.port+\"\\r\\n\"]:[\"m=\"+r.kind+\" 9 \"+r.protocol+\" \"+e.port+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctpmap:\"+e.port+\" \"+e.protocol+\" 65535\\r\\n\"],void 0!==e.maxMessageSize&&t.push(\"a=max-message-size:\"+e.maxMessageSize+\"\\r\\n\"),t.join(\"\")},r.generateSessionId=function(){return Math.random().toString().substr(2,21)},r.writeSessionBoilerplate=function(e,t,a){var n=void 0!==t?t:2;return\"v=0\\r\\no=\"+(a||\"thisisadapterortc\")+\" \"+(e||r.generateSessionId())+\" \"+n+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},r.writeMediaSection=function(e,t,a,n){var s=r.writeRtpDescription(e.kind,t);if(s+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),s+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===a?\"actpass\":\"active\"),s+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?s+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?s+=\"a=sendrecv\\r\\n\":e.rtpSender?s+=\"a=sendonly\\r\\n\":e.rtpReceiver?s+=\"a=recvonly\\r\\n\":s+=\"a=inactive\\r\\n\",e.rtpSender){var i=\"msid:\"+n.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";s+=\"a=\"+i,s+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+i,e.sendEncodingParameters[0].rtx&&(s+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+i,s+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return s+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+r.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(s+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+r.localCName+\"\\r\\n\"),s},r.getDirection=function(e,t){for(var a=r.splitLines(e),n=0;n<a.length;n++)switch(a[n]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return a[n].substr(2)}return t?r.getDirection(t):\"sendrecv\"},r.getKind=function(e){return r.splitLines(e)[0].split(\" \")[0].substr(2)},r.isRejected=function(r){return\"0\"===r.split(\" \",2)[1]},r.parseMLine=function(e){var t=r.splitLines(e)[0].substr(2).split(\" \");return{kind:t[0],port:parseInt(t[1],10),protocol:t[2],fmt:t.slice(3).join(\" \")}},r.parseOLine=function(e){var t=r.matchPrefix(e,\"o=\")[0].substr(2).split(\" \");return{username:t[0],sessionId:t[1],sessionVersion:parseInt(t[2],10),netType:t[3],addressType:t[4],address:t[5]}},r.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;for(var t=r.splitLines(e),a=0;a<t.length;a++)if(t[a].length<2||\"=\"!==t[a].charAt(1))return!1;return!0},\"object\"==typeof module&&(module.exports=r);\n},{}],\"NJ2u\":[function(require,module,exports) {\n\"use strict\";var e=require(\"sdp\");function t(e){return{inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type}function r(t,r,n,a,i){var s=e.writeRtpDescription(t.kind,r);if(s+=e.writeIceParameters(t.iceGatherer.getLocalParameters()),s+=e.writeDtlsParameters(t.dtlsTransport.getLocalParameters(),\"offer\"===n?\"actpass\":i||\"active\"),s+=\"a=mid:\"+t.mid+\"\\r\\n\",t.rtpSender&&t.rtpReceiver?s+=\"a=sendrecv\\r\\n\":t.rtpSender?s+=\"a=sendonly\\r\\n\":t.rtpReceiver?s+=\"a=recvonly\\r\\n\":s+=\"a=inactive\\r\\n\",t.rtpSender){var o=t.rtpSender._initialTrackId||t.rtpSender.track.id;t.rtpSender._initialTrackId=o;var c=\"msid:\"+(a?a.id:\"-\")+\" \"+o+\"\\r\\n\";s+=\"a=\"+c,s+=\"a=ssrc:\"+t.sendEncodingParameters[0].ssrc+\" \"+c,t.sendEncodingParameters[0].rtx&&(s+=\"a=ssrc:\"+t.sendEncodingParameters[0].rtx.ssrc+\" \"+c,s+=\"a=ssrc-group:FID \"+t.sendEncodingParameters[0].ssrc+\" \"+t.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return s+=\"a=ssrc:\"+t.sendEncodingParameters[0].ssrc+\" cname:\"+e.localCName+\"\\r\\n\",t.rtpSender&&t.sendEncodingParameters[0].rtx&&(s+=\"a=ssrc:\"+t.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+e.localCName+\"\\r\\n\"),s}function n(e,t){var r=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var n=e.urls||e.url;e.url&&!e.urls&&console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");var a=\"string\"==typeof n;return a&&(n=[n]),n=n.filter(function(e){return 0===e.indexOf(\"turn:\")&&-1!==e.indexOf(\"transport=udp\")&&-1===e.indexOf(\"turn:[\")&&!r?(r=!0,!0):0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\")}),delete e.url,e.urls=a?n[0]:n,!!n.length}})}function a(e,t){var r={codecs:[],headerExtensions:[],fecMechanisms:[]},n=function(e,t){e=parseInt(e,10);for(var r=0;r<t.length;r++)if(t[r].payloadType===e||t[r].preferredPayloadType===e)return t[r]},a=function(e,t,r,a){var i=n(e.parameters.apt,r),s=n(t.parameters.apt,a);return i&&s&&i.name.toLowerCase()===s.name.toLowerCase()};return e.codecs.forEach(function(n){for(var i=0;i<t.codecs.length;i++){var s=t.codecs[i];if(n.name.toLowerCase()===s.name.toLowerCase()&&n.clockRate===s.clockRate){if(\"rtx\"===n.name.toLowerCase()&&n.parameters&&s.parameters.apt&&!a(n,s,e.codecs,t.codecs))continue;(s=JSON.parse(JSON.stringify(s))).numChannels=Math.min(n.numChannels,s.numChannels),r.codecs.push(s),s.rtcpFeedback=s.rtcpFeedback.filter(function(e){for(var t=0;t<n.rtcpFeedback.length;t++)if(n.rtcpFeedback[t].type===e.type&&n.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var n=0;n<t.headerExtensions.length;n++){var a=t.headerExtensions[n];if(e.uri===a.uri){r.headerExtensions.push(a);break}}}),r}function i(e,t,r){return-1!=={offer:{setLocalDescription:[\"stable\",\"have-local-offer\"],setRemoteDescription:[\"stable\",\"have-remote-offer\"]},answer:{setLocalDescription:[\"have-remote-offer\",\"have-local-pranswer\"],setRemoteDescription:[\"have-local-offer\",\"have-remote-pranswer\"]}}[t][e].indexOf(r)}function s(e,t){var r=e.getRemoteCandidates().find(function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type});return r||e.addRemoteCandidate(t),!r}function o(e,t){var r=new Error(t);return r.name=e,r.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[e],r}module.exports=function(c,d){function p(e,t){t.addTrack(e),t.dispatchEvent(new c.MediaStreamTrackEvent(\"addtrack\",{track:e}))}function l(e,t,r,n){var a=new Event(\"track\");a.track=t,a.receiver=r,a.transceiver={receiver:r},a.streams=n,c.setTimeout(function(){e._dispatchEvent(\"track\",a)})}var f=function(t){var r=this,a=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach(function(e){r[e]=a[e].bind(a)}),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.connectionState=\"new\",this.iceGatheringState=\"new\",t=JSON.parse(JSON.stringify(t||{})),this.usingBundle=\"max-bundle\"===t.bundlePolicy,\"negotiate\"===t.rtcpMuxPolicy)throw o(\"NotSupportedError\",\"rtcpMuxPolicy 'negotiate' is not supported\");switch(t.rtcpMuxPolicy||(t.rtcpMuxPolicy=\"require\"),t.iceTransportPolicy){case\"all\":case\"relay\":break;default:t.iceTransportPolicy=\"all\"}switch(t.bundlePolicy){case\"balanced\":case\"max-compat\":case\"max-bundle\":break;default:t.bundlePolicy=\"balanced\"}if(t.iceServers=n(t.iceServers||[],d),this._iceGatherers=[],t.iceCandidatePoolSize)for(var i=t.iceCandidatePoolSize;i>0;i--)this._iceGatherers.push(new c.RTCIceGatherer({iceServers:t.iceServers,gatherPolicy:t.iceTransportPolicy}));else t.iceCandidatePoolSize=0;this._config=t,this.transceivers=[],this._sdpSessionId=e.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(f.prototype,\"localDescription\",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(f.prototype,\"remoteDescription\",{configurable:!0,get:function(){return this._remoteDescription}}),f.prototype.onicecandidate=null,f.prototype.onaddstream=null,f.prototype.ontrack=null,f.prototype.onremovestream=null,f.prototype.onsignalingstatechange=null,f.prototype.oniceconnectionstatechange=null,f.prototype.onconnectionstatechange=null,f.prototype.onicegatheringstatechange=null,f.prototype.onnegotiationneeded=null,f.prototype.ondatachannel=null,f.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),\"function\"==typeof this[\"on\"+e]&&this[\"on\"+e](t))},f.prototype._emitGatheringStateChange=function(){var e=new Event(\"icegatheringstatechange\");this._dispatchEvent(\"icegatheringstatechange\",e)},f.prototype.getConfiguration=function(){return this._config},f.prototype.getLocalStreams=function(){return this.localStreams},f.prototype.getRemoteStreams=function(){return this.remoteStreams},f.prototype._createTransceiver=function(e,t){var r=this.transceivers.length>0,n={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&r)n.iceTransport=this.transceivers[0].iceTransport,n.dtlsTransport=this.transceivers[0].dtlsTransport;else{var a=this._createIceAndDtlsTransports();n.iceTransport=a.iceTransport,n.dtlsTransport=a.dtlsTransport}return t||this.transceivers.push(n),n},f.prototype.addTrack=function(e,t){if(this._isClosed)throw o(\"InvalidStateError\",\"Attempted to call addTrack on a closed peerconnection.\");var r;if(this.transceivers.find(function(t){return t.track===e}))throw o(\"InvalidAccessError\",\"Track already exists.\");for(var n=0;n<this.transceivers.length;n++)this.transceivers[n].track||this.transceivers[n].kind!==e.kind||(r=this.transceivers[n]);return r||(r=this._createTransceiver(e.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(t)&&this.localStreams.push(t),r.track=e,r.stream=t,r.rtpSender=new c.RTCRtpSender(e,r.dtlsTransport),r.rtpSender},f.prototype.addStream=function(e){var t=this;if(d>=15025)e.getTracks().forEach(function(r){t.addTrack(r,e)});else{var r=e.clone();e.getTracks().forEach(function(e,t){var n=r.getTracks()[t];e.addEventListener(\"enabled\",function(e){n.enabled=e.enabled})}),r.getTracks().forEach(function(e){t.addTrack(e,r)})}},f.prototype.removeTrack=function(e){if(this._isClosed)throw o(\"InvalidStateError\",\"Attempted to call removeTrack on a closed peerconnection.\");if(!(e instanceof c.RTCRtpSender))throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");var t=this.transceivers.find(function(t){return t.rtpSender===e});if(!t)throw o(\"InvalidAccessError\",\"Sender was not created by this connection.\");var r=t.stream;t.rtpSender.stop(),t.rtpSender=null,t.track=null,t.stream=null,-1===this.transceivers.map(function(e){return e.stream}).indexOf(r)&&this.localStreams.indexOf(r)>-1&&this.localStreams.splice(this.localStreams.indexOf(r),1),this._maybeFireNegotiationNeeded()},f.prototype.removeStream=function(e){var t=this;e.getTracks().forEach(function(e){var r=t.getSenders().find(function(t){return t.track===e});r&&t.removeTrack(r)})},f.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},f.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},f.prototype._createIceGatherer=function(e,t){var r=this;if(t&&e>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var n=new c.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(n,\"state\",{value:\"new\",writable:!0}),this.transceivers[e].bufferedCandidateEvents=[],this.transceivers[e].bufferCandidates=function(t){var a=!t.candidate||0===Object.keys(t.candidate).length;n.state=a?\"completed\":\"gathering\",null!==r.transceivers[e].bufferedCandidateEvents&&r.transceivers[e].bufferedCandidateEvents.push(t)},n.addEventListener(\"localcandidate\",this.transceivers[e].bufferCandidates),n},f.prototype._gather=function(t,r){var n=this,a=this.transceivers[r].iceGatherer;if(!a.onlocalcandidate){var i=this.transceivers[r].bufferedCandidateEvents;this.transceivers[r].bufferedCandidateEvents=null,a.removeEventListener(\"localcandidate\",this.transceivers[r].bufferCandidates),a.onlocalcandidate=function(i){if(!(n.usingBundle&&r>0)){var s=new Event(\"icecandidate\");s.candidate={sdpMid:t,sdpMLineIndex:r};var o=i.candidate,c=!o||0===Object.keys(o).length;if(c)\"new\"!==a.state&&\"gathering\"!==a.state||(a.state=\"completed\");else{\"new\"===a.state&&(a.state=\"gathering\"),o.component=1,o.ufrag=a.getLocalParameters().usernameFragment;var d=e.writeCandidate(o);s.candidate=Object.assign(s.candidate,e.parseCandidate(d)),s.candidate.candidate=d,s.candidate.toJSON=function(){return{candidate:s.candidate.candidate,sdpMid:s.candidate.sdpMid,sdpMLineIndex:s.candidate.sdpMLineIndex,usernameFragment:s.candidate.usernameFragment}}}var p=e.getMediaSections(n._localDescription.sdp);p[s.candidate.sdpMLineIndex]+=c?\"a=end-of-candidates\\r\\n\":\"a=\"+s.candidate.candidate+\"\\r\\n\",n._localDescription.sdp=e.getDescription(n._localDescription.sdp)+p.join(\"\");var l=n.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});\"gathering\"!==n.iceGatheringState&&(n.iceGatheringState=\"gathering\",n._emitGatheringStateChange()),c||n._dispatchEvent(\"icecandidate\",s),l&&(n._dispatchEvent(\"icecandidate\",new Event(\"icecandidate\")),n.iceGatheringState=\"complete\",n._emitGatheringStateChange())}},c.setTimeout(function(){i.forEach(function(e){a.onlocalcandidate(e)})},0)}},f.prototype._createIceAndDtlsTransports=function(){var e=this,t=new c.RTCIceTransport(null);t.onicestatechange=function(){e._updateIceConnectionState(),e._updateConnectionState()};var r=new c.RTCDtlsTransport(t);return r.ondtlsstatechange=function(){e._updateConnectionState()},r.onerror=function(){Object.defineProperty(r,\"state\",{value:\"failed\",writable:!0}),e._updateConnectionState()},{iceTransport:t,dtlsTransport:r}},f.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var r=this.transceivers[e].iceTransport;r&&(delete r.onicestatechange,delete this.transceivers[e].iceTransport);var n=this.transceivers[e].dtlsTransport;n&&(delete n.ondtlsstatechange,delete n.onerror,delete this.transceivers[e].dtlsTransport)},f.prototype._transceive=function(t,r,n){var i=a(t.localCapabilities,t.remoteCapabilities);r&&t.rtpSender&&(i.encodings=t.sendEncodingParameters,i.rtcp={cname:e.localCName,compound:t.rtcpParameters.compound},t.recvEncodingParameters.length&&(i.rtcp.ssrc=t.recvEncodingParameters[0].ssrc),t.rtpSender.send(i)),n&&t.rtpReceiver&&i.codecs.length>0&&(\"video\"===t.kind&&t.recvEncodingParameters&&d<15019&&t.recvEncodingParameters.forEach(function(e){delete e.rtx}),t.recvEncodingParameters.length?i.encodings=t.recvEncodingParameters:i.encodings=[{}],i.rtcp={compound:t.rtcpParameters.compound},t.rtcpParameters.cname&&(i.rtcp.cname=t.rtcpParameters.cname),t.sendEncodingParameters.length&&(i.rtcp.ssrc=t.sendEncodingParameters[0].ssrc),t.rtpReceiver.receive(i))},f.prototype.setLocalDescription=function(t){var r,n,s=this;if(-1===[\"offer\",\"answer\"].indexOf(t.type))return Promise.reject(o(\"TypeError\",'Unsupported type \"'+t.type+'\"'));if(!i(\"setLocalDescription\",t.type,s.signalingState)||s._isClosed)return Promise.reject(o(\"InvalidStateError\",\"Can not set local \"+t.type+\" in state \"+s.signalingState));if(\"offer\"===t.type)r=e.splitSections(t.sdp),n=r.shift(),r.forEach(function(t,r){var n=e.parseRtpParameters(t);s.transceivers[r].localCapabilities=n}),s.transceivers.forEach(function(e,t){s._gather(e.mid,t)});else if(\"answer\"===t.type){r=e.splitSections(s._remoteDescription.sdp),n=r.shift();var c=e.matchPrefix(n,\"a=ice-lite\").length>0;r.forEach(function(t,r){var i=s.transceivers[r],o=i.iceGatherer,d=i.iceTransport,p=i.dtlsTransport,l=i.localCapabilities,f=i.remoteCapabilities;if(!(e.isRejected(t)&&0===e.matchPrefix(t,\"a=bundle-only\").length)&&!i.rejected){var u=e.getIceParameters(t,n),v=e.getDtlsParameters(t,n);c&&(v.role=\"server\"),s.usingBundle&&0!==r||(s._gather(i.mid,r),\"new\"===d.state&&d.start(o,u,c?\"controlling\":\"controlled\"),\"new\"===p.state&&p.start(v));var h=a(l,f);s._transceive(i,h.codecs.length>0,!1)}})}return s._localDescription={type:t.type,sdp:t.sdp},\"offer\"===t.type?s._updateSignalingState(\"have-local-offer\"):s._updateSignalingState(\"stable\"),Promise.resolve()},f.prototype.setRemoteDescription=function(t){var r=this;if(-1===[\"offer\",\"answer\"].indexOf(t.type))return Promise.reject(o(\"TypeError\",'Unsupported type \"'+t.type+'\"'));if(!i(\"setRemoteDescription\",t.type,r.signalingState)||r._isClosed)return Promise.reject(o(\"InvalidStateError\",\"Can not set remote \"+t.type+\" in state \"+r.signalingState));var n={};r.remoteStreams.forEach(function(e){n[e.id]=e});var f=[],u=e.splitSections(t.sdp),v=u.shift(),h=e.matchPrefix(v,\"a=ice-lite\").length>0,m=e.matchPrefix(v,\"a=group:BUNDLE \").length>0;r.usingBundle=m;var g=e.matchPrefix(v,\"a=ice-options:\")[0];return r.canTrickleIceCandidates=!!g&&g.substr(14).split(\" \").indexOf(\"trickle\")>=0,u.forEach(function(i,o){var l=e.splitLines(i),u=e.getKind(i),g=e.isRejected(i)&&0===e.matchPrefix(i,\"a=bundle-only\").length,y=l[0].substr(2).split(\" \")[2],S=e.getDirection(i,v),T=e.parseMsid(i),E=e.getMid(i)||e.generateIdentifier();if(g||\"application\"===u&&(\"DTLS/SCTP\"===y||\"UDP/DTLS/SCTP\"===y))r.transceivers[o]={mid:E,kind:u,protocol:y,rejected:!0};else{var C,P,w,R,_,k,b,x,D;!g&&r.transceivers[o]&&r.transceivers[o].rejected&&(r.transceivers[o]=r._createTransceiver(u,!0));var I,L,M=e.parseRtpParameters(i);g||(I=e.getIceParameters(i,v),(L=e.getDtlsParameters(i,v)).role=\"client\"),b=e.parseRtpEncodingParameters(i);var O=e.parseRtcpParameters(i),G=e.matchPrefix(i,\"a=end-of-candidates\",v).length>0,j=e.matchPrefix(i,\"a=candidate:\").map(function(t){return e.parseCandidate(t)}).filter(function(e){return 1===e.component});if((\"offer\"===t.type||\"answer\"===t.type)&&!g&&m&&o>0&&r.transceivers[o]&&(r._disposeIceAndDtlsTransports(o),r.transceivers[o].iceGatherer=r.transceivers[0].iceGatherer,r.transceivers[o].iceTransport=r.transceivers[0].iceTransport,r.transceivers[o].dtlsTransport=r.transceivers[0].dtlsTransport,r.transceivers[o].rtpSender&&r.transceivers[o].rtpSender.setTransport(r.transceivers[0].dtlsTransport),r.transceivers[o].rtpReceiver&&r.transceivers[o].rtpReceiver.setTransport(r.transceivers[0].dtlsTransport)),\"offer\"!==t.type||g){if(\"answer\"===t.type&&!g){P=(C=r.transceivers[o]).iceGatherer,w=C.iceTransport,R=C.dtlsTransport,_=C.rtpReceiver,k=C.sendEncodingParameters,x=C.localCapabilities,r.transceivers[o].recvEncodingParameters=b,r.transceivers[o].remoteCapabilities=M,r.transceivers[o].rtcpParameters=O,j.length&&\"new\"===w.state&&(!h&&!G||m&&0!==o?j.forEach(function(e){s(C.iceTransport,e)}):w.setRemoteCandidates(j)),m&&0!==o||(\"new\"===w.state&&w.start(P,I,\"controlling\"),\"new\"===R.state&&R.start(L)),!a(C.localCapabilities,C.remoteCapabilities).codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&C.sendEncodingParameters[0].rtx&&delete C.sendEncodingParameters[0].rtx,r._transceive(C,\"sendrecv\"===S||\"recvonly\"===S,\"sendrecv\"===S||\"sendonly\"===S),!_||\"sendrecv\"!==S&&\"sendonly\"!==S?delete C.rtpReceiver:(D=_.track,T?(n[T.stream]||(n[T.stream]=new c.MediaStream),p(D,n[T.stream]),f.push([D,_,n[T.stream]])):(n.default||(n.default=new c.MediaStream),p(D,n.default),f.push([D,_,n.default])))}}else{(C=r.transceivers[o]||r._createTransceiver(u)).mid=E,C.iceGatherer||(C.iceGatherer=r._createIceGatherer(o,m)),j.length&&\"new\"===C.iceTransport.state&&(!G||m&&0!==o?j.forEach(function(e){s(C.iceTransport,e)}):C.iceTransport.setRemoteCandidates(j)),x=c.RTCRtpReceiver.getCapabilities(u),d<15019&&(x.codecs=x.codecs.filter(function(e){return\"rtx\"!==e.name})),k=C.sendEncodingParameters||[{ssrc:1001*(2*o+2)}];var N,A=!1;if(\"sendrecv\"===S||\"sendonly\"===S){if(A=!C.rtpReceiver,_=C.rtpReceiver||new c.RTCRtpReceiver(C.dtlsTransport,u),A)D=_.track,T&&\"-\"===T.stream||(T?(n[T.stream]||(n[T.stream]=new c.MediaStream,Object.defineProperty(n[T.stream],\"id\",{get:function(){return T.stream}})),Object.defineProperty(D,\"id\",{get:function(){return T.track}}),N=n[T.stream]):(n.default||(n.default=new c.MediaStream),N=n.default)),N&&(p(D,N),C.associatedRemoteMediaStreams.push(N)),f.push([D,_,N])}else C.rtpReceiver&&C.rtpReceiver.track&&(C.associatedRemoteMediaStreams.forEach(function(e){var t,r,n=e.getTracks().find(function(e){return e.id===C.rtpReceiver.track.id});n&&(t=n,(r=e).removeTrack(t),r.dispatchEvent(new c.MediaStreamTrackEvent(\"removetrack\",{track:t})))}),C.associatedRemoteMediaStreams=[]);C.localCapabilities=x,C.remoteCapabilities=M,C.rtpReceiver=_,C.rtcpParameters=O,C.sendEncodingParameters=k,C.recvEncodingParameters=b,r._transceive(r.transceivers[o],!1,A)}}}),void 0===r._dtlsRole&&(r._dtlsRole=\"offer\"===t.type?\"active\":\"passive\"),r._remoteDescription={type:t.type,sdp:t.sdp},\"offer\"===t.type?r._updateSignalingState(\"have-remote-offer\"):r._updateSignalingState(\"stable\"),Object.keys(n).forEach(function(e){var t=n[e];if(t.getTracks().length){if(-1===r.remoteStreams.indexOf(t)){r.remoteStreams.push(t);var a=new Event(\"addstream\");a.stream=t,c.setTimeout(function(){r._dispatchEvent(\"addstream\",a)})}f.forEach(function(e){var n=e[0],a=e[1];t.id===e[2].id&&l(r,n,a,[t])})}}),f.forEach(function(e){e[2]||l(r,e[0],e[1],[])}),c.setTimeout(function(){r&&r.transceivers&&r.transceivers.forEach(function(e){e.iceTransport&&\"new\"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"),e.iceTransport.addRemoteCandidate({}))})},4e3),Promise.resolve()},f.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._isClosed=!0,this._updateSignalingState(\"closed\")},f.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this._dispatchEvent(\"signalingstatechange\",t)},f.prototype._maybeFireNegotiationNeeded=function(){var e=this;\"stable\"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,c.setTimeout(function(){if(e.needNegotiation){e.needNegotiation=!1;var t=new Event(\"negotiationneeded\");e._dispatchEvent(\"negotiationneeded\",t)}},0))},f.prototype._updateIceConnectionState=function(){var e,t={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&!e.rejected&&t[e.iceTransport.state]++}),e=\"new\",t.failed>0?e=\"failed\":t.checking>0?e=\"checking\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0?e=\"connected\":t.completed>0&&(e=\"completed\"),e!==this.iceConnectionState){this.iceConnectionState=e;var r=new Event(\"iceconnectionstatechange\");this._dispatchEvent(\"iceconnectionstatechange\",r)}},f.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&e.dtlsTransport&&!e.rejected&&(t[e.iceTransport.state]++,t[e.dtlsTransport.state]++)}),t.connected+=t.completed,e=\"new\",t.failed>0?e=\"failed\":t.connecting>0?e=\"connecting\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0&&(e=\"connected\"),e!==this.connectionState){this.connectionState=e;var r=new Event(\"connectionstatechange\");this._dispatchEvent(\"connectionstatechange\",r)}},f.prototype.createOffer=function(){var t=this;if(t._isClosed)return Promise.reject(o(\"InvalidStateError\",\"Can not call createOffer after close\"));var n=t.transceivers.filter(function(e){return\"audio\"===e.kind}).length,a=t.transceivers.filter(function(e){return\"video\"===e.kind}).length,i=arguments[0];if(i){if(i.mandatory||i.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==i.offerToReceiveAudio&&(n=!0===i.offerToReceiveAudio?1:!1===i.offerToReceiveAudio?0:i.offerToReceiveAudio),void 0!==i.offerToReceiveVideo&&(a=!0===i.offerToReceiveVideo?1:!1===i.offerToReceiveVideo?0:i.offerToReceiveVideo)}for(t.transceivers.forEach(function(e){\"audio\"===e.kind?--n<0&&(e.wantReceive=!1):\"video\"===e.kind&&--a<0&&(e.wantReceive=!1)});n>0||a>0;)n>0&&(t._createTransceiver(\"audio\"),n--),a>0&&(t._createTransceiver(\"video\"),a--);var s=e.writeSessionBoilerplate(t._sdpSessionId,t._sdpSessionVersion++);t.transceivers.forEach(function(r,n){var a=r.track,i=r.kind,s=r.mid||e.generateIdentifier();r.mid=s,r.iceGatherer||(r.iceGatherer=t._createIceGatherer(n,t.usingBundle));var o=c.RTCRtpSender.getCapabilities(i);d<15019&&(o.codecs=o.codecs.filter(function(e){return\"rtx\"!==e.name})),o.codecs.forEach(function(e){\"H264\"===e.name&&void 0===e.parameters[\"level-asymmetry-allowed\"]&&(e.parameters[\"level-asymmetry-allowed\"]=\"1\"),r.remoteCapabilities&&r.remoteCapabilities.codecs&&r.remoteCapabilities.codecs.forEach(function(t){e.name.toLowerCase()===t.name.toLowerCase()&&e.clockRate===t.clockRate&&(e.preferredPayloadType=t.payloadType)})}),o.headerExtensions.forEach(function(e){(r.remoteCapabilities&&r.remoteCapabilities.headerExtensions||[]).forEach(function(t){e.uri===t.uri&&(e.id=t.id)})});var p=r.sendEncodingParameters||[{ssrc:1001*(2*n+1)}];a&&d>=15019&&\"video\"===i&&!p[0].rtx&&(p[0].rtx={ssrc:p[0].ssrc+1}),r.wantReceive&&(r.rtpReceiver=new c.RTCRtpReceiver(r.dtlsTransport,i)),r.localCapabilities=o,r.sendEncodingParameters=p}),\"max-compat\"!==t._config.bundlePolicy&&(s+=\"a=group:BUNDLE \"+t.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),s+=\"a=ice-options:trickle\\r\\n\",t.transceivers.forEach(function(n,a){s+=r(n,n.localCapabilities,\"offer\",n.stream,t._dtlsRole),s+=\"a=rtcp-rsize\\r\\n\",!n.iceGatherer||\"new\"===t.iceGatheringState||0!==a&&t.usingBundle||(n.iceGatherer.getLocalCandidates().forEach(function(t){t.component=1,s+=\"a=\"+e.writeCandidate(t)+\"\\r\\n\"}),\"completed\"===n.iceGatherer.state&&(s+=\"a=end-of-candidates\\r\\n\"))});var p=new c.RTCSessionDescription({type:\"offer\",sdp:s});return Promise.resolve(p)},f.prototype.createAnswer=function(){var t=this;if(t._isClosed)return Promise.reject(o(\"InvalidStateError\",\"Can not call createAnswer after close\"));if(\"have-remote-offer\"!==t.signalingState&&\"have-local-pranswer\"!==t.signalingState)return Promise.reject(o(\"InvalidStateError\",\"Can not call createAnswer in signalingState \"+t.signalingState));var n=e.writeSessionBoilerplate(t._sdpSessionId,t._sdpSessionVersion++);t.usingBundle&&(n+=\"a=group:BUNDLE \"+t.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),n+=\"a=ice-options:trickle\\r\\n\";var i=e.getMediaSections(t._remoteDescription.sdp).length;t.transceivers.forEach(function(e,s){if(!(s+1>i)){if(e.rejected)return\"application\"===e.kind?\"DTLS/SCTP\"===e.protocol?n+=\"m=application 0 DTLS/SCTP 5000\\r\\n\":n+=\"m=application 0 \"+e.protocol+\" webrtc-datachannel\\r\\n\":\"audio\"===e.kind?n+=\"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\":\"video\"===e.kind&&(n+=\"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"),void(n+=\"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\"+e.mid+\"\\r\\n\");var o;if(e.stream)\"audio\"===e.kind?o=e.stream.getAudioTracks()[0]:\"video\"===e.kind&&(o=e.stream.getVideoTracks()[0]),o&&d>=15019&&\"video\"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1});var c=a(e.localCapabilities,e.remoteCapabilities);!c.codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,n+=r(e,c,\"answer\",e.stream,t._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(n+=\"a=rtcp-rsize\\r\\n\")}});var s=new c.RTCSessionDescription({type:\"answer\",sdp:n});return Promise.resolve(s)},f.prototype.addIceCandidate=function(t){var r,n=this;return t&&void 0===t.sdpMLineIndex&&!t.sdpMid?Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")):new Promise(function(a,i){if(!n._remoteDescription)return i(o(\"InvalidStateError\",\"Can not add ICE candidate without a remote description\"));if(t&&\"\"!==t.candidate){var c=t.sdpMLineIndex;if(t.sdpMid)for(var d=0;d<n.transceivers.length;d++)if(n.transceivers[d].mid===t.sdpMid){c=d;break}var p=n.transceivers[c];if(!p)return i(o(\"OperationError\",\"Can not add ICE candidate\"));if(p.rejected)return a();var l=Object.keys(t.candidate).length>0?e.parseCandidate(t.candidate):{};if(\"tcp\"===l.protocol&&(0===l.port||9===l.port))return a();if(l.component&&1!==l.component)return a();if((0===c||c>0&&p.iceTransport!==n.transceivers[0].iceTransport)&&!s(p.iceTransport,l))return i(o(\"OperationError\",\"Can not add ICE candidate\"));var f=t.candidate.trim();0===f.indexOf(\"a=\")&&(f=f.substr(2)),(r=e.getMediaSections(n._remoteDescription.sdp))[c]+=\"a=\"+(l.type?f:\"end-of-candidates\")+\"\\r\\n\",n._remoteDescription.sdp=e.getDescription(n._remoteDescription.sdp)+r.join(\"\")}else for(var u=0;u<n.transceivers.length&&(n.transceivers[u].rejected||(n.transceivers[u].iceTransport.addRemoteCandidate({}),(r=e.getMediaSections(n._remoteDescription.sdp))[u]+=\"a=end-of-candidates\\r\\n\",n._remoteDescription.sdp=e.getDescription(n._remoteDescription.sdp)+r.join(\"\"),!n.usingBundle));u++);a()})},f.prototype.getStats=function(e){if(e&&e instanceof c.MediaStreamTrack){var t=null;if(this.transceivers.forEach(function(r){r.rtpSender&&r.rtpSender.track===e?t=r.rtpSender:r.rtpReceiver&&r.rtpReceiver.track===e&&(t=r.rtpReceiver)}),!t)throw o(\"InvalidAccessError\",\"Invalid selector.\");return t.getStats()}var r=[];return this.transceivers.forEach(function(e){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(t){e[t]&&r.push(e[t].getStats())})}),Promise.all(r).then(function(e){var t=new Map;return e.forEach(function(e){e.forEach(function(e){t.set(e.id,e)})}),t})};[\"RTCRtpSender\",\"RTCRtpReceiver\",\"RTCIceGatherer\",\"RTCIceTransport\",\"RTCDtlsTransport\"].forEach(function(e){var r=c[e];if(r&&r.prototype&&r.prototype.getStats){var n=r.prototype.getStats;r.prototype.getStats=function(){return n.apply(this).then(function(e){var r=new Map;return Object.keys(e).forEach(function(n){e[n].type=t(e[n]),r.set(n,e[n])}),r})}}});var u=[\"createOffer\",\"createAnswer\"];return u.forEach(function(e){var t=f.prototype[e];f.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[0]||\"function\"==typeof e[1]?t.apply(this,[arguments[2]]).then(function(t){\"function\"==typeof e[0]&&e[0].apply(null,[t])},function(t){\"function\"==typeof e[1]&&e[1].apply(null,[t])}):t.apply(this,arguments)}}),(u=[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"]).forEach(function(e){var t=f.prototype[e];f.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]||\"function\"==typeof e[2]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)},function(t){\"function\"==typeof e[2]&&e[2].apply(null,[t])}):t.apply(this,arguments)}}),[\"getStats\"].forEach(function(e){var t=f.prototype[e];f.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)}):t.apply(this,arguments)}}),f};\n},{\"sdp\":\"YHvh\"}],\"YdKx\":[function(require,module,exports) {\n\"use strict\";function e(e){var r=e&&e.navigator,t=r.mediaDevices.getUserMedia.bind(r.mediaDevices);r.mediaDevices.getUserMedia=function(e){return t(e).catch(function(e){return Promise.reject(function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}}(e))})}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetUserMedia=e;\n},{}],\"P3bV\":[function(require,module,exports) {\n\"use strict\";function e(e){\"getDisplayMedia\"in e.navigator&&e.navigator.mediaDevices&&(e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||(e.navigator.mediaDevices.getDisplayMedia=e.navigator.getDisplayMedia.bind(e.navigator)))}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetDisplayMedia=e;\n},{}],\"XRic\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimPeerConnection=p,exports.shimReplaceTrack=a,Object.defineProperty(exports,\"shimGetUserMedia\",{enumerable:!0,get:function(){return n.shimGetUserMedia}}),Object.defineProperty(exports,\"shimGetDisplayMedia\",{enumerable:!0,get:function(){return i.shimGetDisplayMedia}});var e=s(require(\"../utils\")),t=require(\"./filtericeservers\"),r=o(require(\"rtcpeerconnection-shim\")),n=require(\"./getusermedia\"),i=require(\"./getdisplaymedia\");function o(e){return e&&e.__esModule?e:{default:e}}function c(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function s(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var o=n?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(r,i,o):r[i]=e[i]}return r.default=e,t&&t.set(e,r),r}function p(n,i){if(n.RTCIceGatherer&&(n.RTCIceCandidate||(n.RTCIceCandidate=function(e){return e}),n.RTCSessionDescription||(n.RTCSessionDescription=function(e){return e}),i.version<15025)){var o=Object.getOwnPropertyDescriptor(n.MediaStreamTrack.prototype,\"enabled\");Object.defineProperty(n.MediaStreamTrack.prototype,\"enabled\",{set:function(e){o.set.call(this,e);var t=new Event(\"enabled\");t.enabled=e,this.dispatchEvent(t)}})}!n.RTCRtpSender||\"dtmf\"in n.RTCRtpSender.prototype||Object.defineProperty(n.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=new n.RTCDtmfSender(this):\"video\"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),n.RTCDtmfSender&&!n.RTCDTMFSender&&(n.RTCDTMFSender=n.RTCDtmfSender);var c=(0,r.default)(n,i.version);n.RTCPeerConnection=function(r){return r&&r.iceServers&&(r.iceServers=(0,t.filterIceServers)(r.iceServers,i.version),e.log(\"ICE servers after filtering:\",r.iceServers)),new c(r)},n.RTCPeerConnection.prototype=c.prototype}function a(e){!e.RTCRtpSender||\"replaceTrack\"in e.RTCRtpSender.prototype||(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)}\n},{\"../utils\":\"iSxC\",\"./filtericeservers\":\"NZ1C\",\"rtcpeerconnection-shim\":\"NJ2u\",\"./getusermedia\":\"YdKx\",\"./getdisplaymedia\":\"P3bV\"}],\"GzSv\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetUserMedia=n;var e=o(require(\"../utils\"));function t(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return t=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var o=t();if(o&&o.has(e))return o.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=n?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(r,i,a):r[i]=e[i]}return r.default=e,o&&o.set(e,r),r}function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function n(t,o){var n=t&&t.navigator,i=t&&t.MediaStreamTrack;if(n.getUserMedia=function(t,o,r){e.deprecated(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),n.mediaDevices.getUserMedia(t).then(o,r)},!(o.version>55&&\"autoGainControl\"in n.mediaDevices.getSupportedConstraints())){var a=function(e,t,o){t in e&&!(o in e)&&(e[o]=e[t],delete e[t])},s=n.mediaDevices.getUserMedia.bind(n.mediaDevices);if(n.mediaDevices.getUserMedia=function(e){return\"object\"===r(e)&&\"object\"===r(e.audio)&&(e=JSON.parse(JSON.stringify(e)),a(e.audio,\"autoGainControl\",\"mozAutoGainControl\"),a(e.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),s(e)},i&&i.prototype.getSettings){var p=i.prototype.getSettings;i.prototype.getSettings=function(){var e=p.apply(this,arguments);return a(e,\"mozAutoGainControl\",\"autoGainControl\"),a(e,\"mozNoiseSuppression\",\"noiseSuppression\"),e}}if(i&&i.prototype.applyConstraints){var u=i.prototype.applyConstraints;i.prototype.applyConstraints=function(e){return\"audio\"===this.kind&&\"object\"===r(e)&&(e=JSON.parse(JSON.stringify(e)),a(e,\"autoGainControl\",\"mozAutoGainControl\"),a(e,\"noiseSuppression\",\"mozNoiseSuppression\")),u.apply(this,[e])}}}}\n},{\"../utils\":\"iSxC\"}],\"UuGU\":[function(require,module,exports) {\n\"use strict\";function e(e,i){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(a){if(!a||!a.video){var t=new DOMException(\"getDisplayMedia without video constraints is undefined\");return t.name=\"NotFoundError\",t.code=8,Promise.reject(t)}return!0===a.video?a.video={mediaSource:i}:a.video.mediaSource=i,e.navigator.mediaDevices.getUserMedia(a)})}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimGetDisplayMedia=e;\n},{}],\"Fzdr\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimOnTrack=s,exports.shimPeerConnection=c,exports.shimSenderGetStats=p,exports.shimReceiverGetStats=u,exports.shimRemoveStream=f,exports.shimRTCDataChannel=d,exports.shimAddTransceiver=C,exports.shimGetParameters=y,exports.shimCreateOffer=l,exports.shimCreateAnswer=m,Object.defineProperty(exports,\"shimGetUserMedia\",{enumerable:!0,get:function(){return t.shimGetUserMedia}}),Object.defineProperty(exports,\"shimGetDisplayMedia\",{enumerable:!0,get:function(){return n.shimGetDisplayMedia}});var e=o(require(\"../utils\")),t=require(\"./getusermedia\"),n=require(\"./getdisplaymedia\");function r(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=o?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e){\"object\"===a(e)&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})}function c(e,t){if(\"object\"===a(e)&&(e.RTCPeerConnection||e.mozRTCPeerConnection)){!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t],r=i({},t,function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)});e.RTCPeerConnection.prototype[t]=r[t]});var n={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},r=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){var[e,o,i]=arguments;return r.apply(this,[e||null]).then(function(e){if(t.version<53&&!o)try{e.forEach(function(e){e.type=n[e.type]||e.type})}catch(r){if(\"TypeError\"!==r.name)throw r;e.forEach(function(t,r){e.set(r,Object.assign({},t,{type:n[t.type]||t.type}))})}return e}).then(o,i)}}}function p(e){if(\"object\"===a(e)&&e.RTCPeerConnection&&e.RTCRtpSender&&!(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)){var t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){var e=this,n=t.apply(this,[]);return n.forEach(function(t){return t._pc=e}),n});var n=e.RTCPeerConnection.prototype.addTrack;n&&(e.RTCPeerConnection.prototype.addTrack=function(){var e=n.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}}function u(t){if(\"object\"===a(t)&&t.RTCPeerConnection&&t.RTCRtpSender&&!(t.RTCRtpSender&&\"getStats\"in t.RTCRtpReceiver.prototype)){var n=t.RTCPeerConnection.prototype.getReceivers;n&&(t.RTCPeerConnection.prototype.getReceivers=function(){var e=this,t=n.apply(this,[]);return t.forEach(function(t){return t._pc=e}),t}),e.wrapPeerConnectionEvent(t,\"track\",function(e){return e.receiver._pc=e.srcElement,e}),t.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}}function f(t){!t.RTCPeerConnection||\"removeStream\"in t.RTCPeerConnection.prototype||(t.RTCPeerConnection.prototype.removeStream=function(t){var n=this;e.deprecated(\"removeStream\",\"removeTrack\"),this.getSenders().forEach(function(e){e.track&&t.getTracks().includes(e.track)&&n.removeTrack(e)})})}function d(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function C(e){if(\"object\"===a(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];var e=arguments[1],n=e&&\"sendEncodings\"in e;n&&e.sendEncodings.forEach(function(e){if(\"rid\"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError(\"Invalid RID value provided.\")}if(\"scaleResolutionDownBy\"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");if(\"maxFramerate\"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError(\"max_framerate must be >= 0.0\")});var r=t.apply(this,arguments);if(n){var{sender:o}=r,i=o.getParameters();\"encodings\"in i&&(1!==i.encodings.length||0!==Object.keys(i.encodings[0]).length)||(i.encodings=e.sendEncodings,o.sendEncodings=e.sendEncodings,this.setParametersPromises.push(o.setParameters(i).then(function(){delete o.sendEncodings}).catch(function(){delete o.sendEncodings})))}return r})}}function y(e){if(\"object\"===a(e)&&e.RTCRtpSender){var t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){var e=t.apply(this,arguments);return\"encodings\"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}}function l(e){if(\"object\"===a(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){var e=arguments,n=this;return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then(function(){return t.apply(n,e)}).finally(function(){n.setParametersPromises=[]}):t.apply(this,arguments)}}}function m(e){if(\"object\"===a(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){var e=arguments,n=this;return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then(function(){return t.apply(n,e)}).finally(function(){n.setParametersPromises=[]}):t.apply(this,arguments)}}}\n},{\"../utils\":\"iSxC\",\"./getusermedia\":\"GzSv\",\"./getdisplaymedia\":\"UuGU\"}],\"t1lL\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimLocalStreamsAPI=n,exports.shimRemoteStreamsAPI=i,exports.shimCallbacksAPI=a,exports.shimGetUserMedia=c,exports.shimConstraints=s,exports.shimRTCIceServerUrls=d,exports.shimTrackEventTransceiver=f,exports.shimCreateOfferLegacy=p,exports.shimAudioContext=u;var e=r(require(\"../utils\"));function t(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return t=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var r=t();if(r&&r.has(e))return r.get(e);var o={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=n?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(o,i,a):o[i]=e[i]}return o.default=e,r&&r.set(e,o),o}function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function n(e){if(\"object\"===o(e)&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!(\"addStream\"in e.RTCPeerConnection.prototype)){var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){var r=this;this._localStreams||(this._localStreams=[]),this._localStreams.includes(e)||this._localStreams.push(e),e.getAudioTracks().forEach(function(o){return t.call(r,o,e)}),e.getVideoTracks().forEach(function(o){return t.call(r,o,e)})},e.RTCPeerConnection.prototype.addTrack=function(e){for(var r=this,o=arguments.length,n=new Array(o>1?o-1:0),i=1;i<o;i++)n[i-1]=arguments[i];return n&&n.forEach(function(e){r._localStreams?r._localStreams.includes(e)||r._localStreams.push(e):r._localStreams=[e]}),t.apply(this,arguments)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;this._localStreams||(this._localStreams=[]);var r=this._localStreams.indexOf(e);if(-1!==r){this._localStreams.splice(r,1);var o=e.getTracks();this.getSenders().forEach(function(e){o.includes(e.track)&&t.removeTrack(e)})}})}}function i(e){if(\"object\"===o(e)&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get:function(){return this._onaddstream},set:function(e){var t=this;this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=function(e){e.streams.forEach(function(e){if(t._remoteStreams||(t._remoteStreams=[]),!t._remoteStreams.includes(e)){t._remoteStreams.push(e);var r=new Event(\"addstream\");r.stream=e,t.dispatchEvent(r)}})})}});var t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach(function(t){if(e._remoteStreams||(e._remoteStreams=[]),!(e._remoteStreams.indexOf(t)>=0)){e._remoteStreams.push(t);var r=new Event(\"addstream\");r.stream=t,e.dispatchEvent(r)}})}),t.apply(e,arguments)}}}function a(e){if(\"object\"===o(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype,r=t.createOffer,n=t.createAnswer,i=t.setLocalDescription,a=t.setRemoteDescription,c=t.addIceCandidate;t.createOffer=function(e,t){var o=arguments.length>=2?arguments[2]:arguments[0],n=r.apply(this,[o]);return t?(n.then(e,t),Promise.resolve()):n},t.createAnswer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],o=n.apply(this,[r]);return t?(o.then(e,t),Promise.resolve()):o};var s=function(e,t,r){var o=i.apply(this,[e]);return r?(o.then(t,r),Promise.resolve()):o};t.setLocalDescription=s,s=function(e,t,r){var o=a.apply(this,[e]);return r?(o.then(t,r),Promise.resolve()):o},t.setRemoteDescription=s,s=function(e,t,r){var o=c.apply(this,[e]);return r?(o.then(t,r),Promise.resolve()):o},t.addIceCandidate=s}}function c(e){var t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){var r=t.mediaDevices,o=r.getUserMedia.bind(r);t.mediaDevices.getUserMedia=function(e){return o(s(e))}}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,r,o){t.mediaDevices.getUserMedia(e).then(r,o)}.bind(t))}function s(t){return t&&void 0!==t.video?Object.assign({},t,{video:e.compactObject(t.video)}):t}function d(t){if(t.RTCPeerConnection){var r=t.RTCPeerConnection;t.RTCPeerConnection=function(t,o){if(t&&t.iceServers){for(var n=[],i=0;i<t.iceServers.length;i++){var a=t.iceServers[i];!a.hasOwnProperty(\"urls\")&&a.hasOwnProperty(\"url\")?(e.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),(a=JSON.parse(JSON.stringify(a))).urls=a.url,delete a.url,n.push(a)):n.push(t.iceServers[i])}t.iceServers=n}return new r(t,o)},t.RTCPeerConnection.prototype=r.prototype,\"generateCertificate\"in r&&Object.defineProperty(t.RTCPeerConnection,\"generateCertificate\",{get:function(){return r.generateCertificate}})}}function f(e){\"object\"===o(e)&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})}function p(e){var t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);var r=this.getTransceivers().find(function(e){return\"audio\"===e.receiver.track.kind});!1===e.offerToReceiveAudio&&r?\"sendrecv\"===r.direction?r.setDirection?r.setDirection(\"sendonly\"):r.direction=\"sendonly\":\"recvonly\"===r.direction&&(r.setDirection?r.setDirection(\"inactive\"):r.direction=\"inactive\"):!0!==e.offerToReceiveAudio||r||this.addTransceiver(\"audio\"),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);var o=this.getTransceivers().find(function(e){return\"video\"===e.receiver.track.kind});!1===e.offerToReceiveVideo&&o?\"sendrecv\"===o.direction?o.setDirection?o.setDirection(\"sendonly\"):o.direction=\"sendonly\":\"recvonly\"===o.direction&&(o.setDirection?o.setDirection(\"inactive\"):o.direction=\"inactive\"):!0!==e.offerToReceiveVideo||o||this.addTransceiver(\"video\")}return t.apply(this,arguments)}}function u(e){\"object\"!==o(e)||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}\n},{\"../utils\":\"iSxC\"}],\"GOQK\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shimRTCIceCandidate=a,exports.shimMaxMessageSize=c,exports.shimSendThrowTypeError=s,exports.shimConnectionState=p,exports.removeExtmapAllowMixed=d,exports.shimAddIceCandidateNullOrEmpty=u;var e=r(require(\"sdp\")),t=o(require(\"./utils\"));function n(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return n=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=n();if(t&&t.has(e))return t.get(e);var o={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var a=r?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(o,i,a):o[i]=e[i]}return o.default=e,t&&t.set(e,o),o}function r(e){return e&&e.__esModule?e:{default:e}}function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(n){if(n.RTCIceCandidate&&!(n.RTCIceCandidate&&\"foundation\"in n.RTCIceCandidate.prototype)){var o=n.RTCIceCandidate;n.RTCIceCandidate=function(t){if(\"object\"===i(t)&&t.candidate&&0===t.candidate.indexOf(\"a=\")&&((t=JSON.parse(JSON.stringify(t))).candidate=t.candidate.substr(2)),t.candidate&&t.candidate.length){var n=new o(t),r=e.default.parseCandidate(t.candidate),a=Object.assign(n,r);return a.toJSON=function(){return{candidate:a.candidate,sdpMid:a.sdpMid,sdpMLineIndex:a.sdpMLineIndex,usernameFragment:a.usernameFragment}},a}return new o(t)},n.RTCIceCandidate.prototype=o.prototype,t.wrapPeerConnectionEvent(n,\"icecandidate\",function(e){return e.candidate&&Object.defineProperty(e,\"candidate\",{value:new n.RTCIceCandidate(e.candidate),writable:\"false\"}),e})}}function c(t,n){if(t.RTCPeerConnection){\"sctp\"in t.RTCPeerConnection.prototype||Object.defineProperty(t.RTCPeerConnection.prototype,\"sctp\",{get:function(){return void 0===this._sctp?null:this._sctp}});var o=t.RTCPeerConnection.prototype.setRemoteDescription;t.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,\"chrome\"===n.browser&&n.version>=76){var{sdpSemantics:t}=this.getConfiguration();\"plan-b\"===t&&Object.defineProperty(this,\"sctp\",{get:function(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(function(t){if(!t||!t.sdp)return!1;var n=e.default.splitSections(t.sdp);return n.shift(),n.some(function(t){var n=e.default.parseMLine(t);return n&&\"application\"===n.kind&&-1!==n.protocol.indexOf(\"SCTP\")})}(arguments[0])){var r,i=function(e){var t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;var n=parseInt(t[1],10);return n!=n?-1:n}(arguments[0]),a=(p=i,d=65536,\"firefox\"===n.browser&&(d=n.version<57?-1===p?16384:2147483637:n.version<60?57===n.version?65535:65536:2147483637),d),c=function(t,o){var r=65536;\"firefox\"===n.browser&&57===n.version&&(r=65535);var i=e.default.matchPrefix(t.sdp,\"a=max-message-size:\");return i.length>0?r=parseInt(i[0].substr(19),10):\"firefox\"===n.browser&&-1!==o&&(r=2147483637),r}(arguments[0],i);r=0===a&&0===c?Number.POSITIVE_INFINITY:0===a||0===c?Math.max(a,c):Math.min(a,c);var s={};Object.defineProperty(s,\"maxMessageSize\",{get:function(){return r}}),this._sctp=s}var p,d;return o.apply(this,arguments)}}}function s(e){if(e.RTCPeerConnection&&\"createDataChannel\"in e.RTCPeerConnection.prototype){var n=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){var e=n.apply(this,arguments);return o(e,this),e},t.wrapPeerConnectionEvent(e,\"datachannel\",function(e){return o(e.channel,e.target),e})}function o(e,t){var n=e.send;e.send=function(){var o=arguments[0],r=o.length||o.size||o.byteLength;if(\"open\"===e.readyState&&t.sctp&&r>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return n.apply(e,arguments)}}}function p(e){if(e.RTCPeerConnection&&!(\"connectionState\"in e.RTCPeerConnection.prototype)){var t=e.RTCPeerConnection.prototype;Object.defineProperty(t,\"connectionState\",{get:function(){return{completed:\"connected\",checking:\"connecting\"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"onconnectionstatechange\",{get:function(){return this._onconnectionstatechange||null},set:function(e){this._onconnectionstatechange&&(this.removeEventListener(\"connectionstatechange\",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener(\"connectionstatechange\",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),[\"setLocalDescription\",\"setRemoteDescription\"].forEach(function(e){var n=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=function(e){var t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;var n=new Event(\"connectionstatechange\",e);t.dispatchEvent(n)}return e},this.addEventListener(\"iceconnectionstatechange\",this._connectionstatechangepoly)),n.apply(this,arguments)}})}}function d(e,t){if(e.RTCPeerConnection&&!(\"chrome\"===t.browser&&t.version>=71||\"safari\"===t.browser&&t.version>=605)){var n=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf(\"\\na=extmap-allow-mixed\")){var o=t.sdp.split(\"\\n\").filter(function(e){return\"a=extmap-allow-mixed\"!==e.trim()}).join(\"\\n\");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:o}):t.sdp=o}return n.apply(this,arguments)}}}function u(e,t){if(e.RTCPeerConnection&&e.RTCPeerConnection.prototype){var n=e.RTCPeerConnection.prototype.addIceCandidate;n&&0!==n.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?(\"chrome\"===t.browser&&t.version<78||\"firefox\"===t.browser&&t.version<68||\"safari\"===t.browser)&&arguments[0]&&\"\"===arguments[0].candidate?Promise.resolve():n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())})}}\n},{\"sdp\":\"YHvh\",\"./utils\":\"iSxC\"}],\"KtlG\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.adapterFactory=o;var e=m(require(\"./utils\")),i=m(require(\"./chrome/chrome_shim\")),r=m(require(\"./edge/edge_shim\")),s=m(require(\"./firefox/firefox_shim\")),t=m(require(\"./safari/safari_shim\")),a=m(require(\"./common_shim\"));function n(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return n=function(){return e},e}function m(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var i=n();if(i&&i.has(e))return i.get(e);var r={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)){var a=s?Object.getOwnPropertyDescriptor(e,t):null;a&&(a.get||a.set)?Object.defineProperty(r,t,a):r[t]=e[t]}return r.default=e,i&&i.set(e,r),r}function o(){var{window:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},m=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0},o=e.log,h=e.detectBrowser(n),d={browserDetails:h,commonShim:a,extractVersion:e.extractVersion,disableLog:e.disableLog,disableWarnings:e.disableWarnings};switch(h.browser){case\"chrome\":if(!i||!i.shimPeerConnection||!m.shimChrome)return o(\"Chrome shim is not included in this adapter release.\"),d;if(null===h.version)return o(\"Chrome shim can not determine version, not shimming.\"),d;o(\"adapter.js shimming chrome.\"),d.browserShim=i,a.shimAddIceCandidateNullOrEmpty(n,h),i.shimGetUserMedia(n,h),i.shimMediaStream(n,h),i.shimPeerConnection(n,h),i.shimOnTrack(n,h),i.shimAddTrackRemoveTrack(n,h),i.shimGetSendersWithDtmf(n,h),i.shimGetStats(n,h),i.shimSenderReceiverGetStats(n,h),i.fixNegotiationNeeded(n,h),a.shimRTCIceCandidate(n,h),a.shimConnectionState(n,h),a.shimMaxMessageSize(n,h),a.shimSendThrowTypeError(n,h),a.removeExtmapAllowMixed(n,h);break;case\"firefox\":if(!s||!s.shimPeerConnection||!m.shimFirefox)return o(\"Firefox shim is not included in this adapter release.\"),d;o(\"adapter.js shimming firefox.\"),d.browserShim=s,a.shimAddIceCandidateNullOrEmpty(n,h),s.shimGetUserMedia(n,h),s.shimPeerConnection(n,h),s.shimOnTrack(n,h),s.shimRemoveStream(n,h),s.shimSenderGetStats(n,h),s.shimReceiverGetStats(n,h),s.shimRTCDataChannel(n,h),s.shimAddTransceiver(n,h),s.shimGetParameters(n,h),s.shimCreateOffer(n,h),s.shimCreateAnswer(n,h),a.shimRTCIceCandidate(n,h),a.shimConnectionState(n,h),a.shimMaxMessageSize(n,h),a.shimSendThrowTypeError(n,h);break;case\"edge\":if(!r||!r.shimPeerConnection||!m.shimEdge)return o(\"MS edge shim is not included in this adapter release.\"),d;o(\"adapter.js shimming edge.\"),d.browserShim=r,r.shimGetUserMedia(n,h),r.shimGetDisplayMedia(n,h),r.shimPeerConnection(n,h),r.shimReplaceTrack(n,h),a.shimMaxMessageSize(n,h),a.shimSendThrowTypeError(n,h);break;case\"safari\":if(!t||!m.shimSafari)return o(\"Safari shim is not included in this adapter release.\"),d;o(\"adapter.js shimming safari.\"),d.browserShim=t,a.shimAddIceCandidateNullOrEmpty(n,h),t.shimRTCIceServerUrls(n,h),t.shimCreateOfferLegacy(n,h),t.shimCallbacksAPI(n,h),t.shimLocalStreamsAPI(n,h),t.shimRemoteStreamsAPI(n,h),t.shimTrackEventTransceiver(n,h),t.shimGetUserMedia(n,h),t.shimAudioContext(n,h),a.shimRTCIceCandidate(n,h),a.shimMaxMessageSize(n,h),a.shimSendThrowTypeError(n,h),a.removeExtmapAllowMixed(n,h);break;default:o(\"Unsupported browser!\")}return d}\n},{\"./utils\":\"iSxC\",\"./chrome/chrome_shim\":\"uI5X\",\"./edge/edge_shim\":\"XRic\",\"./firefox/firefox_shim\":\"Fzdr\",\"./safari/safari_shim\":\"t1lL\",\"./common_shim\":\"GOQK\"}],\"tI1X\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"./adapter_factory.js\"),t=(0,e.adapterFactory)({window:\"undefined\"==typeof window?void 0:window}),d=t;exports.default=d;\n},{\"./adapter_factory.js\":\"KtlG\"}],\"sXtV\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.webRTCAdapter=void 0;var t=e(require(\"webrtc-adapter\"));exports.webRTCAdapter=t.default;\n},{\"webrtc-adapter\":\"tI1X\"}],\"I31f\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Supports=void 0;var r=require(\"./adapter\");exports.Supports=new(function(){function e(){this.isIOS=[\"iPad\",\"iPhone\",\"iPod\"].includes(navigator.platform),this.supportedBrowsers=[\"firefox\",\"chrome\",\"safari\"],this.minFirefoxVersion=59,this.minChromeVersion=72,this.minSafariVersion=605}return e.prototype.isWebRTCSupported=function(){return\"undefined\"!=typeof RTCPeerConnection},e.prototype.isBrowserSupported=function(){var r=this.getBrowser(),e=this.getVersion();return!!this.supportedBrowsers.includes(r)&&(\"chrome\"===r?e>=this.minChromeVersion:\"firefox\"===r?e>=this.minFirefoxVersion:\"safari\"===r&&(!this.isIOS&&e>=this.minSafariVersion))},e.prototype.getBrowser=function(){return r.webRTCAdapter.browserDetails.browser},e.prototype.getVersion=function(){return r.webRTCAdapter.browserDetails.version||0},e.prototype.isUnifiedPlanSupported=function(){var e,i=this.getBrowser(),t=r.webRTCAdapter.browserDetails.version||0;if(\"chrome\"===i&&t<72)return!1;if(\"firefox\"===i&&t>=59)return!0;if(!(window.RTCRtpTransceiver&&\"currentDirection\"in RTCRtpTransceiver.prototype))return!1;var o=!1;try{(e=new RTCPeerConnection).addTransceiver(\"audio\"),o=!0}catch(s){}finally{e&&e.close()}return o},e.prototype.toString=function(){return\"Supports: \\n    browser:\"+this.getBrowser()+\" \\n    version:\"+this.getVersion()+\" \\n    isIOS:\"+this.isIOS+\" \\n    isWebRTCSupported:\"+this.isWebRTCSupported()+\" \\n    isBrowserSupported:\"+this.isBrowserSupported()+\" \\n    isUnifiedPlanSupported:\"+this.isUnifiedPlanSupported()},e}());\n},{\"./adapter\":\"sXtV\"}],\"BHXf\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var o={};if(null!=r)for(var n in r)\"default\"!==n&&Object.prototype.hasOwnProperty.call(r,n)&&e(o,r,n);return t(o,r),o};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.util=void 0;var o=r(require(\"peerjs-js-binarypack\")),n=require(\"./supports\"),i={iceServers:[{urls:\"stun:stun.l.google.com:19302\"},{urls:\"turn:0.peerjs.com:3478\",username:\"peerjs\",credential:\"peerjsp\"}],sdpSemantics:\"unified-plan\"};exports.util=new(function(){function e(){this.CLOUD_HOST=\"0.peerjs.com\",this.CLOUD_PORT=443,this.chunkedBrowsers={Chrome:1,chrome:1},this.chunkedMTU=16300,this.defaultConfig=i,this.browser=n.Supports.getBrowser(),this.browserVersion=n.Supports.getVersion(),this.supports=function(){var e,t={browser:n.Supports.isBrowserSupported(),webRTC:n.Supports.isWebRTCSupported(),audioVideo:!1,data:!1,binaryBlob:!1,reliable:!1};if(!t.webRTC)return t;try{e=new RTCPeerConnection(i),t.audioVideo=!0;var r=void 0;try{r=e.createDataChannel(\"_PEERJSTEST\",{ordered:!0}),t.data=!0,t.reliable=!!r.ordered;try{r.binaryType=\"blob\",t.binaryBlob=!n.Supports.isIOS}catch(o){}}catch(o){}finally{r&&r.close()}}catch(o){}finally{e&&e.close()}return t}(),this.pack=o.pack,this.unpack=o.unpack,this._dataCount=1}return e.prototype.noop=function(){},e.prototype.validateId=function(e){return!e||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(e)},e.prototype.chunk=function(e){for(var t=[],r=e.size,o=Math.ceil(r/exports.util.chunkedMTU),n=0,i=0;i<r;){var a=Math.min(r,i+exports.util.chunkedMTU),u=e.slice(i,a),s={__peerData:this._dataCount,n:n,data:u,total:o};t.push(s),i=a,n++}return this._dataCount++,t},e.prototype.blobToArrayBuffer=function(e,t){var r=new FileReader;return r.onload=function(e){e.target&&t(e.target.result)},r.readAsArrayBuffer(e),r},e.prototype.binaryStringToArrayBuffer=function(e){for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=255&e.charCodeAt(r);return t.buffer},e.prototype.randomToken=function(){return Math.random().toString(36).substr(2)},e.prototype.isSecure=function(){return\"https:\"===location.protocol},e}());\n},{\"peerjs-js-binarypack\":\"kdPp\",\"./supports\":\"I31f\"}],\"JJlS\":[function(require,module,exports) {\n\"use strict\";var e=Object.prototype.hasOwnProperty,t=\"~\";function n(){}function r(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function o(e,n,o,s,i){if(\"function\"!=typeof o)throw new TypeError(\"The listener must be a function\");var c=new r(o,s||e,i),f=t?t+n:n;return e._events[f]?e._events[f].fn?e._events[f]=[e._events[f],c]:e._events[f].push(c):(e._events[f]=c,e._eventsCount++),e}function s(e,t){0==--e._eventsCount?e._events=new n:delete e._events[t]}function i(){this._events=new n,this._eventsCount=0}Object.create&&(n.prototype=Object.create(null),(new n).__proto__||(t=!1)),i.prototype.eventNames=function(){var n,r,o=[];if(0===this._eventsCount)return o;for(r in n=this._events)e.call(n,r)&&o.push(t?r.slice(1):r);return Object.getOwnPropertySymbols?o.concat(Object.getOwnPropertySymbols(n)):o},i.prototype.listeners=function(e){var n=t?t+e:e,r=this._events[n];if(!r)return[];if(r.fn)return[r.fn];for(var o=0,s=r.length,i=new Array(s);o<s;o++)i[o]=r[o].fn;return i},i.prototype.listenerCount=function(e){var n=t?t+e:e,r=this._events[n];return r?r.fn?1:r.length:0},i.prototype.emit=function(e,n,r,o,s,i){var c=t?t+e:e;if(!this._events[c])return!1;var f,u,a=this._events[c],l=arguments.length;if(a.fn){switch(a.once&&this.removeListener(e,a.fn,void 0,!0),l){case 1:return a.fn.call(a.context),!0;case 2:return a.fn.call(a.context,n),!0;case 3:return a.fn.call(a.context,n,r),!0;case 4:return a.fn.call(a.context,n,r,o),!0;case 5:return a.fn.call(a.context,n,r,o,s),!0;case 6:return a.fn.call(a.context,n,r,o,s,i),!0}for(u=1,f=new Array(l-1);u<l;u++)f[u-1]=arguments[u];a.fn.apply(a.context,f)}else{var v,h=a.length;for(u=0;u<h;u++)switch(a[u].once&&this.removeListener(e,a[u].fn,void 0,!0),l){case 1:a[u].fn.call(a[u].context);break;case 2:a[u].fn.call(a[u].context,n);break;case 3:a[u].fn.call(a[u].context,n,r);break;case 4:a[u].fn.call(a[u].context,n,r,o);break;default:if(!f)for(v=1,f=new Array(l-1);v<l;v++)f[v-1]=arguments[v];a[u].fn.apply(a[u].context,f)}}return!0},i.prototype.on=function(e,t,n){return o(this,e,t,n,!1)},i.prototype.once=function(e,t,n){return o(this,e,t,n,!0)},i.prototype.removeListener=function(e,n,r,o){var i=t?t+e:e;if(!this._events[i])return this;if(!n)return s(this,i),this;var c=this._events[i];if(c.fn)c.fn!==n||o&&!c.once||r&&c.context!==r||s(this,i);else{for(var f=0,u=[],a=c.length;f<a;f++)(c[f].fn!==n||o&&!c[f].once||r&&c[f].context!==r)&&u.push(c[f]);u.length?this._events[i]=1===u.length?u[0]:u:s(this,i)}return this},i.prototype.removeAllListeners=function(e){var r;return e?(r=t?t+e:e,this._events[r]&&s(this,r)):(this._events=new n,this._eventsCount=0),this},i.prototype.off=i.prototype.removeListener,i.prototype.addListener=i.prototype.on,i.prefixed=t,i.EventEmitter=i,\"undefined\"!=typeof module&&(module.exports=i);\n},{}],\"WOs9\":[function(require,module,exports) {\n\"use strict\";var r=this&&this.__read||function(r,e){var o=\"function\"==typeof Symbol&&r[Symbol.iterator];if(!o)return r;var t,n,l=o.call(r),i=[];try{for(;(void 0===e||e-- >0)&&!(t=l.next()).done;)i.push(t.value)}catch(s){n={error:s}}finally{try{t&&!t.done&&(o=l.return)&&o.call(l)}finally{if(n)throw n.error}}return i},e=this&&this.__spreadArray||function(r,e){for(var o=0,t=e.length,n=r.length;o<t;o++,n++)r[n]=e[o];return r};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.LogLevel=void 0;var o,t=\"PeerJS: \";!function(r){r[r.Disabled=0]=\"Disabled\",r[r.Errors=1]=\"Errors\",r[r.Warnings=2]=\"Warnings\",r[r.All=3]=\"All\"}(o=exports.LogLevel||(exports.LogLevel={}));var n=function(){function n(){this._logLevel=o.Disabled}return Object.defineProperty(n.prototype,\"logLevel\",{get:function(){return this._logLevel},set:function(r){this._logLevel=r},enumerable:!1,configurable:!0}),n.prototype.log=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this._logLevel>=o.All&&this._print.apply(this,e([o.All],r(t)))},n.prototype.warn=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this._logLevel>=o.Warnings&&this._print.apply(this,e([o.Warnings],r(t)))},n.prototype.error=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this._logLevel>=o.Errors&&this._print.apply(this,e([o.Errors],r(t)))},n.prototype.setLogFunction=function(r){this._print=r},n.prototype._print=function(n){for(var l=[],i=1;i<arguments.length;i++)l[i-1]=arguments[i];var s=e([t],r(l));for(var a in s)s[a]instanceof Error&&(s[a]=\"(\"+s[a].name+\") \"+s[a].message);n>=o.All?console.log.apply(console,e([],r(s))):n>=o.Warnings?console.warn.apply(console,e([\"WARNING\"],r(s))):n>=o.Errors&&console.error.apply(console,e([\"ERROR\"],r(s)))},n}();exports.default=new n;\n},{}],\"ZRYf\":[function(require,module,exports) {\n\"use strict\";var e,r,o,n,t,a,i;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ServerMessageType=exports.SocketEventType=exports.SerializationType=exports.PeerErrorType=exports.PeerEventType=exports.ConnectionType=exports.ConnectionEventType=void 0,function(e){e.Open=\"open\",e.Stream=\"stream\",e.Data=\"data\",e.Close=\"close\",e.Error=\"error\",e.IceStateChanged=\"iceStateChanged\"}(e=exports.ConnectionEventType||(exports.ConnectionEventType={})),function(e){e.Data=\"data\",e.Media=\"media\"}(r=exports.ConnectionType||(exports.ConnectionType={})),function(e){e.Open=\"open\",e.Close=\"close\",e.Connection=\"connection\",e.Call=\"call\",e.Disconnected=\"disconnected\",e.Error=\"error\"}(o=exports.PeerEventType||(exports.PeerEventType={})),function(e){e.BrowserIncompatible=\"browser-incompatible\",e.Disconnected=\"disconnected\",e.InvalidID=\"invalid-id\",e.InvalidKey=\"invalid-key\",e.Network=\"network\",e.PeerUnavailable=\"peer-unavailable\",e.SslUnavailable=\"ssl-unavailable\",e.ServerError=\"server-error\",e.SocketError=\"socket-error\",e.SocketClosed=\"socket-closed\",e.UnavailableID=\"unavailable-id\",e.WebRTC=\"webrtc\"}(n=exports.PeerErrorType||(exports.PeerErrorType={})),function(e){e.Binary=\"binary\",e.BinaryUTF8=\"binary-utf8\",e.JSON=\"json\"}(t=exports.SerializationType||(exports.SerializationType={})),function(e){e.Message=\"message\",e.Disconnected=\"disconnected\",e.Error=\"error\",e.Close=\"close\"}(a=exports.SocketEventType||(exports.SocketEventType={})),function(e){e.Heartbeat=\"HEARTBEAT\",e.Candidate=\"CANDIDATE\",e.Offer=\"OFFER\",e.Answer=\"ANSWER\",e.Open=\"OPEN\",e.Error=\"ERROR\",e.IdTaken=\"ID-TAKEN\",e.InvalidKey=\"INVALID-KEY\",e.Leave=\"LEAVE\",e.Expire=\"EXPIRE\"}(i=exports.ServerMessageType||(exports.ServerMessageType={}));\n},{}],\"wJlv\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),t=this&&this.__read||function(e,t){var n=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,s,r=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(o=r.next()).done;)i.push(o.value)}catch(c){s={error:c}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(s)throw s.error}}return i},n=this&&this.__spreadArray||function(e,t){for(var n=0,o=t.length,s=e.length;n<o;n++,s++)e[s]=t[n];return e},o=this&&this.__values||function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],o=0;if(n)return n.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Socket=void 0;var r=require(\"eventemitter3\"),i=s(require(\"./logger\")),c=require(\"./enums\"),a=function(s){function r(e,t,n,o,r,i){void 0===i&&(i=5e3);var c=s.call(this)||this;c.pingInterval=i,c._disconnected=!0,c._messagesQueue=[];var a=e?\"wss://\":\"ws://\";return c._baseUrl=a+t+\":\"+n+o+\"peerjs?key=\"+r,c}return e(r,s),r.prototype.start=function(e,t){var n=this;this._id=e;var o=this._baseUrl+\"&id=\"+e+\"&token=\"+t;!this._socket&&this._disconnected&&(this._socket=new WebSocket(o),this._disconnected=!1,this._socket.onmessage=function(e){var t;try{t=JSON.parse(e.data),i.default.log(\"Server message received:\",t)}catch(o){return void i.default.log(\"Invalid server message\",e.data)}n.emit(c.SocketEventType.Message,t)},this._socket.onclose=function(e){n._disconnected||(i.default.log(\"Socket closed.\",e),n._cleanup(),n._disconnected=!0,n.emit(c.SocketEventType.Disconnected))},this._socket.onopen=function(){n._disconnected||(n._sendQueuedMessages(),i.default.log(\"Socket open\"),n._scheduleHeartbeat())})},r.prototype._scheduleHeartbeat=function(){var e=this;this._wsPingTimer=setTimeout(function(){e._sendHeartbeat()},this.pingInterval)},r.prototype._sendHeartbeat=function(){if(this._wsOpen()){var e=JSON.stringify({type:c.ServerMessageType.Heartbeat});this._socket.send(e),this._scheduleHeartbeat()}else i.default.log(\"Cannot send heartbeat, because socket closed\")},r.prototype._wsOpen=function(){return!!this._socket&&1===this._socket.readyState},r.prototype._sendQueuedMessages=function(){var e,s,r=n([],t(this._messagesQueue));this._messagesQueue=[];try{for(var i=o(r),c=i.next();!c.done;c=i.next()){var a=c.value;this.send(a)}}catch(u){e={error:u}}finally{try{c&&!c.done&&(s=i.return)&&s.call(i)}finally{if(e)throw e.error}}},r.prototype.send=function(e){if(!this._disconnected)if(this._id)if(e.type){if(this._wsOpen()){var t=JSON.stringify(e);this._socket.send(t)}}else this.emit(c.SocketEventType.Error,\"Invalid message\");else this._messagesQueue.push(e)},r.prototype.close=function(){this._disconnected||(this._cleanup(),this._disconnected=!0)},r.prototype._cleanup=function(){this._socket&&(this._socket.onopen=this._socket.onmessage=this._socket.onclose=null,this._socket.close(),this._socket=void 0),clearTimeout(this._wsPingTimer)},r}(r.EventEmitter);exports.Socket=a;\n},{\"eventemitter3\":\"JJlS\",\"./logger\":\"WOs9\",\"./enums\":\"ZRYf\"}],\"HCdX\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var n,t=1,o=arguments.length;t<o;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e}).apply(this,arguments)},n=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))(function(i,r){function c(e){try{s(o.next(e))}catch(n){r(n)}}function a(e){try{s(o.throw(e))}catch(n){r(n)}}function s(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(c,a)}s((o=o.apply(e,n||[])).next())})},t=this&&this.__generator||function(e,n){var t,o,i,r,c={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(r){return function(a){return function(r){if(t)throw new TypeError(\"Generator is already executing.\");for(;c;)try{if(t=1,o&&(i=2&r[0]?o.return:r[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,r[1])).done)return i;switch(o=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,o=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(!(i=(i=c.trys).length>0&&i[i.length-1])&&(6===r[0]||2===r[0])){c=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){c.label=r[1];break}if(6===r[0]&&c.label<i[1]){c.label=i[1],i=r;break}if(i&&c.label<i[2]){c.label=i[2],c.ops.push(r);break}i[2]&&c.ops.pop(),c.trys.pop();continue}r=n.call(e,c)}catch(a){r=[6,a],o=0}finally{t=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,a])}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Negotiator=void 0;var i=require(\"./util\"),r=o(require(\"./logger\")),c=require(\"./enums\"),a=function(){function o(e){this.connection=e}return o.prototype.startConnection=function(e){var n=this._startPeerConnection();if(this.connection.peerConnection=n,this.connection.type===c.ConnectionType.Media&&e._stream&&this._addTracksToConnection(e._stream,n),e.originator){if(this.connection.type===c.ConnectionType.Data){var t=this.connection,o={ordered:!!e.reliable},i=n.createDataChannel(t.label,o);t.initialize(i)}this._makeOffer()}else this.handleSDP(\"OFFER\",e.sdp)},o.prototype._startPeerConnection=function(){r.default.log(\"Creating RTCPeerConnection.\");var e=new RTCPeerConnection(this.connection.provider.options.config);return this._setupListeners(e),e},o.prototype._setupListeners=function(e){var n=this,t=this.connection.peer,o=this.connection.connectionId,a=this.connection.type,s=this.connection.provider;r.default.log(\"Listening for ICE candidates.\"),e.onicecandidate=function(e){e.candidate&&e.candidate.candidate&&(r.default.log(\"Received ICE candidates for \"+t+\":\",e.candidate),s.socket.send({type:c.ServerMessageType.Candidate,payload:{candidate:e.candidate,type:a,connectionId:o},dst:t}))},e.oniceconnectionstatechange=function(){switch(e.iceConnectionState){case\"failed\":r.default.log(\"iceConnectionState is failed, closing connections to \"+t),n.connection.emit(c.ConnectionEventType.Error,new Error(\"Negotiation of connection to \"+t+\" failed.\")),n.connection.close();break;case\"closed\":r.default.log(\"iceConnectionState is closed, closing connections to \"+t),n.connection.emit(c.ConnectionEventType.Error,new Error(\"Connection to \"+t+\" closed.\")),n.connection.close();break;case\"disconnected\":r.default.log(\"iceConnectionState changed to disconnected on the connection with \"+t);break;case\"completed\":e.onicecandidate=i.util.noop}n.connection.emit(c.ConnectionEventType.IceStateChanged,e.iceConnectionState)},r.default.log(\"Listening for data channel\"),e.ondatachannel=function(e){r.default.log(\"Received data channel\");var n=e.channel;s.getConnection(t,o).initialize(n)},r.default.log(\"Listening for remote stream\"),e.ontrack=function(e){r.default.log(\"Received remote stream\");var i=e.streams[0],a=s.getConnection(t,o);if(a.type===c.ConnectionType.Media){var d=a;n._addStreamToMediaConnection(i,d)}}},o.prototype.cleanup=function(){r.default.log(\"Cleaning up PeerConnection to \"+this.connection.peer);var e=this.connection.peerConnection;if(e){this.connection.peerConnection=null,e.onicecandidate=e.oniceconnectionstatechange=e.ondatachannel=e.ontrack=function(){};var n=\"closed\"!==e.signalingState,t=!1;if(this.connection.type===c.ConnectionType.Data){var o=this.connection.dataChannel;o&&(t=!!o.readyState&&\"closed\"!==o.readyState)}(n||t)&&e.close()}},o.prototype._makeOffer=function(){return n(this,void 0,Promise,function(){var n,o,a,s,d,l,u;return t(this,function(t){switch(t.label){case 0:n=this.connection.peerConnection,o=this.connection.provider,t.label=1;case 1:return t.trys.push([1,7,,8]),[4,n.createOffer(this.connection.options.constraints)];case 2:a=t.sent(),r.default.log(\"Created offer.\"),this.connection.options.sdpTransform&&\"function\"==typeof this.connection.options.sdpTransform&&(a.sdp=this.connection.options.sdpTransform(a.sdp)||a.sdp),t.label=3;case 3:return t.trys.push([3,5,,6]),[4,n.setLocalDescription(a)];case 4:return t.sent(),r.default.log(\"Set localDescription:\",a,\"for:\"+this.connection.peer),s={sdp:a,type:this.connection.type,connectionId:this.connection.connectionId,metadata:this.connection.metadata,browser:i.util.browser},this.connection.type===c.ConnectionType.Data&&(d=this.connection,s=e(e({},s),{label:d.label,reliable:d.reliable,serialization:d.serialization})),o.socket.send({type:c.ServerMessageType.Offer,payload:s,dst:this.connection.peer}),[3,6];case 5:return\"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"!=(l=t.sent())&&(o.emitError(c.PeerErrorType.WebRTC,l),r.default.log(\"Failed to setLocalDescription, \",l)),[3,6];case 6:return[3,8];case 7:return u=t.sent(),o.emitError(c.PeerErrorType.WebRTC,u),r.default.log(\"Failed to createOffer, \",u),[3,8];case 8:return[2]}})})},o.prototype._makeAnswer=function(){return n(this,void 0,Promise,function(){var e,n,o,a,s;return t(this,function(t){switch(t.label){case 0:e=this.connection.peerConnection,n=this.connection.provider,t.label=1;case 1:return t.trys.push([1,7,,8]),[4,e.createAnswer()];case 2:o=t.sent(),r.default.log(\"Created answer.\"),this.connection.options.sdpTransform&&\"function\"==typeof this.connection.options.sdpTransform&&(o.sdp=this.connection.options.sdpTransform(o.sdp)||o.sdp),t.label=3;case 3:return t.trys.push([3,5,,6]),[4,e.setLocalDescription(o)];case 4:return t.sent(),r.default.log(\"Set localDescription:\",o,\"for:\"+this.connection.peer),n.socket.send({type:c.ServerMessageType.Answer,payload:{sdp:o,type:this.connection.type,connectionId:this.connection.connectionId,browser:i.util.browser},dst:this.connection.peer}),[3,6];case 5:return a=t.sent(),n.emitError(c.PeerErrorType.WebRTC,a),r.default.log(\"Failed to setLocalDescription, \",a),[3,6];case 6:return[3,8];case 7:return s=t.sent(),n.emitError(c.PeerErrorType.WebRTC,s),r.default.log(\"Failed to create answer, \",s),[3,8];case 8:return[2]}})})},o.prototype.handleSDP=function(e,o){return n(this,void 0,Promise,function(){var n,i,a,s;return t(this,function(t){switch(t.label){case 0:o=new RTCSessionDescription(o),n=this.connection.peerConnection,i=this.connection.provider,r.default.log(\"Setting remote description\",o),a=this,t.label=1;case 1:return t.trys.push([1,5,,6]),[4,n.setRemoteDescription(o)];case 2:return t.sent(),r.default.log(\"Set remoteDescription:\"+e+\" for:\"+this.connection.peer),\"OFFER\"!==e?[3,4]:[4,a._makeAnswer()];case 3:t.sent(),t.label=4;case 4:return[3,6];case 5:return s=t.sent(),i.emitError(c.PeerErrorType.WebRTC,s),r.default.log(\"Failed to setRemoteDescription, \",s),[3,6];case 6:return[2]}})})},o.prototype.handleCandidate=function(e){return n(this,void 0,Promise,function(){var n,o,i,a,s,d;return t(this,function(t){switch(t.label){case 0:r.default.log(\"handleCandidate:\",e),n=e.candidate,o=e.sdpMLineIndex,i=e.sdpMid,a=this.connection.peerConnection,s=this.connection.provider,t.label=1;case 1:return t.trys.push([1,3,,4]),[4,a.addIceCandidate(new RTCIceCandidate({sdpMid:i,sdpMLineIndex:o,candidate:n}))];case 2:return t.sent(),r.default.log(\"Added ICE candidate for:\"+this.connection.peer),[3,4];case 3:return d=t.sent(),s.emitError(c.PeerErrorType.WebRTC,d),r.default.log(\"Failed to handleCandidate, \",d),[3,4];case 4:return[2]}})})},o.prototype._addTracksToConnection=function(e,n){if(r.default.log(\"add tracks from stream \"+e.id+\" to peer connection\"),!n.addTrack)return r.default.error(\"Your browser does't support RTCPeerConnection#addTrack. Ignored.\");e.getTracks().forEach(function(t){n.addTrack(t,e)})},o.prototype._addStreamToMediaConnection=function(e,n){r.default.log(\"add stream \"+e.id+\" to media connection \"+n.connectionId),n.addStream(e)},o}();exports.Negotiator=a;\n},{\"./util\":\"BHXf\",\"./logger\":\"WOs9\",\"./enums\":\"ZRYf\"}],\"tQFK\":[function(require,module,exports) {\n\"use strict\";var t=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BaseConnection=void 0;var e=require(\"eventemitter3\"),n=function(e){function n(t,n,o){var r=e.call(this)||this;return r.peer=t,r.provider=n,r.options=o,r._open=!1,r.metadata=o.metadata,r}return t(n,e),Object.defineProperty(n.prototype,\"open\",{get:function(){return this._open},enumerable:!1,configurable:!0}),n}(e.EventEmitter);exports.BaseConnection=n;\n},{\"eventemitter3\":\"JJlS\"}],\"dbHP\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__extends||function(){var e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(t,o)};return function(t,o){if(\"function\"!=typeof o&&null!==o)throw new TypeError(\"Class extends value \"+String(o)+\" is not a constructor or null\");function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),t=this&&this.__assign||function(){return(t=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var n in t=arguments[o])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},o=this&&this.__values||function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,o=t&&e[t],r=0;if(o)return o.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.MediaConnection=void 0;var n=require(\"./util\"),i=r(require(\"./logger\")),a=require(\"./negotiator\"),s=require(\"./enums\"),l=require(\"./baseconnection\"),c=function(r){function l(e,t,o){var i=r.call(this,e,t,o)||this;return i._localStream=i.options._stream,i.connectionId=i.options.connectionId||l.ID_PREFIX+n.util.randomToken(),i._negotiator=new a.Negotiator(i),i._localStream&&i._negotiator.startConnection({_stream:i._localStream,originator:!0}),i}return e(l,r),Object.defineProperty(l.prototype,\"type\",{get:function(){return s.ConnectionType.Media},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,\"localStream\",{get:function(){return this._localStream},enumerable:!1,configurable:!0}),Object.defineProperty(l.prototype,\"remoteStream\",{get:function(){return this._remoteStream},enumerable:!1,configurable:!0}),l.prototype.addStream=function(e){i.default.log(\"Receiving stream\",e),this._remoteStream=e,r.prototype.emit.call(this,s.ConnectionEventType.Stream,e)},l.prototype.handleMessage=function(e){var t=e.type,o=e.payload;switch(e.type){case s.ServerMessageType.Answer:this._negotiator.handleSDP(t,o.sdp),this._open=!0;break;case s.ServerMessageType.Candidate:this._negotiator.handleCandidate(o.candidate);break;default:i.default.warn(\"Unrecognized message type:\"+t+\" from peer:\"+this.peer)}},l.prototype.answer=function(e,r){var n,a;if(void 0===r&&(r={}),this._localStream)i.default.warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");else{this._localStream=e,r&&r.sdpTransform&&(this.options.sdpTransform=r.sdpTransform),this._negotiator.startConnection(t(t({},this.options._payload),{_stream:e}));var s=this.provider._getMessages(this.connectionId);try{for(var l=o(s),c=l.next();!c.done;c=l.next()){var p=c.value;this.handleMessage(p)}}catch(u){n={error:u}}finally{try{c&&!c.done&&(a=l.return)&&a.call(l)}finally{if(n)throw n.error}}this._open=!0}},l.prototype.close=function(){this._negotiator&&(this._negotiator.cleanup(),this._negotiator=null),this._localStream=null,this._remoteStream=null,this.provider&&(this.provider._removeConnection(this),this.provider=null),this.options&&this.options._stream&&(this.options._stream=null),this.open&&(this._open=!1,r.prototype.emit.call(this,s.ConnectionEventType.Close))},l.ID_PREFIX=\"mc_\",l}(l.BaseConnection);exports.MediaConnection=c;\n},{\"./util\":\"BHXf\",\"./logger\":\"WOs9\",\"./negotiator\":\"HCdX\",\"./enums\":\"ZRYf\",\"./baseconnection\":\"tQFK\"}],\"GGp6\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(t,r)};return function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Class extends value \"+String(r)+\" is not a constructor or null\");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.EncodingQueue=void 0;var r=require(\"eventemitter3\"),o=t(require(\"./logger\")),n=function(t){function r(){var e=t.call(this)||this;return e.fileReader=new FileReader,e._queue=[],e._processing=!1,e.fileReader.onload=function(t){e._processing=!1,t.target&&e.emit(\"done\",t.target.result),e.doNextTask()},e.fileReader.onerror=function(t){o.default.error(\"EncodingQueue error:\",t),e._processing=!1,e.destroy(),e.emit(\"error\",t)},e}return e(r,t),Object.defineProperty(r.prototype,\"queue\",{get:function(){return this._queue},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"size\",{get:function(){return this.queue.length},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"processing\",{get:function(){return this._processing},enumerable:!1,configurable:!0}),r.prototype.enque=function(e){this.queue.push(e),this.processing||this.doNextTask()},r.prototype.destroy=function(){this.fileReader.abort(),this._queue=[]},r.prototype.doNextTask=function(){0!==this.size&&(this.processing||(this._processing=!0,this.fileReader.readAsArrayBuffer(this.queue.shift())))},r}(r.EventEmitter);exports.EncodingQueue=n;\n},{\"eventemitter3\":\"JJlS\",\"./logger\":\"WOs9\"}],\"GBTQ\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),t=this&&this.__values||function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DataConnection=void 0;var i=require(\"./util\"),o=n(require(\"./logger\")),r=require(\"./negotiator\"),a=require(\"./enums\"),s=require(\"./baseconnection\"),u=require(\"./encodingQueue\"),l=function(n){function s(e,t,l){var f=n.call(this,e,t,l)||this;return f.stringify=JSON.stringify,f.parse=JSON.parse,f._buffer=[],f._bufferSize=0,f._buffering=!1,f._chunkedData={},f._encodingQueue=new u.EncodingQueue,f.connectionId=f.options.connectionId||s.ID_PREFIX+i.util.randomToken(),f.label=f.options.label||f.connectionId,f.serialization=f.options.serialization||a.SerializationType.Binary,f.reliable=!!f.options.reliable,f._encodingQueue.on(\"done\",function(e){f._bufferedSend(e)}),f._encodingQueue.on(\"error\",function(){o.default.error(\"DC#\"+f.connectionId+\": Error occured in encoding from blob to arraybuffer, close DC\"),f.close()}),f._negotiator=new r.Negotiator(f),f._negotiator.startConnection(f.options._payload||{originator:!0}),f}return e(s,n),Object.defineProperty(s.prototype,\"type\",{get:function(){return a.ConnectionType.Data},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,\"dataChannel\",{get:function(){return this._dc},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,\"bufferSize\",{get:function(){return this._bufferSize},enumerable:!1,configurable:!0}),s.prototype.initialize=function(e){this._dc=e,this._configureDataChannel()},s.prototype._configureDataChannel=function(){var e=this;i.util.supports.binaryBlob&&!i.util.supports.reliable||(this.dataChannel.binaryType=\"arraybuffer\"),this.dataChannel.onopen=function(){o.default.log(\"DC#\"+e.connectionId+\" dc connection success\"),e._open=!0,e.emit(a.ConnectionEventType.Open)},this.dataChannel.onmessage=function(t){o.default.log(\"DC#\"+e.connectionId+\" dc onmessage:\",t.data),e._handleDataMessage(t)},this.dataChannel.onclose=function(){o.default.log(\"DC#\"+e.connectionId+\" dc closed for:\",e.peer),e.close()}},s.prototype._handleDataMessage=function(e){var t=this,o=e.data,r=o.constructor,s=o;if(this.serialization===a.SerializationType.Binary||this.serialization===a.SerializationType.BinaryUTF8){if(r===Blob)return void i.util.blobToArrayBuffer(o,function(e){var n=i.util.unpack(e);t.emit(a.ConnectionEventType.Data,n)});if(r===ArrayBuffer)s=i.util.unpack(o);else if(r===String){var u=i.util.binaryStringToArrayBuffer(o);s=i.util.unpack(u)}}else this.serialization===a.SerializationType.JSON&&(s=this.parse(o));s.__peerData?this._handleChunk(s):n.prototype.emit.call(this,a.ConnectionEventType.Data,s)},s.prototype._handleChunk=function(e){var t=e.__peerData,n=this._chunkedData[t]||{data:[],count:0,total:e.total};if(n.data[e.n]=e.data,n.count++,this._chunkedData[t]=n,n.total===n.count){delete this._chunkedData[t];var i=new Blob(n.data);this._handleDataMessage({data:i})}},s.prototype.close=function(){this._buffer=[],this._bufferSize=0,this._chunkedData={},this._negotiator&&(this._negotiator.cleanup(),this._negotiator=null),this.provider&&(this.provider._removeConnection(this),this.provider=null),this.dataChannel&&(this.dataChannel.onopen=null,this.dataChannel.onmessage=null,this.dataChannel.onclose=null,this._dc=null),this._encodingQueue&&(this._encodingQueue.destroy(),this._encodingQueue.removeAllListeners(),this._encodingQueue=null),this.open&&(this._open=!1,n.prototype.emit.call(this,a.ConnectionEventType.Close))},s.prototype.send=function(e,t){if(this.open)if(this.serialization===a.SerializationType.JSON)this._bufferedSend(this.stringify(e));else if(this.serialization===a.SerializationType.Binary||this.serialization===a.SerializationType.BinaryUTF8){var o=i.util.pack(e);if(!t&&o.size>i.util.chunkedMTU)return void this._sendChunks(o);i.util.supports.binaryBlob?this._bufferedSend(o):this._encodingQueue.enque(o)}else this._bufferedSend(e);else n.prototype.emit.call(this,a.ConnectionEventType.Error,new Error(\"Connection is not open. You should listen for the `open` event before sending messages.\"))},s.prototype._bufferedSend=function(e){!this._buffering&&this._trySend(e)||(this._buffer.push(e),this._bufferSize=this._buffer.length)},s.prototype._trySend=function(e){var t=this;if(!this.open)return!1;if(this.dataChannel.bufferedAmount>s.MAX_BUFFERED_AMOUNT)return this._buffering=!0,setTimeout(function(){t._buffering=!1,t._tryBuffer()},50),!1;try{this.dataChannel.send(e)}catch(n){return o.default.error(\"DC#:\"+this.connectionId+\" Error when sending:\",n),this._buffering=!0,this.close(),!1}return!0},s.prototype._tryBuffer=function(){if(this.open&&0!==this._buffer.length){var e=this._buffer[0];this._trySend(e)&&(this._buffer.shift(),this._bufferSize=this._buffer.length,this._tryBuffer())}},s.prototype._sendChunks=function(e){var n,r,a=i.util.chunk(e);o.default.log(\"DC#\"+this.connectionId+\" Try to send \"+a.length+\" chunks...\");try{for(var s=t(a),u=s.next();!u.done;u=s.next()){var l=u.value;this.send(l,!0)}}catch(f){n={error:f}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}},s.prototype.handleMessage=function(e){var t=e.payload;switch(e.type){case a.ServerMessageType.Answer:this._negotiator.handleSDP(e.type,t.sdp);break;case a.ServerMessageType.Candidate:this._negotiator.handleCandidate(t.candidate);break;default:o.default.warn(\"Unrecognized message type:\",e.type,\"from peer:\",this.peer)}},s.ID_PREFIX=\"dc_\",s.MAX_BUFFERED_AMOUNT=8388608,s}(s.BaseConnection);exports.DataConnection=l;\n},{\"./util\":\"BHXf\",\"./logger\":\"WOs9\",\"./negotiator\":\"HCdX\",\"./enums\":\"ZRYf\",\"./baseconnection\":\"tQFK\",\"./encodingQueue\":\"GGp6\"}],\"in7L\":[function(require,module,exports) {\n\"use strict\";var t=this&&this.__awaiter||function(t,e,r,o){return new(r||(r=Promise))(function(n,s){function i(t){try{a(o.next(t))}catch(e){s(e)}}function u(t){try{a(o.throw(t))}catch(e){s(e)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(i,u)}a((o=o.apply(t,e||[])).next())})},e=this&&this.__generator||function(t,e){var r,o,n,s,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(r=1,o&&(n=2&s[0]?o.return:s[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,s[1])).done)return n;switch(o=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,o=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){i.label=s[1];break}if(6===s[0]&&i.label<n[1]){i.label=n[1],n=s;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(s);break}n[2]&&i.ops.pop(),i.trys.pop();continue}s=e.call(t,i)}catch(u){s=[6,u],o=0}finally{r=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.API=void 0;var o=require(\"./util\"),n=r(require(\"./logger\")),s=function(){function r(t){this._options=t}return r.prototype._buildUrl=function(t){var e=(this._options.secure?\"https://\":\"http://\")+this._options.host+\":\"+this._options.port+this._options.path+this._options.key+\"/\"+t;return e+=\"?ts=\"+(new Date).getTime()+Math.random()},r.prototype.retrieveId=function(){return t(this,void 0,Promise,function(){var t,r,s,i;return e(this,function(e){switch(e.label){case 0:t=this._buildUrl(\"id\"),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,fetch(t)];case 2:if(200!==(r=e.sent()).status)throw new Error(\"Error. Status:\"+r.status);return[2,r.text()];case 3:throw s=e.sent(),n.default.error(\"Error retrieving ID\",s),i=\"\",\"/\"===this._options.path&&this._options.host!==o.util.CLOUD_HOST&&(i=\" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\"),new Error(\"Could not get an ID from the server.\"+i);case 4:return[2]}})})},r.prototype.listAllPeers=function(){return t(this,void 0,Promise,function(){var t,r,s,i;return e(this,function(e){switch(e.label){case 0:t=this._buildUrl(\"peers\"),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,fetch(t)];case 2:if(200!==(r=e.sent()).status){if(401===r.status)throw s=\"\",s=this._options.host===o.util.CLOUD_HOST?\"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\":\"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\",new Error(\"It doesn't look like you have permission to list peers IDs. \"+s);throw new Error(\"Error. Status:\"+r.status)}return[2,r.json()];case 3:throw i=e.sent(),n.default.error(\"Error retrieving list peers\",i),new Error(\"Could not get list peers from the server.\"+i);case 4:return[2]}})})},r}();exports.API=s;\n},{\"./util\":\"BHXf\",\"./logger\":\"WOs9\"}],\"Hxpd\":[function(require,module,exports) {\n\"use strict\";var e=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),t=this&&this.__assign||function(){return(t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},n=this&&this.__values||function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},r=this&&this.__read||function(e,t){var n=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Peer=void 0;var i=require(\"eventemitter3\"),s=require(\"./util\"),a=o(require(\"./logger\")),c=require(\"./socket\"),l=require(\"./mediaconnection\"),u=require(\"./dataconnection\"),d=require(\"./enums\"),p=require(\"./api\"),h=function(){return function(){}}(),f=function(o){function i(e,n){var r,c=o.call(this)||this;return c._id=null,c._lastServerId=null,c._destroyed=!1,c._disconnected=!1,c._open=!1,c._connections=new Map,c._lostMessages=new Map,e&&e.constructor==Object?n=e:e&&(r=e.toString()),n=t({debug:0,host:s.util.CLOUD_HOST,port:s.util.CLOUD_PORT,path:\"/\",key:i.DEFAULT_KEY,token:s.util.randomToken(),config:s.util.defaultConfig},n),c._options=n,\"/\"===c._options.host&&(c._options.host=window.location.hostname),c._options.path&&(\"/\"!==c._options.path[0]&&(c._options.path=\"/\"+c._options.path),\"/\"!==c._options.path[c._options.path.length-1]&&(c._options.path+=\"/\")),void 0===c._options.secure&&c._options.host!==s.util.CLOUD_HOST?c._options.secure=s.util.isSecure():c._options.host==s.util.CLOUD_HOST&&(c._options.secure=!0),c._options.logFunction&&a.default.setLogFunction(c._options.logFunction),a.default.logLevel=c._options.debug||0,c._api=new p.API(n),c._socket=c._createServerConnection(),s.util.supports.audioVideo||s.util.supports.data?r&&!s.util.validateId(r)?(c._delayedAbort(d.PeerErrorType.InvalidID,'ID \"'+r+'\" is invalid'),c):(r?c._initialize(r):c._api.retrieveId().then(function(e){return c._initialize(e)}).catch(function(e){return c._abort(d.PeerErrorType.ServerError,e)}),c):(c._delayedAbort(d.PeerErrorType.BrowserIncompatible,\"The current browser does not support WebRTC\"),c)}return e(i,o),Object.defineProperty(i.prototype,\"id\",{get:function(){return this._id},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"options\",{get:function(){return this._options},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"open\",{get:function(){return this._open},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"socket\",{get:function(){return this._socket},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"connections\",{get:function(){var e,t,o=Object.create(null);try{for(var i=n(this._connections),s=i.next();!s.done;s=i.next()){var a=r(s.value,2),c=a[0],l=a[1];o[c]=l}}catch(u){e={error:u}}finally{try{s&&!s.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}return o},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"destroyed\",{get:function(){return this._destroyed},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"disconnected\",{get:function(){return this._disconnected},enumerable:!1,configurable:!0}),i.prototype._createServerConnection=function(){var e=this,t=new c.Socket(this._options.secure,this._options.host,this._options.port,this._options.path,this._options.key,this._options.pingInterval);return t.on(d.SocketEventType.Message,function(t){e._handleMessage(t)}),t.on(d.SocketEventType.Error,function(t){e._abort(d.PeerErrorType.SocketError,t)}),t.on(d.SocketEventType.Disconnected,function(){e.disconnected||(e.emitError(d.PeerErrorType.Network,\"Lost connection to server.\"),e.disconnect())}),t.on(d.SocketEventType.Close,function(){e.disconnected||e._abort(d.PeerErrorType.SocketClosed,\"Underlying socket is already closed.\")}),t},i.prototype._initialize=function(e){this._id=e,this.socket.start(e,this._options.token)},i.prototype._handleMessage=function(e){var t,r,o=e.type,i=e.payload,s=e.src;switch(o){case d.ServerMessageType.Open:this._lastServerId=this.id,this._open=!0,this.emit(d.PeerEventType.Open,this.id);break;case d.ServerMessageType.Error:this._abort(d.PeerErrorType.ServerError,i.msg);break;case d.ServerMessageType.IdTaken:this._abort(d.PeerErrorType.UnavailableID,'ID \"'+this.id+'\" is taken');break;case d.ServerMessageType.InvalidKey:this._abort(d.PeerErrorType.InvalidKey,'API KEY \"'+this._options.key+'\" is invalid');break;case d.ServerMessageType.Leave:a.default.log(\"Received leave message from \"+s),this._cleanupPeer(s),this._connections.delete(s);break;case d.ServerMessageType.Expire:this.emitError(d.PeerErrorType.PeerUnavailable,\"Could not connect to peer \"+s);break;case d.ServerMessageType.Offer:var c=i.connectionId;if((_=this.getConnection(s,c))&&(_.close(),a.default.warn(\"Offer received for existing Connection ID:\"+c)),i.type===d.ConnectionType.Media)_=new l.MediaConnection(s,this,{connectionId:c,_payload:i,metadata:i.metadata}),this._addConnection(s,_),this.emit(d.PeerEventType.Call,_);else{if(i.type!==d.ConnectionType.Data)return void a.default.warn(\"Received malformed connection type:\"+i.type);_=new u.DataConnection(s,this,{connectionId:c,_payload:i,metadata:i.metadata,label:i.label,serialization:i.serialization,reliable:i.reliable}),this._addConnection(s,_),this.emit(d.PeerEventType.Connection,_)}var p=this._getMessages(c);try{for(var h=n(p),f=h.next();!f.done;f=h.next()){var y=f.value;_.handleMessage(y)}}catch(v){t={error:v}}finally{try{f&&!f.done&&(r=h.return)&&r.call(h)}finally{if(t)throw t.error}}break;default:if(!i)return void a.default.warn(\"You received a malformed message from \"+s+\" of type \"+o);var _;c=i.connectionId;(_=this.getConnection(s,c))&&_.peerConnection?_.handleMessage(e):c?this._storeMessage(c,e):a.default.warn(\"You received an unrecognized message:\",e)}},i.prototype._storeMessage=function(e,t){this._lostMessages.has(e)||this._lostMessages.set(e,[]),this._lostMessages.get(e).push(t)},i.prototype._getMessages=function(e){var t=this._lostMessages.get(e);return t?(this._lostMessages.delete(e),t):[]},i.prototype.connect=function(e,t){if(void 0===t&&(t={}),this.disconnected)return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\"),void this.emitError(d.PeerErrorType.Disconnected,\"Cannot connect to new Peer after disconnecting from server.\");var n=new u.DataConnection(e,this,t);return this._addConnection(e,n),n},i.prototype.call=function(e,t,n){if(void 0===n&&(n={}),this.disconnected)return a.default.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\"),void this.emitError(d.PeerErrorType.Disconnected,\"Cannot connect to new Peer after disconnecting from server.\");if(t){n._stream=t;var r=new l.MediaConnection(e,this,n);return this._addConnection(e,r),r}a.default.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\")},i.prototype._addConnection=function(e,t){a.default.log(\"add connection \"+t.type+\":\"+t.connectionId+\" to peerId:\"+e),this._connections.has(e)||this._connections.set(e,[]),this._connections.get(e).push(t)},i.prototype._removeConnection=function(e){var t=this._connections.get(e.peer);if(t){var n=t.indexOf(e);-1!==n&&t.splice(n,1)}this._lostMessages.delete(e.connectionId)},i.prototype.getConnection=function(e,t){var r,o,i=this._connections.get(e);if(!i)return null;try{for(var s=n(i),a=s.next();!a.done;a=s.next()){var c=a.value;if(c.connectionId===t)return c}}catch(l){r={error:l}}finally{try{a&&!a.done&&(o=s.return)&&o.call(s)}finally{if(r)throw r.error}}return null},i.prototype._delayedAbort=function(e,t){var n=this;setTimeout(function(){n._abort(e,t)},0)},i.prototype._abort=function(e,t){a.default.error(\"Aborting!\"),this.emitError(e,t),this._lastServerId?this.disconnect():this.destroy()},i.prototype.emitError=function(e,t){var n;a.default.error(\"Error:\",t),(n=\"string\"==typeof t?new Error(t):t).type=e,this.emit(d.PeerEventType.Error,n)},i.prototype.destroy=function(){this.destroyed||(a.default.log(\"Destroy peer with ID:\"+this.id),this.disconnect(),this._cleanup(),this._destroyed=!0,this.emit(d.PeerEventType.Close))},i.prototype._cleanup=function(){var e,t;try{for(var r=n(this._connections.keys()),o=r.next();!o.done;o=r.next()){var i=o.value;this._cleanupPeer(i),this._connections.delete(i)}}catch(s){e={error:s}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}this.socket.removeAllListeners()},i.prototype._cleanupPeer=function(e){var t,r,o=this._connections.get(e);if(o)try{for(var i=n(o),s=i.next();!s.done;s=i.next()){s.value.close()}}catch(a){t={error:a}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}},i.prototype.disconnect=function(){if(!this.disconnected){var e=this.id;a.default.log(\"Disconnect peer with ID:\"+e),this._disconnected=!0,this._open=!1,this.socket.close(),this._lastServerId=e,this._id=null,this.emit(d.PeerEventType.Disconnected,e)}},i.prototype.reconnect=function(){if(this.disconnected&&!this.destroyed)a.default.log(\"Attempting reconnection to server with ID \"+this._lastServerId),this._disconnected=!1,this._initialize(this._lastServerId);else{if(this.destroyed)throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");if(this.disconnected||this.open)throw new Error(\"Peer \"+this.id+\" cannot reconnect because it is not disconnected from the server!\");a.default.error(\"In a hurry? We're still trying to make the initial connection!\")}},i.prototype.listAllPeers=function(e){var t=this;void 0===e&&(e=function(e){}),this._api.listAllPeers().then(function(t){return e(t)}).catch(function(e){return t._abort(d.PeerErrorType.ServerError,e)})},i.DEFAULT_KEY=\"peerjs\",i}(i.EventEmitter);exports.Peer=f;\n},{\"eventemitter3\":\"JJlS\",\"./util\":\"BHXf\",\"./logger\":\"WOs9\",\"./socket\":\"wJlv\",\"./mediaconnection\":\"dbHP\",\"./dataconnection\":\"GBTQ\",\"./enums\":\"ZRYf\",\"./api\":\"in7L\"}],\"iTK6\":[function(require,module,exports) {\n\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.peerjs=void 0;var e=require(\"./util\"),r=require(\"./peer\");exports.peerjs={Peer:r.Peer,util:e.util},exports.default=r.Peer,window.peerjs=exports.peerjs,window.Peer=r.Peer;\n},{\"./util\":\"BHXf\",\"./peer\":\"Hxpd\"}]},{},[\"iTK6\"], null)\n//# sourceMappingURL=/peerjs.min.js.map\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/peerjs/dist/peerjs.min.js?");

/***/ }),

/***/ "./node_modules/peerjs/dist sync recursive":
/*!****************************************!*\
  !*** ./node_modules/peerjs/dist/ sync ***!
  \****************************************/
/***/ (function(module) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/peerjs/dist sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/peerjs/dist/_sync?");

/***/ }),

/***/ "./node_modules/qrcode/lib/browser.js":
/*!********************************************!*\
  !*** ./node_modules/qrcode/lib/browser.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nconst canPromise = __webpack_require__(/*! ./can-promise */ \"./node_modules/qrcode/lib/can-promise.js\")\n\nconst QRCode = __webpack_require__(/*! ./core/qrcode */ \"./node_modules/qrcode/lib/core/qrcode.js\")\nconst CanvasRenderer = __webpack_require__(/*! ./renderer/canvas */ \"./node_modules/qrcode/lib/renderer/canvas.js\")\nconst SvgRenderer = __webpack_require__(/*! ./renderer/svg-tag.js */ \"./node_modules/qrcode/lib/renderer/svg-tag.js\")\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/browser.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/can-promise.js":
/*!************************************************!*\
  !*** ./node_modules/qrcode/lib/can-promise.js ***!
  \************************************************/
/***/ (function(module) {

eval("// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/can-promise.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/alignment-pattern.js":
/*!***********************************************************!*\
  !*** ./node_modules/qrcode/lib/core/alignment-pattern.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = (__webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\").getSymbolSize)\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/alignment-pattern.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/alphanumeric-data.js":
/*!***********************************************************!*\
  !*** ./node_modules/qrcode/lib/core/alphanumeric-data.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/alphanumeric-data.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/bit-buffer.js":
/*!****************************************************!*\
  !*** ./node_modules/qrcode/lib/core/bit-buffer.js ***!
  \****************************************************/
/***/ (function(module) {

eval("function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/bit-buffer.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/bit-matrix.js":
/*!****************************************************!*\
  !*** ./node_modules/qrcode/lib/core/bit-matrix.js ***!
  \****************************************************/
/***/ (function(module) {

eval("/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/bit-matrix.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/byte-data.js":
/*!***************************************************!*\
  !*** ./node_modules/qrcode/lib/core/byte-data.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const encodeUtf8 = __webpack_require__(/*! encode-utf8 */ \"./node_modules/encode-utf8/index.js\")\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Uint8Array(encodeUtf8(data))\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/byte-data.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/error-correction-code.js":
/*!***************************************************************!*\
  !*** ./node_modules/qrcode/lib/core/error-correction-code.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/qrcode/lib/core/error-correction-level.js\")\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/error-correction-code.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/error-correction-level.js":
/*!****************************************************************!*\
  !*** ./node_modules/qrcode/lib/core/error-correction-level.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/error-correction-level.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/finder-pattern.js":
/*!********************************************************!*\
  !*** ./node_modules/qrcode/lib/core/finder-pattern.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const getSymbolSize = (__webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\").getSymbolSize)\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/finder-pattern.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/format-info.js":
/*!*****************************************************!*\
  !*** ./node_modules/qrcode/lib/core/format-info.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\")\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/format-info.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/galois-field.js":
/*!******************************************************!*\
  !*** ./node_modules/qrcode/lib/core/galois-field.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/galois-field.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/kanji-data.js":
/*!****************************************************!*\
  !*** ./node_modules/qrcode/lib/core/kanji-data.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\")\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/kanji-data.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/mask-pattern.js":
/*!******************************************************!*\
  !*** ./node_modules/qrcode/lib/core/mask-pattern.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/mask-pattern.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/mode.js":
/*!**********************************************!*\
  !*** ./node_modules/qrcode/lib/core/mode.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/qrcode/lib/core/version-check.js\")\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/qrcode/lib/core/regex.js\")\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/mode.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/numeric-data.js":
/*!******************************************************!*\
  !*** ./node_modules/qrcode/lib/core/numeric-data.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/numeric-data.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/polynomial.js":
/*!****************************************************!*\
  !*** ./node_modules/qrcode/lib/core/polynomial.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const GF = __webpack_require__(/*! ./galois-field */ \"./node_modules/qrcode/lib/core/galois-field.js\")\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/polynomial.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/qrcode.js":
/*!************************************************!*\
  !*** ./node_modules/qrcode/lib/core/qrcode.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\")\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/qrcode/lib/core/error-correction-level.js\")\nconst BitBuffer = __webpack_require__(/*! ./bit-buffer */ \"./node_modules/qrcode/lib/core/bit-buffer.js\")\nconst BitMatrix = __webpack_require__(/*! ./bit-matrix */ \"./node_modules/qrcode/lib/core/bit-matrix.js\")\nconst AlignmentPattern = __webpack_require__(/*! ./alignment-pattern */ \"./node_modules/qrcode/lib/core/alignment-pattern.js\")\nconst FinderPattern = __webpack_require__(/*! ./finder-pattern */ \"./node_modules/qrcode/lib/core/finder-pattern.js\")\nconst MaskPattern = __webpack_require__(/*! ./mask-pattern */ \"./node_modules/qrcode/lib/core/mask-pattern.js\")\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/qrcode/lib/core/error-correction-code.js\")\nconst ReedSolomonEncoder = __webpack_require__(/*! ./reed-solomon-encoder */ \"./node_modules/qrcode/lib/core/reed-solomon-encoder.js\")\nconst Version = __webpack_require__(/*! ./version */ \"./node_modules/qrcode/lib/core/version.js\")\nconst FormatInfo = __webpack_require__(/*! ./format-info */ \"./node_modules/qrcode/lib/core/format-info.js\")\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\nconst Segments = __webpack_require__(/*! ./segments */ \"./node_modules/qrcode/lib/core/segments.js\")\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/qrcode.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/reed-solomon-encoder.js":
/*!**************************************************************!*\
  !*** ./node_modules/qrcode/lib/core/reed-solomon-encoder.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Polynomial = __webpack_require__(/*! ./polynomial */ \"./node_modules/qrcode/lib/core/polynomial.js\")\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/reed-solomon-encoder.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/regex.js":
/*!***********************************************!*\
  !*** ./node_modules/qrcode/lib/core/regex.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/regex.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/segments.js":
/*!**************************************************!*\
  !*** ./node_modules/qrcode/lib/core/segments.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\nconst NumericData = __webpack_require__(/*! ./numeric-data */ \"./node_modules/qrcode/lib/core/numeric-data.js\")\nconst AlphanumericData = __webpack_require__(/*! ./alphanumeric-data */ \"./node_modules/qrcode/lib/core/alphanumeric-data.js\")\nconst ByteData = __webpack_require__(/*! ./byte-data */ \"./node_modules/qrcode/lib/core/byte-data.js\")\nconst KanjiData = __webpack_require__(/*! ./kanji-data */ \"./node_modules/qrcode/lib/core/kanji-data.js\")\nconst Regex = __webpack_require__(/*! ./regex */ \"./node_modules/qrcode/lib/core/regex.js\")\nconst Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\")\nconst dijkstra = __webpack_require__(/*! dijkstrajs */ \"./node_modules/dijkstrajs/dijkstra.js\")\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/segments.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/qrcode/lib/core/utils.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/utils.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/version-check.js":
/*!*******************************************************!*\
  !*** ./node_modules/qrcode/lib/core/version-check.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/version-check.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/core/version.js":
/*!*************************************************!*\
  !*** ./node_modules/qrcode/lib/core/version.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/core/utils.js\")\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"./node_modules/qrcode/lib/core/error-correction-code.js\")\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"./node_modules/qrcode/lib/core/error-correction-level.js\")\nconst Mode = __webpack_require__(/*! ./mode */ \"./node_modules/qrcode/lib/core/mode.js\")\nconst VersionCheck = __webpack_require__(/*! ./version-check */ \"./node_modules/qrcode/lib/core/version-check.js\")\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/core/version.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/renderer/canvas.js":
/*!****************************************************!*\
  !*** ./node_modules/qrcode/lib/renderer/canvas.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/renderer/utils.js\")\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/renderer/canvas.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/renderer/svg-tag.js":
/*!*****************************************************!*\
  !*** ./node_modules/qrcode/lib/renderer/svg-tag.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("const Utils = __webpack_require__(/*! ./utils */ \"./node_modules/qrcode/lib/renderer/utils.js\")\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/renderer/svg-tag.js?");

/***/ }),

/***/ "./node_modules/qrcode/lib/renderer/utils.js":
/*!***************************************************!*\
  !*** ./node_modules/qrcode/lib/renderer/utils.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/qrcode/lib/renderer/utils.js?");

/***/ }),

/***/ "./src/config/firebase.js":
/*!********************************!*\
  !*** ./src/config/firebase.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/database */ \"./node_modules/firebase/database/dist/esm/index.esm.js\");\n// Import the functions you need from the SDKs you need\r\n\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDZopCl6jqND4sFYCSiB1GpCXreXd6-Q9s',\r\n  authDomain: 'speaker-calibration.firebaseapp.com',\r\n  databaseURL: 'https://speaker-calibration-default-rtdb.firebaseio.com',\r\n  projectId: 'speaker-calibration',\r\n  storageBucket: 'speaker-calibration.appspot.com',\r\n  messagingSenderId: '322038930574',\r\n  appId: '1:322038930574:web:d10ca9e7d60b6da9bafddf',\r\n  measurementId: 'G-3724GD92R6',\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig);\r\nconst database = (0,firebase_database__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (database);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/config/firebase.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Listener\": function() { return /* reexport safe */ _peer_connection_listener__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"Speaker\": function() { return /* reexport safe */ _peer_connection_speaker__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"VolumeCalibration\": function() { return /* reexport safe */ _tasks_volume_volume__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   \"ImpulseResponseCalibration\": function() { return /* reexport safe */ _tasks_impulse_response_impulseResponse__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   \"UnsupportedDeviceError\": function() { return /* reexport safe */ _peer_connection_peerErrors__WEBPACK_IMPORTED_MODULE_5__.UnsupportedDeviceError; },\n/* harmony export */   \"MissingSpeakerIdError\": function() { return /* reexport safe */ _peer_connection_peerErrors__WEBPACK_IMPORTED_MODULE_5__.MissingSpeakerIdError; },\n/* harmony export */   \"CalibrationTimedOutError\": function() { return /* reexport safe */ _peer_connection_peerErrors__WEBPACK_IMPORTED_MODULE_5__.CalibrationTimedOutError; },\n/* harmony export */   \"CombinationCalibration\": function() { return /* reexport safe */ _tasks_combination_combination__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _peer_connection_listener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peer-connection/listener */ \"./src/peer-connection/listener.js\");\n/* harmony import */ var _peer_connection_speaker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peer-connection/speaker */ \"./src/peer-connection/speaker.js\");\n/* harmony import */ var _tasks_volume_volume__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tasks/volume/volume */ \"./src/tasks/volume/volume.js\");\n/* harmony import */ var _tasks_impulse_response_impulseResponse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tasks/impulse-response/impulseResponse */ \"./src/tasks/impulse-response/impulseResponse.js\");\n/* harmony import */ var _tasks_combination_combination__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tasks/combination/combination */ \"./src/tasks/combination/combination.js\");\n/* harmony import */ var _peer_connection_peerErrors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./peer-connection/peerErrors */ \"./src/peer-connection/peerErrors.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/main.js?");

/***/ }),

/***/ "./src/myEventEmitter.js":
/*!*******************************!*\
  !*** ./src/myEventEmitter.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * A simple event emitter class. Objects that inheret this class or implement it can then bubble events up to the UI\r\n * similar to existings event emitter such as 'onChange' or 'onClick'.\r\n */\r\nclass MyEventEmitter {\r\n  #events;\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Default constructor, intializes an empty object to store events\r\n   *\r\n   * @example\r\n   */\r\n  constructor() {\r\n    this.#events = {};\r\n  }\r\n\r\n  /**\r\n   * The external API for this class. Gets called with an event name and a callback function that is fired when the event is emitted.\r\n   *\r\n   * @param name\r\n   * @param listener\r\n   * @example\r\n   */\r\n  on(name, listener) {\r\n    if (!this.#events[name]) {\r\n      this.#events[name] = [];\r\n    }\r\n\r\n    this.#events[name].push(listener);\r\n  }\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Function to remove a listener that was previously set\r\n   *\r\n   * @param {*} name\r\n   * @param {*} listenerToRemove\r\n   * @example\r\n   */\r\n  removeListener(name, listenerToRemove) {\r\n    if (!this.#events[name]) {\r\n      throw new Error(`Can't remove a listener. Event \"${name}\" doesn't exits.`);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param listener\r\n     * @example\r\n     */\r\n    const filterListeners = listener => listener !== listenerToRemove;\r\n\r\n    this.#events[name] = this.#events[name].filter(filterListeners);\r\n  }\r\n\r\n  /**\r\n   * The internal API for this class. Gets called with an event name and a data object.\r\n   * Any callbacks that have been set to listen to the matching event are dispatched.\r\n   *\r\n   * @param name\r\n   * @param data\r\n   * @example\r\n   */\r\n  emit(name, data) {\r\n    if (!this.#events[name]) {\r\n      throw new Error(`Can't emit an event. Event \"${name}\" doesn't exits.`);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} callback\r\n     */\r\n    const fireCallbacks = callback => {\r\n      callback(data);\r\n    };\r\n\r\n    this.#events[name].forEach(fireCallbacks);\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyEventEmitter);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/myEventEmitter.js?");

/***/ }),

/***/ "./src/peer-connection/audioPeer.js":
/*!******************************************!*\
  !*** ./src/peer-connection/audioPeer.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var peerjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! peerjs */ \"./node_modules/peerjs/dist/peerjs.min.js\");\n/* harmony import */ var peerjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(peerjs__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n// TODO: this was already here before, but appears to be unused\r\nconst pressFeedbackURI =\r\n  'data:audio/mpeg;base64,//uQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAALAAATlgAXFxcXFxcXFxcuLi4uLi4uLi5FRUVFRUVFRUVdXV1dXV1dXV10dHR0dHR0dHSLi4uLi4uLi4uioqKioqKioqK6urq6urq6urrR0dHR0dHR0dHo6Ojo6Ojo6Oj///////////8AAAA5TEFNRTMuMTAwAaoAAAAALgYAABSAJAZbTgAAgAAAE5YfafL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQZAAAA0YVyhVvQAAAAA0goAABGfWdITn6gAgAADSDAAAAAEWjAwMwMDMFBzCQsw8PMPCwUDgkNMpNzXEoSUTP3s6nJPd4z28k62JNdIwIUHj3nvynRempMmLAo/tff9/3IchyHIch/IxY3SUmG86enD4Pg+fgmfEAIQQcsP+oH//E7/+Ud/1HP/B9AAABMCFFFAAAwDgCyMCVAgQcBQmARAHw0AOGAUgFJgUoL8YKsEvqzGA1APJQAIGBNgDpoBRvQYb6EIGhIkmJg1QA0aH0H4GDBgJ4G55UBpM1AGgUG0wAgOBIUAYJGoGFQ4AkHitxzRSocGMwDYYCwJAWAICgBD8jhwlEqBNsMiAkCBpQY2FxpG61opmucDLrjKi6Fmk5oK9PWVh1DNFM2IaRH/q8mTQgTF4sk0bnv//zEuqRMjYycuuj///5wxZzIvLSMTUxYyZL////86ZBqh4D+QUIABcwBQBLMCmAeTA4wJowO8E2DAeYwQ8CWMDLBHDB1QpIxscoSMwBQJj/WZBA3O4mFMHIAGzAKAVgwmcG8OIV//uSZCIN9VQ4wgd/gAAAAA0g4AABD+S/Di5+qgAAADSAAAAEEzcNTC4yM0m41SLDHAJLSggBKwtKRwb6+IBi4ctbepDskh2KmAgA16NTNrON66ptO40mNa9ayZHVx7zmGPHktZb7vP9xLn4fr+9jeO//8P+z39///9T/////t+d6vf1+c6fP9Hv5cxg4aA4TgkGIYmLbYHGAxaCjHwlM0lwBC4zGwzVG+MFnGoTY8sn0w1MSHA09vAM8ssDCSYAykIABmeCI4AKDMDIRfGbFAjWE8h+BfIEfBoFCTQJUcA5ZIrQDjzQ+gWzxsjDLtE4s46kxjHZZom2SXfyj6uadvNvb0ee/3dX//01YAVKw/FoW3hDrwUDTAwDMVigy8rTYaRNKug2tzzBwxnAx/DOuMhFECAOxWsDO6kAwkdQFH0BiwIgYlAwCgdAwiZBBI1kCC5JcWwCQWMQ/JQnkVFkOVN8oku8yDkjbMiry+2rrLvW/MvT53q/yv+n2///dywQL8DRgOgsrBBi0LGcngZrCZgYxGEAoZ+IplUdGJ1ifHVRh5v/7kmRMDPOhJ0MTn6qAAAANIAAAARDEiQhOf0pAAAA0gAAABAdCcEnCwmbqA1JhbIFwYKEAUGAXgOJo45oXAyjT0MinMgXM2UNoNGyYeLN0ENORMgQC5EYAJlr4Z3L3lgaHG5VO0lWX1q92J3t9sWM+bu9/fe8/VT/L+zq9v+zr9/+//8r71SAAAA9tq0AA1hzXXdxmzgPWzJyU20wh4EDDUSzWI4x4rgMGBd+IImDoAiEBAMCJn2HpqAlRpDIZhbxxp2ASQcGVRJG6RC4xmaZHiYlYPKGGdEGJjIoa4YtICXGHRhGJg2QMkYJADRGfCMTZE5+4ze1gMF1k163DfQrNgh83G3zIYoMdC4wEOwcrzMxMMam0AlYxkKzOgqMDhUuUBgYIQOWiEgwYHAogAwXBAYHAKAVVm0ZW2J1Wno9taaAzuOSF34AjMUjdBOy+pjbpKCil9TG/hOWRkUkxad2pAAAGFlrIADgyUqh1syPqzGQRoUAEDDoFgKMDw7MVA2NJ1sKHaMVghBwfGAgOgJR0migMTBUODDQezBI5jGNQzXD/+5JkjYD20jDN67/kngAADSAAAAEXjN0dTv9SAAAANIAAAASwgEb7HKvHZpiFAM0Bgs8wPYBNNi8MMfMIKRGRlOETOErM6wMGpBTQHTjJEQaKEBoKmlLXGizd5Ax5W2Byh0X6R9YRJ2rQFSKzgZDB0DQDKJHDr/MoZRDsaleN+vVhpoVqzczvZYx+Hdbx1/MuWOZb///Vr1YX93I/6P9KAWAQE8pFZWkOCuFAO0EEAThJ4OYwBQMHIJgUUVrHHRwaURUkZ4YX6MYvO6EDvpgTJY6aVeR7mGcgzBgfQE2YCuA5H9adJQKBCAhAqA53/aS/bk0T1zjIhpmcjVumpqS/ZZ1v6TuOXxF1+49x5d5Knl/Luvw7ua/8P/DdWT+dOkhD5zhvqb0db/93/5AQAQsF3glyO4MAysKti2BGAAdE0L31C4EMAhEAgAu28hgMOFHwEgaYACAFHpko0GM0ia2Yx0/wmKECIhpq5poYK2CTmAQAMhgAQBKYAoARFUAhUQbKhIMAxAFG3eFpLns4drJbaY9+pDVDPZ/QKtLHKNCpsTA6//uSZIEE9GAuRhNfzIAAAA0gAAABEnjLFK588sAAADSAAAAEdTXMSKxfop3DPM5RNbal/EvU7p6/Ie/t93Z1v6OqEAzmEmBoIQcGTCwGMCghPwvOQgUwEbKMZBgNAwOPZioUiMIl/ACXRGoREDB0clmTLApMiq4x2azRlmMM7NijivBEQxUIGvMGdAsjAxgHcDSxgRZANSYAOAgYs0FXAnwaIl43xAcuEVEogHIiFKRHEuREzUfFfSOoEgRyTk8Isema00Fl0gzqujqL/ZT3Krfoq7r1H/AvWzp/yXv/3f/oA0GjFwIZS19BgKAsiCDxuUBAMZ8D6zIZAIFMChweF7GFbQAITYoiSSSvMRBoUJ5l4RGVzOa2hhmAr6mbNSaYcYlxgqAvmAaCEYDAE6yBgAFIpAsGADyaXw+/MSnONGVBjhuNW+/dbYnEQqJJNwIgainmo0TB3Ofkus/yHs5P3dnW/+ryf+QqTEFNRTMuMTAwqqqqqqqqqqqqAABjBgrdYuwIwHSioNCCFkYbBZpMaoVDIRMDhB326ByJkJgYuGdC4P/7kmSwDPT4N0MLn6SAAAANIAAAARDIpRJOePLAAAA0gAAABDAGIA0YOGJhoVGKx+YbQxu2mmHbCT5rII6wYW2ASgYFJDgHYBAIpMARM6WcpEFALUjnWoXbkbwf8AGkx+2FugJGw/l2gIK+vverzfFet8Re/kur09f/f/u6f/1GySAhOMFigxOOnJAAdLIIqmTCCa9ahACTDANMqFMLAIQjQw0EVbjH4aOuN8OAgFCBn0sS0GpU0IAjUJ3MCoPaDTTB4AwnIE7MGrBCjAcgE836g5kUx6AtCKkjKElvKarxnFzLOlKRocalMtnabKM6hpYW5TSrdLe1Kop3e+ZWtymHt445fv9Vfyy/Hn5Xv///v1bXt4M9Z7+o729b+K/4b6pMQU1FMy4xMDCqqqqqqqqqqqoAArJ2QY8DbERAFjDyZMdBUwYDwIEDHduP9KsmPhhMKGHR0ZzTg0NTB4kGhkYqgZ2MZGQRUYNHoGXBgA4HWYEoBbGCNgvJhVgV8ZJaR2GsQJb5g5gRMYD+BQmAhADQNAVRoA4EQAOXUBwAkYBsAVr/+5Jk0w/0GynDE59coAAADSAAAAEULMkADn9SAAAANIAAAATsdabY4ta/VUMV5DuqzWuVs3pSSLmoKyJqFQGpUi+IAy2PdQm57ZU/m8oR6dDu/KvzehHpx5O/KkuvNN/o39SX9fblC3lusxd7wMr2zmhS+YLExsQBmRRQGKE6HITacxM2hgy8ATH50NVDsxSlQMPDL4bNJAg7HUAIBQcOjCRbMBtAdDAAACkwB4EWMCzCGTGll+U7EVMUMoPCSjDHgWcwaECqP+mza0I1QpATkY0Sm3lwsB0q0C3xd6GWuF4jEAeiqacWb5bdVxJbap8YzlnZWta3hLq34RaGf5hj3/pZ3HveY/3ku7/5a/7Wf//9/92aGoPcO9Z3nep/9H+mTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqgBOZ2IMSwdMDATGQhDC4ZXKRj8wGMxub0k5717G//uSZPaO9axfvJOfPEAAAA0gAAABFsja3g5/cEAAADSAAAAELQSBSmZKFYVCYsIjBA1MCgYxWdDkBzMRAEwgQDIIBMgFIzWQTUjgPK3c02lpDWsiqM0Ih0w6QzjB4BzMDcD4wFgEzAfAeQQs8TcsNydp+n5wlq8UapFM2auMpwfZrv475ll25Y5ll3mtzMuwCWO8Ocqe/lndv+j/b1f6/9QATU2x0wCPIAYTCoUHAxhIYX2MXBDC24mvTCAedLotPVa09tEZwuBrSZmkoXXBgkY2SmmPBjQkpGrwfaYZQGhQDcPACJNPw90xLlijCVZWUifsophFk7ww7v7fGk6gE/vB+l0VNkSFwo0bYXJC6gyQQEiwvlDzbHAhHpZLIQbJ1UxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUASWNHVvyNdkdcuCnNLhmA8HuRIHbo/1AhfJ9JZVctla8gMQwpDT96eCGcDAGg8qCCIBce3D8P35RGMZXL8gcmxBByacE9hDD09hNohydtFshlp7EeIe9aMiMe/P/7kmTNjPTPJLaLvPDwAAANIAAAAQ/obuBt+FJAAAA0gAAABEchD3bEIchgekEBmZYRmyPAM3j4DJ8fhgfmeIjtD4HTwPAiPgNGB+BAAjtCABG8AwMvgwAEo5cSIfzt69YYDMdo9RxSsKtgIcom1PMylIK9rWkMkKzctAIIkqXCTqLYAoUrBCJrAlHzJipaMuaPvWraLnsMj6ExUtGUZ0ZRnJ7Q6PrnS7VrsC55kSlRyTYjonPkkybMT2AyVMrbMrYly661bq13Fz0K2JlbEdH1zk9ocnsB09CcutLYmj71p7Q6PWDI+hMXWjJ06Mozk9odH0BkfQmLrRlGdE6M5JrhKJzZKPoSSephKVHJlGcmLhkZXJJ9CYnrRkqSmMZybKpMQU1FMy4xMDCqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+5Jk7QT0dTc4kxw0ogAADSAAAAEZOaLm5+WQSAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqglFJEIRoPjA2MDYyViqViCJxDHghjyPQ4ioUiYKw4EMzYZXAooDEE1y2zRpTu00acWUWWcacaUWYeWcacJAhYgWJFCRQGIFiBZZRZRZlw7s7PG////s7M7Ozs7M5xpRZR5RRpxZRZh5RRZRbRC1NP///9PKqqq4NNNNRKqJXTTTTVVVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//uSZIIP9BFGHYksMlIAAA0gAAABAAABpr\n\r\n/**\r\n * @typedef initParameters - Parameters for initializing the AudioPeer\r\n * @type {object}\r\n * @property {string} targetElementId - Target element where new elements will be appended.\r\n * @property {string} siteUrl: The url of the current site.\r\n */\r\nconst initParameters = {\r\n  targetElementId: null,\r\n  siteUrl: null,\r\n};\r\n\r\n/**\r\n * @class The first layer of abstraction on the PeerJS library.\r\n * It meant to be extended by the two seperate client classes, Speaker and Listener.\r\n * It implements the shared methods and properties of both classes.\r\n */\r\nclass AudioPeer {\r\n  /**\r\n   * Creates an instance of AudioPeer\r\n   * Takes the url of the current site and a target element where html elements will be appended.\r\n   *\r\n   * @param params - See type definition for initParameters.\r\n   * @param param\r\n   * @example\r\n   */\r\n  constructor(param = initParameters) {\r\n    // PeerJS\r\n    /* Create the Peer object for our end of the connection. */\r\n    this.peer = new (peerjs__WEBPACK_IMPORTED_MODULE_0___default())({\r\n      secure: true,\r\n      host: 'easyeyes-peer-server.herokuapp.com',\r\n      port: 443,\r\n    });\r\n    this.conn = null;\r\n    this.lastPeerId = null;\r\n\r\n    // Display information to HTML elem with given id\r\n    this.targetElement = param.targetElementId;\r\n\r\n    this.siteUrl = param.siteUrl;\r\n    this.debug = false;\r\n    // Store for all incoming data\r\n    this.dataStore = [];\r\n\r\n    // Create and play sounds using this audio context\r\n    this.sourceAudioContext = new (window.AudioContext ||\r\n      window.webkitAudioContext ||\r\n      window.audioContext)();\r\n  }\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Helper method to display information to DOM element\r\n   *\r\n   * @param {string} message\r\n   * @param {boolean} append\r\n   * @example\r\n   */\r\n  displayUpdate = (message, append = true) => {\r\n    // If the specified elem exists, update that elem\r\n    if (document.getElementById(this.targetElement)) {\r\n      const displayElement = document.getElementById(this.targetElement);\r\n      if (append) {\r\n        displayElement.innerText += `\\n${message}`;\r\n      } else {\r\n        displayElement.innerText = message;\r\n      }\r\n    } else {\r\n      console.log('MESSAGE: ', message);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Callback method for when a peer connection is lost\r\n   * saves the last peer id, last server id, and attempts to reconnect.\r\n   *\r\n   * @example\r\n   */\r\n  onPeerDisconnected = () => {\r\n    this.displayUpdate('Connection lost. Please reconnect');\r\n\r\n    // Workaround for peer.reconnect deleting previous id\r\n    this.peer.id = this.lastPeerId;\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    this.peer._lastServerId = this.lastPeerId;\r\n    this.peer.reconnect();\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Callback method that cleans up after peer connection is closed\r\n   *\r\n   * @example\r\n   */\r\n  onPeerClose = () => {\r\n    this.displayUpdate('Connection closed');\r\n    this.conn = null;\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Helper method for when an error occurs\r\n   *\r\n   * @param {*} err\r\n   * @example\r\n   */\r\n  onPeerError = err => {\r\n    this.displayUpdate(err);\r\n    console.log(`${err}`);\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Helper method that converts url paramters to an object\r\n   *\r\n   * @returns {object}\r\n   * @example\r\n   */\r\n  parseURLSearchParams = () =>\r\n    // SOURCE: chickens, https://stackoverflow.com/questions/8648892/how-to-convert-url-parameters-to-a-javascript-object\r\n    // eslint-disable-next-line no-restricted-globals\r\n    Object.fromEntries(new URLSearchParams(location.search));\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Helper method that converts an object to a query string\r\n   *\r\n   * @param {object} params\r\n   * @returns {string}\r\n   * @example\r\n   */\r\n  queryStringFromObject = params =>\r\n    Object.keys(params)\r\n      .map(key => `${key}=${params[key]}`)\r\n      .join('&');\r\n\r\n  static keypressFeedbackSound = pressFeedbackURI;\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioPeer);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/peer-connection/audioPeer.js?");

/***/ }),

/***/ "./src/peer-connection/listener.js":
/*!*****************************************!*\
  !*** ./src/peer-connection/listener.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _audioPeer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audioPeer */ \"./src/peer-connection/audioPeer.js\");\n/* harmony import */ var _peerErrors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peerErrors */ \"./src/peer-connection/peerErrors.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n/**\r\n * @class Handles the listener's side of the connection. Responsible for getting access to user's microphone,\r\n * and initiating a call to the Speaker.\r\n * @augments AudioPeer\r\n */\r\nclass Listener extends _audioPeer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * Takes a target element where html elements will be appended.\r\n   *\r\n   * @param params - See type definition for initParameters.\r\n   * @example\r\n   */\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.startTime = Date.now();\r\n    this.receiverPeerId = null;\r\n\r\n    const urlParameters = this.parseURLSearchParams();\r\n    this.speakerPeerId = urlParameters.speakerPeerId;\r\n\r\n    this.peer.on('open', this.onPeerOpen);\r\n    this.peer.on('connection', this.onPeerConnection);\r\n    this.peer.on('disconnected', this.onPeerDisconnected);\r\n    this.peer.on('close', this.onPeerClose);\r\n    this.peer.on('error', this.onPeerError);\r\n  }\r\n\r\n  onPeerOpen = id => {\r\n    this.displayUpdate('Listener - onPeerOpen');\r\n    // Workaround for peer.reconnect deleting previous id\r\n\r\n    if (id === null) {\r\n      this.displayUpdate('Received null id from peer open');\r\n      this.peer.id = this.lastPeerId;\r\n    } else {\r\n      this.lastPeerId = this.peer.id;\r\n    }\r\n\r\n    this.join();\r\n  };\r\n\r\n  onPeerConnection = connection => {\r\n    this.displayUpdate('Listener - onPeerConnection');\r\n    // Disallow incoming connections\r\n    connection.on('open', () => {\r\n      connection.send('Sender does not accept incoming connections');\r\n      setTimeout(() => {\r\n        connection.close();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  onConnData = data => {\r\n    this.displayUpdate('Listener - onConnData');\r\n    const hasSpeakerID = Object.prototype.hasOwnProperty.call(data, 'speakerPeerId');\r\n    if (!hasSpeakerID) {\r\n      this.displayUpdate('Error in parsing data received! Must set \"speakerPeerId\" property');\r\n      throw new _peerErrors__WEBPACK_IMPORTED_MODULE_1__.MissingSpeakerIdError('Must set \"speakerPeerId\" property');\r\n    } else {\r\n      // this.conn.close();\r\n      this.displayUpdate(this.speakerPeerId);\r\n      this.speakerPeerId = data.speakerPeerId;\r\n      const newParams = {\r\n        speakerPeerId: this.speakerPeerId,\r\n      };\r\n      /*\r\n      FUTURE does this limit usable environments?\r\n      ie does this work if internet is lost after initial page load?\r\n      */\r\n      window.location.search = this.queryStringFromObject(newParams); // Redirect to correctly constructed keypad page\r\n    }\r\n  };\r\n\r\n  join = async () => {\r\n    this.displayUpdate('Listener - join');\r\n    /**\r\n     * Create the connection between the two Peers.\r\n     *\r\n     * Sets up callbacks that handle any events related to the\r\n     * connection and data received on it.\r\n     */\r\n    // Close old connection\r\n    if (this.conn) {\r\n      this.displayUpdate('Closing old connection');\r\n      this.conn.close();\r\n    }\r\n\r\n    // Create connection to destination peer specified by the query param\r\n    this.displayUpdate(`Creating connection to: ${this.speakerPeerId}`);\r\n    this.conn = this.peer.connect(this.speakerPeerId, {\r\n      reliable: true,\r\n    });\r\n\r\n    this.displayUpdate('Created connection');\r\n    this.conn.on('open', async () => {\r\n      this.displayUpdate('Listener - conn open');\r\n      // await this.getDeviceType();\r\n      // this.sendSamplingRate();\r\n      await this.openAudioStream();\r\n    });\r\n\r\n    // Handle incoming data (messages only since this is the signal sender)\r\n    this.conn.on('data', this.onConnData);\r\n    this.conn.on('close', () => {\r\n      console.log('Connection closed');\r\n    });\r\n  };\r\n\r\n  getMobileOS = () => {\r\n    const ua = navigator.userAgent;\r\n    if (/android/i.test(ua)) {\r\n      return 'Android';\r\n    }\r\n    if (\r\n      /iPad|iPhone|iPod/.test(ua) ||\r\n      ((navigator?.userAgentData?.platform || navigator?.platform) === 'MacIntel' &&\r\n        navigator.maxTouchPoints > 1)\r\n    ) {\r\n      return 'iOS';\r\n    }\r\n    return 'Other';\r\n  };\r\n\r\n  sendSamplingRate = sampleRate => {\r\n    this.displayUpdate('Listener - sendSamplingRate');\r\n    this.conn.send({\r\n      name: 'samplingRate',\r\n      payload: sampleRate,\r\n    });\r\n  };\r\n\r\n  getDeviceType = async () => {\r\n    const deviceType = deviceAPI.deviceType;\r\n    var deviceName = deviceAPI.deviceName;\r\n\r\n    // if deviceName is a comma separated string, only send the first part\r\n    if (deviceName.includes(',')) {\r\n      deviceName = deviceName.split(',')[0];\r\n    }\r\n\r\n    this.conn.send({\r\n      name: 'deviceType',\r\n      payload: deviceType,\r\n    });\r\n    this.conn.send({\r\n      name: 'deviceName',\r\n      payload: deviceName,\r\n    });\r\n  };\r\n\r\n  applyHQTrackConstraints = async stream => {\r\n    // Contraint the incoming audio to the sampling rate we want\r\n    const track = stream.getAudioTracks()[0];\r\n    const capabilities = track.getCapabilities();\r\n\r\n    this.displayUpdate(\r\n      `Listener Track Capabilities - ${JSON.stringify(capabilities, undefined, 2)}`\r\n    );\r\n\r\n    const constraints = track.getConstraints();\r\n\r\n    if (capabilities.echoCancellation) {\r\n      constraints.echoCancellation = false;\r\n    }\r\n\r\n    if (capabilities.sampleRate) {\r\n      constraints.sampleRate = 48000;\r\n    }\r\n\r\n    if (capabilities.sampleSize) {\r\n      constraints.sampleSize = 24;\r\n    }\r\n\r\n    if (capabilities.channelCount) {\r\n      constraints.channelCount = 1;\r\n    }\r\n\r\n    this.displayUpdate(`Listener Track Constraints - ${JSON.stringify(constraints, undefined, 2)}`);\r\n\r\n    // await the promise\r\n    try {\r\n      await track.applyConstraints(constraints);\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.displayUpdate(`Error applying constraints to track: ${err}`);\r\n    }\r\n\r\n    const settings = track.getSettings();\r\n    this.displayUpdate(`Listener Track Settings - ${JSON.stringify(settings, undefined, 2)}`);\r\n    return settings.sampleRate;\r\n  };\r\n\r\n  getMediaDevicesAudioContraints = () => {\r\n    const availableConstraints = navigator.mediaDevices.getSupportedConstraints();\r\n\r\n    this.displayUpdate(\r\n      `Listener MediaDevices Available Contraints  - ${JSON.stringify(\r\n        availableConstraints,\r\n        undefined,\r\n        2\r\n      )}`\r\n    );\r\n\r\n    const contraints = {\r\n      // ...(availableConstraints.echoCancellation && availableConstraints.echoCancellation == true\r\n      //   ? {echoCancellation: {exact: false}}\r\n      //   : {}),\r\n      ...(availableConstraints.sampleRate && availableConstraints.sampleRate == true\r\n        ? {sampleRate: {ideal: 48000}}\r\n        : {}),\r\n      ...(availableConstraints.sampleSize && availableConstraints.sampleSize == true\r\n        ? {sampleSize: {ideal: 24}}\r\n        : {}),\r\n      ...(availableConstraints.channelCount && availableConstraints.channelCount == true\r\n        ? {channelCount: {exact: 1}}\r\n        : {}),\r\n        echoCanellation: false,\r\n        noiseSuppression: false,\r\n        autoGainControl: false\r\n    };\r\n\r\n    console.log(contraints);\r\n\r\n    this.displayUpdate(\r\n      `Listener MediaDevices Contraints - ${JSON.stringify(contraints, undefined, 2)}`\r\n    );\r\n\r\n    return contraints;\r\n  };\r\n\r\n  openAudioStream = async () => {\r\n    this.displayUpdate('Listener - openAudioStream');\r\n    const mobileOS = this.getMobileOS();\r\n    if (false) {}\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        audio: this.getMediaDevicesAudioContraints(),\r\n        video: false,\r\n      })\r\n      .then(stream => {\r\n        this.applyHQTrackConstraints(stream)\r\n          .then(sampleRate => {\r\n            this.sendSamplingRate(sampleRate);\r\n            this.peer.call(this.speakerPeerId, stream); // one-way call\r\n            this.displayUpdate('Listener - openAudioStream');\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.displayUpdate(\r\n              `Listener - Error in applyHQTrackConstraints - ${JSON.stringify(err, undefined, 2)}`\r\n            );\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.displayUpdate(\r\n          `Listener - Error in getUserMedia - ${JSON.stringify(err, undefined, 2)}`\r\n        );\r\n      });\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Listener);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/peer-connection/listener.js?");

/***/ }),

/***/ "./src/peer-connection/peerErrors.js":
/*!*******************************************!*\
  !*** ./src/peer-connection/peerErrors.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UnsupportedDeviceError\": function() { return /* binding */ UnsupportedDeviceError; },\n/* harmony export */   \"MissingSpeakerIdError\": function() { return /* binding */ MissingSpeakerIdError; },\n/* harmony export */   \"CalibrationTimedOutError\": function() { return /* binding */ CalibrationTimedOutError; }\n/* harmony export */ });\nclass UnsupportedDeviceError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = 'UnsupportedDeviceError';\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nclass MissingSpeakerIdError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = 'missingSpeakerIdError';\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nclass CalibrationTimedOutError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = 'calibrationTimedOutError';\r\n    this.message = message;\r\n  }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/peer-connection/peerErrors.js?");

/***/ }),

/***/ "./src/peer-connection/speaker.js":
/*!****************************************!*\
  !*** ./src/peer-connection/speaker.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qrcode */ \"./node_modules/qrcode/lib/browser.js\");\n/* harmony import */ var _audioPeer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audioPeer */ \"./src/peer-connection/audioPeer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/* harmony import */ var _peerErrors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./peerErrors */ \"./src/peer-connection/peerErrors.js\");\n/* harmony import */ var _config_firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/firebase */ \"./src/config/firebase.js\");\n/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/database */ \"./node_modules/firebase/database/dist/esm/index.esm.js\");\n/* harmony import */ var _dist_example_i18n__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../dist/example/i18n */ \"./dist/example/i18n.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @class Handles the speaker's side of the connection. Responsible for initiating the connection,\r\n * rendering the QRCode, and answering the call.\r\n * @augments AudioPeer\r\n */\r\nclass Speaker extends _audioPeer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\r\n  /**\r\n   * Takes the url of the current site and a target element where html elements will be appended.\r\n   *\r\n   * @param params - See type definition for initParameters.\r\n   * @param Calibrator - An instance of the AudioCalibrator class, should not use AudioCalibrator directly, instead use an extended class available in /tasks/.\r\n   * @param CalibratorInstance\r\n   * @example\r\n   */\r\n  constructor(params, CalibratorInstance) {\r\n    super(params);\r\n    this.siteUrl += '/listener?';\r\n    this.ac = CalibratorInstance;\r\n    this.result = null;\r\n    this.debug = params?.debug ?? false;\r\n    this.isSmartPhone = params?.isSmartPhone ?? false;\r\n    this.instructionDisplayId = params?.instructionDisplayId ?? '';\r\n    this.titleDisplayId = params?.titleDisplayId ?? '';\r\n    this.timeToCalibrate = params?.timeToCalibrate ?? 10;\r\n\r\n    /* Set up callbacks that handle any events related to our peer object. */\r\n    this.peer.on('open', this.#onPeerOpen);\r\n    this.peer.on('connection', this.#onPeerConnection);\r\n    this.peer.on('close', this.#onPeerClose);\r\n    this.peer.on('disconnected', this.#onPeerDisconnected);\r\n    this.peer.on('error', this.#onPeerError);\r\n  }\r\n\r\n  static getMicrophoneNamesFromDatabase = async () => {\r\n    const dbRef = (0,firebase_database__WEBPACK_IMPORTED_MODULE_5__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\r\n    const snapshot = await (0,firebase_database__WEBPACK_IMPORTED_MODULE_5__.get)((0,firebase_database__WEBPACK_IMPORTED_MODULE_5__.child)(dbRef, 'Microphone'));\r\n    if (snapshot.exists()) {\r\n      return Object.keys(snapshot.val());\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Async factory method that creates the Speaker object, and returns a promise that resolves to the result of the calibration.\r\n   *\r\n   * @param params - The parameters to be passed to the peer object.\r\n   * @param Calibrator - The class that defines the calibration process.\r\n   * @param CalibratorInstance\r\n   * @param timeOut - The amount of time to wait before timing out the connection (in milliseconds).\r\n   * @public\r\n   * @example\r\n   */\r\n  static startCalibration = async (params, CalibratorInstance, timeOut = 180000) => {\r\n    window.speaker = new Speaker(params, CalibratorInstance);\r\n    const {speaker} = window;\r\n\r\n    // wrap the calibration process in a promise so we can await it\r\n    return new Promise((resolve, reject) => {\r\n      // when a call is received\r\n      speaker.peer.on('call', async call => {\r\n        // Answer the call (one way)\r\n        call.answer();\r\n        speaker.#removeUIElems();\r\n        speaker.#showSpinner();\r\n        speaker.ac.createLocalAudio(document.getElementById(speaker.targetElement));\r\n        // when we start receiving audio\r\n        call.on('stream', async stream => {\r\n          window.localStream = stream;\r\n          window.localAudio.srcObject = stream;\r\n          window.localAudio.autoplay = false;\r\n\r\n          // if the sinkSamplingRate is not set sleep\r\n          while (!speaker.ac.sampleRatesSet()) {\r\n            console.log('SinkSamplingRate is undefined, sleeping');\r\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(1);\r\n          }\r\n          // resolve when we have a result\r\n          speaker.result = await speaker.ac.startCalibration(\r\n            stream,\r\n            params.gainValues,\r\n            params.ICalib,\r\n            params.knownIR,\r\n            params.microphoneName,\r\n            params.calibrateSoundCheck,\r\n            params.isSmartPhone,\r\n            params.calibrateSoundBurstRepeats,\r\n            params.calibrateSoundBurstSec,\r\n            params.calibrateSoundBurstsWarmup,\r\n            params.calibrateSoundHz\r\n          );\r\n          speaker.#removeUIElems();\r\n          resolve(speaker.result);\r\n        });\r\n        // if we do not receive a result within the timeout, reject\r\n        setTimeout(() => {\r\n          reject(\r\n            new _peerErrors__WEBPACK_IMPORTED_MODULE_3__.CalibrationTimedOutError(\r\n              `Calibration failed to produce a result after ${\r\n                timeOut / 1000\r\n              } seconds. Please try again.`\r\n            )\r\n          );\r\n        }, timeOut);\r\n      });\r\n    });\r\n  };\r\n\r\n  static testIIR = async (params, CalibratorInstance, IIR, timeOut = 180000) => {\r\n    window.speaker = new Speaker(params, CalibratorInstance);\r\n    const {speaker} = window;\r\n\r\n    // wrap the calibration process in a promise so we can await it\r\n    return new Promise((resolve, reject) => {\r\n      // when a call is received\r\n      speaker.peer.on('call', async call => {\r\n        // Answer the call (one way)\r\n        call.answer();\r\n        speaker.#removeUIElems();\r\n        speaker.#showSpinner();\r\n        speaker.ac.createLocalAudio(document.getElementById(speaker.targetElement));\r\n        // when we start receiving audio\r\n        call.on('stream', async stream => {\r\n          window.localStream = stream;\r\n          window.localAudio.srcObject = stream;\r\n          window.localAudio.autoplay = false;\r\n\r\n          // if the sinkSamplingRate is not set sleep\r\n          while (!speaker.ac.sampleRatesSet()) {\r\n            console.log('SinkSamplingRate is undefined, sleeping');\r\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(1);\r\n          }\r\n          // resolve when we have a result\r\n          speaker.result = await speaker.ac.playMLSwithIIR(stream, IIR);\r\n          speaker.#removeUIElems();\r\n          resolve(speaker.result);\r\n        });\r\n        // if we do not receive a result within the timeout, reject\r\n        setTimeout(() => {\r\n          reject(\r\n            new _peerErrors__WEBPACK_IMPORTED_MODULE_3__.CalibrationTimedOutError(\r\n              `Calibration failed to produce a result after ${\r\n                timeOut / 1000\r\n              } seconds. Please try again.`\r\n            )\r\n          );\r\n        }, timeOut);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Called after the peer conncection has been opened.\r\n   * Generates a QR code for the connection and displays it.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #showQRCode = () => {\r\n    // Get query string, the URL parameters to specify a Listener\r\n    const queryStringParameters = {\r\n      speakerPeerId: this.peer.id,\r\n      isSmartPhone: this.isSmartPhone,\r\n    };\r\n    const queryString = this.queryStringFromObject(queryStringParameters);\r\n    const uri = this.siteUrl + queryString;\r\n    if (this.isSmartPhone) {\r\n      // Display QR code for the participant to scan\r\n      const qrCanvas = document.createElement('canvas');\r\n      qrCanvas.setAttribute('id', 'qrCanvas');\r\n      console.log(uri);\r\n      qrcode__WEBPACK_IMPORTED_MODULE_0__.toCanvas(qrCanvas, uri, error => {\r\n        if (error) console.error(error);\r\n      });\r\n      document.getElementById(this.targetElement).appendChild(qrCanvas);\r\n    } else {\r\n      // show the link to the user\r\n      // If specified HTML Id is available, show QR code there\r\n      if (document.getElementById(this.targetElement)) {\r\n        // const linkTag = document.createElement('a');\r\n        // linkTag.setAttribute('href', uri);\r\n        // linkTag.innerHTML = 'Click here to start the calibration';\r\n        // linkTag.target = '_blank';\r\n        // document.getElementById(this.targetElement).appendChild(linkTag);\r\n        // document.getElementById(this.targetElement).appendChild(qrCanvas);\r\n\r\n        const proceedButton = document.createElement('button');\r\n        proceedButton.setAttribute('id', 'calibrationProceedButton');\r\n        proceedButton.setAttribute('class', 'btn btn-success');\r\n        proceedButton.innerHTML = 'Proceed';\r\n        proceedButton.onclick = () => {\r\n          // open the link in a new tab\r\n          window.open(uri, '_blank');\r\n          // remove the button\r\n          document.getElementById('calibrationProceedButton').remove();\r\n        };\r\n        document.getElementById(this.targetElement).appendChild(proceedButton);\r\n      }\r\n    }\r\n    // or just print it to console\r\n    console.log('TEST: Peer reachable at: ', uri);\r\n  };\r\n\r\n  #showSpinner = () => {\r\n    const spinner = document.createElement('div');\r\n    spinner.className = 'spinner-border ml-auto';\r\n    spinner.role = 'status';\r\n    spinner.ariaHidden = 'true';\r\n    document.getElementById(this.targetElement).appendChild(spinner);\r\n\r\n    // clear instructionDisplay\r\n    const instructionDisplay = document.getElementById(this.instructionDisplayId);\r\n    const background = document.getElementById('background'); // todo: get background id from params\r\n    if (instructionDisplay) {\r\n      instructionDisplay.innerHTML = '';\r\n      instructionDisplay.style.whiteSpace = 'nowrap';\r\n      instructionDisplay.style.fontWeight = 'bold';\r\n      instructionDisplay.style.width = 'fit-content';\r\n      instructionDisplay.innerHTML = _dist_example_i18n__WEBPACK_IMPORTED_MODULE_6__.phrases.RC_soundRecording[\"en-US\"];\r\n      let fontSize = 100;\r\n      instructionDisplay.style.fontSize = fontSize + 'px';\r\n      while (instructionDisplay.scrollWidth > background.scrollWidth * 0.9 && fontSize > 10) {\r\n        fontSize--;\r\n        instructionDisplay.style.fontSize = fontSize + 'px';\r\n      }\r\n      const p = document.createElement('p');\r\n      // font size\r\n      p.style.fontSize = '1.1rem';\r\n      p.style.fontWeight = 'normal';\r\n      p.style.paddingTop = '20px';\r\n      const timeToCalibrateText = _dist_example_i18n__WEBPACK_IMPORTED_MODULE_6__.phrases.RC_howLongToCalibrate[\"en-US\"];\r\n      p.innerHTML = timeToCalibrateText.replace('111', this.timeToCalibrate);\r\n      instructionDisplay.appendChild(p);\r\n    }\r\n\r\n    // Update title - titleDisplayId\r\n    const titleDisplay = document.getElementById(this.titleDisplayId);\r\n    if (titleDisplay) {\r\n      // replace 2 with 3\r\n      titleDisplay.innerHTML = titleDisplay.innerHTML.replace('2', '3');\r\n      // replace 1 with 3\r\n      titleDisplay.innerHTML = titleDisplay.innerHTML.replace('1', '3');\r\n    }\r\n  };\r\n\r\n  #removeUIElems = () => {\r\n    const parent = document.getElementById(this.targetElement);\r\n    while (parent.firstChild) {\r\n      parent.firstChild.remove();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection is opened.\r\n   * Saves the peer id and calls the QR code generator.\r\n   *\r\n   * @param peerId - The peer id of the peer connection.\r\n   * @param id\r\n   * @private\r\n   * @example\r\n   */\r\n  #onPeerOpen = id => {\r\n    // Workaround for peer.reconnect deleting previous id\r\n    if (id === null) {\r\n      console.error('Received null id from peer open');\r\n      this.peer.id = this.lastPeerId;\r\n    } else {\r\n      this.lastPeerId = this.peer.id;\r\n    }\r\n\r\n    if (id !== this.peer.id) {\r\n      console.warn('DEBUG Check you assumption that id === this.peer.id');\r\n    }\r\n\r\n    this.#showQRCode();\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection is established.\r\n   * Enforces a single connection.\r\n   *\r\n   * @param connection - The connection object.\r\n   * @private\r\n   * @example\r\n   */\r\n  #onPeerConnection = connection => {\r\n    // Allow only a single connection\r\n    if (this.conn && this.conn.open) {\r\n      connection.on('open', () => {\r\n        connection.send('Already connected to another client');\r\n        setTimeout(() => {\r\n          connection.close();\r\n        }, 500);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.conn = connection;\r\n    console.log('Connected to: ', this.conn.peer);\r\n    this.#ready();\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection is closed.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #onPeerClose = () => {\r\n    this.conn = null;\r\n    console.log('Connection destroyed');\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection is disconnected.\r\n   * Attempts to reconnect.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #onPeerDisconnected = () => {\r\n    console.log('Connection lost. Please reconnect');\r\n\r\n    // Workaround for peer.reconnect deleting previous id\r\n    this.peer.id = this.lastPeerId;\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    this.peer._lastServerId = this.lastPeerId;\r\n    this.peer.reconnect();\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection encounters an error.\r\n   *\r\n   * @param error\r\n   * @private\r\n   * @example\r\n   */\r\n  #onPeerError = error => {\r\n    // TODO: check if this function is needed or not\r\n    console.error(error);\r\n  };\r\n\r\n  /**\r\n   * Called when data is received from the peer connection.\r\n   *\r\n   * @param data\r\n   * @private\r\n   * @example\r\n   */\r\n  #onIncomingData = data => {\r\n    // enforce object type\r\n    if (\r\n      !Object.prototype.hasOwnProperty.call(data, 'name') ||\r\n      !Object.prototype.hasOwnProperty.call(data, 'payload')\r\n    ) {\r\n      console.error('Received malformed data: ', data);\r\n      return;\r\n    }\r\n\r\n    switch (data.name) {\r\n      case 'samplingRate':\r\n        this.ac.setSamplingRates(data.payload);\r\n        break;\r\n      case 'deviceType':\r\n        this.ac.setDeviceType(data.payload);\r\n        break;\r\n      case 'deviceName':\r\n        this.ac.setDeviceName(data.payload);\r\n        break;\r\n      case _peerErrors__WEBPACK_IMPORTED_MODULE_3__.UnsupportedDeviceError.name:\r\n      case _peerErrors__WEBPACK_IMPORTED_MODULE_3__.MissingSpeakerIdError.name:\r\n        throw data.payload;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the peer connection is #ready.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #ready = () => {\r\n    // Perform callback with data\r\n    this.conn.on('data', this.#onIncomingData);\r\n    this.conn.on('close', () => {\r\n      console.log('Connection reset<br>Awaiting connection...');\r\n      this.conn = null;\r\n    });\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Debug method for downloading the recorded audio\r\n   *\r\n   * @public\r\n   * @example\r\n   */\r\n  downloadData = () => {\r\n    this.ac.downloadData();\r\n  };\r\n}\r\n\r\n/* \r\nReferenced links:\r\nhttps://stackoverflow.com/questions/28016664/when-you-pass-this-as-an-argument/28016676#28016676\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\r\nhttps://stackoverflow.com/questions/879152/how-do-i-make-javascript-beep [3]\r\n*/\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Speaker);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/peer-connection/speaker.js?");

/***/ }),

/***/ "./src/server/PythonServerAPI.js":
/*!***************************************!*\
  !*** ./src/server/PythonServerAPI.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\r\n/**\r\n *\r\n */\r\nclass PythonServerAPI {\r\n  static PYTHON_SERVER_URL = 'https://easyeyes-python-flask-server.herokuapp.com';\r\n\r\n  static TEST_SERVER_URL = 'http://127.0.0.1:5000';\r\n\r\n  /** @private */\r\n  MAX_RETRY_COUNT = 3;\r\n  /** @private */\r\n  RETRY_DELAY_MS = 1000;\r\n  /**\r\n   * @param data- -\r\n   * g = inverted impulse response, when convolved with the impulse\r\n   * reponse, they cancel out.\r\n   * @param data.payload\r\n   * @param data.sampleRate\r\n   * @param data.P\r\n   * @param data-.payload\r\n   * @param data-.sampleRate\r\n   * @param data-.P\r\n   * @returns\r\n   * @example\r\n   */\r\n  getImpulseResponse = async ({mls, payload, sampleRate, P, numPeriods}) => {\r\n    const task = 'impulse-response';\r\n    let res = null;\r\n\r\n    console.log({payload});\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      payload,\r\n      'sample-rate': sampleRate,\r\n      mls,\r\n      P,\r\n      numPeriods,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n    return res.data[task];\r\n  };\r\n\r\n  getMLS = async(length) => {\r\n    const task = 'mls';\r\n    let res = null\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      'length':length,\r\n    })\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method:'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      })\r\n\r\n      return res.data[task];\r\n  }\r\n  getMLSWithRetry = async (length) => {\r\n    let retryCount = 0;\r\n    let response = null;\r\n\r\n    while (retryCount < this.MAX_RETRY_COUNT) {\r\n      try {\r\n        response = await this.getMLS(length);\r\n        // If the request is successful, break out of the loop\r\n        break;\r\n      } catch (error) {\r\n        console.error(`Error occurred. Retrying... (${retryCount + 1}/${this.MAX_RETRY_COUNT})`);\r\n        retryCount++;\r\n        await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY_MS));\r\n      }\r\n    }\r\n\r\n    if (response) {\r\n      return response;\r\n    } else {\r\n      throw new Error(`Failed to get MLS after ${this.MAX_RETRY_COUNT} attempts.`);\r\n    }\r\n  };\r\n\r\n  getPSD = async ({unconv_rec, conv_rec, sampleRate}) => {\r\n    const task = 'psd';\r\n    let res = null;\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      unconv_rec,\r\n      conv_rec,\r\n      sampleRate,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n    return res.data[task];\r\n  };\r\n\r\n  getSubtractedPSD = async (rec, knownGains, knownFrequencies,sampleRate) => {\r\n    const task = 'subtracted-psd';\r\n    let res = null;\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      rec,\r\n      knownGains,\r\n      knownFrequencies,\r\n      sampleRate,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n    return res.data[task];\r\n  };\r\n\r\n  getSubtractedPSDWithRetry = async ( rec, knownGains, knownFrequencies,sampleRate) => {\r\n    let retryCount = 0;\r\n    let response = null;\r\n\r\n    while (retryCount < this.MAX_RETRY_COUNT) {\r\n      try {\r\n        response = await this.getSubtractedPSD( rec, knownGains, knownFrequencies,sampleRate );\r\n        // If the request is successful, break out of the loop\r\n        break;\r\n      } catch (error) {\r\n        console.error(`Error occurred. Retrying... (${retryCount + 1}/${this.MAX_RETRY_COUNT})`);\r\n        retryCount++;\r\n        await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY_MS));\r\n      }\r\n    }\r\n\r\n    if (response) {\r\n      return response;\r\n    } else {\r\n      throw new Error(`Failed to get PSD after ${this.MAX_RETRY_COUNT} attempts.`);\r\n    }\r\n  };\r\n  \r\n  getPSDWithRetry = async ({ unconv_rec, conv_rec,sampleRate }) => {\r\n    let retryCount = 0;\r\n    let response = null;\r\n  \r\n    while (retryCount < this.MAX_RETRY_COUNT) {\r\n      try {\r\n        response = await this.getPSD({ unconv_rec, conv_rec,sampleRate });\r\n        // If the request is successful, break out of the loop\r\n        break;\r\n      } catch (error) {\r\n        console.error(`Error occurred. Retrying... (${retryCount + 1}/${this.MAX_RETRY_COUNT})`);\r\n        retryCount++;\r\n        await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY_MS));\r\n      }\r\n    }\r\n  \r\n    if (response) {\r\n      return response;\r\n    } else {\r\n      throw new Error(`Failed to get PSD after ${this.MAX_RETRY_COUNT} attempts.`);\r\n    }\r\n  };\r\n  \r\n\r\n  getComponentInverseImpulseResponse = async ({payload,mls,lowHz,highHz,componentIRGains,componentIRFreqs,sampleRate}) => {\r\n    const task = 'component-inverse-impulse-response';\r\n    let res = null;\r\n\r\n    console.log({payload});\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      payload,\r\n      mls,\r\n      lowHz,\r\n      highHz,\r\n      componentIRGains,\r\n      componentIRFreqs,\r\n      sampleRate,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n    return res.data[task];\r\n  };\r\n  getSystemInverseImpulseResponse = async ({payload,mls,lowHz,highHz,sampleRate}) => {\r\n    const task = 'system-inverse-impulse-response';\r\n    let res = null;\r\n\r\n    console.log({payload});\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      payload,\r\n      mls,\r\n      lowHz,\r\n      highHz,\r\n      sampleRate,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n    return res.data[task];\r\n  };\r\n\r\ngetComponentInverseImpulseResponseWithRetry = async ({ payload, mls, lowHz, highHz,componentIRGains,componentIRFreqs, sampleRate}) => {\r\n  let retryCount = 0;\r\n  let response = null;\r\n\r\n  while (retryCount < this.MAX_RETRY_COUNT) {\r\n    try {\r\n      response = await this.getComponentInverseImpulseResponse({ payload, mls, lowHz, highHz,componentIRGains,componentIRFreqs,sampleRate});\r\n      // If the request is successful, break out of the loop\r\n      break;\r\n    } catch (error) {\r\n      console.error(`Error occurred. Retrying... (${retryCount + 1}/${this.MAX_RETRY_COUNT})`);\r\n      retryCount++;\r\n      await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY_MS));\r\n    }\r\n  }\r\n\r\n  if (response) {\r\n    return response;\r\n  } else {\r\n    throw new Error(`Failed to get inverse impulse response after ${this.MAX_RETRY_COUNT} attempts.`);\r\n  }\r\n};\r\n\r\ngetSystemInverseImpulseResponseWithRetry = async ({ payload, mls, lowHz, highHz, sampleRate}) => {\r\n  let retryCount = 0;\r\n  let response = null;\r\n\r\n  while (retryCount < this.MAX_RETRY_COUNT) {\r\n    try {\r\n      response = await this.getSystemInverseImpulseResponse({ payload, mls, lowHz, highHz,sampleRate});\r\n      // If the request is successful, break out of the loop\r\n      break;\r\n    } catch (error) {\r\n      console.error(`Error occurred. Retrying... (${retryCount + 1}/${this.MAX_RETRY_COUNT})`);\r\n      retryCount++;\r\n      await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY_MS));\r\n    }\r\n  }\r\n\r\n  if (response) {\r\n    return response;\r\n  } else {\r\n    throw new Error(`Failed to get inverse impulse response after ${this.MAX_RETRY_COUNT} attempts.`);\r\n  }\r\n};\r\n\r\n\r\n\r\n  getVolumeCalibration = async ({payload, sampleRate, lCalib}) => {\r\n    const task = 'volume';\r\n    let res = null;\r\n\r\n    console.log({payload});\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      payload,\r\n      'sample-rate': sampleRate,\r\n      lCalib,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL,\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n    return res.data[task];\r\n  };\r\n\r\n  getVolumeCalibrationParameters = async ({inDBValues, outDBSPLValues, lCalib, componentGainDBSPL}) => {\r\n    const task = 'volume-parameters';\r\n    let res = null;\r\n\r\n    const data = JSON.stringify({\r\n      task,\r\n      inDBValues,\r\n      outDBSPLValues,\r\n      lCalib,\r\n      componentGainDBSPL,\r\n    });\r\n\r\n    await axios__WEBPACK_IMPORTED_MODULE_0___default()({\r\n      method: 'post',\r\n      baseURL: PythonServerAPI.PYTHON_SERVER_URL, //server\r\n      url: `/task/${task}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data,\r\n    })\r\n      .then(response => {\r\n        res = response;\r\n        console.log(res.data[task]);\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n\r\n\r\n\r\n    // console.log(res.data[task]);\r\n    //below is an example of res.data[task]\r\n    //{\r\n    //  R: 16.56981076554259,\r\n    //  RMSError: 1.9289162528535229\r\n    //  T: -47.79799120884434,\r\n    //  W: 61.0485247483732,\r\n    //  backgroundDBSPL: 43.88233142069752,\r\n    //  gainDBSPL: -128.24742161208985\r\n    //}\r\n    return res.data[task];\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (PythonServerAPI);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/server/PythonServerAPI.js?");

/***/ }),

/***/ "./src/tasks/audioCalibrator.js":
/*!**************************************!*\
  !*** ./src/tasks/audioCalibrator.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _audioRecorder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audioRecorder */ \"./src/tasks/audioRecorder.js\");\n/* harmony import */ var _server_PythonServerAPI__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/PythonServerAPI */ \"./src/server/PythonServerAPI.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/* eslint-disable no-await-in-loop */\r\n\r\n\r\n\r\n\r\n/**\r\n * .\r\n * .\r\n * .\r\n * Provides methods for calibrating the user's speakers\r\n *\r\n * @extends AudioRecorder\r\n */\r\nclass AudioCalibrator extends _audioRecorder__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   *\r\n   * @param numCaptures\r\n   * @param numMLSPerCapture\r\n   * @example\r\n   */\r\n  constructor(numCaptures = 1, numMLSPerCapture = 1) {\r\n    super();\r\n    this.numCaptures = numCaptures;\r\n    this.numMLSPerCapture = numMLSPerCapture;\r\n    this.pyServerAPI = new _server_PythonServerAPI__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  }\r\n\r\n  /** @private */\r\n  #isCalibrating = false;\r\n\r\n  /** @private */\r\n  sourceAudioContext;\r\n\r\n  /** @private */\r\n  sourceAudioContextConvolved;\r\n\r\n  /** @protected */\r\n  numCalibratingRounds = 1;\r\n\r\n  /** @protected */\r\n  numSuccessfulCaptured = 0;\r\n\r\n  /** @private */\r\n  sourceSamplingRate;\r\n\r\n  /** @protected */\r\n  calibrationNodes = [];\r\n\r\n  /** @protected */\r\n  calibrationNodesConvolved = [];\r\n\r\n  /** @protected */\r\n  localAudio;\r\n\r\n  /**\r\n   * Called when a call is received.\r\n   * Creates a local audio DOM element and attaches it to the page.\r\n   *\r\n   * @param targetElement\r\n   * @example\r\n   */\r\n  createLocalAudio = targetElement => {\r\n    this.localAudio = document.createElement('audio');\r\n    this.localAudio.setAttribute('id', 'localAudio');\r\n    targetElement.appendChild(this.localAudio);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {MediaStream} stream\r\n   * @param {Function} playCalibrationAudio - (async) function that plays the calibration audio\r\n   * @param {*} beforePlay - (async) function that is called before playing the audio\r\n   * @param {*} beforeRecord - (async) function that is called before recording\r\n   * @param {*} duringRecord - (async) function that is called while recording\r\n   * @param {*} afterRecord  - (async) function that is called after recording\r\n   * @example\r\n   */\r\n  calibrationSteps = async (\r\n    stream,\r\n    playCalibrationAudio,\r\n    beforePlay = async () => {},\r\n    beforeRecord = async () => {},\r\n    loopCondition = () => false,\r\n    duringRecord = async () => {},\r\n    afterRecord = async () => {},\r\n    mode\r\n  ) => {\r\n    this.numSuccessfulCaptured = 0;\r\n\r\n    // do something before playing such as using the MLS to fill the buffers\r\n    console.warn('beforePlay');\r\n    await beforePlay();\r\n\r\n    // play calibration audio\r\n    console.warn('playCalibrationAudio');\r\n    playCalibrationAudio();\r\n\r\n    // do something before recording such as awaiting a certain amount of time\r\n    console.warn('beforeRecord');\r\n    await beforeRecord();\r\n\r\n    // calibration loop\r\n    while (loopCondition()) {\r\n      // start recording\r\n      console.warn('startRecording');\r\n      await this.startRecording(stream);\r\n\r\n      // do something during the recording such as sleep n amount of time\r\n      console.warn('duringRecord');\r\n      await duringRecord();\r\n\r\n      // when done, stop recording\r\n      console.warn('stopRecording');\r\n      await this.stopRecording(mode);\r\n\r\n      // do something after recording such as start processing values\r\n      console.warn('afterRecord');\r\n      await afterRecord();\r\n\r\n      // eslint-disable-next-line no-await-in-loop\r\n      await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {MediaStream} stream\r\n   * @param {Function} playCalibrationAudio - (async) function that plays the calibration audio\r\n   * @param {*} beforeRecord - (async) function that is called before recording\r\n   * @param {*} afterRecord  - (async) function that is called after recording\r\n   * @param {Number} gainValue - the gain value to set the gain node to\r\n   */\r\n  volumeCalibrationSteps = async (\r\n    stream,\r\n    playCalibrationAudio,\r\n    beforeRecord = () => {},\r\n    afterRecord = () => {},\r\n    gainValue,\r\n    lCalib = 104.92978421490648\r\n  ) => {\r\n    this.numCalibratingRoundsCompleted = 0;\r\n\r\n    // calibration loop\r\n    while (!this.#isCalibrating && this.numCalibratingRoundsCompleted < this.numCalibratingRounds) {\r\n      // before recording\r\n      await beforeRecord(gainValue);\r\n\r\n      // start recording\r\n      await this.startRecording(stream);\r\n\r\n      // play calibration audio\r\n      console.log(`Calibration Round ${this.numCalibratingRoundsCompleted}`);\r\n      await playCalibrationAudio();\r\n\r\n      // when done, stop recording\r\n      console.log('Calibration Round Complete');\r\n      await this.stopRecording();\r\n\r\n      // after recording\r\n      await afterRecord(lCalib);\r\n\r\n      this.calibrationNodes = [];\r\n\r\n      // eslint-disable-next-line no-await-in-loop\r\n      await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(2);\r\n      this.numCalibratingRoundsCompleted += 1;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Getter for the isCalibrating property.\r\n   *\r\n   * @public\r\n   * @returns - True if the audio is being calibrated, false otherwise.\r\n   * @example\r\n   */\r\n  getCalibrationStatus = () => this.#isCalibrating;\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Set the sampling rate to the value received from the listener\r\n   *\r\n   * @param {*} sinkSamplingRate\r\n   * @param samplingRate\r\n   * @example\r\n   */\r\n  setSamplingRates = samplingRate => {\r\n    this.sinkSamplingRate = samplingRate;\r\n    this.sourceSamplingRate = samplingRate;\r\n\r\n    // this.emit('update', {message: `sampling at ${samplingRate}Hz...`});\r\n  };\r\n\r\n  sampleRatesSet = () => this.sourceSamplingRate && this.sinkSamplingRate;\r\n\r\n  addCalibrationNode = node => {\r\n    this.calibrationNodes.push(node);\r\n  };\r\n\r\n  addCalibrationNodeConvolved = node => {\r\n    \r\n    this.calibrationNodesConvolved.push(node);\r\n  }\r\n\r\n  makeNewSourceAudioContext = () => {\r\n    const options = {\r\n      sampleRate: this.sourceSamplingRate,\r\n    };\r\n\r\n    this.sourceAudioContext = new (window.AudioContext ||\r\n      window.webkitAudioContext ||\r\n      window.audioContext)(options);\r\n\r\n    return this.sourceAudioContext;\r\n  };\r\n\r\n  makeNewSourceAudioContextConvolved = () => {\r\n    const options = {\r\n      sampleRate: this.sourceSamplingRate,\r\n    };\r\n\r\n    this.sourceAudioContextConvolved = new (window.AudioContext ||\r\n      window.webkitAudioContext ||\r\n      window.audioContext)(options);\r\n\r\n    return this.sourceAudioContextConvolved;\r\n  };\r\n\r\n\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Download the result of the calibration roudns\r\n   *\r\n   * @example\r\n   */\r\n  downloadData = () => {\r\n    const recordings = this.getAllRecordedSignals();\r\n    const i = recordings.length - 1;\r\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(recordings[i], `recordedMLSignal_${i}_unconvolved.csv`);\r\n  };\r\n  downloadSingleUnfilteredRecording = () => {\r\n    const recordings = this.getAllRecordedSignals();\r\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(recordings[0], `recordedMLSignal_unconvolved.csv`);\r\n  }\r\n  downloadSingleFilteredRecording = () => {\r\n    const recordings = this.getAllFilteredRecordedSignals();\r\n    console.log(\"Single filtered recording should be of length: \" + recordings[0].length);\r\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(recordings[0], `recordedMLSignal_convolved.csv`);\r\n  }\r\n  downloadUnfilteredRecordings = () => {\r\n    const recordings = this.getAllRecordedSignals();\r\n    console.log(\"unfilterd download?\");\r\n    for (let i = 0; i < recordings.length; i++){\r\n      console.log(i);\r\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(recordings[i], `recordedMLSignal_${i}_unconvolved.csv`);\r\n    }\r\n  };\r\n  downloadFilteredRecordings = () => {\r\n    const recordings = this.getAllFilteredRecordedSignals();\r\n    for (let i = 0; i < recordings.length; i++){\r\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(recordings[i], `recordedMLSignal_${i}_convolved.csv`);\r\n    }\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioCalibrator);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/audioCalibrator.js?");

/***/ }),

/***/ "./src/tasks/audioRecorder.js":
/*!************************************!*\
  !*** ./src/tasks/audioRecorder.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _myEventEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../myEventEmitter */ \"./src/myEventEmitter.js\");\n\r\n\r\n/**\r\n * @class provides a simple interface for recording audio from a microphone\r\n * using the Media Recorder API.\r\n */\r\nclass AudioRecorder extends _myEventEmitter__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /** @private */\r\n  #mediaRecorder;\r\n\r\n  /** @private */\r\n  #recordedChunks = [];\r\n\r\n  /** @private */\r\n  #audioBlob;\r\n\r\n  /** @private */\r\n  #audioContext;\r\n\r\n  /** @private */\r\n  #recordedSignals = [];\r\n\r\n  /** @private */\r\n  #filteredRecordings = [];\r\n\r\n  /** @private */\r\n  sinkSamplingRate;\r\n\r\n  /**\r\n   * Decode the audio data from the recorded audio blob.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #saveRecording = async () => {\r\n    const arrayBuffer = await this.#audioBlob.arrayBuffer();\r\n    const audioBuffer = await this.#audioContext.decodeAudioData(arrayBuffer);\r\n    const data = audioBuffer.getChannelData(0);\r\n\r\n    console.log(`Decoded audio buffer with ${data.length} samples`);\r\n    console.log(`Unfiltered recording should be of length: ${data.length}`);\r\n    this.#recordedSignals.push(Array.from(data));\r\n  };\r\n\r\n  #saveFilteredRecording = async () => {\r\n    const arrayBuffer = await this.#audioBlob.arrayBuffer();\r\n    const audioBuffer = await this.#audioContext.decodeAudioData(arrayBuffer);\r\n    const data = audioBuffer.getChannelData(0);\r\n\r\n    console.log(`Decoded audio buffer with ${data.length} samples`);\r\n    console.log(`Filtered recording should be of length: ${data.length}`);\r\n    this.#filteredRecordings.push(Array.from(data));\r\n  };\r\n\r\n  /**\r\n   * Event listener triggered when data is available in the media recorder.\r\n   *\r\n   * @private\r\n   * @param e - The event object.\r\n   * @example\r\n   */\r\n  #onRecorderDataAvailable = e => {\r\n    if (e.data && e.data.size > 0) this.#recordedChunks.push(e.data);\r\n  };\r\n\r\n  /**\r\n   * Method to create a media recorder object and set up event listeners.\r\n   *\r\n   * @private\r\n   * @param stream - The stream of audio from the Listener.\r\n   * @example\r\n   */\r\n  #setMediaRecorder = stream => {\r\n    // Create a new MediaRecorder object\r\n    this.#mediaRecorder = new MediaRecorder(stream);\r\n\r\n    // Add event listeners\r\n    this.#mediaRecorder.ondataavailable = e => this.#onRecorderDataAvailable(e);\r\n  };\r\n\r\n  #setAudioContext = () => {\r\n    this.#audioContext = new (window.AudioContext ||\r\n      window.webkitAudioContext ||\r\n      window.audioContext)({\r\n      sampleRate: this.sinkSamplingRate,\r\n      //sampleRate: 96000\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Public method to start the recording process.\r\n   *\r\n   * @param stream - The stream of audio from the Listener.\r\n   * @example\r\n   */\r\n  startRecording = async stream => {\r\n    // Create a fresh audio context\r\n    this.#setAudioContext();\r\n    // Set up media recorder if needed\r\n    if (!this.#mediaRecorder) this.#setMediaRecorder(stream);\r\n    // clear recorded chunks\r\n    this.#recordedChunks = [];\r\n    // start recording\r\n    this.#mediaRecorder.start();\r\n  };\r\n\r\n  /**\r\n   * Method to stop the recording process.\r\n   *\r\n   * @public\r\n   * @example\r\n   */\r\n  stopRecording = async (mode) => {\r\n    // Stop the media recorder, and wait for the data to be available\r\n    await new Promise(resolve => {\r\n      this.#mediaRecorder.onstop = () => {\r\n        // when the stop event is triggered, resolve the promise\r\n        this.#audioBlob = new Blob(this.#recordedChunks, {\r\n          type: 'audio/wav; codecs=opus',\r\n        });\r\n        resolve(this.#audioBlob);\r\n      };\r\n      // call stop\r\n      this.#mediaRecorder.stop();\r\n    });\r\n    // Now that we have data, save it\r\n    if (mode === 'filtered'){\r\n      await this.#saveFilteredRecording();\r\n    }else{\r\n      await this.#saveRecording();\r\n    }\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Public method to get the last recorded audio signal\r\n   *\r\n   * @returns\r\n   * @example\r\n   */\r\n  getLastRecordedSignal = () => this.#recordedSignals[this.#recordedSignals.length - 1];\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Public method to get all the recorded audio signals\r\n   *\r\n   * @returns\r\n   * @example\r\n   */\r\n  getAllRecordedSignals = () => this.#recordedSignals;\r\n\r\n    /** .\r\n   * .\r\n   * .\r\n   * Public method to get all the recorded audio signals\r\n   *\r\n   * @returns\r\n   * @example\r\n   */\r\n  getAllFilteredRecordedSignals = () => this.#filteredRecordings;\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Public method to set the sampling rate used by the capture device\r\n   *\r\n   * @param {Number} sinkSamplingRate - The sampling rate of the capture device\r\n   * @example\r\n   */\r\n  setSinkSamplingRate = sinkSamplingRate => {\r\n    this.sinkSamplingRate = sinkSamplingRate;\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioRecorder);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/audioRecorder.js?");

/***/ }),

/***/ "./src/tasks/combination/combination.js":
/*!**********************************************!*\
  !*** ./src/tasks/combination/combination.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../audioCalibrator */ \"./src/tasks/audioCalibrator.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n/* harmony import */ var _config_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/firebase */ \"./src/config/firebase.js\");\n/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/database */ \"./node_modules/firebase/database/dist/esm/index.esm.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass Combination extends _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * Default constructor. Creates an instance with any number of paramters passed or the default parameters defined here.\r\n   *\r\n   * @param {Object<boolean, number, number, number>} calibratorParams  - paramter object\r\n   * @param {boolean} [calibratorParams.download = false]  - boolean flag to download captures\r\n   * @param {number} [calibratorParams.mlsOrder = 18] - order of the MLS to be generated\r\n   * @param {number} [calibratorParams.numCaptures = 5] - number of captures to perform\r\n   * @param {number} [calibratorParams.numMLSPerCapture = 4] - number of bursts of MLS per capture\r\n   */\r\n  constructor({\r\n    download = false,\r\n    mlsOrder = 18,\r\n    numCaptures = 3,\r\n    numMLSPerCapture = 4,\r\n    lowHz = 20,\r\n    highHz = 10000,\r\n  }) {\r\n    super(numCaptures, numMLSPerCapture);\r\n    this.#mlsOrder = parseInt(mlsOrder, 10);\r\n    this.#P = 2 ** mlsOrder - 1;\r\n    this.#download = download;\r\n    this.#mls = [];\r\n    this.#lowHz = lowHz;\r\n    this.#highHz = highHz;\r\n  }\r\n\r\n  /** @private */\r\n  stepNum = 0;\r\n\r\n  /** @private */\r\n  totalSteps = 25;\r\n\r\n  /** @private */\r\n  #download;\r\n\r\n  /** @private */\r\n  #mlsGenInterface;\r\n\r\n  /** @private */\r\n  #mlsBufferView;\r\n\r\n  /** @private */\r\n  componentInvertedImpulseResponse = null;\r\n\r\n  /** @private */\r\n  systemInvertedImpulseResponse = null;\r\n\r\n  //averaged and subtracted ir returned from calibration used to calculated iir\r\n  /** @private */\r\n  ir = null;\r\n\r\n  /** @private */\r\n  impulseResponses = [];\r\n\r\n  /** @private */\r\n  #mlsOrder;\r\n\r\n  /** @private */\r\n  #lowHz;\r\n\r\n  /** @private */\r\n  #highHz;\r\n\r\n  /** @private */\r\n  #mls;\r\n\r\n  /** @private */\r\n  #P;\r\n\r\n  /** @private */\r\n  #audioContext;\r\n\r\n  /** @private */\r\n  TAPER_SECS = 5;\r\n\r\n  /** @private */\r\n  offsetGainNode;\r\n\r\n  /** @private */\r\n  componentConvolution;\r\n\r\n  /** @private */\r\n  systemConvolution;\r\n\r\n  ////////////////////////volume\r\n  /** @private */\r\n  #CALIBRATION_TONE_FREQUENCY = 1000; // Hz\r\n\r\n  /** @private */\r\n  #CALIBRATION_TONE_TYPE = 'sine';\r\n\r\n  /** @private */\r\n  #CALIBRATION_TONE_DURATION = 5; // seconds\r\n\r\n  /** @private */\r\n  outDBSPL = null;\r\n  THD = null;\r\n  outDBSPL1000 = null;\r\n\r\n  /** @private */\r\n  TAPER_SECS = 0.01; // seconds\r\n\r\n  /** @private */\r\n  status_denominator = 8;\r\n\r\n  /** @private */\r\n  status_numerator = 0;\r\n\r\n  /** @private */\r\n  percent_complete = 0;\r\n\r\n  /** @private */\r\n  status = ``;\r\n\r\n  /**@private */\r\n  status_literal = `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px; height: 20px; border: 2px solid #000; border-radius: 10px;\"><div style=\"width: ${this.percent_complete}%; height: 100%; background-color: #00aaff; border-radius: 8px;\"></div></div></div>`;\r\n\r\n  /**@private */\r\n  componentIR = null;\r\n\r\n  /**@private */\r\n  oldComponentIR = null;\r\n\r\n  /**@private */\r\n  systemIR = null;\r\n\r\n  /**@private */\r\n  _calibrateSoundCheck = '';\r\n\r\n  deviceType = null;\r\n\r\n  deviceName = null;\r\n\r\n  desired_time_per_mls = 0;\r\n\r\n  num_mls_to_skip = 0;\r\n\r\n  desired_sampling_rate = 0;\r\n\r\n  #currentConvolution = [];\r\n\r\n  mode = 'unfiltered';\r\n\r\n  sourceNode;\r\n\r\n  /**generate string template that gets reevaluated as variable increases */\r\n  generateTemplate = () => {\r\n    if (this.percent_complete > 100) {\r\n      this.percent_complete = 100;\r\n    }\r\n    const template = `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 800px; height: 20px; border: 2px solid #000; border-radius: 10px;\"><div style=\"width: ${this.percent_complete}%; height: 100%; background-color: #00aaff; border-radius: 8px;\"></div></div></div>`;\r\n    return template;\r\n  };\r\n\r\n  /** increment numerator and percent for status bar */\r\n  incrementStatusBar = () => {\r\n    this.status_numerator += 1;\r\n    this.percent_complete = (this.status_numerator / this.status_denominator) * 100;\r\n  };\r\n\r\n  setDeviceType = deviceType => {\r\n    this.deviceType = deviceType;\r\n  };\r\n\r\n  setDeviceName = deviceName => {\r\n    this.deviceName = deviceName;\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Sends all the computed impulse responses to the backend server for processing\r\n   *\r\n   * @returns sets the resulting inverted impulse response to the class property\r\n   * @example\r\n   */\r\n  sendSystemImpulseResponsesToServerForProcessing = async () => {\r\n    const computedIRs = await Promise.all(this.impulseResponses);\r\n    const filteredComputedIRs = computedIRs.filter(element => {\r\n      return element != undefined;\r\n    });\r\n    const mls = this.#mls;\r\n    const lowHz = this.#lowHz;\r\n    const highHz = this.#highHz;\r\n    this.stepNum += 1;\r\n    console.log('send impulse responses to server: ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration: computing the IIR...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    return this.pyServerAPI\r\n      .getSystemInverseImpulseResponseWithRetry({\r\n        payload: filteredComputedIRs.slice(0, this.numCaptures),\r\n        mls,\r\n        lowHz,\r\n        highHz,\r\n        sampleRate: this.sourceSamplingRate || 96000,\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.stepNum += 1;\r\n        console.log('got impulse response ' + this.stepNum);\r\n        this.incrementStatusBar();\r\n        this.status =\r\n          `All Hz Calibration: done computing the IIR...`.toString() +\r\n          this.generateTemplate().toString();\r\n        this.emit('update', {message: this.status});\r\n        this.systemInvertedImpulseResponse = res['iir'];\r\n        this.systemIR = res['ir'];\r\n        this.systemConvolution = res['convolution'];\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Sends all the computed impulse responses to the backend server for processing\r\n   *\r\n   * @returns sets the resulting inverted impulse response to the class property\r\n   * @example\r\n   */\r\n  sendComponentImpulseResponsesToServerForProcessing = async () => {\r\n    const computedIRs = await Promise.all(this.impulseResponses);\r\n    const filteredComputedIRs = computedIRs.filter(element => {\r\n      return element != undefined;\r\n    });\r\n    const componentIRGains = this.componentIR['Gain'];\r\n    const componentIRFreqs = this.componentIR['Freq'];\r\n    const mls = this.#mls;\r\n    const lowHz = this.#lowHz;\r\n    const highHz = this.#highHz;\r\n    this.stepNum += 1;\r\n    console.log('send impulse responses to server: ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration: computing the IIR...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    return this.pyServerAPI\r\n      .getComponentInverseImpulseResponseWithRetry({\r\n        payload: filteredComputedIRs.slice(0, this.numCaptures),\r\n        mls,\r\n        lowHz,\r\n        highHz,\r\n        componentIRGains,\r\n        componentIRFreqs,\r\n        sampleRate: this.sourceSamplingRate || 96000,\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.stepNum += 1;\r\n        console.log('got impulse response ' + this.stepNum);\r\n        this.incrementStatusBar();\r\n        this.status =\r\n          `All Hz Calibration: done computing the IIR...`.toString() +\r\n          this.generateTemplate().toString();\r\n        this.emit('update', {message: this.status});\r\n        this.componentInvertedImpulseResponse = res['iir'];\r\n        this.componentIR['Gain'] = res['ir'];\r\n        this.componentIR['Freq'] = res['frequencies'];\r\n        this.componentConvolution = res['convolution'];\r\n      })\r\n      .catch(err => {\r\n        // this.emit('InvertedImpulseResponse', {res: false});\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Sends the recorded signal, or a given csv string of a signal, to the back end server for processing\r\n   *\r\n   * @param {<array>String} signalCsv - Optional csv string of a previously recorded signal, if given, this signal will be processed\r\n   * @example\r\n   */\r\n  sendRecordingToServerForProcessing = signalCsv => {\r\n    const allSignals = this.getAllRecordedSignals();\r\n    const numSignals = allSignals.length;\r\n    const mls = this.#mls;\r\n    const payload =\r\n      signalCsv && signalCsv.length > 0 ? (0,_utils__WEBPACK_IMPORTED_MODULE_1__.csvToArray)(signalCsv) : allSignals[numSignals - 1];\r\n    console.log('sending rec');\r\n    this.stepNum += 1;\r\n    console.log('send rec ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration Step: computing the IR of the last recording...`.toString() +\r\n      this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    this.impulseResponses.push(\r\n      this.pyServerAPI\r\n        .getImpulseResponse({\r\n          sampleRate: this.sourceSamplingRate || 96000,\r\n          payload,\r\n          mls,\r\n          P: this.#P,\r\n          numPeriods: this.numMLSPerCapture,\r\n        })\r\n        .then(res => {\r\n          if (this.numSuccessfulCaptured < this.numCaptures) {\r\n            this.numSuccessfulCaptured += 1;\r\n            console.log('num succ capt: ' + this.numSuccessfulCaptured);\r\n            this.stepNum += 1;\r\n            console.log('got impulse response ' + this.stepNum);\r\n            this.incrementStatusBar();\r\n            this.status =\r\n              `All Hz Calibration: ${this.numSuccessfulCaptured}/${this.numCaptures} IRs computed...`.toString() +\r\n              this.generateTemplate().toString();\r\n            this.emit('update', {\r\n              message: this.status,\r\n            });\r\n            return res;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Passed to the calibration steps function, awaits the desired amount of seconds to capture the desired number\r\n   * of MLS periods defined in the constructor.\r\n   *\r\n   * @example\r\n   */\r\n  #awaitDesiredMLSLength = async () => {\r\n    // seconds per MLS = P / SR\r\n    // await N * P / SR\r\n    this.stepNum += 1;\r\n    console.log('await desired length ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration: sampling the calibration signal...`.toString() +\r\n      `\\niteration ${this.stepNum}` +\r\n      this.generateTemplate();\r\n    this.emit('update', {\r\n      message: this.status,\r\n    });\r\n    let time_to_wait = 0;\r\n    if (this.mode === 'unfiltered'){\r\n      time_to_wait = (this.#mls.length / this.sourceSamplingRate) * this.numMLSPerCapture;\r\n    }else if (this.mode === 'filtered'){\r\n      time_to_wait =\r\n      (this.#currentConvolution.length / this.sourceSamplingRate) * this.numMLSPerCapture;\r\n    }else{\r\n      throw new Error(\"Mode broke in awaitDesiredMLSLength\");\r\n    }\r\n    \r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.sleep)(time_to_wait*1.1);\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Passed to the calibration steps function, awaits the onset of the signal to ensure a steady state\r\n   *\r\n   * @example\r\n   */\r\n  #awaitSignalOnset = async () => {\r\n    this.stepNum += 1;\r\n    console.log('await signal onset ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration: waiting for the signal to stabilize...`.toString() +\r\n      this.generateTemplate();\r\n    this.emit('update', {\r\n      message: this.status,\r\n    });\r\n    let number_of_bursts_to_skip = this.num_mls_to_skip;\r\n    let time_to_sleep = 0;\r\n    if (this.mode === 'unfiltered'){\r\n      time_to_sleep = this.#mls.length / this.sourceSamplingRate;\r\n    }else if (this.mode === 'filtered'){\r\n      time_to_sleep = this.#currentConvolution.length / this.sourceSamplingRate;\r\n    }else{\r\n      throw new Error(\"Mode broke in awaitSignalOnset\");\r\n    }\r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.sleep)(time_to_sleep);\r\n  };\r\n\r\n  /**\r\n   * Called immediately after a recording is captured. Used to process the resulting signal\r\n   * whether by sending the result to a server or by computing a result locally.\r\n   *\r\n   * @example\r\n   */\r\n  #afterMLSRecord = () => {\r\n    console.log('after record');\r\n    this.sendRecordingToServerForProcessing();\r\n  };\r\n\r\n  #afterMLSwIIRRecord = () => {\r\n    if (this.numSuccessfulCaptured < 1) {\r\n      this.numSuccessfulCaptured += 1;\r\n      this.stepNum += 1;\r\n      this.incrementStatusBar();\r\n      console.log('after mls w iir record for some reason add numSucc capt ' + this.stepNum);\r\n      this.status =\r\n        `All Hz Calibration: ${this.numSuccessfulCaptured} recording of convolved MLS captured`.toString() +\r\n        this.generateTemplate().toString();\r\n      this.emit('update', {\r\n        message: this.status,\r\n      });\r\n    }\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Created an S Curver Buffer to taper the signal onset\r\n   *\r\n   * @param {*} length\r\n   * @param {*} phase\r\n   * @returns\r\n   * @example\r\n   */\r\n  static createSCurveBuffer = (length, phase) => {\r\n    const curve = new Float32Array(length);\r\n    let i;\r\n    for (i = 0; i < length; i += 1) {\r\n      // scale the curve to be between 0-1\r\n      curve[i] = Math.sin((Math.PI * i) / length - phase) / 2 + 0.5;\r\n    }\r\n    return curve;\r\n  };\r\n\r\n  static createInverseSCurveBuffer = (length, phase) => {\r\n    const curve = new Float32Array(length);\r\n    let i;\r\n    let j = length - 1;\r\n    for (i = 0; i < length; i += 1) {\r\n      // scale the curve to be between 0-1\r\n      curve[i] = Math.sin((Math.PI * j) / length - phase) / 2 + 0.5;\r\n      j -= 1;\r\n    }\r\n    return curve;\r\n  };\r\n\r\n  /**\r\n   * Construct a Calibration Node with the calibration parameters.\r\n   *\r\n   * @param dataBuffer\r\n   * @private\r\n   * @example\r\n   */\r\n  #createCalibrationNodeFromBuffer = dataBuffer => {\r\n    console.log('databuffer');\r\n    console.log(dataBuffer);\r\n    if (!this.sourceAudioContext){\r\n      this.makeNewSourceAudioContext();\r\n    }\r\n    \r\n    const buffer = this.sourceAudioContext.createBuffer(\r\n      1, // number of channels\r\n      dataBuffer.length,\r\n      this.sourceAudioContext.sampleRate // sample rate\r\n    );\r\n\r\n    const data = buffer.getChannelData(0); // get data\r\n    // fill the buffer with our data\r\n    try {\r\n      for (let i = 0; i < dataBuffer.length; i += 1) {\r\n        data[i] = dataBuffer[i] * 0.1;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n   \r\n    this.sourceNode = this.sourceAudioContext.createBufferSource();\r\n    \r\n    \r\n\r\n    this.sourceNode.buffer = buffer;\r\n    this.sourceNode.loop = true;\r\n    this.sourceNode.connect(this.sourceAudioContext.destination);\r\n\r\n    this.addCalibrationNode(this.sourceNode);\r\n  };\r\n\r\n  /**\r\n   * Given a data buffer, creates the required calibration node\r\n   *\r\n   * @param {*} dataBufferArray\r\n   * @example\r\n   */\r\n  #setCalibrationNodesFromBuffer = (dataBufferArray = [this.#mlsBufferView]) => {\r\n    if (dataBufferArray.length === 1) {\r\n      this.#createCalibrationNodeFromBuffer(dataBufferArray[0]);\r\n    } else {\r\n      throw new Error('The length of the data buffer array must be 1');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * function to put MLS filtered IIR data obtained from\r\n   * python server into our audio buffer to be played aloud\r\n   */\r\n  #putInPythonConv = () => {\r\n    const audioCtx = this.makeNewSourceAudioContextConvolved();\r\n\r\n    //depends on goal\r\n    if (this._calibrateSoundCheck != 'system') {\r\n      this.#currentConvolution = this.componentConvolution;\r\n      const buffer = audioCtx.createBuffer(\r\n        1, // number of channels\r\n        this.componentConvolution.length,\r\n        audioCtx.sampleRate // sample rate\r\n      );\r\n\r\n      const data = buffer.getChannelData(0); // get data\r\n      // fill the buffer with our data\r\n      try {\r\n        for (let i = 0; i < this.componentConvolution.length; i += 1) {\r\n          data[i] = this.componentConvolution[i];\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      const source = audioCtx.createBufferSource();\r\n\r\n      source.buffer = buffer;\r\n      source.loop = true;\r\n      source.connect(audioCtx.destination);\r\n\r\n      this.addCalibrationNodeConvolved(source);\r\n    } else {\r\n      this.#currentConvolution = this.systemConvolution;\r\n      const buffer = audioCtx.createBuffer(\r\n        1, // number of channels\r\n        this.systemConvolution.length,\r\n        audioCtx.sampleRate // sample rate\r\n      );\r\n      const data = buffer.getChannelData(0); // get data\r\n      // fill the buffer with our data\r\n      try {\r\n        for (let i = 0; i < this.systemConvolution.length; i += 1) {\r\n          data[i] = this.systemConvolution[i];\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      const source = audioCtx.createBufferSource();\r\n\r\n      source.buffer = buffer;\r\n      source.loop = true;\r\n      source.connect(audioCtx.destination);\r\n\r\n      this.addCalibrationNodeConvolved(source);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates an audio context and plays it for a few seconds.\r\n   *\r\n   * @private\r\n   * @returns - Resolves when the audio is done playing.\r\n   * @example\r\n   */\r\n  #playCalibrationAudio = () => {\r\n    if (this.mode === 'unfiltered'){\r\n      this.calibrationNodes[0].start(0);\r\n      this.#mls = this.calibrationNodes[0].buffer.getChannelData(0);\r\n      console.log('play calibration audio ' + this.stepNum);\r\n      this.status =\r\n      `All Hz Calibration: playing the calibration tone...`.toString() +\r\n      this.generateTemplate().toString();\r\n      this.emit('update', {message: this.status});\r\n    } else if (this.mode === 'filtered'){\r\n      this.calibrationNodes[0].start(0);\r\n      console.log('play convolved audio ' + this.stepNum);\r\n      this.status =\r\n        `All Hz Calibration: playing the convolved calibration tone...`.toString() +\r\n      this.generateTemplate().toString();\r\n      this.emit('update', {message: this.status});\r\n    } else{\r\n      throw new Error(\"Mode is incorrect\");\r\n    }\r\n    this.stepNum += 1;\r\n    console.log('sink sampling rate');\r\n    console.log(this.sinkSamplingRate);\r\n    console.log('source sampling rate');\r\n    console.log(this.sourceSamplingRate);\r\n  };\r\n\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Stops the audio with tapered offset\r\n   *\r\n   * @example\r\n   */\r\n  #stopCalibrationAudio = () => {\r\n\r\n    this.calibrationNodes[0].stop(0);\r\n    this.calibrationNodes = [];\r\n    this.sourceNode.disconnect();\r\n    this.stepNum += 1;\r\n    console.log('stop calibration audio ' + this.stepNum);\r\n    this.status =\r\n      `All Hz Calibration: stopping the calibration tone...`.toString() +\r\n      this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n  };\r\n\r\n  playMLSwithIIR = async (stream, iir) => {\r\n    this.mode = 'filtered';\r\n    console.log('play mls with iir');\r\n    this.invertedImpulseResponse = iir;\r\n\r\n    await this.calibrationSteps(\r\n      stream,\r\n      this.#playCalibrationAudio, // play audio func (required)\r\n      this.#createCalibrationNodeFromBuffer(this.#currentConvolution), // before play func\r\n      this.#awaitSignalOnset, // before record\r\n      () => this.numSuccessfulCaptured < 1,\r\n      this.#awaitDesiredMLSLength, // during record\r\n      this.#afterMLSwIIRRecord, // after record\r\n      this.mode\r\n    )\r\n  };\r\n\r\n  /**\r\n   * Public method to start the calibration process. Objects intialized from webassembly allocate new memory\r\n   * and must be manually freed. This function is responsible for intializing the MlsGenInterface,\r\n   * and wrapping the calibration steps with a garbage collection safe gaurd.\r\n   *\r\n   * @public\r\n   * @param stream - The stream of audio from the Listener.\r\n   * @example\r\n   */\r\n  startCalibrationImpulseResponse = async stream => {\r\n\r\n    let desired_time = this.desired_time_per_mls;\r\n\r\n    console.log(\"MLS sequence should be of length: \" + (this.sourceSamplingRate * desired_time));\r\n\r\n\r\n    length = this.sourceSamplingRate * desired_time;\r\n    //get mls here\r\n    await this.pyServerAPI\r\n      .getMLSWithRetry(length)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.#mlsBufferView = res['mls'];\r\n      })\r\n      .catch(err => {\r\n        // this.emit('InvertedImpulseResponse', {res: false});\r\n        console.error(err);\r\n      });\r\n    await this.calibrationSteps(\r\n      stream,\r\n      this.#playCalibrationAudio, // play audio func (required)\r\n      this.#createCalibrationNodeFromBuffer(this.#mlsBufferView), // before play func\r\n      this.#awaitSignalOnset, // before record\r\n      () => this.numSuccessfulCaptured < this.numCaptures, // loop while true\r\n      this.#awaitDesiredMLSLength, // during record\r\n      this.#afterMLSRecord, // after record\r\n      this.mode\r\n    ),\r\n\r\n    this.#stopCalibrationAudio();\r\n\r\n    // at this stage we've captured all the required signals,\r\n    // and have received IRs for each one\r\n    // so let's send all the IRs to the server to be converted to a single IIR\r\n    await this.sendSystemImpulseResponsesToServerForProcessing();\r\n    await this.sendComponentImpulseResponsesToServerForProcessing();\r\n\r\n    this.numSuccessfulCaptured = 0;\r\n\r\n    let iir_ir_and_plots;\r\n    if (this._calibrateSoundCheck != 'none') {\r\n      if (this._calibrateSoundCheck != 'system') {\r\n        this.#currentConvolution = this.componentConvolution;\r\n      }else{\r\n        this.#currentConvolution = this.systemConvolution;\r\n      }\r\n      await this.playMLSwithIIR(stream, this.invertedImpulseResponse);\r\n      this.#stopCalibrationAudio();\r\n      this.sourceAudioContext.close();\r\n      let conv_recs = this.getAllFilteredRecordedSignals();\r\n      let recs = this.getAllRecordedSignals();\r\n      let unconv_rec = recs[0];\r\n      let conv_rec = conv_recs[0];\r\n      if (this._calibrateSoundCheck != 'system') {\r\n        let knownGain = this.oldComponentIR.Gain;\r\n        let knownFreq = this.oldComponentIR.Freq;\r\n        let sampleRate = this.sourceSamplingRate || 96000;\r\n        let unconv_results = await this.pyServerAPI\r\n          .getSubtractedPSDWithRetry(unconv_rec, knownGain, knownFreq, sampleRate)\r\n          .then(res => {\r\n            this.incrementStatusBar();\r\n            this.status =\r\n              `All Hz Calibration: done computing the PSD graphs...`.toString() +\r\n              this.generateTemplate().toString();\r\n            this.emit('update', {message: this.status});\r\n            return res;\r\n          })\r\n          .catch(err => {\r\n            console.error(err);\r\n          });\r\n\r\n        let conv_results = await this.pyServerAPI\r\n          .getSubtractedPSDWithRetry(conv_rec, knownGain, knownFreq, sampleRate)\r\n          .then(res => {\r\n            this.incrementStatusBar();\r\n            this.status =\r\n              `All Hz Calibration: done computing the PSD graphs...`.toString() +\r\n              this.generateTemplate().toString();\r\n            this.emit('update', {message: this.status});\r\n            return res;\r\n          })\r\n          .catch(err => {\r\n            console.error(err);\r\n          });\r\n        iir_ir_and_plots = {\r\n          systemIIR: this.systemInvertedImpulseResponse,\r\n          componentIIR: this.componentInvertedImpulseResponse,\r\n          x_unconv: unconv_results['x'],\r\n          y_unconv: unconv_results['y'],\r\n          x_conv: conv_results['x'],\r\n          y_conv: conv_results['y'],\r\n          componentIR: this.componentIR,\r\n          systemIR: this.systemIR,\r\n        };\r\n      } else {\r\n        let results = await this.pyServerAPI\r\n          .getPSDWithRetry({\r\n            unconv_rec,\r\n            conv_rec,\r\n            sampleRate: this.sourceSamplingRate || 96000,\r\n          })\r\n          .then(res => {\r\n            this.incrementStatusBar();\r\n            this.status =\r\n              `All Hz Calibration: done computing the PSD graphs...`.toString() +\r\n              this.generateTemplate().toString();\r\n            this.emit('update', {message: this.status});\r\n            return res;\r\n          })\r\n          .catch(err => {\r\n            console.error(err);\r\n          });\r\n        iir_ir_and_plots = {\r\n          systemIIR: this.systemInvertedImpulseResponse,\r\n          componentIIR: this.componentInvertedImpulseResponse,\r\n          x_unconv: results['x_unconv'],\r\n          y_unconv: results['y_unconv'],\r\n          x_conv: results['x_conv'],\r\n          y_conv: results['y_conv'],\r\n          componentIR: this.componentIR,\r\n          systemIR: this.systemIR,\r\n        };\r\n      }\r\n\r\n      if (this.#download) {\r\n        this.downloadSingleUnfilteredRecording();\r\n        this.downloadSingleFilteredRecording();\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.#mls, 'MLS.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.componentConvolution, 'python_component_convolution_mls_iir.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.systemConvolution, 'python_system_convolution_mls_iir.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.componentInvertedImpulseResponse, 'componentIIR.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.systemInvertedImpulseResponse, 'systemIIR.csv');\r\n        const computedIRagain = await Promise.all(this.impulseResponses).then(res => {\r\n          for (let i = 0; i < res.length; i++) {\r\n            if (res[i] != undefined) {\r\n              (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(res[i], `IR_${i}`);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      iir_ir_and_plots = {\r\n        systemIIR: this.systemInvertedImpulseResponse,\r\n        componentIIR: this.componentInvertedImpulseResponse,\r\n        x_unconv: [],\r\n        y_unconv: [],\r\n        x_conv: [],\r\n        y_conv: [],\r\n        componentIR: this.componentIR,\r\n        systemIR: this.systemIR,\r\n      };\r\n      if (this.#download) {\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.#mls, 'MLS.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.componentConvolution, 'python_component_convolution_mls_iir.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.systemConvolution, 'python_system_convolution_mls_iir.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.componentInvertedImpulseResponse, 'componentIIR.csv');\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(this.systemInvertedImpulseResponse, 'systemIIR.csv');\r\n        const computedIRagain = await Promise.all(this.impulseResponses).then(res => {\r\n          for (let i = 0; i < res.length; i++) {\r\n            if (res[i] != undefined) {\r\n              (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToCSV)(res[i], `IR_${i}`);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.percent_complete = 100;\r\n\r\n    this.status = `All Hz Calibration: Finished`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n\r\n    //here after calibration we have the component calibration (either loudspeaker or microphone) in the same form as the componentIR\r\n    //that was used to calibrate\r\n\r\n    return iir_ir_and_plots;\r\n  };\r\n\r\n  //////////////////////volume\r\n\r\n  handleIncomingData = data => {\r\n    console.log('Received data: ', data);\r\n    if (data.type === 'soundGainDBSPL') {\r\n      this.soundGainDBSPL = data.value;\r\n    } else {\r\n      throw new Error(`Unknown data type: ${data.type}`);\r\n    }\r\n  };\r\n  createSCurveBuffer = (onSetBool = true) => {\r\n    const curve = new Float32Array(this.TAPER_SECS * this.sourceSamplingRate + 1);\r\n    const frequency = 1 / (4 * this.TAPER_SECS);\r\n    let j = 0;\r\n    for (let i = 0; i < this.TAPER_SECS * this.sourceSamplingRate + 1; i += 1) {\r\n      const phase = 2 * Math.PI * frequency * j;\r\n      const onsetTaper = Math.pow(Math.sin(phase), 2);\r\n      const offsetTaper = Math.pow(Math.cos(phase), 2);\r\n      curve[i] = onSetBool ? onsetTaper : offsetTaper;\r\n      j += 1 / this.sourceSamplingRate;\r\n    }\r\n    return curve;\r\n    };\r\n    \r\n  #getTruncatedSignal = (left = 3.5, right = 4.5) => {\r\n    const start = Math.floor(left * this.sourceSamplingRate);\r\n    const end = Math.floor(right * this.sourceSamplingRate);\r\n    const result = Array.from(this.getLastRecordedSignal().slice(start, end));\r\n\r\n    /**\r\n     * function to check that capture was properly made\r\n     * @param {*} list\r\n     */\r\n    const checkResult = list => {\r\n      const setItem = new Set(list);\r\n      if (setItem.size === 1 && setItem.has(0)) {\r\n        console.warn(\r\n          'The last capture failed, all recorded signal is zero',\r\n          this.getAllRecordedSignals()\r\n        );\r\n      }\r\n      if (setItem.size === 0) {\r\n        console.warn('The last capture failed, no recorded signal');\r\n      }\r\n    };\r\n    checkResult(result);\r\n    return result;\r\n  };\r\n\r\n  /** \r\n   * \r\n   * \r\n    Construct a calibration Node with the calibration parameters and given gain value\r\n   * @param {*} gainValue\r\n   * */\r\n  #createCalibrationToneWithGainValue = gainValue => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const oscilator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n    const taperGainNode = audioContext.createGain();\r\n    const offsetGainNode = audioContext.createGain();\r\n    const totalDuration = this.#CALIBRATION_TONE_DURATION * 1.2;\r\n\r\n    oscilator.frequency.value = this.#CALIBRATION_TONE_FREQUENCY;\r\n    oscilator.type = this.#CALIBRATION_TONE_TYPE;\r\n    gainNode.gain.value = gainValue;\r\n\r\n    oscilator.connect(gainNode);\r\n    gainNode.connect(taperGainNode);\r\n    const onsetCurve = this.createSCurveBuffer();\r\n    taperGainNode.gain.setValueCurveAtTime(onsetCurve, 0, this.TAPER_SECS);\r\n    taperGainNode.connect(offsetGainNode);\r\n    const offsetCurve = this.createSCurveBuffer(false);\r\n    offsetGainNode.gain.setValueCurveAtTime(\r\n      offsetCurve,\r\n      totalDuration - this.TAPER_SECS,\r\n      this.TAPER_SECS\r\n    );\r\n    offsetGainNode.connect(audioContext.destination);\r\n\r\n    this.addCalibrationNode(oscilator);\r\n  };\r\n\r\n  /**\r\n   * Construct a Calibration Node with the calibration parameters.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #createCalibrationNode = () => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const oscilator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n\r\n    oscilator.frequency.value = this.#CALIBRATION_TONE_FREQUENCY;\r\n    oscilator.type = this.#CALIBRATION_TONE_TYPE;\r\n    gainNode.gain.value = 0.04;\r\n\r\n    oscilator.connect(gainNode);\r\n    gainNode.connect(audioContext.destination);\r\n\r\n    this.addCalibrationNode(oscilator);\r\n  };\r\n\r\n  #playCalibrationAudioVolume = async () => {\r\n    const totalDuration = this.#CALIBRATION_TONE_DURATION * 1.2;\r\n\r\n    this.calibrationNodes[0].start(0);\r\n    this.calibrationNodes[0].stop(totalDuration);\r\n    console.log(`Playing a buffer of ${this.#CALIBRATION_TONE_DURATION} seconds of audio`);\r\n    console.log(`Waiting a total of ${totalDuration} seconds`);\r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_1__.sleep)(totalDuration);\r\n  };\r\n\r\n  #sendToServerForProcessing = lCalib => {\r\n    console.log('Sending data to server');\r\n    this.pyServerAPI\r\n      .getVolumeCalibration({\r\n        sampleRate: this.sourceSamplingRate,\r\n        payload: this.#getTruncatedSignal(),\r\n        lCalib: lCalib,\r\n      })\r\n      .then(res => {\r\n        if (this.outDBSPL === null) {\r\n          this.incrementStatusBar();\r\n          this.outDBSPL = res['outDbSPL'];\r\n          this.outDBSPL1000 = res['outDbSPL1000'];\r\n          this.THD = res['thd'];\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.warn(err);\r\n      });\r\n  };\r\n\r\n  startCalibrationVolume = async (stream, gainValues, lCalib, componentGainDBSPL) => {\r\n    const trialIterations = gainValues.length;\r\n    this.status_denominator += trialIterations;\r\n    const thdValues = [];\r\n    const inDBValues = [];\r\n    let inDB = 0;\r\n    const outDBSPLValues = [];\r\n    const outDBSPL1000Values = [];\r\n\r\n    // do one calibration that will be discarded\r\n    const soundLevelToDiscard = -60;\r\n    const gainToDiscard = Math.pow(10, soundLevelToDiscard / 20);\r\n    this.status =\r\n      `1000 Hz Calibration: Sound Level ${soundLevelToDiscard} dB`.toString() +\r\n      this.generateTemplate().toString();\r\n    //this.emit('update', {message: `1000 Hz Calibration: Sound Level ${soundLevelToDiscard} dB`});\r\n    this.emit('update', {message: this.status});\r\n\r\n    do {\r\n      // eslint-disable-next-line no-await-in-loop\r\n      await this.volumeCalibrationSteps(\r\n        stream,\r\n        this.#playCalibrationAudioVolume,\r\n        this.#createCalibrationToneWithGainValue,\r\n        this.#sendToServerForProcessing,\r\n        gainToDiscard,\r\n        lCalib //todo make this a class parameter\r\n      );\r\n    } while (this.outDBSPL === null);\r\n    //reset the values\r\n    //this.incrementStatusBar();\r\n\r\n    this.outDBSPL = null;\r\n    this.outDBSPL = null;\r\n    this.outDBSPL1000 = null;\r\n    this.THD = null;\r\n\r\n    // run the calibration at different gain values provided by the user\r\n    for (let i = 0; i < trialIterations; i++) {\r\n      //convert gain to DB and add to inDB\r\n      inDB = Math.log10(gainValues[i]) * 20;\r\n      // precision to 1 decimal place\r\n      inDB = Math.round(inDB * 10) / 10;\r\n      inDBValues.push(inDB);\r\n      console.log('next update');\r\n      this.status =\r\n        `1000 Hz Calibration: Sound Level ${inDB} dB`.toString() +\r\n        this.generateTemplate().toString();\r\n      this.emit('update', {message: this.status});\r\n      do {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await this.volumeCalibrationSteps(\r\n          stream,\r\n          this.#playCalibrationAudioVolume,\r\n          this.#createCalibrationToneWithGainValue,\r\n          this.#sendToServerForProcessing,\r\n          gainValues[i],\r\n          lCalib //todo make this a class parameter\r\n        );\r\n      } while (this.outDBSPL === null);\r\n      outDBSPL1000Values.push(this.outDBSPL1000);\r\n      thdValues.push(this.THD);\r\n      outDBSPLValues.push(this.outDBSPL);\r\n\r\n      this.outDBSPL = null;\r\n      this.outDBSPL1000 = null;\r\n      this.THD = null;\r\n    }\r\n\r\n    // get the volume calibration parameters from the server\r\n    const parameters = await this.pyServerAPI\r\n      .getVolumeCalibrationParameters({\r\n        inDBValues: inDBValues,\r\n        outDBSPLValues: outDBSPL1000Values,\r\n        lCalib: lCalib,\r\n        componentGainDBSPL,\r\n      })\r\n      .then(res => {\r\n        this.incrementStatusBar();\r\n        return res;\r\n      });\r\n    const result = {\r\n      parameters: parameters,\r\n      inDBValues: inDBValues,\r\n      outDBSPLValues: outDBSPLValues,\r\n      outDBSPL1000Values: outDBSPL1000Values,\r\n      thdValues: thdValues,\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  // function to write frq and gain to firebase database given speakerID\r\n  writeFrqGain = async (speakerID, frq, gain) => {\r\n    // freq and gain are too large to take samples 1 in every 100 samples\r\n\r\n    const sampledFrq = [];\r\n    const sampledGain = [];\r\n    for (let i = 0; i < frq.length; i += 100) {\r\n      sampledFrq.push(frq[i]);\r\n      sampledGain.push(gain[i]);\r\n    }\r\n\r\n    const data = {Freq: sampledFrq, Gain: sampledGain};\r\n\r\n    await (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.set)((0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_2__[\"default\"], `Microphone/${speakerID}/linear`), data);\r\n  };\r\n\r\n  // Function to Read frq and gain from firebase database given speakerID\r\n  // returns an array of frq and gain if speakerID exists, returns null otherwise\r\n\r\n  readFrqGain = async speakerID => {\r\n    const dbRef = (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n    const snapshot = await (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.get)((0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.child)(dbRef, `Microphone/${speakerID}/linear`));\r\n    if (snapshot.exists()) {\r\n      return snapshot.val();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  readGainat1000Hz = async speakerID => {\r\n    const dbRef = (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n    const snapshot = await (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.get)((0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.child)(dbRef, `Microphone/${speakerID}/Gain1000`));\r\n    if (snapshot.exists()) {\r\n      return snapshot.val();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  writeGainat1000Hz = async (speakerID, gain) => {\r\n    const data = {Gain: gain};\r\n    await (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.set)((0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_2__[\"default\"], `Microphone/${speakerID}/Gain1000`), gain);\r\n  };\r\n\r\n  convertToDB = gain => {\r\n    return Math.log10(gain) * 20;\r\n  };\r\n\r\n  // Function to perform linear interpolation between two points\r\n  interpolate(x, x0, y0, x1, y1) {\r\n    return y0 + ((x - x0) * (y1 - y0)) / (x1 - x0);\r\n  }\r\n\r\n  findGainatFrequency = (frequencies, gains, targetFrequency) => {\r\n    // Find the index of the first frequency in the array greater than the target frequency\r\n    let index = 0;\r\n    while (index < frequencies.length && frequencies[index] < targetFrequency) {\r\n      index++;\r\n    }\r\n\r\n    // Handle cases when the target frequency is outside the range of the given data\r\n    if (index === 0) {\r\n      return gains[0];\r\n    } else if (index === frequencies.length) {\r\n      return gains[gains.length - 1];\r\n    } else {\r\n      // Interpolate the gain based on the surrounding frequencies\r\n      const x0 = frequencies[index - 1];\r\n      const y0 = gains[index - 1];\r\n      const x1 = frequencies[index];\r\n      const y1 = gains[index];\r\n      return this.interpolate(targetFrequency, x0, y0, x1, y1);\r\n    }\r\n  };\r\n\r\n  writeIsSmartPhone = async (speakerID, isSmartPhone) => {\r\n    const data = {isSmartPhone: isSmartPhone};\r\n    await (0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.set)((0,firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_2__[\"default\"], `Microphone/${speakerID}/isSmartPhone`), isSmartPhone);\r\n  };\r\n\r\n  // Example of how to use the writeFrqGain and readFrqGain functions\r\n  // writeFrqGain('speaker1', [1, 2, 3], [4, 5, 6]);\r\n  // Speaker1 is the speakerID  you want to write to in the database\r\n  // readFrqGain('MiniDSPUMIK_1').then(data => console.log(data));\r\n  // MiniDSPUMIK_1 is the speakerID with some Data in the database\r\n  //adding gainDBSPL\r\n  startCalibration = async (\r\n    stream,\r\n    gainValues,\r\n    lCalib = 104.92978421490648,\r\n    componentIR = null,\r\n    microphoneName = 'MiniDSP-UMIK1-711-4754-vertical',\r\n    _calibrateSoundCheck = 'goal', //GOAL PASSed in by default\r\n    isSmartPhone = false,\r\n    _calibrateSoundBurstRepeats = 4,\r\n    _calibrateSoundBurstSec = 1,\r\n    _calibrateSoundBurstsWarmup = 1,\r\n    _calibrateSoundHz = 48000\r\n  ) => {\r\n    this.numMLSPerCapture = _calibrateSoundBurstRepeats;\r\n    this.desired_time_per_mls = _calibrateSoundBurstSec;\r\n    this.num_mls_to_skip = _calibrateSoundBurstsWarmup;\r\n    this.desired_sampling_rate = _calibrateSoundHz;\r\n\r\n    //feed calibration goal here\r\n    this._calibrateSoundCheck = _calibrateSoundCheck;\r\n    //check if a componentIR was given to the system, if it isn't check for the microphone. using dummy data here bc we need to\r\n    //check the db based on the microphone currently connected\r\n\r\n    //new lCalib found at top of calibration files *1000hz, make sure to correct\r\n    //based on zeroing of 1000hz, search for \"*1000Hz\"\r\n    if (componentIR == null) {\r\n      //mode 'ir'\r\n      //global variable this.componentIR must be set\r\n      this.componentIR = await this.readFrqGain(microphoneName).then(data => {\r\n        return data;\r\n      });\r\n\r\n      lCalib = await this.readGainat1000Hz(microphoneName);\r\n      // this.componentGainDBSPL = this.convertToDB(lCalib);\r\n      this.componentGainDBSPL = lCalib;\r\n      //TODO: if this call to database is unknown, cannot perform experiment => return false\r\n      if (this.componentIR == null) {\r\n        this.status =\r\n          `Microphone ${microphoneName} is not in the database. Please add it to the database.`.toString();\r\n        this.emit('update', {message: this.status});\r\n        return false;\r\n      }\r\n    } else {\r\n      this.componentIR = componentIR;\r\n      lCalib = this.findGainatFrequency(this.componentIR.Freq, this.componentIR.Gain, 1000);\r\n      // this.componentGainDBSPL = this.convertToDB(lCalib);\r\n      this.componentGainDBSPL = lCalib;\r\n      await this.writeGainat1000Hz(microphoneName, lCalib);\r\n      await this.writeIsSmartPhone(microphoneName, isSmartPhone);\r\n    }\r\n\r\n    this.oldComponentIR = this.componentIR;\r\n\r\n    let volumeResults = await this.startCalibrationVolume(\r\n      stream,\r\n      gainValues,\r\n      lCalib,\r\n      this.componentGainDBSPL\r\n    );\r\n\r\n    let impulseResponseResults = await this.startCalibrationImpulseResponse(stream);\r\n\r\n    if (componentIR != null) {\r\n      //insert Freq and Gain from this.componentIR into db\r\n      await this.writeFrqGain(\r\n        microphoneName,\r\n        impulseResponseResults.componentIR.Freq,\r\n        impulseResponseResults.componentIR.Gain\r\n      );\r\n    }\r\n\r\n    const total_results = {...volumeResults, ...impulseResponseResults};\r\n    console.log('total');\r\n    console.log(total_results);\r\n    return total_results;\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Combination);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/combination/combination.js?");

/***/ }),

/***/ "./src/tasks/impulse-response/impulseResponse.js":
/*!*******************************************************!*\
  !*** ./src/tasks/impulse-response/impulseResponse.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../audioCalibrator */ \"./src/tasks/audioCalibrator.js\");\n/* harmony import */ var _mlsGen_mlsGenInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mlsGen/mlsGenInterface */ \"./src/tasks/impulse-response/mlsGen/mlsGenInterface.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n/* harmony import */ var _config_firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../config/firebase */ \"./src/config/firebase.js\");\n/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/database */ \"./node_modules/firebase/database/dist/esm/index.esm.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass ImpulseResponse extends _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * Default constructor. Creates an instance with any number of paramters passed or the default parameters defined here.\r\n   *\r\n   * @param {Object<boolean, number, number, number>} calibratorParams  - paramter object\r\n   * @param {boolean} [calibratorParams.download = false]  - boolean flag to download captures\r\n   * @param {number} [calibratorParams.mlsOrder = 18] - order of the MLS to be generated\r\n   * @param {number} [calibratorParams.numCaptures = 5] - number of captures to perform\r\n   * @param {number} [calibratorParams.numMLSPerCapture = 4] - number of bursts of MLS per capture\r\n   */\r\n  constructor({\r\n    download = false,\r\n    mlsOrder = 18,\r\n    numCaptures = 3,\r\n    numMLSPerCapture = 4,\r\n    lowHz = 20,\r\n    highHz = 10000,\r\n    loudSpeakerIr = null,\r\n  }) {\r\n    super(numCaptures, numMLSPerCapture);\r\n    this.#mlsOrder = parseInt(mlsOrder, 10);\r\n    this.#P = 2 ** mlsOrder - 1;\r\n    this.#download = download;\r\n    this.#mls = [];\r\n    this.#lowHz = lowHz;\r\n    this.#highHz = highHz;\r\n  }\r\n\r\n  /** @private */\r\n  stepNum = 0;\r\n\r\n  /** @private */\r\n  totalSteps = 25;\r\n\r\n  /** @private */\r\n  #download;\r\n\r\n  /** @private */\r\n  #mlsGenInterface;\r\n\r\n  /** @private */\r\n  #mlsBufferView;\r\n\r\n  /** @private */\r\n  invertedImpulseResponse = null;\r\n\r\n  /** @private */\r\n  impulseResponses = [];\r\n\r\n  /** @private */\r\n  #mlsOrder;\r\n\r\n  /** @private */\r\n  #lowHz;\r\n\r\n  /** @private */\r\n  #highHz;\r\n\r\n  /** @private */\r\n  #mls;\r\n\r\n  /** @private */\r\n  #P;\r\n\r\n  /** @private */\r\n  #audioContext;\r\n\r\n  /** @private */\r\n  TAPER_SECS = 5;\r\n\r\n  /** @private */\r\n  offsetGainNode;\r\n\r\n  /** @private */\r\n  convolution;\r\n\r\n  /** @private */\r\n  status_denominator = 6;\r\n\r\n  /** @private */\r\n  status_numerator = 0;\r\n\r\n  /** @private */\r\n  percent_complete = 0;\r\n\r\n  /** @private */\r\n  status = ``;\r\n\r\n  /**generate string template that gets reevaluated as variable increases */\r\n  generateTemplate = () => {\r\n    if (this.percent_complete > 100) {\r\n      this.percent_complete = 100;\r\n    }\r\n    const template = `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px; height: 20px; border: 2px solid #000; border-radius: 10px;\"><div style=\"width: ${this.percent_complete}%; height: 100%; background-color: #00aaff; border-radius: 8px;\"></div></div></div>`;\r\n    return template;\r\n  };\r\n\r\n  /** increment numerator and percent for status bar */\r\n  incrementStatusBar = () => {\r\n    this.status_numerator += 1;\r\n    this.percent_complete = (this.status_numerator / this.status_denominator) * 100;\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Sends all the computed impulse responses to the backend server for processing\r\n   *\r\n   * @returns sets the resulting inverted impulse response to the class property\r\n   * @example\r\n   */\r\n  sendImpulseResponsesToServerForProcessing = async () => {\r\n    const computedIRs = await Promise.all(this.impulseResponses);\r\n    const filteredComputedIRs = computedIRs.filter(element => {\r\n      return element != undefined;\r\n    });\r\n    const mls = this.#mls;\r\n    const lowHz = this.#lowHz;\r\n    const highHz = this.#highHz;\r\n    this.stepNum += 1;\r\n    this.status = `computing the IIR...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    return this.pyServerAPI\r\n      .getInverseImpulseResponseWithRetry({\r\n        payload: filteredComputedIRs.slice(0, this.numCaptures),\r\n        mls,\r\n        lowHz,\r\n        highHz,\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.stepNum += 1;\r\n        this.incrementStatusBar();\r\n        this.status = `done computing the IIR...`.toString() + this.generateTemplate().toString();\r\n        this.emit('update', {message: this.status});\r\n        this.invertedImpulseResponse = res['iir'];\r\n        this.convolution = res['convolution'];\r\n      })\r\n      .catch(err => {\r\n        // this.emit('InvertedImpulseResponse', {res: false});\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Sends the recorded signal, or a given csv string of a signal, to the back end server for processing\r\n   *\r\n   * @param {<array>String} signalCsv - Optional csv string of a previously recorded signal, if given, this signal will be processed\r\n   * @example\r\n   */\r\n  sendRecordingToServerForProcessing = signalCsv => {\r\n    const allSignals = this.getAllRecordedSignals();\r\n    const numSignals = allSignals.length;\r\n    const mls = this.#mls;\r\n    const payload =\r\n      signalCsv && signalCsv.length > 0 ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.csvToArray)(signalCsv) : allSignals[numSignals - 1];\r\n    console.log('sending rec');\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `computing the IR of the last recording...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    this.impulseResponses.push(\r\n      this.pyServerAPI\r\n        .getImpulseResponse({\r\n          sampleRate: this.sourceSamplingRate || 96000,\r\n          payload,\r\n          mls,\r\n          P: this.#P,\r\n        })\r\n        .then(res => {\r\n          if (this.numSuccessfulCaptured < this.numCaptures) {\r\n            this.numSuccessfulCaptured += 1;\r\n            console.log('num succ capt: ' + this.numSuccessfulCaptured);\r\n            this.stepNum += 1;\r\n            this.incrementStatusBar();\r\n            this.status =\r\n              `${this.numSuccessfulCaptured}/${this.numCaptures} IRs computed...`.toString() +\r\n              this.generateTemplate().toString();\r\n            this.emit('update', {message: this.status});\r\n            return res;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Passed to the calibration steps function, awaits the desired amount of seconds to capture the desired number\r\n   * of MLS periods defined in the constructor.\r\n   *\r\n   * @example\r\n   */\r\n  #awaitDesiredMLSLength = async () => {\r\n    // seconds per MLS = P / SR\r\n    // await N * P / SR\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `sampling the calibration signal...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)((this.#P / this.sourceSamplingRate) * this.numMLSPerCapture);\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Passed to the calibration steps function, awaits the onset of the signal to ensure a steady state\r\n   *\r\n   * @example\r\n   */\r\n  #awaitSignalOnset = async () => {\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `waiting for the signal to stabilize...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(this.TAPER_SECS);\r\n  };\r\n\r\n  /**\r\n   * Called immediately after a recording is captured. Used to process the resulting signal\r\n   * whether by sending the result to a server or by computing a result locally.\r\n   *\r\n   * @example\r\n   */\r\n  #afterMLSRecord = () => {\r\n    console.log('after record');\r\n    this.sendRecordingToServerForProcessing();\r\n  };\r\n\r\n  #afterMLSwIIRRecord = () => {\r\n    if (this.numSuccessfulCaptured < 1) {\r\n      this.numSuccessfulCaptured += 1;\r\n      this.stepNum += 1;\r\n      this.incrementStatusBar();\r\n      this.status =\r\n        `${this.numSuccessfulCaptured} recording of convolved MLS captured`.toString() +\r\n        this.generateTemplate().toString();\r\n      this.emit('update', {message: this.status});\r\n    }\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Created an S Curver Buffer to taper the signal onset\r\n   *\r\n   * @param {*} length\r\n   * @param {*} phase\r\n   * @returns\r\n   * @example\r\n   */\r\n  static createSCurveBuffer = (length, phase) => {\r\n    const curve = new Float32Array(length);\r\n    let i;\r\n    for (i = 0; i < length; i += 1) {\r\n      // scale the curve to be between 0-1\r\n      curve[i] = Math.sin((Math.PI * i) / length - phase) / 2 + 0.5;\r\n    }\r\n    return curve;\r\n  };\r\n\r\n  static createInverseSCurveBuffer = (length, phase) => {\r\n    const curve = new Float32Array(length);\r\n    let i;\r\n    let j = length - 1;\r\n    for (i = 0; i < length; i += 1) {\r\n      // scale the curve to be between 0-1\r\n      curve[i] = Math.sin((Math.PI * j) / length - phase) / 2 + 0.5;\r\n      j -= 1;\r\n    }\r\n    return curve;\r\n  };\r\n\r\n  /**\r\n   * Construct a Calibration Node with the calibration parameters.\r\n   *\r\n   * @param CALIBRATION_TONE_FREQUENCY\r\n   * @private\r\n   * @example\r\n   */\r\n  #createPureTonenNode = CALIBRATION_TONE_FREQUENCY => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const oscilator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n\r\n    oscilator.frequency.value = CALIBRATION_TONE_FREQUENCY;\r\n    oscilator.type = 'sine';\r\n    gainNode.gain.value = 0.04;\r\n\r\n    oscilator.connect(gainNode);\r\n    gainNode.connect(audioContext.destination);\r\n\r\n    this.addCalibrationNode(oscilator);\r\n  };\r\n\r\n  /**\r\n   * Construct a Calibration Node with the calibration parameters.\r\n   *\r\n   * @param dataBuffer\r\n   * @private\r\n   * @example\r\n   */\r\n  #createCalibrationNodeFromBuffer = dataBuffer => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const buffer = audioContext.createBuffer(\r\n      1, // number of channels\r\n      dataBuffer.length,\r\n      audioContext.sampleRate // sample rate\r\n    );\r\n\r\n    const data = buffer.getChannelData(0); // get data\r\n    // fill the buffer with our data\r\n    try {\r\n      for (let i = 0; i < dataBuffer.length; i += 1) {\r\n        data[i] = dataBuffer[i] * 0.1;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    console.log('mls second, same?');\r\n    console.log(data);\r\n    const onsetGainNode = audioContext.createGain();\r\n    this.offsetGainNode = audioContext.createGain();\r\n    const source = audioContext.createBufferSource();\r\n\r\n    source.buffer = buffer;\r\n    source.loop = true;\r\n    source.connect(onsetGainNode);\r\n    onsetGainNode.connect(this.offsetGainNode);\r\n    this.offsetGainNode.connect(audioContext.destination);\r\n\r\n    const onsetCurve = ImpulseResponse.createSCurveBuffer(this.sourceSamplingRate, Math.PI / 2);\r\n    onsetGainNode.gain.setValueCurveAtTime(onsetCurve, 0, this.TAPER_SECS);\r\n    this.addCalibrationNode(source);\r\n  };\r\n\r\n  /**\r\n   * Given a data buffer, creates the required calibration node\r\n   *\r\n   * @param {*} dataBufferArray\r\n   * @example\r\n   */\r\n  #setCalibrationNodesFromBuffer = (dataBufferArray = [this.#mlsBufferView]) => {\r\n    if (dataBufferArray.length === 1) {\r\n      this.#createCalibrationNodeFromBuffer(dataBufferArray[0]);\r\n    } else {\r\n      throw new Error('The length of the data buffer array must be 1');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * function to put MLS filtered IIR data obtained from\r\n   * python server into our audio buffer to be played aloud\r\n   */\r\n  #putInPythonConv = () => {\r\n    const audioCtx = this.makeNewSourceAudioContextConvolved();\r\n    const buffer = audioCtx.createBuffer(\r\n      1, // number of channels\r\n      this.convolution.length,\r\n      audioCtx.sampleRate // sample rate\r\n    );\r\n\r\n    const data = buffer.getChannelData(0); // get data\r\n    // fill the buffer with our data\r\n    try {\r\n      for (let i = 0; i < this.convolution.length; i += 1) {\r\n        data[i] = this.convolution[i];\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    const source = audioCtx.createBufferSource();\r\n\r\n    source.buffer = buffer;\r\n    source.loop = true;\r\n    source.connect(audioCtx.destination);\r\n\r\n    this.addCalibrationNodeConvolved(source);\r\n  };\r\n\r\n  /**\r\n   * Creates an audio context and plays it for a few seconds.\r\n   *\r\n   * @private\r\n   * @returns - Resolves when the audio is done playing.\r\n   * @example\r\n   */\r\n  #playCalibrationAudio = () => {\r\n    this.calibrationNodes[0].start(0);\r\n    this.#mls = this.calibrationNodes[0].buffer.getChannelData(0);\r\n    this.stepNum += 1;\r\n    this.status = `playing the calibration tone...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n  };\r\n\r\n  #playCalibrationAudioConvolved = () => {\r\n    this.calibrationNodesConvolved[0].start(0);\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `playing the convolved calibration tone...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n  };\r\n\r\n  /** .\r\n   * .\r\n   * .\r\n   * Stops the audio with tapered offset\r\n   *\r\n   * @example\r\n   */\r\n  #stopCalibrationAudio = () => {\r\n    this.offsetGainNode.gain.setValueAtTime(\r\n      this.offsetGainNode.gain.value,\r\n      this.sourceAudioContext.currentTime\r\n    );\r\n\r\n    this.offsetGainNode.gain.setTargetAtTime(0, this.sourceAudioContext.currentTime, 0.5);\r\n    this.calibrationNodes[0].stop(0);\r\n    this.sourceAudioContext.close();\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `stopping the calibration tone...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n  };\r\n\r\n  #stopCalibrationAudioConvolved = () => {\r\n    this.offsetGainNode.gain.setValueAtTime(\r\n      this.offsetGainNode.gain.value,\r\n      this.sourceAudioContextConvolved.currentTime\r\n    );\r\n\r\n    this.offsetGainNode.gain.setTargetAtTime(0, this.sourceAudioContextConvolved.currentTime, 0.5);\r\n    this.sourceAudioContextConvolved.close();\r\n    this.stepNum += 1;\r\n    this.status =\r\n      `stopping the convolved calibration tone...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n  };\r\n\r\n  playMLSwithIIR = async (stream, iir) => {\r\n    this.invertedImpulseResponse = iir;\r\n    // initialize the MLSGenInterface object with it's factory method\r\n\r\n    await _mlsGen_mlsGenInterface__WEBPACK_IMPORTED_MODULE_1__[\"default\"].factory(\r\n      this.#mlsOrder,\r\n      this.sinkSamplingRate,\r\n      this.sourceSamplingRate\r\n    ).then(mlsGenInterface => {\r\n      this.#mlsGenInterface = mlsGenInterface;\r\n      this.#mlsBufferView = this.#mlsGenInterface.getMLS();\r\n    });\r\n\r\n    // after intializating, start the calibration steps with garbage collection\r\n    await this.#mlsGenInterface.withGarbageCollection([\r\n      () =>\r\n        this.calibrationSteps(\r\n          stream,\r\n          this.#playCalibrationAudioConvolved, // play audio func (required)\r\n          this.#putInPythonConv, // before play func\r\n          this.#awaitSignalOnset, // before record\r\n          () => this.numSuccessfulCaptured < 1, // < this.numCaptures\r\n          this.#awaitDesiredMLSLength, // during record\r\n          this.#afterMLSwIIRRecord, // after record\r\n          'filtered'\r\n        ),\r\n    ]);\r\n  };\r\n\r\n  // function to write frq and gain to firebase database given speakerID\r\n  writeFrqGain = async (speakerID, frq, gain) => {\r\n    const data = {\r\n      frq,\r\n      gain,\r\n    };\r\n    await (0,firebase_database__WEBPACK_IMPORTED_MODULE_4__.set)((0,firebase_database__WEBPACK_IMPORTED_MODULE_4__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_3__[\"default\"], `${speakerID}/linear`), data);\r\n  };\r\n\r\n  // Function to Read frq and gain from firebase database given speakerID\r\n  // returns an array of frq and gain if speakerID exists, returns null otherwise\r\n\r\n  readFrqGain = async speakerID => {\r\n    const dbRef = (0,firebase_database__WEBPACK_IMPORTED_MODULE_4__.ref)(_config_firebase__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\r\n    const snapshot = await (0,firebase_database__WEBPACK_IMPORTED_MODULE_4__.get)((0,firebase_database__WEBPACK_IMPORTED_MODULE_4__.child)(dbRef, `${speakerID}/linear`));\r\n    if (snapshot.exists()) {\r\n      return snapshot.val();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Example of how to use the writeFrqGain and readFrqGain functions\r\n  // writeFrqGain('speaker1', [1, 2, 3], [4, 5, 6]);\r\n  // Speaker1 is the speakerID  you want to write to in the database\r\n  // readFrqGain('MiniDSPUMIK_1').then(data => console.log(data));\r\n  // MiniDSPUMIK_1 is the speakerID with some Data in the database\r\n\r\n  /**\r\n   * Public method to start the calibration process. Objects intialized from webassembly allocate new memory\r\n   * and must be manually freed. This function is responsible for intializing the MlsGenInterface,\r\n   * and wrapping the calibration steps with a garbage collection safe gaurd.\r\n   *\r\n   * @public\r\n   * @param stream - The stream of audio from the Listener.\r\n   * @example\r\n   */\r\n\r\n  startCalibration = async stream => {\r\n    // initialize the MLSGenInterface object with it's factory method\r\n    await _mlsGen_mlsGenInterface__WEBPACK_IMPORTED_MODULE_1__[\"default\"].factory(\r\n      this.#mlsOrder,\r\n      this.sinkSamplingRate,\r\n      this.sourceSamplingRate\r\n    ).then(mlsGenInterface => {\r\n      this.#mlsGenInterface = mlsGenInterface;\r\n      this.#mlsBufferView = this.#mlsGenInterface.getMLS();\r\n    });\r\n\r\n    // after intializating, start the calibration steps with garbage collection\r\n    await this.#mlsGenInterface.withGarbageCollection([\r\n      () =>\r\n        this.calibrationSteps(\r\n          stream,\r\n          this.#playCalibrationAudio, // play audio func (required)\r\n          this.#setCalibrationNodesFromBuffer, // before play func\r\n          this.#awaitSignalOnset, // before record\r\n          () => this.numSuccessfulCaptured < this.numCaptures, // loop while true\r\n          this.#awaitDesiredMLSLength, // during record\r\n          this.#afterMLSRecord, // after record\r\n          'unfiltered'\r\n        ),\r\n    ]);\r\n\r\n    this.#stopCalibrationAudio();\r\n\r\n    // at this stage we've captured all the required signals,\r\n    // and have received IRs for each one\r\n    // so let's send all the IRs to the server to be converted to a single IIR\r\n\r\n    await this.sendImpulseResponsesToServerForProcessing();\r\n\r\n    this.numSuccessfulCaptured = 0;\r\n    // debugging function, use to test the result of the IIR\r\n    await this.playMLSwithIIR(stream, this.invertedImpulseResponse);\r\n    this.#stopCalibrationAudioConvolved();\r\n\r\n    let recs = this.getAllRecordedSignals();\r\n    let conv_recs = this.getAllFilteredRecordedSignals();\r\n    let unconv_rec = recs[0];\r\n    let conv_rec = conv_recs[0];\r\n\r\n    this.status = `computing the PSD graphs...`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n\r\n    let results = await this.pyServerAPI\r\n      .getPSDWithRetry({\r\n        unconv_rec,\r\n        conv_rec,\r\n      })\r\n      .then(res => {\r\n        this.incrementStatusBar();\r\n        this.status =\r\n          `done computing the PSD graphs`.toString() + this.generateTemplate().toString();\r\n        this.emit('update', {message: this.status});\r\n        return res;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n\r\n    let iir_and_plots = {\r\n      iir: this.invertedImpulseResponse,\r\n      x_unconv: results['x_unconv'],\r\n      y_unconv: results['y_unconv'],\r\n      x_conv: results['x_conv'],\r\n      y_conv: results['y_conv'],\r\n    };\r\n\r\n    if (this.#download) {\r\n      this.downloadSingleUnfilteredRecording();\r\n      this.downloadSingleFilteredRecording();\r\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(this.#mls, 'MLS.csv');\r\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(this.convolution, 'python_convolution_mls_iir.csv');\r\n      (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(this.invertedImpulseResponse, 'IIR.csv');\r\n      const computedIRagain = await Promise.all(this.impulseResponses).then(res => {\r\n        for (let i = 0; i < res.length; i++) {\r\n          if (res[i] != undefined) {\r\n            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.saveToCSV)(res[i], `IR_${i}`);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return iir_and_plots;\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImpulseResponse);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/impulse-response/impulseResponse.js?");

/***/ }),

/***/ "./src/tasks/impulse-response/mlsGen/mlsGenInterface.js":
/*!**************************************************************!*\
  !*** ./src/tasks/impulse-response/mlsGen/mlsGenInterface.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable dot-notation */\r\n// eslint-disable-next-line import/extensions\r\nconst createMLSGenModule = __webpack_require__(/*! ../../../../dist/mlsGen.js */ \"./dist/mlsGen.js\");\r\n\r\n/**\r\n * MLSGenInterface provides a class for interfacing with the MLSGen WASM module.\r\n */\r\nclass MlsGenInterface {\r\n  /** @private */\r\n  #mlsOrder;\r\n\r\n  /** @private */\r\n  #WASMInstance; // the WASM module instance\r\n\r\n  /** @private */\r\n  #MLSGenInstance; // the MLSGen object instance\r\n\r\n  /**\r\n   * Creates an instance of MlsGenInterface.\r\n   * Makes a call to the WASM glue code to load the WASM module.\r\n   *\r\n   * @param WASMInstance\r\n   * @param mlsOrder\r\n   * @param sourceSamplingRate\r\n   * @param sinkSamplingRate\r\n   * @example\r\n   */\r\n  constructor(WASMInstance, mlsOrder, sourceSamplingRate, sinkSamplingRate) {\r\n    this.#mlsOrder = mlsOrder;\r\n    this.#WASMInstance = WASMInstance;\r\n\r\n    console.warn('initializing MLSGen, need to manually garbage collect');\r\n    this.#MLSGenInstance = new this.#WASMInstance['MLSGen'](\r\n      mlsOrder,\r\n      sourceSamplingRate,\r\n      sinkSamplingRate\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Factory function that provide an asynchronous function that fetches the WASM module\r\n   * and returns a promise that resolves when the module is loaded.\r\n   *\r\n   * @param mlsOrder\r\n   * @param sourceSamplingRate - The sampling rate of the source audio.\r\n   * @param sinkSamplingRate - The sampling rate of the sink audio.\r\n   * @returns MlsGenInterface.\r\n   * @example\r\n   */\r\n  static factory = async (mlsOrder, sourceSamplingRate, sinkSamplingRate) => {\r\n    if (sourceSamplingRate === undefined || sinkSamplingRate === undefined) {\r\n      throw new Error('sourceSamplingRate and sinkSamplingRate must be defined');\r\n    }\r\n    return new MlsGenInterface(\r\n      await createMLSGenModule().then(instance => instance),\r\n      mlsOrder,\r\n      sourceSamplingRate,\r\n      sinkSamplingRate\r\n    );\r\n  };\r\n\r\n  /**\r\n   * A Higher-Order function that takes an async callback function that access the MLSGen object,\r\n   * providing safe garbage collection.\r\n   *\r\n   * @param func\r\n   * @param args\r\n   * @param funcsWithParams\r\n   * @example\r\n   */\r\n  withGarbageCollection = async funcsWithParams => {\r\n    try {\r\n      for (let i = 0; i < funcsWithParams.length; i += 1) {\r\n        const funcWithParams = funcsWithParams[i];\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await funcWithParams();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      // garbage collect\r\n      if (\r\n        this !== undefined &&\r\n        this !== null &&\r\n        this.#MLSGenInstance !== undefined &&\r\n        this.#MLSGenInstance !== null\r\n      ) {\r\n        this.#MLSGenInstance['Destruct'](); // Call the destructor\r\n        this.#MLSGenInstance['delete'](); // Delete the object\r\n        console.warn(`GARBAGE COLLECTION: deleted MLSGen`);\r\n        this.#WASMInstance['doLeakCheck'](); // Check for memory leaks\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculate and return the Impulse Response of the recorded signal.\r\n   *\r\n   * @returns\r\n   * @example\r\n   */\r\n  getImpulseResponse = () => this.#MLSGenInstance['getImpulseResponse']();\r\n\r\n  /**\r\n   * Given a recorded MLS signal, this function sets the recordedSignal property of the MLSGen object.\r\n   *\r\n   * @param signals\r\n   * @example\r\n   */\r\n  setRecordedSignals = signals => {\r\n    // get memory view\r\n    const averagedSignals = this.average(signals);\r\n    const recordedSignalsMemoryView = this.#MLSGenInstance['setRecordedSignalsMemoryView'](\r\n      averagedSignals.byteLength\r\n    );\r\n    for (let i = 0; i < averagedSignals.length; i += 1) {\r\n      recordedSignalsMemoryView[i] = averagedSignals[i];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculate the Maximum Length Sequence (MLS) with period P = 2^N - 1\r\n   * using the MLSGen WASM module.\r\n   *\r\n   * @example\r\n   */\r\n  getMLS = () => this.#MLSGenInstance['getMLS']();\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (MlsGenInterface);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/impulse-response/mlsGen/mlsGenInterface.js?");

/***/ }),

/***/ "./src/tasks/volume/volume.js":
/*!************************************!*\
  !*** ./src/tasks/volume/volume.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../audioCalibrator */ \"./src/tasks/audioCalibrator.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\nclass Volume extends _audioCalibrator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   *\r\n   * @param root0\r\n   * @param root0.download\r\n   * @param root0.numCalibrationRounds\r\n   * @param root0.numCalibrationNodes\r\n   * @example\r\n   */\r\n\r\n  /** @private */\r\n  #CALIBRATION_TONE_FREQUENCY = 1000; // Hz\r\n\r\n  /** @private */\r\n  #CALIBRATION_TONE_TYPE = 'sine';\r\n\r\n  /** @private */\r\n  #CALIBRATION_TONE_DURATION = 5; // seconds\r\n\r\n  /** @private */\r\n  outDBSPL = null;\r\n  THD = null;\r\n  outDBSPL1000 = null;\r\n\r\n  /** @private */\r\n  TAPER_SECS = 0.010; // seconds\r\n\r\n  /** @private */\r\n  status_denominator = 2; \r\n\r\n  /** @private */\r\n  status_numerator = 0; \r\n\r\n  /** @private */\r\n  percent_complete = 0; \r\n\r\n  /** @private */\r\n  status = ``;\r\n\r\n  /**generate string template that gets reevaluated as variable increases */\r\n  generateTemplate = () => {\r\n    if (this.percent_complete > 100){\r\n      this.percent_complete = 100;\r\n    }\r\n    const template = `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px; height: 20px; border: 2px solid #000; border-radius: 10px;\"><div style=\"width: ${this.percent_complete}%; height: 100%; background-color: #00aaff; border-radius: 8px;\"></div></div></div>`;\r\n    return template;\r\n  }\r\n\r\n  /** increment numerator and percent for status bar */\r\n  incrementStatusBar = () => {\r\n    this.status_numerator += 1;\r\n    this.percent_complete = (this.status_numerator/this.status_denominator)*100;\r\n  }\r\n\r\n  handleIncomingData = data => {\r\n    console.log('Received data: ', data);\r\n    if (data.type === 'soundGainDBSPL') {\r\n      this.soundGainDBSPL = data.value;\r\n    } else {\r\n      throw new Error(`Unknown data type: ${data.type}`);\r\n    }\r\n  };\r\n\r\n  createSCurveBuffer = (onSetBool=true) => {\r\n\r\n    const curve = new Float32Array(this.TAPER_SECS*this.sourceSamplingRate+1);\r\n    const frequency = 1 / (4 * this.TAPER_SECS);\r\n    let j = 0;\r\n    for (let i = 0; i < this.TAPER_SECS*this.sourceSamplingRate+1; i += 1) {\r\n      const phase = 2 * Math.PI * frequency * j;\r\n      const onsetTaper = Math.pow(Math.sin(phase) , 2);\r\n      const offsetTaper = Math.pow(Math.cos(phase) , 2);\r\n      curve[i] = onSetBool? onsetTaper : offsetTaper;\r\n      j += (1 / this.sourceSamplingRate);\r\n    } \r\n    return curve;\r\n  };\r\n\r\n  #getTruncatedSignal = (left = 3.5, right = 4.5) => {\r\n    const start = Math.floor(left * this.sourceSamplingRate);\r\n    const end = Math.floor(right * this.sourceSamplingRate);\r\n    const result = Array.from(this.getLastRecordedSignal().slice(start, end));\r\n\r\n    /**\r\n     * function to check that capture was properly made\r\n     * @param {*} list\r\n     */\r\n    const checkResult = list => {\r\n      const setItem = new Set(list);\r\n      if (setItem.size === 1 && setItem.has(0)) {\r\n        console.warn(\r\n          'The last capture failed, all recorded signal is zero',\r\n          this.getAllRecordedSignals()\r\n        );\r\n      }\r\n      if (setItem.size === 0) {\r\n        console.warn('The last capture failed, no recorded signal');\r\n      }\r\n    };\r\n    checkResult(result);\r\n    return result;\r\n  };\r\n\r\n  /** \r\n   * \r\n   * \r\n    Construct a calibration Node with the calibration parameters and given gain value\r\n   * @param {*} gainValue\r\n   * */\r\n  #createCalibrationToneWithGainValue = gainValue => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const oscilator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n    const taperGainNode = audioContext.createGain();\r\n    const offsetGainNode = audioContext.createGain();\r\n    const totalDuration = this.#CALIBRATION_TONE_DURATION * 1.2;\r\n\r\n    oscilator.frequency.value = this.#CALIBRATION_TONE_FREQUENCY;\r\n    oscilator.type = this.#CALIBRATION_TONE_TYPE;\r\n    gainNode.gain.value = gainValue;\r\n\r\n    oscilator.connect(gainNode);\r\n    gainNode.connect(taperGainNode);\r\n    const onsetCurve = this.createSCurveBuffer();\r\n    taperGainNode.gain.setValueCurveAtTime(onsetCurve, 0, this.TAPER_SECS);\r\n    taperGainNode.connect(offsetGainNode);\r\n    const offsetCurve = this.createSCurveBuffer(false);\r\n    offsetGainNode.gain.setValueCurveAtTime(offsetCurve, (totalDuration-this.TAPER_SECS), this.TAPER_SECS);\r\n    offsetGainNode.connect(audioContext.destination);\r\n\r\n    this.addCalibrationNode(oscilator);\r\n  };\r\n\r\n  /**\r\n   * Construct a Calibration Node with the calibration parameters.\r\n   *\r\n   * @private\r\n   * @example\r\n   */\r\n  #createCalibrationNode = () => {\r\n    const audioContext = this.makeNewSourceAudioContext();\r\n    const oscilator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n\r\n    oscilator.frequency.value = this.#CALIBRATION_TONE_FREQUENCY;\r\n    oscilator.type = this.#CALIBRATION_TONE_TYPE;\r\n    gainNode.gain.value = 0.04;\r\n\r\n    oscilator.connect(gainNode);\r\n    gainNode.connect(audioContext.destination);\r\n\r\n    this.addCalibrationNode(oscilator);\r\n  };\r\n\r\n  #playCalibrationAudio = async () => {\r\n    const totalDuration = this.#CALIBRATION_TONE_DURATION * 1.2;\r\n\r\n    this.calibrationNodes[0].start(0);\r\n    this.calibrationNodes[0].stop(totalDuration);\r\n    console.log(`Playing a buffer of ${this.#CALIBRATION_TONE_DURATION} seconds of audio`);\r\n    console.log(`Waiting a total of ${totalDuration} seconds`);\r\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sleep)(totalDuration);\r\n  };\r\n\r\n  #sendToServerForProcessing = (lCalib = 104.92978421490648) => {\r\n    console.log('Sending data to server');\r\n    this.pyServerAPI\r\n      .getVolumeCalibration({\r\n        sampleRate: this.sourceSamplingRate,\r\n        payload: this.#getTruncatedSignal(),\r\n        lCalib: lCalib,\r\n      })\r\n      .then(res => {\r\n        if (this.outDBSPL === null) {\r\n          this.incrementStatusBar();\r\n          this.outDBSPL = res['outDbSPL'];\r\n          this.outDBSPL1000 = res['outDbSPL1000'];\r\n          this.THD = res['thd'];\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.warn(err);\r\n      });\r\n  };\r\n\r\n  startCalibration = async (stream, gainValues, lCalib = 104.92978421490648) => {\r\n    const trialIterations = gainValues.length;\r\n    this.status_denominator += trialIterations;\r\n    const thdValues = [];\r\n    const inDBValues = [];\r\n    let inDB = 0;\r\n    const outDBSPLValues = [];\r\n    const outDBSPL1000Values = [];\r\n\r\n    // do one calibration that will be discarded\r\n    const soundLevelToDiscard = -60;\r\n    const gainToDiscard = Math.pow(10, soundLevelToDiscard / 20);\r\n    this.status = `Sound Level: ${soundLevelToDiscard} dB`.toString() + this.generateTemplate().toString();\r\n    this.emit('update', {message: this.status});\r\n    do {\r\n      // eslint-disable-next-line no-await-in-loop\r\n      await this.volumeCalibrationSteps(\r\n        stream,\r\n        this.#playCalibrationAudio,\r\n        this.#createCalibrationToneWithGainValue,\r\n        this.#sendToServerForProcessing,\r\n        gainToDiscard,\r\n        lCalib //todo make this a class parameter\r\n      );\r\n    } while (this.outDBSPL === null);\r\n    //reset the values\r\n    this.outDBSPL = null;\r\n    this.outDBSPL = null;\r\n    this.outDBSPL1000 = null;\r\n    this.THD = null;\r\n\r\n    // run the calibration at different gain values provided by the user\r\n    for (let i = 0; i < trialIterations; i++) {\r\n      //convert gain to DB and add to inDB\r\n      inDB = Math.log10(gainValues[i]) * 20;\r\n      // precision to 1 decimal place\r\n      inDB = Math.round(inDB * 10) / 10;\r\n      inDBValues.push(inDB);\r\n      this.status = `Sound Level: ${inDB} dB`.toString() + this.generateTemplate().toString();\r\n      this.emit('update', {message: this.status});\r\n      do {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await this.volumeCalibrationSteps(\r\n          stream,\r\n          this.#playCalibrationAudio,\r\n          this.#createCalibrationToneWithGainValue,\r\n          this.#sendToServerForProcessing,\r\n          gainValues[i],\r\n          lCalib //todo make this a class parameter\r\n        );\r\n      } while (this.outDBSPL === null);\r\n      outDBSPL1000Values.push(this.outDBSPL1000);\r\n      thdValues.push(this.THD);\r\n      outDBSPLValues.push(this.outDBSPL);\r\n\r\n      this.outDBSPL = null;\r\n      this.outDBSPL1000 = null;\r\n      this.THD = null;\r\n    }\r\n\r\n    // get the volume calibration parameters from the server\r\n    \r\n    const parameters = await this.pyServerAPI\r\n      .getVolumeCalibrationParameters({\r\n        inDBValues: inDBValues,\r\n        outDBSPLValues: outDBSPL1000Values,\r\n        lCalib: lCalib,\r\n      })\r\n      .then(res => {\r\n        this.incrementStatusBar();\r\n        this.status = `done with 1000 Hz calibration`.toString() + this.generateTemplate().toString();\r\n        this.emit('update', {message: this.status});\r\n        return res;\r\n      });\r\n    const result = {\r\n      parameters: parameters,\r\n      inDBValues: inDBValues,\r\n      outDBSPLValues: outDBSPLValues,\r\n      outDBSPL1000Values: outDBSPL1000Values,\r\n      thdValues: thdValues,\r\n    };\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Volume);\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/tasks/volume/volume.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sleep\": function() { return /* binding */ sleep; },\n/* harmony export */   \"saveToCSV\": function() { return /* binding */ saveToCSV; },\n/* harmony export */   \"csvToArray\": function() { return /* binding */ csvToArray; }\n/* harmony export */ });\n/** .\r\n * .\r\n * .\r\n * Utlity function to pause execution for a given time\r\n *\r\n * @param {number} seconds\r\n * @returns {Promise}\r\n * @example\r\n */\r\nconst sleep = seconds =>\r\n  new Promise(resolve => {\r\n    setTimeout(resolve, seconds * 1000);\r\n  });\r\n\r\n/** .\r\n * .\r\n * .\r\n * Uiltity function to create and save a CSV file from a buffer\r\n *\r\n * @param {*} data\r\n * @param {*} filename\r\n * @example\r\n */\r\nconst saveToCSV = (data, filename = 'recordedMLSignal.csv') => {\r\n  // console.log(data)\r\n  let csvContent = 'data:text/csv;charset=utf-8,';\r\n\r\n  data.forEach((val, idx) => {\r\n    csvContent += `${idx},${val}\\r\\n`;\r\n  });\r\n  const encodedUri = encodeURI(csvContent);\r\n  const link = document.createElement('a');\r\n  link.setAttribute('href', encodedUri);\r\n  link.setAttribute('download', filename);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n};\r\n\r\n/** .\r\n * .\r\n * .\r\n * Utility function to create a buffer from a CSV file\r\n *\r\n * @param {*} csvString\r\n * @param {*} delimiter\r\n * @returns\r\n * @example\r\n */\r\nconst csvToArray = (csvString, delimiter = ',') =>\r\n  csvString\r\n    .trim()\r\n    .split('\\n')\r\n    .map(row => parseFloat(row.trim().split(delimiter)[1]));\r\n\r\n\r\n\n\n//# sourceURL=webpack://speakerCalibrator/./src/utils.js?");

/***/ }),

/***/ "./node_modules/@firebase/app/dist/esm/index.esm2017.js":
/*!**************************************************************!*\
  !*** ./node_modules/@firebase/app/dist/esm/index.esm2017.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FirebaseError\": function() { return /* reexport safe */ _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* binding */ SDK_VERSION; },\n/* harmony export */   \"_DEFAULT_ENTRY_NAME\": function() { return /* binding */ DEFAULT_ENTRY_NAME; },\n/* harmony export */   \"_addComponent\": function() { return /* binding */ _addComponent; },\n/* harmony export */   \"_addOrOverwriteComponent\": function() { return /* binding */ _addOrOverwriteComponent; },\n/* harmony export */   \"_apps\": function() { return /* binding */ _apps; },\n/* harmony export */   \"_clearComponents\": function() { return /* binding */ _clearComponents; },\n/* harmony export */   \"_components\": function() { return /* binding */ _components; },\n/* harmony export */   \"_getProvider\": function() { return /* binding */ _getProvider; },\n/* harmony export */   \"_registerComponent\": function() { return /* binding */ _registerComponent; },\n/* harmony export */   \"_removeServiceInstance\": function() { return /* binding */ _removeServiceInstance; },\n/* harmony export */   \"deleteApp\": function() { return /* binding */ deleteApp; },\n/* harmony export */   \"getApp\": function() { return /* binding */ getApp; },\n/* harmony export */   \"getApps\": function() { return /* binding */ getApps; },\n/* harmony export */   \"initializeApp\": function() { return /* binding */ initializeApp; },\n/* harmony export */   \"onLog\": function() { return /* binding */ onLog; },\n/* harmony export */   \"registerVersion\": function() { return /* binding */ registerVersion; },\n/* harmony export */   \"setLogLevel\": function() { return /* binding */ setLogLevel; }\n/* harmony export */ });\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var idb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! idb */ \"./node_modules/idb/build/index.js\");\n\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.23.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getDefaultAppConfig)());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(options, existingApp.options) &&\r\n            (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getDefaultAppConfig)()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    (0,_firebase_logger__WEBPACK_IMPORTED_MODULE_1__.setUserLogHandler)(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    (0,_firebase_logger__WEBPACK_IMPORTED_MODULE_1__.setLogLevel)(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = (0,idb__WEBPACK_IMPORTED_MODULE_3__.openDB)(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const result = await db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64urlEncodeWithoutPadding)(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isIndexedDBAvailable)()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.validateIndexedDBOpenable)()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64urlEncodeWithoutPadding)(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\n\n//# sourceMappingURL=index.esm2017.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/@firebase/app/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/component/dist/esm/index.esm2017.js":
/*!********************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/esm/index.esm2017.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": function() { return /* binding */ Component; },\n/* harmony export */   \"ComponentContainer\": function() { return /* binding */ ComponentContainer; },\n/* harmony export */   \"Provider\": function() { return /* binding */ Provider; }\n/* harmony export */ });\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\n\n//# sourceMappingURL=index.esm2017.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/@firebase/component/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/logger/dist/esm/index.esm2017.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/esm/index.esm2017.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LogLevel\": function() { return /* binding */ LogLevel; },\n/* harmony export */   \"Logger\": function() { return /* binding */ Logger; },\n/* harmony export */   \"setLogLevel\": function() { return /* binding */ setLogLevel; },\n/* harmony export */   \"setUserLogHandler\": function() { return /* binding */ setUserLogHandler; }\n/* harmony export */ });\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=index.esm2017.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/@firebase/logger/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/firebase/app/dist/esm/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/firebase/app/dist/esm/index.esm.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FirebaseError\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.FirebaseError; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION; },\n/* harmony export */   \"_DEFAULT_ENTRY_NAME\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._DEFAULT_ENTRY_NAME; },\n/* harmony export */   \"_addComponent\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._addComponent; },\n/* harmony export */   \"_addOrOverwriteComponent\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._addOrOverwriteComponent; },\n/* harmony export */   \"_apps\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._apps; },\n/* harmony export */   \"_clearComponents\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._clearComponents; },\n/* harmony export */   \"_components\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._components; },\n/* harmony export */   \"_getProvider\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._getProvider; },\n/* harmony export */   \"_registerComponent\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._registerComponent; },\n/* harmony export */   \"_removeServiceInstance\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._removeServiceInstance; },\n/* harmony export */   \"deleteApp\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.deleteApp; },\n/* harmony export */   \"getApp\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp; },\n/* harmony export */   \"getApps\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps; },\n/* harmony export */   \"initializeApp\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp; },\n/* harmony export */   \"onLog\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.onLog; },\n/* harmony export */   \"registerVersion\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion; },\n/* harmony export */   \"setLogLevel\": function() { return /* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.setLogLevel; }\n/* harmony export */ });\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\n\n\n\nvar name = \"firebase\";\nvar version = \"9.23.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/firebase/app/dist/esm/index.esm.js?");

/***/ }),

/***/ "./node_modules/firebase/database/dist/esm/index.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/firebase/database/dist/esm/index.esm.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DataSnapshot\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.DataSnapshot; },\n/* harmony export */   \"Database\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.Database; },\n/* harmony export */   \"OnDisconnect\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.OnDisconnect; },\n/* harmony export */   \"QueryConstraint\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.QueryConstraint; },\n/* harmony export */   \"TransactionResult\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.TransactionResult; },\n/* harmony export */   \"_QueryImpl\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._QueryImpl; },\n/* harmony export */   \"_QueryParams\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._QueryParams; },\n/* harmony export */   \"_ReferenceImpl\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._ReferenceImpl; },\n/* harmony export */   \"_TEST_ACCESS_forceRestClient\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._TEST_ACCESS_forceRestClient; },\n/* harmony export */   \"_TEST_ACCESS_hijackHash\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._TEST_ACCESS_hijackHash; },\n/* harmony export */   \"_repoManagerDatabaseFromApp\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._repoManagerDatabaseFromApp; },\n/* harmony export */   \"_setSDKVersion\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._setSDKVersion; },\n/* harmony export */   \"_validatePathString\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._validatePathString; },\n/* harmony export */   \"_validateWritablePath\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__._validateWritablePath; },\n/* harmony export */   \"child\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.child; },\n/* harmony export */   \"connectDatabaseEmulator\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.connectDatabaseEmulator; },\n/* harmony export */   \"enableLogging\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.enableLogging; },\n/* harmony export */   \"endAt\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.endAt; },\n/* harmony export */   \"endBefore\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.endBefore; },\n/* harmony export */   \"equalTo\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.equalTo; },\n/* harmony export */   \"forceLongPolling\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.forceLongPolling; },\n/* harmony export */   \"forceWebSockets\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.forceWebSockets; },\n/* harmony export */   \"get\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.get; },\n/* harmony export */   \"getDatabase\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.getDatabase; },\n/* harmony export */   \"goOffline\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.goOffline; },\n/* harmony export */   \"goOnline\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.goOnline; },\n/* harmony export */   \"increment\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.increment; },\n/* harmony export */   \"limitToFirst\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.limitToFirst; },\n/* harmony export */   \"limitToLast\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.limitToLast; },\n/* harmony export */   \"off\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.off; },\n/* harmony export */   \"onChildAdded\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onChildAdded; },\n/* harmony export */   \"onChildChanged\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onChildChanged; },\n/* harmony export */   \"onChildMoved\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onChildMoved; },\n/* harmony export */   \"onChildRemoved\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onChildRemoved; },\n/* harmony export */   \"onDisconnect\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onDisconnect; },\n/* harmony export */   \"onValue\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.onValue; },\n/* harmony export */   \"orderByChild\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.orderByChild; },\n/* harmony export */   \"orderByKey\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.orderByKey; },\n/* harmony export */   \"orderByPriority\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.orderByPriority; },\n/* harmony export */   \"orderByValue\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.orderByValue; },\n/* harmony export */   \"push\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.push; },\n/* harmony export */   \"query\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.query; },\n/* harmony export */   \"ref\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.ref; },\n/* harmony export */   \"refFromURL\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.refFromURL; },\n/* harmony export */   \"remove\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.remove; },\n/* harmony export */   \"runTransaction\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.runTransaction; },\n/* harmony export */   \"serverTimestamp\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp; },\n/* harmony export */   \"set\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.set; },\n/* harmony export */   \"setPriority\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.setPriority; },\n/* harmony export */   \"setWithPriority\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.setWithPriority; },\n/* harmony export */   \"startAfter\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.startAfter; },\n/* harmony export */   \"startAt\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.startAt; },\n/* harmony export */   \"update\": function() { return /* reexport safe */ _firebase_database__WEBPACK_IMPORTED_MODULE_0__.update; }\n/* harmony export */ });\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/database */ \"./node_modules/@firebase/database/dist/index.esm2017.js\");\n\n//# sourceMappingURL=index.esm.js.map\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/firebase/database/dist/esm/index.esm.js?");

/***/ }),

/***/ "./node_modules/idb/build/index.js":
/*!*****************************************!*\
  !*** ./node_modules/idb/build/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unwrap\": function() { return /* reexport safe */ _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.u; },\n/* harmony export */   \"wrap\": function() { return /* reexport safe */ _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w; },\n/* harmony export */   \"deleteDB\": function() { return /* binding */ deleteDB; },\n/* harmony export */   \"openDB\": function() { return /* binding */ openDB; }\n/* harmony export */ });\n/* harmony import */ var _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrap-idb-value.js */ \"./node_modules/idb/build/wrap-idb-value.js\");\n\n\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = (0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade((0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request.result), event.oldVersion, event.newVersion, (0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return (0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\n(0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.r)((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\n\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/idb/build/index.js?");

/***/ }),

/***/ "./node_modules/idb/build/wrap-idb-value.js":
/*!**************************************************!*\
  !*** ./node_modules/idb/build/wrap-idb-value.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"a\": function() { return /* binding */ reverseTransformCache; },\n/* harmony export */   \"i\": function() { return /* binding */ instanceOfAny; },\n/* harmony export */   \"r\": function() { return /* binding */ replaceTraps; },\n/* harmony export */   \"u\": function() { return /* binding */ unwrap; },\n/* harmony export */   \"w\": function() { return /* binding */ wrap; }\n/* harmony export */ });\nconst instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n\n\n\n//# sourceURL=webpack://speakerCalibrator/./node_modules/idb/build/wrap-idb-value.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});